{
    "project": {
        "name": "anim8js",
        "description": "anim8js: The Javascript Animation Library",
        "version": "0.1.0",
        "url": "http://anim8js.io/"
    },
    "files": {
        "lib/anim8js-animate.css.js": {
            "name": "lib/anim8js-animate.css.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-animation.js": {
            "name": "lib/anim8js-animation.js",
            "modules": {},
            "classes": {
                "anim8.Animation": 1
            },
            "fors": {
                "anim8": 1
            },
            "namespaces": {
                "anim8": 1
            }
        },
        "lib/anim8js-animator.js": {
            "name": "lib/anim8js-animator.js",
            "modules": {},
            "classes": {
                "anim8.Animator": 1,
                "anim8.DeferAnimator": 1
            },
            "fors": {},
            "namespaces": {
                "anim8": 1
            }
        },
        "lib/anim8js-animators.js": {
            "name": "lib/anim8js-animators.js",
            "modules": {},
            "classes": {
                "anim8.Animators": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-attrimator-map.js": {
            "name": "lib/anim8js-attrimator-map.js",
            "modules": {},
            "classes": {
                "anim8.AttrimatorMap": 1
            },
            "fors": {},
            "namespaces": {
                "anim8": 1
            }
        },
        "lib/anim8js-attrimator.js": {
            "name": "lib/anim8js-attrimator.js",
            "modules": {},
            "classes": {
                "anim8.Attrimator": 1
            },
            "fors": {},
            "namespaces": {
                "anim8": 1
            }
        },
        "lib/anim8js-calculator-2d.js": {
            "name": "lib/anim8js-calculator-2d.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-calculator-3d.js": {
            "name": "lib/anim8js-calculator-3d.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-calculator-number.js": {
            "name": "lib/anim8js-calculator-number.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-calculator-quaternion.js": {
            "name": "lib/anim8js-calculator-quaternion.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-calculator-rgb.js": {
            "name": "lib/anim8js-calculator-rgb.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-calculator-rgba.js": {
            "name": "lib/anim8js-calculator-rgba.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-calculator.js": {
            "name": "lib/anim8js-calculator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-color.js": {
            "name": "lib/anim8js-color.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-computed.js": {
            "name": "lib/anim8js-computed.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-core.js": {
            "name": "lib/anim8js-core.js",
            "modules": {
                "anim8": 1
            },
            "classes": {
                "anim8": 1
            },
            "fors": {
                "anim8": 1,
                "anim8.defaults": 1,
                "anim8.delegate": 1,
                "anim8.eventize": 1
            },
            "namespaces": {}
        },
        "lib/anim8js-defer.js": {
            "name": "lib/anim8js-defer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-dom-animator.js": {
            "name": "lib/anim8js-dom-animator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-dom-attribute.js": {
            "name": "lib/anim8js-dom-attribute.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-dom-core.js": {
            "name": "lib/anim8js-dom-core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-dom-property.js": {
            "name": "lib/anim8js-dom-property.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-easing-css.js": {
            "name": "lib/anim8js-easing-css.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-easing-type.js": {
            "name": "lib/anim8js-easing-type.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-easing.js": {
            "name": "lib/anim8js-easing.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-event.js": {
            "name": "lib/anim8js-event.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-factory.js": {
            "name": "lib/anim8js-factory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-fast-map.js": {
            "name": "lib/anim8js-fast-map.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-loop.js": {
            "name": "lib/anim8js-loop.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-object.js": {
            "name": "lib/anim8js-object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-options.js": {
            "name": "lib/anim8js-options.js",
            "modules": {},
            "classes": {},
            "fors": {
                "anim8": 1
            },
            "namespaces": {}
        },
        "lib/anim8js-parser-deltavalues.js": {
            "name": "lib/anim8js-parser-deltavalues.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-final.js": {
            "name": "lib/anim8js-parser-final.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-initial.js": {
            "name": "lib/anim8js-parser-initial.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-keyframe.js": {
            "name": "lib/anim8js-parser-keyframe.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-move.js": {
            "name": "lib/anim8js-parser-move.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-physics.js": {
            "name": "lib/anim8js-parser-physics.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-springs.js": {
            "name": "lib/anim8js-parser-springs.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-travel.js": {
            "name": "lib/anim8js-parser-travel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-tween.js": {
            "name": "lib/anim8js-parser-tween.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-tweenFrom.js": {
            "name": "lib/anim8js-parser-tweenFrom.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser-tweenTo.js": {
            "name": "lib/anim8js-parser-tweenTo.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-parser.js": {
            "name": "lib/anim8js-parser.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-path-compiled.js": {
            "name": "lib/anim8js-path-compiled.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-path-cubic.js": {
            "name": "lib/anim8js-path-cubic.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-path-delta.js": {
            "name": "lib/anim8js-path-delta.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-path-jump.js": {
            "name": "lib/anim8js-path-jump.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-path-keyframe.js": {
            "name": "lib/anim8js-path-keyframe.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-path-point.js": {
            "name": "lib/anim8js-path-point.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-path-quadratic.js": {
            "name": "lib/anim8js-path-quadratic.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-path-tween.js": {
            "name": "lib/anim8js-path-tween.js",
            "modules": {},
            "classes": {
                "anim8.Tween": 1
            },
            "fors": {},
            "namespaces": {
                "anim8": 1
            }
        },
        "lib/anim8js-path.js": {
            "name": "lib/anim8js-path.js",
            "modules": {},
            "classes": {
                "anim8.Path": 1
            },
            "fors": {},
            "namespaces": {
                "anim8": 1
            }
        },
        "lib/anim8js-physics.js": {
            "name": "lib/anim8js-physics.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-sequence.js": {
            "name": "lib/anim8js-sequence.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-spring-distance.js": {
            "name": "lib/anim8js-spring-distance.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-spring-linear.js": {
            "name": "lib/anim8js-spring-linear.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-spring.js": {
            "name": "lib/anim8js-spring.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/anim8js-transition.js": {
            "name": "lib/anim8js-transition.js",
            "modules": {},
            "classes": {},
            "fors": {
                "anim8": 1
            },
            "namespaces": {}
        },
        "plugins/anim8js-easel.js": {
            "name": "plugins/anim8js-easel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "plugins/anim8js-jquery.js": {
            "name": "plugins/anim8js-jquery.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "plugins/anim8js-pixi.js": {
            "name": "plugins/anim8js-pixi.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "anim8": {
            "name": "anim8",
            "submodules": {},
            "classes": {
                "anim8": 1,
                "anim8.Animation": 1,
                "anim8.Animator": 1,
                "anim8.DeferAnimator": 1,
                "anim8.Animators": 1,
                "anim8.AttrimatorMap": 1,
                "anim8.Attrimator": 1,
                "anim8.defaults": 1,
                "anim8.delegate": 1,
                "anim8.eventize": 1,
                "anim8.Tween": 1,
                "anim8.Path": 1
            },
            "fors": {
                "anim8": 1,
                "anim8.defaults": 1,
                "anim8.delegate": 1,
                "anim8.eventize": 1
            },
            "namespaces": {
                "anim8": 1
            },
            "tag": "module",
            "file": "lib/anim8js-path.js",
            "line": 29
        }
    },
    "classes": {
        "anim8": {
            "name": "anim8",
            "shortname": "anim8",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8",
            "file": "lib/anim8js-core.js",
            "line": 6,
            "description": "Converts a subject into an animator and returns it. If the subject \nis already an animator it's returned immediately.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Animator|false"
            },
            "static": 1
        },
        "anim8.Animation": {
            "name": "anim8.Animation",
            "shortname": "anim8.Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8",
            "namespace": "anim8",
            "file": "lib/anim8js-animation.js",
            "line": 132,
            "description": "Instantiates a new Animation given it's name, the input & options passed, and \nthe attrimators that were generated from the input & options. If the name is \nfalse this is an anonymous animation. Input & Options are used by parsers to \ngenerate attrimators, options allow for an animations default properties to \nbe overriden.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|Boolean"
                },
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attrimators",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                }
            ],
            "is_constructor": 1
        },
        "anim8.Animator": {
            "name": "anim8.Animator",
            "shortname": "anim8.Animator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8",
            "namespace": "anim8",
            "file": "lib/anim8js-animator.js",
            "line": 2,
            "description": "Instantiates a new Animator given a subject to animate.",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Any"
                }
            ],
            "is_constructor": 1
        },
        "anim8.DeferAnimator": {
            "name": "anim8.DeferAnimator",
            "shortname": "anim8.DeferAnimator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8",
            "namespace": "anim8",
            "file": "lib/anim8js-animator.js",
            "line": 1652,
            "description": "Provides the ability to defer method calls until certain events are triggered.",
            "is_constructor": 1,
            "extends": "anim8.Defer"
        },
        "anim8.Animators": {
            "name": "anim8.Animators",
            "shortname": "anim8.Animators",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8",
            "namespace": "anim8",
            "file": "lib/anim8js-animators.js",
            "line": 2,
            "description": "Instantiates an Array of anim8.Animator instances.",
            "params": [
                {
                    "name": "Array",
                    "description": "",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "anim8.AttrimatorMap": {
            "name": "anim8.AttrimatorMap",
            "shortname": "anim8.AttrimatorMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8",
            "namespace": "anim8",
            "file": "lib/anim8js-attrimator-map.js",
            "line": 2,
            "description": "A map of attrimators by their attribute name.",
            "is_constructor": 1
        },
        "anim8.Attrimator": {
            "name": "anim8.Attrimator",
            "shortname": "anim8.Attrimator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8",
            "namespace": "anim8",
            "file": "lib/anim8js-attrimator.js",
            "line": 2,
            "description": "Animates a single attribute over any period of time.",
            "is_constructor": 1
        },
        "anim8.defaults": {
            "name": "anim8.defaults",
            "shortname": "anim8.defaults",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8"
        },
        "anim8.delegate": {
            "name": "anim8.delegate",
            "shortname": "anim8.delegate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8"
        },
        "anim8.eventize": {
            "name": "anim8.eventize",
            "shortname": "anim8.eventize",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8"
        },
        "anim8.Tween": {
            "name": "anim8.Tween",
            "shortname": "anim8.Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8",
            "namespace": "anim8",
            "file": "lib/anim8js-path-tween.js",
            "line": 2,
            "description": "Instantiates a new Tween.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "start",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "T"
                }
            ],
            "is_constructor": 1,
            "extends": "anim8.Path"
        },
        "anim8.Path": {
            "name": "anim8.Path",
            "shortname": "anim8.Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim8",
            "namespace": "anim8",
            "file": "lib/anim8js-path.js",
            "line": 29,
            "description": "Path class computes a value given a delta value [0, 1].",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "lib/anim8js-animate.css.js",
            "line": 1,
            "description": "Animate.css animations in anim8js.\n\nhttp://daneden.github.io/animate.css/",
            "class": "anim8"
        },
        {
            "file": "lib/anim8js-animate.css.js",
            "line": 1733,
            "description": "Generate animations for all permutations of the following concepts:\n\n(slide|fade|zoom)(Out|In)(Down|Up)(Right|Left)(|x2|Big)",
            "class": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 2,
            "description": "Returns an instance of anim8.Animation based on the given input & options. If \nthe input is an instance of anim8.Animation that instance is immediately \nreturned. If the input is a string the animation with that name is returned. \nIf the input is a string with an animation name and an option string the\nanimation with the given name modified by any additional options is returned.\nCommas can be used to queue animation & option pairs one after another. If \nthe input is an object an anonymous animation is created. If no animation\ncould be determined then false is returned.\n\nExamples:\n```\nanim8.animation('wiggle');\nanim8.animation('wiggle ~1s 4s z40ms x5 !1.2');\nanim8.animation('wiggle', {...options...});\nanim8.animation('wiggle, tada ~50ms, fadeOut 2s');\nanim8.animation({...definition...});\n```\n\nIf the given input is a string you can cache it. An example would be\n'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\nneed to be parsed again.",
            "itemtype": "method",
            "name": "animation",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation|String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Object",
                    "optional": true
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 111,
            "description": "Saves an animation under the given name. It can be played, queued, and \ntransitioned into at a later time providing the name and optionally options \nto override with.",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation|String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Object",
                    "optional": true
                }
            ],
            "class": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 149,
            "description": "The name of the animation, or false if it's an anonymous animation.",
            "itemtype": "property",
            "name": "name",
            "type": "{String|false}",
            "class": "anim8.Animation",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 157,
            "description": "The object which created the animation.",
            "itemtype": "property",
            "name": "input",
            "type": "{Object}",
            "class": "anim8.Animation",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 165,
            "description": "The options given when the animation was created.",
            "itemtype": "property",
            "name": "options",
            "type": "[Object]",
            "class": "anim8.Animation",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 173,
            "description": "The name of the animation, or false if it's an anonymous animation.",
            "itemtype": "property",
            "name": "name",
            "type": "{anim8.AttrimatorMap}",
            "class": "anim8.Animation",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 181,
            "description": "The animation to play after this animation is finished playing.",
            "itemtype": "property",
            "name": "next",
            "type": "{anim8.Animation}",
            "class": "anim8.Animation",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 193,
            "description": "Returns true if this animation was a saved animation, otherwise it's an \nanonymous one and false is returned. Anonymous animations are typically\ngenerated once and won't be used again.",
            "itemtype": "method",
            "name": "isSaved",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Animation",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 206,
            "description": "Generates an map of event instances from the attrimators in this animation.",
            "itemtype": "method",
            "name": "newAttrimators",
            "return": {
                "description": "",
                "type": "anim8.AttrimatorMap"
            },
            "class": "anim8.Animation",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 217,
            "description": "Merges options with the options in this animation and places them in the\nevents.",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "attrimatorMap",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.AttrimatorMap"
            },
            "class": "anim8.Animation",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animation.js",
            "line": 243,
            "description": "Extends this animation and returns an anonymous animation modified with the \ngiven options. If an empty set of options is given this animation instance\nmay be returned. This can be overriden if the second argument is true.",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "force",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Animation"
            },
            "class": "anim8.Animation",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 15,
            "description": "The event triggered after preupdate is called. Pre-update is used to run any\npreparations on the subject before updates are made and attributes are \napplied.",
            "itemtype": "event",
            "name": "preupdate",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 23,
            "description": "The event triggered after all attrimators are updated and any new values\nhave been applied to the current values (frame) on the animator.",
            "itemtype": "event",
            "name": "update",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 30,
            "description": "The event triggered after the current values (frame) on the animator are\napplied to the subject.",
            "itemtype": "event",
            "name": "apply",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 37,
            "description": "The event triggered when the given animation cycle starts (and initial \nvalues are applied) for all attrimators in the cycle.",
            "itemtype": "event",
            "name": "cycleStart:#",
            "params": [
                {
                    "name": "cycleID",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 45,
            "description": "The event triggered when the given animation cycle ends which occurs when the\nlast attrimator for an animation finishes or is interrupted by commands like \nplay, queue, transition, end, finish, & stop.",
            "itemtype": "event",
            "name": "cycleEnd:#",
            "params": [
                {
                    "name": "cycleID",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 54,
            "description": "The event triggered when all animations on the animator have finished.",
            "itemtype": "event",
            "name": "finished",
            "params": [
                {
                    "name": "animator",
                    "description": "",
                    "type": "anim8.Animator"
                }
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 61,
            "description": "The event triggered when an animator is deactivated which occurs when an \nanimator has finished animating and is being taken off the list of live\nanimators (anim8.animating).",
            "itemtype": "event",
            "name": "deactivate",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 69,
            "description": "The event triggered after the user calls destroy on an animator.",
            "itemtype": "event",
            "name": "destroyed",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 78,
            "description": "Resets the animator given a subject to animate.",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                }
            ],
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 88,
            "description": "The subject which is being animated.",
            "itemtype": "property",
            "name": "subject",
            "type": "Any",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 96,
            "description": "The map of attrimators animating the subject.",
            "itemtype": "property",
            "name": "attrimators",
            "type": "anim8.AttrimatorMap",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 104,
            "description": "The array of attrimators recently added to the animator that\nare ready to be started.",
            "itemtype": "property",
            "name": "attrimatorsAdded",
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 113,
            "description": "The object which stores the attribute values being animated.",
            "itemtype": "property",
            "name": "frame",
            "type": "{Object}",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 121,
            "description": "The object which stores the attributes last updated.",
            "itemtype": "property",
            "name": "updated",
            "type": "{Object}",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 129,
            "description": "Whether or not this animator has completely finished animating it's subject.",
            "itemtype": "property",
            "name": "finished",
            "type": "{Boolean}",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 137,
            "description": "The factory which created this Animator given a subject.",
            "itemtype": "property",
            "name": "factory",
            "type": "{anim8.Factory}",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 145,
            "description": "Whether or not this animator is actively being updated.",
            "itemtype": "property",
            "name": "active",
            "type": "{Boolean}",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 153,
            "description": "The current cycle being animated. Multiple cycles can be animated at once, this is the first one.",
            "itemtype": "property",
            "name": "cycleCurrent",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 162,
            "description": "The ID of the next cycle of animations to be added to this Animator.",
            "itemtype": "property",
            "name": "cycleNext",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 171,
            "description": "The last cycle that was ended.",
            "itemtype": "property",
            "name": "cycleEnded",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 183,
            "description": "Starts a new animation cycle. This is done before events & springs are \nplaced to group them together so we know when to apply their initial value.",
            "itemtype": "method",
            "name": "newCycle",
            "params": [
                {
                    "name": "attrimators",
                    "description": "",
                    "type": "anim8.Attrimator|anim8.AttrimatorMap"
                }
            ],
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 208,
            "description": "Applies the current cycle. This involves finding all attrimators with the \nsame cycle identifier and applying their initial state.",
            "itemtype": "method",
            "name": "applyCurrentCycle",
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 235,
            "description": "Ends the current cycle which calls any listening functions.",
            "itemtype": "method",
            "name": "endCurrentCycle",
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 251,
            "description": "Returns the attribute descriptor given the name of the attribute.",
            "itemtype": "method",
            "name": "getAttribute",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 263,
            "description": "Restores any temporary state that may exist on this Animator that\nis a result from animations.",
            "itemtype": "method",
            "name": "restore",
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 275,
            "description": "Applies the initial state of recently added attrimators immediately.",
            "itemtype": "method",
            "name": "applyInitialState",
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 292,
            "description": "A method thats invoked along with all other animators before updates are \ncalled. This is used to make any necessary preparations before the animator\nis updated.",
            "itemtype": "method",
            "name": "preupdate",
            "params": [
                {
                    "name": "now",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 335,
            "description": "Sets the default value for the given attribute in the frame of this \nAnimator if there's no value there.",
            "itemtype": "method",
            "name": "setDefault",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 351,
            "description": "Updates all attrimators in this animator with the given time.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "now",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 401,
            "description": "Places the attribute animator in this animator replacing any existing \nanimator for the same attribute. The next time the animator is updated the \nattribute animator will be started. The previous (if any) attrimator is\nreturned.",
            "itemtype": "method",
            "name": "placeAttrimator",
            "params": [
                {
                    "name": "attrimator",
                    "description": "",
                    "type": "anim8.Attrimator"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Attrimator"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 424,
            "description": "Applies all updated attributes to the subject. This method is invoked with \nall of the other animators at the end of the animation cycle.",
            "itemtype": "method",
            "name": "apply",
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 449,
            "description": "Removes any finished attrimators and places any queued attrimators. If the\nanimator previously wasn't finished but now is the 'finished' event will\nbe triggered.",
            "itemtype": "method",
            "name": "trimAttrimators",
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 487,
            "description": "Returns the current value for the given attribute (or undefined if the \nattribute is not or has not animated).",
            "itemtype": "method",
            "name": "value",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 500,
            "description": "Activates this Animator by adding it to the main loop if it isn't there \nalready.",
            "itemtype": "method",
            "name": "activate",
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 514,
            "description": "A method that is invoked when an animator is finished and is being removed \nfrom the list of currently animating Animators.",
            "itemtype": "method",
            "name": "deactivate",
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 528,
            "description": "A method that can be invoked to destroy an animator - removing any \nrelationship between the subject and animator. The next time an animator is\ngenerated for the subject a new animator will be created.",
            "itemtype": "method",
            "name": "destroy",
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 547,
            "description": "Creates a map of attrimators based on the animation and options given. For\neach anim8.Animation instance thats being converted into attrimators,\nthe onAnimation(animation, option, attrimatorMap) function is invoked.",
            "itemtype": "method",
            "name": "createAttrimators",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation|String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Object",
                    "optional": true
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.AttrimatorMap"
            },
            "access": "protected",
            "tagname": "See: {{#crossLink \"anim8/animation:method\"}}{{/crossLink}}",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 593,
            "description": "A method invoked when an animation is about to be played in the Animator.",
            "itemtype": "method",
            "name": "onAnimation",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attrimatorMap",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 607,
            "description": "Adds a spring to this animator replacing any existing attrimator for the \nsame attribute. A spring object can be given, an instance of anim8.Spring, \nor a name of a saved Spring. The spring added to the animator is returned.",
            "itemtype": "method",
            "name": "spring",
            "params": [
                {
                    "name": "spring",
                    "description": "",
                    "type": "anim8.Spring|String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Spring"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 633,
            "description": "Plays an animation. Attributes in the animation that are currently being\nanimated will be stopped and replaced with the new attrimators. If `all` is\ntrue then any attrimators animating not specified in the given animation\nwill be stopped.\n\n**See:** {{#crossLink \"anim8/animation:method\"}}{{/crossLink}},\n         {{#crossLink \"anim8/options:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation|String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Object",
                    "optional": true
                },
                {
                    "name": "all",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 664,
            "description": "Plays a map of attrimators. Attributes in the attrimator map that are \ncurrently being animated will be stopped and replaced with the new\nattrimators. If \"all\" is true then any attrimators animating not specified\nin the given attrimator map will be stopped. This method will not activate \nthe Animator, that has to be done manually.",
            "itemtype": "method",
            "name": "playAttrimators",
            "params": [
                {
                    "name": "animatorMap",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                },
                {
                    "name": "all",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 694,
            "description": "Queues an animation. The attrimators generated from the given animation \nwill be started at the same time - as soon as all finite attrimators for\nthe same attributes are finished. Any infinite attrimators will be \nautomatically stopped when all queued attrimators are set to start.",
            "itemtype": "method",
            "name": "queue",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation|String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Object",
                    "optional": true
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "chainable": 1,
            "uses": [
                "anim8.animation",
                "anim8.options"
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 723,
            "description": "Queues a map of attrimators. The map of attrimators will be started at the\nsame time - as soon as all finished attrimators for the same attribute are\nfinished. Any infinite attrimators will be automatically stopped when all\nqueued attrimators are set to start.",
            "itemtype": "method",
            "name": "queueAttrimators",
            "params": [
                {
                    "name": "attrimatorMap",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                }
            ],
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 741,
            "description": "Transitions from the currently playing attrimators into the beginning of a \nnew animation. Several parameters can be specified in the transition object\nwhich determine how the transition is made. If \"all\" is true then any \nattrimators animating not specified in the given animation will be stopped.\n\ntime: the total time to take to transition into a new animation.\noutro: time to look into the future for the current attrimator to curve to.\nintro: time to look into the future for the next attrimator to curve into.\nlookup: time to look into the future to calculate velocity which is used\n  for negative intros and maintaing consistent exit & entrance velocity.\ngranularity: when greater than 2 it activates smooth transitions where the\n   velocity of the new & old attrimators is maintained over the transition.",
            "itemtype": "method",
            "name": "transition",
            "params": [
                {
                    "name": "transition",
                    "description": "",
                    "type": "String|Array|Object"
                },
                {
                    "name": "animation",
                    "description": "",
                    "type": "String|Object|anim8.Animation"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "all",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "chainable": 1,
            "uses": [
                "anim8.transition",
                "anim8.animation",
                "anim8.options",
                "anim8.Animator.transitionAttrimators"
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 783,
            "description": "Transitions from the currently playing attrimators into the beginning of a\nnew animation. Several parameters can be specified in the transition object\nwhich determine how the transition is made. If \"all\" is true then any \nattrimators animating not specified in the given attrimator map will be \nstopped.\n\ntime: the total time to take to transition into a new animation.\noutro: time to look into the future for the current attrimator to curve to.\nintro: time to look into the future for the next attrimator to curve into.\nlookup: time to look into the future to calculate velocity which is used\n  for negative intros and maintaing consistent exit & entrance velocity.\ngranularity: when greater than 2 it activates smooth transitions where the\n   velocity of the new & old attrimators is maintained over the transition.",
            "itemtype": "method",
            "name": "transitionAttrimators",
            "params": [
                {
                    "name": "transition",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attrimatorMap",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                },
                {
                    "name": "all",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 988,
            "description": "Finishes any attrimators on this animator that are not present in the given\nmap of attrimators. Optionally a delay in stopping them can be given.",
            "itemtype": "method",
            "name": "finishNotPresent",
            "params": [
                {
                    "name": "attrimatorMap",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                },
                {
                    "name": "delay",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1016,
            "description": "Tweens a single attribute to a target value.",
            "itemtype": "method",
            "name": "tweenTo",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "uses": [
                "anim8.options"
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1040,
            "description": "Tweens multiple attributes to target values.",
            "itemtype": "method",
            "name": "tweenManyTo",
            "params": [
                {
                    "name": "targets",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "uses": [
                "anim8.options"
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1069,
            "description": "Tweens a single attribute from a starting value to the current value.",
            "itemtype": "method",
            "name": "tweenFrom",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "starting",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "uses": [
                "anim8.options"
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1093,
            "description": "Tweens multiple attributes from starting values to the current values.",
            "itemtype": "method",
            "name": "tweenManyFrom",
            "params": [
                {
                    "name": "startings",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "uses": [
                "anim8.options"
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1122,
            "description": "Tweens an attribute from a starting value to an ending value.",
            "itemtype": "method",
            "name": "tween",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "starts",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "ends",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "uses": [
                "anim8.options"
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1148,
            "description": "Tweens multiple attributes from starting values to ending values.",
            "itemtype": "method",
            "name": "tweenMany",
            "params": [
                {
                    "name": "starts",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "ends",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "uses": [
                "anim8.options"
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1179,
            "description": "Moves an attribute relative to its current value.",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "amount",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1204,
            "description": "Moves multiple attribute relative to their current value.",
            "itemtype": "method",
            "name": "moveMany",
            "params": [
                {
                    "name": "amounts",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1234,
            "description": "Returns a function that returns the current value for the given attribute \nwhen invoked. The returned function can be given as values for paths & \nsprings that are evaluated every frame.",
            "itemtype": "method",
            "name": "ref",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1269,
            "description": "Follows the attribute along the given path definition.",
            "itemtype": "method",
            "name": "follow",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "path",
                    "description": "",
                    "type": "anim8.Path|Object|String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "uses": [
                "anim8.options"
            ],
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1302,
            "description": "Helper method that iterates over given attributes. If callback is specified\nit is invoked for each attrimator in this animator for the given \nattributes. If no callback is given an array of anim8.Attrimators is \nreturned for each attrimator in this animator for the given attributes.",
            "itemtype": "method",
            "name": "attrimatorsFor",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "This|Array"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1366,
            "description": "Stops all attributes for the specified attributes. Attribute names can be \ngiven as an array or a space separated string. If no attributes are given \nall attributes are assumed.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1383,
            "description": "Ends all attributes for the specified attributes. If attributes are queued \nthe last value of the last attribute is applied to this Animator before \nbeing completely removed. Attribute names can be given as an array or a \nspace separated string. If no attributes are given all attributes are \nassumed.",
            "itemtype": "method",
            "name": "end",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1407,
            "description": "Finishes all current attrimators for the specified attributes. Attribute \nnames can be given as an array or a space separated string. If no \nattributes are given all attributes are assumed.",
            "itemtype": "method",
            "name": "finish",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1424,
            "description": "Pauses all current attrimators for the specified attributes. Attribute \nnames can be given as an array or a space separated string. If no \nattributes are given all attributes are assumed.",
            "itemtype": "method",
            "name": "pause",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1441,
            "description": "Resumes all current attrimators for the specified attributes. Attribute \nnames can be given as an array or a space separated string. If no \nattributes are given all attributes are assumed.",
            "itemtype": "method",
            "name": "resume",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1458,
            "description": "Sets the given attributes to this Animator immediately.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1478,
            "description": "Unsets the attribute, array of attributes, or object of attributes. \nUnsetting involves removing all attrimators and the current value in the \nframe,",
            "itemtype": "method",
            "name": "unset",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array|Object"
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1512,
            "description": "Gets the current attribute values for all attributes specified. The \nargument must be an object where the key is the name of an attribute.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1532,
            "description": "Returns the amount of finite time remaining before the animator is done\nanimating. Attrimators that don't have a known end time are not included.\nIf there are no attrimators with end times then zero is returned.",
            "itemtype": "method",
            "name": "timeRemaining",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1545,
            "description": "Returns true if there are any attrimators on this Animator.",
            "itemtype": "method",
            "name": "hasAttrimators",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1556,
            "description": "Returns the subject of the Animator optionally passing it through a wrapper\nfunction before it's returned.",
            "itemtype": "method",
            "name": "getSubject",
            "params": [
                {
                    "name": "wrapper",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1576,
            "description": "Invokes a function with the given context or the context of this Animator \nif none is given. This is particularly useful for having a function be \ncalled on deferred statements.",
            "itemtype": "method",
            "name": "invoke",
            "params": [
                {
                    "name": "func",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1597,
            "description": "Defers the method calls following this one to when the given event type \n(on or once) and event. To return this animator you need to call undefer() \nas many times as you called defer().",
            "itemtype": "method",
            "name": "defer",
            "params": [
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.DeferAnimator"
            },
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1613,
            "description": "Invokes the given callback when the last animation that was \nplayed/queued/transitioned starts.",
            "itemtype": "method",
            "name": "onCycleStart",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1629,
            "description": "Invokes the given callback when the last animation that was\nplayed/queued/transitioned ends.",
            "itemtype": "method",
            "name": "onCycleEnd",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1647,
            "description": "Adds the following event methods to Animators: on, once, off, trigger.",
            "class": "anim8.Animator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1665,
            "description": "Creates the Defer prototype for the following Animator methods.",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1670,
            "description": "Defers the {{#crossLink \"anim8.Animator/restore:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1677,
            "description": "Defers the {{#crossLink \"anim8.Animator/placeAttrimator:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1684,
            "description": "Defers the {{#crossLink \"anim8.Animator/applyInitialState:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1691,
            "description": "Defers the {{#crossLink \"anim8.Animator/preupdate:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1698,
            "description": "Defers the {{#crossLink \"anim8.Animator/update:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1705,
            "description": "Defers the {{#crossLink \"anim8.Animator/apply:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1712,
            "description": "Defers the {{#crossLink \"anim8.Animator/trimAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "access": "protected",
            "tagname": "",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1720,
            "description": "Defers the {{#crossLink \"anim8.Animator/activate:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1727,
            "description": "Defers the {{#crossLink \"anim8.Animator/deactivate:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1734,
            "description": "Defers the {{#crossLink \"anim8.Animator/destroy:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1741,
            "description": "Defers the {{#crossLink \"anim8.Animator/spring:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1748,
            "description": "Defers the {{#crossLink \"anim8.Animator/play:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1755,
            "description": "Defers the {{#crossLink \"anim8.Animator/playAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "access": "protected",
            "tagname": "",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1763,
            "description": "Defers the {{#crossLink \"anim8.Animator/queue:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1770,
            "description": "Defers the {{#crossLink \"anim8.Animator/queueAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "access": "protected",
            "tagname": "",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1778,
            "description": "Defers the {{#crossLink \"anim8.Animator/transition:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1785,
            "description": "Defers the {{#crossLink \"anim8.Animator/transitionAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "access": "protected",
            "tagname": "",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1793,
            "description": "Defers the {{#crossLink \"anim8.Animator/tween:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1800,
            "description": "Defers the {{#crossLink \"anim8.Animator/tweenTo:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1807,
            "description": "Defers the {{#crossLink \"anim8.Animator/tweenMany:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1814,
            "description": "Defers the {{#crossLink \"anim8.Animator/tweenManyTo:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1821,
            "description": "Defers the {{#crossLink \"anim8.Animator/tweenFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1828,
            "description": "Defers the {{#crossLink \"anim8.Animator/tweenManyFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1835,
            "description": "Defers the {{#crossLink \"anim8.Animator/move:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1842,
            "description": "Defers the {{#crossLink \"anim8.Animator/moveMany:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1849,
            "description": "Defers the {{#crossLink \"anim8.Animator/follow:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1856,
            "description": "Defers the {{#crossLink \"anim8.Animator/stop:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1863,
            "description": "Defers the {{#crossLink \"anim8.Animator/end:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1870,
            "description": "Defers the {{#crossLink \"anim8.Animator/finish:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1877,
            "description": "Defers the {{#crossLink \"anim8.Animator/pause:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1884,
            "description": "Defers the {{#crossLink \"anim8.Animator/resume:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1891,
            "description": "Defers the {{#crossLink \"anim8.Animator/set:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1898,
            "description": "Defers the {{#crossLink \"anim8.Animator/unset:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1905,
            "description": "Defers the {{#crossLink \"anim8.Animator/get:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1912,
            "description": "Defers the {{#crossLink \"anim8.Animator/invoke:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1919,
            "description": "Defers the {{#crossLink \"anim8.Animator/onCycleStart:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animator.js",
            "line": 1926,
            "description": "Defers the {{#crossLink \"anim8.Animator/onCycleEnd:method\"}}{{/crossLink}} method until the deferred event has occurred.",
            "itemtype": "method",
            "name": "restore",
            "class": "anim8.DeferAnimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 17,
            "description": "Animators is an instance of Array. All array methods are supported.",
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 23,
            "description": "Invokes a callback for each element in the array.",
            "params": [
                {
                    "name": "iterator",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 43,
            "description": "Appends the array of animators given to the end of this array.",
            "params": [
                {
                    "name": "animators",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 59,
            "description": "Invokes a callback for each element in the array and if a true value is\nreturned  that element is removed from the array.",
            "params": [
                {
                    "name": "filterer",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 85,
            "description": "Returns the subjects of the Animators optionally passing them through a \nwrapper function before it's returned.",
            "params": [
                {
                    "name": "Function",
                    "description": "wrapper",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 109,
            "description": "Returns the first animator in the array.",
            "return": {
                "description": "",
                "type": "anim8.Animator"
            },
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 119,
            "description": "Reverses the order of animators in the array.",
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 141,
            "description": "Activates all Animators in the array if they aren't active already.",
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 169,
            "description": "Plays a sequence of events separated by a delay.",
            "params": [
                {
                    "name": "delay",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "easing",
                    "description": "",
                    "type": "String|Array|Function"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Sequence"
            },
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 181,
            "description": "Returns the maximum time remaining out of all Animators in the array.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "uses": [
                "anim8.Animator.timeRemaining"
            ],
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-animators.js",
            "line": 199,
            "description": "Adds the following methods to make an array of Animators appear like a single Animator.",
            "class": "anim8.Animators",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator-map.js",
            "line": 17,
            "description": "Queues the attrimator on this map. If the attribute is already on this map\nthis is placed on the end of the Attrimator chain, otherwise the attrimator\nis added to the map. If there is an attrimator already on the map it's\nreturned.",
            "itemtype": "method",
            "name": "queue",
            "params": [
                {
                    "name": "attrimator",
                    "description": "",
                    "type": "anim8.Attrimator"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Attrimator"
            },
            "class": "anim8.AttrimatorMap",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator-map.js",
            "line": 44,
            "description": "Queues the given map to this map. The attrimators placed on this map are\nqueued and delayed in a way that they all start at the same time. If a\nfunction is provided as the second argument it is invoked whenever an \nattrimator in the given map is new & added to this map.",
            "itemtype": "method",
            "name": "queueMap",
            "params": [
                {
                    "name": "map",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                },
                {
                    "name": "onNewAttribute",
                    "description": "",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "anim8.AttrimatorMap",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator-map.js",
            "line": 96,
            "description": "Removes the attrimator at the given index replacing it with the next\nattrimator if one exists.",
            "itemtype": "method",
            "name": "unqueueAt",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "anim8.AttrimatorMap",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator-map.js",
            "line": 120,
            "description": "Clones this map returning a deep clone where all attrimators are cloned.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "anim8.AttrimatorMap"
            },
            "class": "anim8.AttrimatorMap",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator-map.js",
            "line": 142,
            "description": "Returns the time remaining for all finite attrimators in this map. The time\nremaining includes queued attrimators.",
            "itemtype": "method",
            "name": "timeRemaining",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.AttrimatorMap",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator-map.js",
            "line": 167,
            "description": "Sets the cycle of the attrimators in this map. If there are attrimators\nqueued the are given the next cycle number. The final cycle number is\nreturned.",
            "itemtype": "method",
            "name": "applyCycle",
            "params": [
                {
                    "name": "nextCycle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.AttrimatorMap",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 17,
            "description": "Resets this attrimator for the given attribute created by the given parser.",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parser",
                    "description": "",
                    "type": "anim8.Parser"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "anim8.Attrimator",
                    "optional": true
                }
            ],
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 41,
            "description": "Prepares this attrimator for animation on the given subject \nanimator. This is called once in anim8.Animator.preupdate before the first \ntime this attrimator is updated.",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "now",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "animator",
                    "description": "",
                    "type": "anim8.Animator"
                }
            ],
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 57,
            "description": "Invoked once when a new animation cycle is started on an Animator. If this\nattrimator updated the frame true must be returned.",
            "itemtype": "method",
            "name": "startCycle",
            "params": [
                {
                    "name": "frame",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolen"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 70,
            "description": "Updates this attrimator given a time to animate to and the frame to\nprovide with a new value. This method will return true if the attribute\nthis is animating has been updated and needs to be applied to the subject.",
            "itemtype": "method",
            "name": "setTime",
            "params": [
                {
                    "name": "now",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "frame",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 105,
            "description": "Updates the attrimator given elapsed time in milliseconds, the frame to \napply a value to, and returns whether the frame was updated or not.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "elapsed",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "frame",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 119,
            "description": "Returns the amount of time that has elapsed in milliseconds.",
            "itemtype": "method",
            "name": "getElapsed",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 130,
            "description": "Stops this attrimator in the given number of milliseconds.",
            "itemtype": "method",
            "name": "stopIn",
            "params": [
                {
                    "name": "milliseconds",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 144,
            "description": "Returns the value at the given time or returns false if it can't be\ncalculated.",
            "itemtype": "method",
            "name": "valueAt",
            "params": [
                {
                    "name": "time",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "out",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Any|false"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 158,
            "description": "The total amount of time this attrimator will take in milliseconds. This \nmay be an infinite number.",
            "itemtype": "method",
            "name": "totalTime",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 170,
            "description": "The time remaining before this attrimator and any following will be \nfinished.",
            "itemtype": "method",
            "name": "timeRemaining",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 182,
            "description": "Clones this attrimator.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "anim8.Attrimator"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 193,
            "description": "Returns whether this attrimator has computed values which need to be \nresolved by the subject animator calling prepare on this attrimator.",
            "itemtype": "method",
            "name": "hasComputed",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 205,
            "description": "Determines whether this attrimator will run infinitely.",
            "itemtype": "method",
            "name": "isInfinite",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 216,
            "description": "Pauses this attrimator if it isn't already paused.",
            "itemtype": "method",
            "name": "pause",
            "chainable": 1,
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 233,
            "description": "Resumes this attrimator if it's paused. This involves resetting the start\ntime of the attrimator.",
            "itemtype": "method",
            "name": "resume",
            "chainable": 1,
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 249,
            "description": "Whether this attrimator is paused.",
            "itemtype": "method",
            "name": "isPaused",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 260,
            "description": "Sets the final state of the attrimator to the frame if one exists and \nreturns true, otherwise false is returned and frame remains unchanged.",
            "itemtype": "method",
            "name": "finish",
            "params": [
                {
                    "name": "frame",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 273,
            "description": "Whether this attrimator is finished.",
            "itemtype": "method",
            "name": "isFinished",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 284,
            "description": "Returns the parser that created this attrimator (if any).",
            "itemtype": "method",
            "name": "getParser",
            "return": {
                "description": "",
                "type": "anim8.Parser"
            },
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-attrimator.js",
            "line": 295,
            "description": "Places the given attrimator on the end of the chain of attrimators starting\nwith this attrimator.",
            "itemtype": "method",
            "name": "queue",
            "params": [
                {
                    "name": "next",
                    "description": "",
                    "type": "anim8.Attrimator"
                }
            ],
            "chainable": 1,
            "class": "anim8.Attrimator",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-2d.js",
            "line": 16,
            "description": "[parse description]",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Function|Number|Boolean"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "",
                "type": "[type]"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-2d.js",
            "line": 206,
            "description": "Register all calculators.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-3d.js",
            "line": 2,
            "description": "A calculator for objects with an x, y, and z component (number)",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-3d.js",
            "line": 171,
            "description": "Register the calculator.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-number.js",
            "line": 2,
            "description": "A calculator for number primitives.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-number.js",
            "line": 116,
            "description": "Register the calculators.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-quaternion.js",
            "line": 2,
            "description": "A calculator for objects with an x, y, z, and angle components.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-quaternion.js",
            "line": 189,
            "description": "Register the calculator.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-rgb.js",
            "line": 2,
            "description": "A calculator for objects with r, g, & b components (numbers 0 -> 255)",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-rgb.js",
            "line": 180,
            "description": "Register the calculator.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-rgba.js",
            "line": 3,
            "description": "A calculator for objects with r, g, & b components \n(numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator-rgba.js",
            "line": 198,
            "description": "Register the calculator.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 2,
            "description": "Returns a calculator based on the input. If the input is an instance of\nanim8.Calculator it is immediately returned. If the input is a string the \ncalculator with that name is returned. If no calculator could be determined\nthe default calculator is returned.",
            "params": [
                {
                    "name": "calc",
                    "description": "",
                    "type": "anim8.Calculator|String"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Calculator"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 25,
            "description": "Instantiates a new Calculator instance.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 36,
            "description": "Creates the constants for this calculator.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 46,
            "description": "Parses the given input for a value this calculator understands.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T|Function|false"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 58,
            "description": "Copies a value and places it in out and returns out.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "copy",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 70,
            "description": "Clones the value and returns the clone.",
            "params": [
                {
                    "name": "clone",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 81,
            "description": "Creates an empty value equivalent to zero.",
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 91,
            "description": "Scales out by the given scalar value and returns out.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 103,
            "description": "Adds an amount to out and returns out.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "amount",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 115,
            "description": "Adds an amount scaled by a scalar value to out and returns out.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "amount",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "amountScale",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 128,
            "description": "Subtracts an amount from out and returns out.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "amount",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 140,
            "description": "Multiplies out by some amount and returns out.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 152,
            "description": "Interpolates out between start & end given a delta value and returns out. \nA delta value typically lies between 0 and 1 inclusively.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "start",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "delta",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 170,
            "description": "Returns a random value between the given min and max.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "min",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 183,
            "description": "Calculates the distance between the two values.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 195,
            "description": "Calculates the squared distance between the two values.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 207,
            "description": "Returns the distance the given value is from zero.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 218,
            "description": "Returns the squared distance the given value is from zero.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 229,
            "description": "Determines whether the given value is valid for this calculator.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 240,
            "description": "Returns whether the given value is not a number or has a component which is\nnot a number.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 252,
            "description": "Determines whether the given value is equivalent to zero given an \nacceptable distance from zero (epsilon).",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "epsilon",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 265,
            "description": "Determines whether the given values are equivalent up to an acceptable\ndistance apart.",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "epsilon",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 279,
            "description": "Sets out to the minimum value between the two values and returns out.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "a",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 292,
            "description": "Sets out to the maximum value between two values and returns out.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "a",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 305,
            "description": "Clamps out between the given minimum and maximum values and returns out.",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "min",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 329,
            "description": "Determines whether the given value appears to be a relative value. Relative\nvalues are stored as strings starting with a plus or minus for positive or\nnegative respectively.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-calculator.js",
            "line": 342,
            "description": "Returns the relative amount of the given relative value. If the value is \nnot a valid relative value false is returned.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-color.js",
            "line": 2,
            "description": "Instantiates a new color given red, green, blue, and white components.\nIf a component is missed it's default value is either 255 (white) or\n1.0 (opaque).",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-color.js",
            "line": 17,
            "description": "The array of parsing methods to execute sequentally until a color is returned.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-color.js",
            "line": 281,
            "description": "Parses a color from a string.",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|false"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-color.js",
            "line": 304,
            "description": "Formats a color to a string.",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-computed.js",
            "line": 3,
            "description": "The namespace for computed functions. Computed functions are functions that\nare invoked once at the start of an animation given the attrimator and \nanimator and the result replaces the function.",
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-computed.js",
            "line": 10,
            "description": "Calculates the current value for an animator.",
            "params": [
                {
                    "name": "attrimator",
                    "description": "",
                    "type": "anim8.Attrimator"
                },
                {
                    "name": "animator",
                    "description": "",
                    "type": "anim8.Animator"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-computed.js",
            "line": 35,
            "description": "Calculates a value relative to the attribute value currently in the animator.\nA mask can be used for mixed relative & absolute values in a single value\nwhere 1 makes it relative and 0 makes it absolute.",
            "params": [
                {
                    "name": "relativeAmount",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "mask",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-computed.js",
            "line": 86,
            "description": "Returns a random value based on the given random selection.\n\n1. If an array is given an item is randomly chosen from that array.\n2. If an instance of anim8.Path is given a point is randomly computed and returned.\n3. If an object with min & max values is given a random value between them is returned.",
            "params": [
                {
                    "name": "randomSelection",
                    "description": "",
                    "type": "Array|Object|anim8.Path"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-computed.js",
            "line": 152,
            "description": "Determines whether the given value is a computed value. A computed value is\nfunction with a variable 'computed' set to a true value.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 32,
            "description": "Converts an array of subjects into an array of Animators.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Animators"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 71,
            "description": "The default values for anim8js properties.",
            "itemtype": "property",
            "name": "defaults",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 80,
            "description": "The default animation duration in milliseconds.",
            "itemtype": "property",
            "name": "duration",
            "default": "1000",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 90,
            "description": "The default easing.",
            "itemtype": "property",
            "name": "easing",
            "default": "'ease'",
            "type": "{String|Function}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 100,
            "description": "The default \"total easing\" which is the overall easing\nfor an animation which actually has easing values per frame.",
            "itemtype": "property",
            "name": "teasing",
            "default": "'linear'",
            "type": "{String|Function}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 111,
            "description": "The default animation delay in milliseconds.",
            "itemtype": "property",
            "name": "delay",
            "default": "0",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 121,
            "description": "The default animation sleep in milliseconds.",
            "itemtype": "property",
            "name": "sleep",
            "default": "0",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 131,
            "description": "The default number of repeats for an animation.",
            "itemtype": "property",
            "name": "repeat",
            "default": "1",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 141,
            "description": "The default scale for an animation.",
            "itemtype": "property",
            "name": "scale",
            "default": "1.0",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 151,
            "description": "The default transition time in milliseconds.",
            "itemtype": "property",
            "name": "transitionTime",
            "default": "500",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 161,
            "description": "The default transition outroduction time in milliseconds.",
            "itemtype": "property",
            "name": "transitionOutro",
            "default": "100",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 171,
            "description": "The default transition introduction time in milliseconds.",
            "itemtype": "property",
            "name": "transitionIntro",
            "default": "100",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 181,
            "description": "The default transition easing when none is specified.",
            "itemtype": "property",
            "name": "transitionEasing",
            "default": "'linear'",
            "type": "{String|Function}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 191,
            "description": "The default transition granularity. This is used for smooth transitions to\nprovide a smooth transition from the outro velocity to the intro velocity,\nthe cubic or quadratic path between the two is a curve with unknown length\nso the length needs to be calculated using a maximum number of points to\ncalculate along the path - summing the distances between the consecutive points.",
            "itemtype": "property",
            "name": "transitionGranularity",
            "default": "0",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 205,
            "description": "TODO",
            "itemtype": "property",
            "name": "transitionLookup",
            "default": "10",
            "type": "{Number}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 215,
            "description": "Whether animtions are cached whenever possible. Animations that can be\ncached are strings with options specified in the string and without an\noption object given. For example 'tada ~1s 3s x3' is cacheable.",
            "itemtype": "property",
            "name": "cache",
            "default": "false",
            "type": "{Boolean}",
            "uses": [
                "anim8.animation"
            ],
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 228,
            "description": "Whether parsed options are cached whenever possible. Options that can be\ncached must be strings.",
            "itemtype": "property",
            "name": "cacheOptions",
            "default": "false",
            "type": "{Boolean}",
            "uses": [
                "anim8.options"
            ],
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 240,
            "description": "Whether parsed transitions are cached whenever possible. Transitions that can be\ncached must be strings.",
            "itemtype": "property",
            "name": "cacheTransitions",
            "default": "false",
            "type": "{Boolean}",
            "uses": [
                "anim8.transition"
            ],
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 252,
            "description": "The value to return when options could not be parsed from input.",
            "itemtype": "property",
            "name": "noOptions",
            "default": "{}",
            "type": "{Object}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 262,
            "description": "The value to return when a transition could not be parsed from input.",
            "itemtype": "property",
            "name": "noTransition",
            "default": "{}",
            "type": "{Object}",
            "class": "anim8.defaults",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 274,
            "description": "A function that does nothing.",
            "itemtype": "property",
            "name": "noop",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 282,
            "description": "Returns true if the given variable is defined.",
            "itemtype": "method",
            "name": "isDefined",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 295,
            "description": "Returns true if the given variable is a function.",
            "itemtype": "method",
            "name": "isFunction",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 308,
            "description": "Returns true if the given variable is a number.",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 321,
            "description": "Returns true if the given variable is a string.",
            "itemtype": "method",
            "name": "isString",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 334,
            "description": "Returns true if the given variable is an array. This should be checked before\nanim8.isObject since Arrays are objects.",
            "itemtype": "method",
            "name": "isArray",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 348,
            "description": "Returns true if the given variable is an object.",
            "itemtype": "method",
            "name": "isObject",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 361,
            "description": "Returns true if the given variable is an HTML element.",
            "itemtype": "method",
            "name": "isElement",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 375,
            "description": "Returns the current time in milliseconds.",
            "itemtype": "method",
            "name": "now",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 391,
            "description": "Returns the trimmed version of the given string. A trimmed string has no\nwhitespace in the beginning or end of it.",
            "itemtype": "method",
            "name": "trim",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 412,
            "description": "Determines whether the given variable is empty.",
            "itemtype": "method",
            "name": "isEmpty",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 445,
            "description": "Performs a deep copy of the given variable. If the variable is an array or \nobject a new instance of that type is created where the values are copied as \nwell. All other types can't be copied (most likely because they're scalar) so\nthey are returned as-is.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 480,
            "description": "Extends the given object by merging the following objects into it, avoiding \noverriding any existing properties.",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 510,
            "description": "Extends the given object my merging the following objects into, overriding \nexisting properties where necessary.",
            "itemtype": "method",
            "name": "override",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 537,
            "description": "Returns the first defined variable of a possible 4 variables.",
            "itemtype": "method",
            "name": "coalesce",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 551,
            "description": "Parses milliseconds from a string or number. If a number is given it's \nassumed to be milliseconds and is returned immediately. If a string is given\na unit is looked for to determine how to scale the number into milliseconds.\nIf the given time is invalid and returnOnInvalid is not given then zero is\nreturned.",
            "itemtype": "method",
            "name": "time",
            "params": [
                {
                    "name": "time",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "returnOnInvalid",
                    "description": "",
                    "type": "Any",
                    "optional": true
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 611,
            "description": "Parses delay from a string or number.",
            "itemtype": "method",
            "name": "delay",
            "params": [
                {
                    "name": "time",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "uses": [
                "anim8.time"
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 624,
            "description": "Parses sleep from a string or number.",
            "itemtype": "method",
            "name": "sleep",
            "params": [
                {
                    "name": "time",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "uses": [
                "anim8.time"
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 637,
            "description": "Parses duration from a string or number.",
            "itemtype": "method",
            "name": "duration",
            "params": [
                {
                    "name": "time",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "uses": [
                "anim8.time"
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 650,
            "description": "Parses repeats from a string or number.",
            "itemtype": "method",
            "name": "repeat",
            "params": [
                {
                    "name": "time",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "any",
                    "description": "returnOnInvalid",
                    "optional": true
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 701,
            "description": "Parses a number from the given input and if the input isn't a valid number\nthen returnOnInvalid is returned.",
            "itemtype": "method",
            "name": "number",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "returnOnInvalid",
                    "description": "",
                    "type": "E"
                }
            ],
            "return": {
                "description": "",
                "type": "Number|E"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 718,
            "description": "Parses scale from a string or number.",
            "itemtype": "method",
            "name": "scale",
            "params": [
                {
                    "name": "scale",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 731,
            "description": "Provides a way to wrap a variable so calculators don't try copying it on parse.",
            "itemtype": "method",
            "name": "constant",
            "params": [
                {
                    "name": "variable",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 747,
            "description": "Resolves the given variable. If the variable is a function the result is \nreturned.",
            "itemtype": "method",
            "name": "resolve",
            "params": [
                {
                    "name": "variable",
                    "description": "",
                    "type": "Function|E"
                }
            ],
            "return": {
                "description": "",
                "type": "E"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 761,
            "description": "Returns a value between the given minimum and maximum.",
            "itemtype": "method",
            "name": "clamp",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 776,
            "description": "Creates a function which calls a method on all elements in the array or on \nthe first element.",
            "itemtype": "method",
            "name": "delegate",
            "params": [
                {
                    "name": "functionName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "returning",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 838,
            "description": "this is returned at the end.",
            "itemtype": "property",
            "name": "RETURN_THIS",
            "class": "anim8.delegate",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 846,
            "description": "An array of results for each method call is returned.",
            "itemtype": "property",
            "name": "RETURN_RESULTS",
            "class": "anim8.delegate",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 854,
            "description": "The result of the first element.",
            "itemtype": "property",
            "name": "RETURN_FIRST",
            "class": "anim8.delegate",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 862,
            "description": "True if any of the methods return true, otherwise false.",
            "itemtype": "property",
            "name": "RETURN_TRUE",
            "class": "anim8.delegate",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 871,
            "description": "Adds functions to the given object (or prototype) so you can listen for any number of events\non the given object, optionally once. Listeners can be removed later.",
            "itemtype": "method",
            "name": "eventize",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 901,
            "description": "Listens for every occurrence of the given events and invokes the callback\neach time any of them are triggered.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "events",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "anim8.eventize",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 919,
            "description": "Listens for the next occurrence for each of the given events and invokes\nthe callback when any of the events are triggered.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "events",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "anim8.eventize",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 954,
            "description": "Stops listening for a given callback for a given set of events.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "events",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "anim8.eventize",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-core.js",
            "line": 1005,
            "description": "Triggers a single event optionally passing an argument to any listeners.",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "argument",
                    "description": "",
                    "type": "Any"
                }
            ],
            "chainable": 1,
            "class": "anim8.eventize",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-defer.js",
            "line": 2,
            "description": "Instantiates a Defer instance. Defer instances keep track of method calls\nto call at a later time - after an event occurs. The first argument needs\nto be a function which returns an instance of anim8.Defer when it's invoked.\nThe second argument is an array of methods that can be deferred.",
            "params": [
                {
                    "name": "factory",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "methods",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-defer.js",
            "line": 23,
            "description": "Resets the defer instance.",
            "params": [
                {
                    "name": "eventable",
                    "description": "",
                    "type": "anim8.eventize"
                },
                {
                    "name": "previous",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-defer.js",
            "line": 48,
            "description": "Determines whether this Defer instance is at the root.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-defer.js",
            "line": 58,
            "description": "Registers this Defer instance with the eventable.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-defer.js",
            "line": 66,
            "description": "Creates a defered function which passes the method and arguments for\nany method call into an array of calls on this Defer instance.",
            "params": [
                {
                    "name": "methodName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-defer.js",
            "line": 83,
            "description": "Executes all defered method calls and starts any child Defer instances.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-defer.js",
            "line": 107,
            "description": "Returns the object before the defer statement.",
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-defer.js",
            "line": 117,
            "description": "Defers any following method calls to after the given event is triggered. A\ncallback can be specified which is a function invoked after the event is\ntriggered.",
            "params": [
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Defer"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-animator.js",
            "line": 2,
            "description": "Instantiates a new AnimatorDom given a subject.",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-animator.js",
            "line": 21,
            "description": "Extends anim8.Animator",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-animator.js",
            "line": 261,
            "description": "Builds the styles map in preparation to be applied.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-animator.js",
            "line": 291,
            "description": "Gets the current attribute values for all attributes specified. The argument must be an object\nwhere the key is the name of an attribute and the value is the desired unit.",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-animator.js",
            "line": 337,
            "description": "Returns a function that returns the current value for the given attribute when invoked.",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "desiredUnit",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "relativeTo",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-animator.js",
            "line": 370,
            "description": "Returns the value for the given attribute as a string with the current units.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-animator.js",
            "line": 381,
            "description": "Returns the value for the given attribute as a string with the current units.\nif the attribute doesn't exist a secondary one is looked up. If that value\nis an object and contains the given subproperty the value is resolved once again.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "other",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "String",
                    "description": "subproperty",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-attribute.js",
            "line": 2,
            "description": "Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\nreturned immediately. If the input is a string the attribute with the given name is returned. Otherwise\nthe default attribute is returned.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "Object|String"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-attribute.js",
            "line": 23,
            "description": "The default attribute.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-attribute.js",
            "line": 28,
            "description": "All animatable attributes for AnimatorDoms & HTMLElements.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 2,
            "description": "A factory for HTML Elements",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 17,
            "description": "Determines whether the given subject is valid for this factory to create Animators for.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 28,
            "description": "Returns an animator given a subject.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Animator"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 52,
            "description": "Destroys the animator by unlinking the animator from the subject.",
            "params": [
                {
                    "name": "animator",
                    "description": "",
                    "type": "anim8.Animator"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 62,
            "description": "Returns the attribute descriptor for the given attribute.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 103,
            "description": "Registers the DOM factory.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 110,
            "description": "All DOM related functions.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 115,
            "description": "Returns a property for the given name.",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 135,
            "description": "Computes the desired style of the given element and returns it as a string. \nThe style given must be in hyphenated format like so: \nanim8.dom.style( element, 'font-size' ) = '12px'",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "style",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 189,
            "description": "Given an array of styles this will return the first one that is present on elements in the current browser.",
            "params": [
                {
                    "name": "prefixes",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "String|false"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 213,
            "description": "Parses the string for a value and a unit.",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|false"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 240,
            "description": "Converts one unit to another for a given element.\n\nFor Example: anim8.dom.convert( element, '100px', '%', 'parentWidth' )\n   returns how much percent 100px relativeTo parentWidth of the given element",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "from",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "toUnit",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "relativeTo",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number|false"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-core.js",
            "line": 254,
            "description": "Calculators how many pixels a given value & unit is.\n\nFor Example: anim8.toPixels( 100, 'in' ) \n   returns how many pixels are in 1 inch, with up to 2 decimal points of accuracy.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-dom-property.js",
            "line": 2,
            "description": "Properties for the DOM animator.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing-css.js",
            "line": 2,
            "description": "Easings equivalent to the CSS animations. These are approximations since the\nexact functions don't perform quickly.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing-type.js",
            "line": 2,
            "description": "Returns an easing type based on the input. If the input is a function that \nfunction is immediately returned. If the input is a string the easing type \nwith that name is returned. If no easing type could be determined an error is\nthrown.",
            "params": [
                {
                    "name": "easingType",
                    "description": "",
                    "type": "Function|String"
                },
                {
                    "name": "Boolean",
                    "description": "optional",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Function|false"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing-type.js",
            "line": 31,
            "description": "Plays the animation forward normally.",
            "params": [
                {
                    "name": "easing",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing-type.js",
            "line": 45,
            "description": "Plays the animation forward by flipping the easings momentum.",
            "params": [
                {
                    "name": "easing",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing-type.js",
            "line": 59,
            "description": "Plays the animation forward by flipping the easings momentum halfway.",
            "params": [
                {
                    "name": "easing",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing-type.js",
            "line": 80,
            "description": "Plays the aninmation forwards with the given easing, and backwards with the same easing momentum.",
            "params": [
                {
                    "name": "easing",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing-type.js",
            "line": 101,
            "description": "Plays the animation forwards with the given easing, and backwards reflecting the easing's momentum.",
            "params": [
                {
                    "name": "easing",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing-type.js",
            "line": 122,
            "description": "Plays the animation backwards with using the same easing momentum.",
            "params": [
                {
                    "name": "easing",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing-type.js",
            "line": 136,
            "description": "Plays the animation backwards by flipping the easing's momentum.",
            "params": [
                {
                    "name": "easing",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing.js",
            "line": 2,
            "description": "Returns an easing based on the given input. If the input is a function it's \nassumed to be an easing function and is returned immediately. If the input is\na string the easing with that name is returned. If the input is a string in \nthe format 'easing-easingType' then an easing is returned that is a \ncombination of the easing with the given name and the easingType with the \ngiven name. If the given input is an array with 4 elements it's assumed to be\na bezier path and one is created and returned. If no input is given the \ndefault easing is returned. If an easing cannot be determined then an error\nis thrown.",
            "params": [
                {
                    "name": "easing",
                    "description": "",
                    "type": "Function|String|Array"
                },
                {
                    "name": "E",
                    "description": "returnOnInvalid",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Function|E"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing.js",
            "line": 63,
            "description": "Returns true if the given string would result in returning an easing.",
            "params": [
                {
                    "name": "easing",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "uses": [
                "anim8.easing"
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-easing.js",
            "line": 252,
            "description": "Generates a bezier easing function given the two middle control points. The\nfirst point is {0,0} and the last point is {1, 1}.",
            "params": [
                {
                    "name": "mX1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "mY1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "mX2",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "mY2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-event.js",
            "line": 2,
            "description": "Possible states an event can be in.",
            "type": "{Object}",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-event.js",
            "line": 15,
            "description": "Instantiates a new Event which extends anim8.Attrimator.",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "path",
                    "description": "",
                    "type": "anim8.Path"
                },
                {
                    "name": "duration",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "easing",
                    "description": "",
                    "type": "String|Function|Array"
                },
                {
                    "name": "delay",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "sleep",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "repeat",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "scale",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "scaleBase",
                    "description": "",
                    "type": "T|Number"
                },
                {
                    "name": "hasInitialState",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "parser",
                    "description": "",
                    "type": "anim8.Parser"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "anim8.Attrimator"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-event.js",
            "line": 48,
            "description": "Returns the computed value given a base value and a delta along the path.",
            "params": [
                {
                    "name": "baseValue",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "delta",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-event.js",
            "line": 76,
            "description": "Applies the value to the frame and returns true, otherwise returns false.",
            "params": [
                {
                    "name": "frame",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "baseValue",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "delta",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-factory.js",
            "line": 3,
            "description": "Returns a factory for the given subject and optionally throws an error if no\nfactory exists.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "optional",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-factory.js",
            "line": 37,
            "description": "Returns a factory given the input and returns the default if none is found.",
            "params": [
                {
                    "name": "string|anim8.Factory",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Factory"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-factory.js",
            "line": 57,
            "description": "A factory creates Animator instances for subjects.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-factory.js",
            "line": 68,
            "description": "Determines whether the given subject is valid for this factory to create Animators for.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-factory.js",
            "line": 79,
            "description": "Returns an animator given a subject.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Animator"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-factory.js",
            "line": 90,
            "description": "Explodes the given subject to an array of Animators and adds them to the given array.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "animators",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-factory.js",
            "line": 101,
            "description": "Destroys the animator by unlinking the animator from the subject.",
            "params": [
                {
                    "name": "animator",
                    "description": "",
                    "type": "anim8.Animator"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-factory.js",
            "line": 111,
            "description": "Returns the attribute descriptor for the given attribute.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 2,
            "description": "A FastMap has the key-to-value benefits of a map and iteration benefits of an\narray. This is especially beneficial when most of the time the contents of \nthe structure need to be iterated and order doesn't matter (since removal \nperforms a swap which breaks insertion order).",
            "params": [
                {
                    "name": "anim8.FastMap|Object",
                    "description": "map",
                    "optional": true
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 30,
            "description": "Resets the map by initializing the values, keys, and indexes.",
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 44,
            "description": "Puts the value in the map by the given key.",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 67,
            "description": "Puts all keys & values on the given map into this map overwriting any existing values mapped by similar keys.",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "anim8.FastMap"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 86,
            "description": "Returns the value mapped by the given key.",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 97,
            "description": "Removes the value by a given key",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 113,
            "description": "Removes the value & key at the given index.",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 137,
            "description": "Returns the index of the value in the array given a key.",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 148,
            "description": "Returns whether this map has a value for the given key.",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 159,
            "description": "Returns whether the given input has overlap with keys in this map.",
            "params": [
                {
                    "name": "map",
                    "description": "",
                    "type": "anim8.FastMap|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 181,
            "description": "Returns the number of elements in the map.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-fast-map.js",
            "line": 191,
            "description": "Clears all keys & values from the map.",
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 2,
            "description": "Whether the animation cycle is currently running. This is true\nwhen where are active animators and anim8.run is being called\nand false otherwise.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 9,
            "description": "Live Mode keeps the animation cycles running even when there aren't\nAnimators. For highly interactive applications enabling this may\ntake up more resources but it will result in smoother animations. When\nthe animation cycle goes from stopped to running it takes a few frames\nto smooth out when this is false.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 18,
            "description": "The anim8 instance for all active animators.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 23,
            "description": "The function to call if animations need to be done.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 59,
            "description": "Adds an animator to the list if animating if it isn't there already. If the animation\nloop isn't currently running it's started.",
            "params": [
                {
                    "name": "animator",
                    "description": "",
                    "type": "anim8.Animator"
                }
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 82,
            "description": "Executes an animation cycle which consists of four operations:\n  1. Call preupdate on all Animators\n  2. Call update on all Animators\n  3. Call apply on all Animators\n  4. Remove finished Animators\nWhen there are no more animating the cycle is stopped.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 140,
            "description": "Pauses all animators.",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Anim8"
            },
            "uses": [
                "anim8.Animator.pause"
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 154,
            "description": "Resumes all animators.",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Anim8"
            },
            "uses": [
                "anim8.Animator.resume"
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 168,
            "description": "Stops all animators.",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Anim8"
            },
            "uses": [
                "anim8.Animator.stop"
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 182,
            "description": "Ends all animators.",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Anim8"
            },
            "uses": [
                "anim8.Animator.end"
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 196,
            "description": "Finishes all animators.",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Anim8"
            },
            "uses": [
                "anim8.Animator.finish"
            ],
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-loop.js",
            "line": 210,
            "description": "Add events to the animation cycle: begin, end, finished, starting",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-object.js",
            "line": 2,
            "description": "A factory for plain objects.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-object.js",
            "line": 63,
            "description": "Registers the object factory.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-object.js",
            "line": 68,
            "description": "The Object namespace.",
            "type": "{Object}",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-object.js",
            "line": 75,
            "description": "Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\nreturned immediately. If the input is a string the attribute with the given name is returned. Otherwise\nthe default attribute is returned.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "Object|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-object.js",
            "line": 97,
            "description": "The default attribute.",
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-options.js",
            "line": 2,
            "description": "Parses a value into an options object. If the given input is a string it's \nexpected to be in a similar format to:\n```\n[duration] x[repeat] z[sleep] ~[delay] ![scale] [easing[-easingType]]\n```\nThis is also a registry of options, you can add your own options that\ncan be used later with syntax like:\n```\nanim8.option['myOptions'] = anim8.option('1.5s x2 !2');\n```\nSo you can use 'myOptions' as the options input.",
            "itemtype": "method",
            "name": "options",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object|String|Array"
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-deltavalues.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'deltas' & 'values' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-deltavalues.js",
            "line": 69,
            "description": "Register the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-final.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'final' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-final.js",
            "line": 56,
            "description": "Register the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-initial.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'initial' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-initial.js",
            "line": 55,
            "description": "Register the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-keyframe.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'keyframe' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-keyframe.js",
            "line": 160,
            "description": "Registers the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-move.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'move' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-move.js",
            "line": 32,
            "description": "Register the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-physics.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'move' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-physics.js",
            "line": 38,
            "description": "Register the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-springs.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'move' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-springs.js",
            "line": 39,
            "description": "Register the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-travel.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'move' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-travel.js",
            "line": 20,
            "description": "The computed function which returns a function which returns a value pointing\nto a given target given the current position of the animator.",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-travel.js",
            "line": 104,
            "description": "Register the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-tween.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'tweenTo' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-tween.js",
            "line": 13,
            "description": "Parses the animation object (and optionally an option object) and pushes\nall generated events to the given array.",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "events",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-tweenFrom.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'tweenFrom' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-tweenFrom.js",
            "line": 32,
            "description": "Register the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-tweenTo.js",
            "line": 2,
            "description": "Instantiates a new parser for the 'tweenTo' animation type.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser-tweenTo.js",
            "line": 32,
            "description": "Register the parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 2,
            "description": "Returns a parser based on the input. If the input is a function that function is immediately returned.\nIf the input is a string the parser with that name is returned. If no parser could be determined then\nfalse is returned.",
            "params": [
                {
                    "name": "parser",
                    "description": "",
                    "type": "Function|String"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Parser|false"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 24,
            "description": "Instantiates a new Parser.",
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 35,
            "description": "Parses the animation object (and optionally an option object) and pushes\nall generated attrimatorMap to the given array.",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attrimatorMap",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                },
                {
                    "name": "helper",
                    "description": "",
                    "type": "anim8.ParserHelper"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 49,
            "description": "Merges the options with the given event instances. This is when an existing \nanimation is provided but the user wants to override the animation's options.\n\nBecause event properties can be specified in several places there's a priority\nto which one takes precedence. The properties specified in the animation object\nitself are highest priority, followed by the new options, then by the old\noptions, and finally by the existing property on the event instance.",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "newOptions",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "oldOptions",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "attrimatorMap",
                    "description": "",
                    "type": "anim8.AttrimatorMap"
                },
                {
                    "name": "helper",
                    "description": "",
                    "type": "anim8.ParserHelper"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 91,
            "description": "Instantiates a new instance of Parser Helper.",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "oldOptions",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "newOptions",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 116,
            "description": "If an object with the given name doesn't exist on the input it's created.",
            "params": [
                {
                    "name": "specifics",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 131,
            "description": "Parses an easing from the input.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Function|Array"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 142,
            "description": "Parses repeats from the input.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 153,
            "description": "Parses delay from the input.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 164,
            "description": "Parses sleep from the input.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 175,
            "description": "Parses duration from the input.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 186,
            "description": "Parses scale from the input.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 197,
            "description": "Parses scale base from the input.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 208,
            "description": "Parses a value from the input given the attribute, option, and specific.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "option",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "specifics",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Any"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 221,
            "description": "Parses an event from the input given a path & parser for the event.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "path",
                    "description": "",
                    "type": "anim8.Path"
                },
                {
                    "name": "parser",
                    "description": "",
                    "type": "anim8.Parser"
                },
                {
                    "name": "hasInitialState",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Event"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 244,
            "description": "Parses a number from the input given parse functions.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parseFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "parseOptionFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "option",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optionAdd",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optionScale",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "specifics",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 268,
            "description": "Merges easing based on the input, new options, and the current easing.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "current",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 280,
            "description": "Merges repeats based on the input, new options, and the current repeat.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "current",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 292,
            "description": "Merges delay based on the input, new options, and the current delay.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "current",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 304,
            "description": "Merges sleep based on the input, new options, and the current sleep.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "current",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 316,
            "description": "Merges duration based on the input, new options, and the current duration.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "current",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 328,
            "description": "Merges scale based on the input, new options, and the current scale.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "current",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 340,
            "description": "Merges scale base based on the input, new options, and the current scale \nbase.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "current",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "factory",
                    "description": "",
                    "type": "anim8.Factory"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 359,
            "description": "Returns the first available option from input, new options, old options,\nand the current value.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "current",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "parseOptionFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "option",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "specifics",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-parser.js",
            "line": 375,
            "description": "Merges a number by returning the first occurrence from input, new options,\nold options, and the current value.",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "current",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "parseOptionFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "option",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optionAdd",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optionScale",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "specifics",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-compiled.js",
            "line": 2,
            "description": "Instantiates a new PathCompiled.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "path",
                    "description": "",
                    "type": "anim8.Path"
                },
                {
                    "name": "pointCount",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-compiled.js",
            "line": 37,
            "description": "Parses an object for a compiled path.",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.PathCompiled"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-cubic.js",
            "line": 2,
            "description": "Instantiates a new PathCubic.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "p0",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "p1",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "p3",
                    "description": "",
                    "type": "T"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-cubic.js",
            "line": 46,
            "description": "Parses an object for a cubic path.",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.PathCubic"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-delta.js",
            "line": 2,
            "description": "Instantiates a new PathDelta.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "points",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "deltas",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-delta.js",
            "line": 38,
            "description": "Parses an object for a delta path.",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.PathDelta"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-jump.js",
            "line": 2,
            "description": "Instantiates a new PathJump.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "points",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-jump.js",
            "line": 29,
            "description": "Parses an object for a jump path.",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.PathJump"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-keyframe.js",
            "line": 2,
            "description": "Instantiates a new PathKeyframe.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "points",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "deltas",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "easings",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-keyframe.js",
            "line": 50,
            "description": "Parses an object for a keyframe path.",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.PathKeyframe"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-point.js",
            "line": 2,
            "description": "Instantiates a new PathPoint.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "point",
                    "description": "",
                    "type": "T"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-point.js",
            "line": 27,
            "description": "Parses an object for a point path.",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.PathPoint"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-quadratic.js",
            "line": 2,
            "description": "Instantiates a new PathQuadratic.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "p0",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "p1",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "T"
                }
            ],
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-quadratic.js",
            "line": 43,
            "description": "Parses an object for a quadratic path.",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.PathQuadratic"
            },
            "class": "anim8.Tween",
            "module": "anim8"
        },
        {
            "file": "lib/anim8js-path-tween.js",
            "line": 32,
            "description": "Parses an object for a tween path.",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Tween"
            },
            "class": "anim8.Tween",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-path.js",
            "line": 2,
            "description": "Parses a path given the input and returns an instance of anim8.Path or throws\nan error if the path could not be parsed. If the input is an object and has\na type property with a value that maps to a path type the path's parsing\nfunction is invoked with the object.",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "anim8.Path|String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Path"
            },
            "class": "anim8.Path",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-path.js",
            "line": 42,
            "description": "Resets the path with the given name, calculator, and points.",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "points",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "anim8.Path",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-path.js",
            "line": 58,
            "description": "Computes a value at the given delta setting and returning out.",
            "itemtype": "method",
            "name": "compute",
            "params": [
                {
                    "name": "out",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "delta",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8.Path",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-path.js",
            "line": 71,
            "description": "Determines if this path has at least one computed value.",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "uses": [
                "anim8.computed"
            ],
            "class": "anim8.Path",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-path.js",
            "line": 93,
            "description": "Replaces any computed values in this path with the result from invoking\nthe function and returns a clone of this path.",
            "itemtype": "method",
            "name": "replaceComputed",
            "return": {
                "description": "",
                "type": "anim8.Path"
            },
            "class": "anim8.Path",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-path.js",
            "line": 116,
            "description": "Resolves and returns the point at the given index.",
            "itemtype": "method",
            "name": "resolvePoint",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8.Path",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-path.js",
            "line": 128,
            "description": "Returns whether the path is linear. Linear paths go directly from point to\npoint where curved paths do not. Linear paths can have their length \ncalculated fairly easily however curves you must compute length with a \ngiven granularity.",
            "itemtype": "method",
            "name": "isLinear",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8.Path",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-path.js",
            "line": 142,
            "description": "Computes the length of the Path with a given granularity. Granularity is \nused for non-linear paths - it's the number of segments are calculated on \nthe path where the length of the segments are summed and returned as the \nlength.",
            "itemtype": "method",
            "name": "length",
            "params": [
                {
                    "name": "granularity",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8.Path",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-physics.js",
            "line": 2,
            "description": "Animates a single attribute with a velocity and acceleration.",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parser",
                    "description": "",
                    "type": "anim8.Parser"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "position",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "velocity",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "acceleration",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "terminal",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "stopTime",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-physics.js",
            "line": 29,
            "description": "Parses a value for the animator given a default value.",
            "params": [
                {
                    "name": "animator.",
                    "description": "",
                    "type": "anim8.Animator"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-physics.js",
            "line": 49,
            "description": "Resolves the velocity to a value.",
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-physics.js",
            "line": 59,
            "description": "Resolves the acceleration to a value.",
            "return": {
                "description": "",
                "type": "T"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-physics.js",
            "line": 159,
            "description": "The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\nto get to high the spring will overreact and produce undesirable results.",
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-sequence.js",
            "line": 2,
            "description": "Creates a seqeuence for the given animators offseting animations be the given\ndelay and easing.",
            "params": [
                {
                    "name": "animators",
                    "description": "",
                    "type": "anim8.Animators"
                },
                {
                    "name": "delay",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "easing",
                    "description": "",
                    "type": "String|Array|Function"
                }
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-sequence.js",
            "line": 19,
            "description": "Returns the maximum delay for delaying generated attrimators.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-sequence.js",
            "line": 29,
            "description": "Creates an AttrimatorMap with the given options for the animator at the \ngiven index.",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.AttrimatorMap"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-sequence.js",
            "line": 55,
            "description": "Reverses the sequence by reversing the underlying array of animators.",
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-sequence.js",
            "line": 67,
            "description": "Plays the animation across the animators in this sequence.",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation|String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object"
                },
                {
                    "name": "all",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "uses": [
                "anim8.animation",
                "anim8.options",
                "anim8.Animator.play"
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-sequence.js",
            "line": 101,
            "description": "Queues the animation across the animators in this sequence.",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation|String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object"
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "uses": [
                "anim8.animation",
                "anim8.options",
                "anim8.Animator.queue"
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-sequence.js",
            "line": 150,
            "description": "Transitions into the animation across the animators in this sequence.",
            "params": [
                {
                    "name": "transition",
                    "description": "",
                    "type": "String|Array|Object"
                },
                {
                    "name": "animation",
                    "description": "",
                    "type": "anim8.Animation|String|Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "String|Array|Object"
                },
                {
                    "name": "all",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "uses": [
                "anim8.transition",
                "anim8.animation",
                "anim8.options",
                "anim8.Animator.transition"
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-sequence.js",
            "line": 187,
            "description": "Activates all animators in this sequence and returns this.",
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring-distance.js",
            "line": 2,
            "description": "Instantiates a new SpringDistance.",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "position",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "rest",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "distance",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "damping",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "stiffness",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "velocity",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "gravity",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "finishOnRest",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring-distance.js",
            "line": 64,
            "description": "Register the spring parser.",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.SpringDistance"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring-linear.js",
            "line": 2,
            "description": "Instantiates a new SpringLinear.",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String|false"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator"
                },
                {
                    "name": "position",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "rest",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "damping",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "stiffness",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "velocity",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "gravity",
                    "description": "",
                    "type": "T"
                },
                {
                    "name": "finishOnRest",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring-linear.js",
            "line": 71,
            "description": "Register the spring parser.",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.SpringLinear"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 1,
            "description": "Returns a spring if the provided argument is a spring, the name of a spring, \nor an object with a spring type to be created. If none of these conditions \nare true then an error is thrown.",
            "params": [
                {
                    "name": "spring",
                    "description": "",
                    "type": "anim8.Spring|String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Spring"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 28,
            "description": "A spring has a resting point, a current position, and the velocity currently \nenacting on the position based on the implementing classes logic.",
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 39,
            "description": "Resets the spring's properties.",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "calculator",
                    "description": "",
                    "type": "anim8.Calculator|String"
                },
                {
                    "name": "rest",
                    "description": "",
                    "type": "T|Function|true"
                },
                {
                    "name": "position",
                    "description": "",
                    "type": "T|Function|true"
                },
                {
                    "name": "velocity",
                    "description": "",
                    "type": "T|Function|true"
                },
                {
                    "name": "gravity",
                    "description": "",
                    "type": "T|Function|true"
                },
                {
                    "name": "finishOnRest",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 62,
            "description": "Called the first time preupdate is called on an Animator to prepare the\nspring to be updated.",
            "params": [
                {
                    "name": "now",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "animator",
                    "description": "",
                    "type": "anim8.Animator"
                }
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 83,
            "description": "Returns whether this animator has computed values which need to be resolved\nby the subject animator calling prepare on this attribute animator.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 97,
            "description": "Parses a value with the calculator given a default value to fallback on.",
            "params": [
                {
                    "name": "animator",
                    "description": "",
                    "type": "anim8.Animator"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "T|Function|true"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "T"
                }
            ],
            "return": {
                "description": "",
                "type": "T|Function"
            },
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 117,
            "description": "Resolves the rest to the expected format.",
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 125,
            "description": "Method that's invoked on each update.",
            "params": [
                {
                    "name": "dt",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 176,
            "description": "The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\nto get to high the spring will overreact and produce undesirable results.",
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-spring.js",
            "line": 182,
            "description": "The value used to determine whether two positions in a spring are different.",
            "class": "anim8",
            "module": "anim8",
            "namespace": "anim8"
        },
        {
            "file": "lib/anim8js-transition.js",
            "line": 2,
            "description": "Parses a value into a transition object. If the given input is a string it's\nexpected to be in a similar format to:\n```\n[time] [easing[-easingType]] >[outro] <[intro] /[granularity] ^[lookup]\n```\nThis is also a registry of transitions, you can add your own transitions that\ncan be used later with syntax like:\n```\nanim8.transition['myTransition'] = anim8.transition('50ms 0.05 linear');\n```\nSo you can use 'myTransition' as the transition input.\n```\nanimator.transition('myTransition', 'myAnimation');\n```",
            "itemtype": "method",
            "name": "transition",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object|String|Array"
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "anim8",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-easel.js",
            "line": 2,
            "description": "A factory for plain objects.",
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-easel.js",
            "line": 67,
            "description": "Registers the object factory.",
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-easel.js",
            "line": 119,
            "description": "=============================================================================\nAttributes defined in EaselJS:\n=============================================================================\nDisplayObject:\n   alpha, regX, regY, rotation, scaleX, scaleY, skewX, \n   skewY, x, y, \nBitmapText (DisplayObject):\n   lineHeight, letterSpacing, spaceWidth\nBlurFilter:\n   blurX, blurY, quality\nColorFilter:\n   redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier,\n   redOffset, greenOffset, blueOffset, alphaOffset    \nGraphics.Arc:\n   x, y, radius, startAngle, endAngle\nGraphics.BezierCurveTo:\n   cp1x, cp1y, cp2x, cp2y, x, y\nGraphics.Circle:\n   x, y, radius\nGraphics.Ellipse:\n   x, y, w, h\nGraphics.Fill:\n   style (color)\nGraphics.LineTo:\n   x, y\nGraphics.MoveTo:\n   x, y\nGraphics.PolyStar:\n   x, y, radius, sides, pointSize, angle\nGraphics.QuadraticCurveTo:\n   cpx, cpy, x, y\nGraphics.Rect:\n   x, y, w, h\nGraphics.RoundRect:\n   x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL\nGraphics.Stroke:\n   style (color)\nGraphics.StrokeStyle:\n   width, miterLimit\nPoint:\n   x, y\nRectangle:\n   x, y, width, height\nShadow:\n   color, offsetX, offsetY, blur\nSprite:\n   currentAnimationFrame, framerate\nSpriteSheet:\n   framerate\nText:\n   color",
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-easel.js",
            "line": 173,
            "description": "=============================================================================\nDynamic Attributes defined in anim8js\n=============================================================================\nnumber: cornerRadius, ColorMatrix{brightness, contrast, saturation, hue}\n2d: reg, position, offset, cp, cp1, cp2, filterBlur, size, scale, skew\nrgba: filterMultiplier, filterOffset",
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 1,
            "description": "A factory for jQuery objects.",
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 12,
            "description": "Determines whether the given subject is valid for this factory to create Animators for.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 23,
            "description": "Returns an animator given a subject.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "anim8.Animator"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 34,
            "description": "Explodes the given subject to an array of Animators and adds them to the given array.",
            "params": [
                {
                    "name": "subject",
                    "description": "",
                    "type": "Any"
                },
                {
                    "name": "animators",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 56,
            "description": "Registers the jQuery factory.",
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 61,
            "description": "Adds useful anim8js functions to jQuery.",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "JQuery"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Anim8"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Anim8s"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 72,
            "description": "Extend the clone function to remove the attribute which stores the animator ID so clones get new animators.",
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 88,
            "description": "Adds the m8, anim8, and animator functions to jQuery. An instance of anim8.Animator will be returned.",
            "return": {
                "description": "",
                "type": "anim8.Animator"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 98,
            "description": "Adds the m8s, anim8s, animators functions to jQuery. An instance of anim8.Animators will be returned.",
            "return": {
                "description": "",
                "type": "anim8.Animators"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 108,
            "description": "Plays the animation specified in the given data attribute.\n\nThe returned jQuery object is reduced to the elements that had a valid animation attribute.",
            "params": [
                {
                    "name": "animationAttribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "boolean",
                    "description": "all",
                    "optional": true
                },
                {
                    "name": "boolean",
                    "description": "cache",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "see": [
                "anim8.Animator.play"
            ],
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 143,
            "description": "Queues the animation specified in the given data attribute.\n\nThe returned jQuery object is reduced to the elements that had a valid animation attribute.",
            "params": [
                {
                    "name": "animationAttribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "boolean",
                    "description": "cache",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "see": [
                "anim8.Animator.queue"
            ],
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 177,
            "description": "Transitions into the animation specified in the given data attribute.\n\nThe returned jQuery object is reduced to the elements that had a valid animation attribute.",
            "params": [
                {
                    "name": "animationAttribute",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "transitionTime",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "transitionDelta",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "transitionEasing",
                    "description": "",
                    "type": "String|function"
                },
                {
                    "name": "cache",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 213,
            "description": "Wraps every character with a span and the class sequenced and returns a jquery\nelement containing all wrapped characters.",
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-jquery.js",
            "line": 229,
            "description": "Wraps every character in ever element in the jQuery object with a tag.\nIf an element already only has one character it remains untouched.",
            "params": [
                {
                    "name": "tagName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "attributes",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "attributes",
                "type": "String"
            },
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-pixi.js",
            "line": 2,
            "description": "A factory for plain objects.",
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-pixi.js",
            "line": 67,
            "description": "Registers the object factory.",
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-pixi.js",
            "line": 119,
            "description": "=============================================================================\nAttributes defined in Pixi.js:\n=============================================================================\nAbstractFilter: \n   padding\nAsciiFilter: \n   size\nDisplayObjectContainer: \n   alpha, height, pivot(2d), position(2d), rotation, scale(2d), width, x, y\nBlurFilter: \n   blur, blurX, blurY\nCircle: \n   radius\nColorStepFilter: \n   step\nDisplacementFilter: \n   offset(2d)\nDotScreenFilter: \n   angle\nGraphics: \n   blendMode, boundsPadding, fillAlpha, lineColor(rgba), lineWidth, tint(rgba)\nGrayFilter: \n   gray\nInvertFilter: \n   invert\nMatrix: \n   a, b, c, d, tx, ty\nNoiseFilter: \n   noise\nPixelateFilter: \n   size\nSepiaFilter: \n   sepia\nSmartBlurFilter: \n   blur\nSprite: \n   anchor(2d)\nText.style: \n   fill(rgba), stroke, strokeThickness, wordWrapWidth, dropShadowAngle, dropShadowDistance\nTilingSprite: \n   tilePosition, tileScale, tileScaleOffset\nTiltShiftFilter: \n   end, gradientBlur, start",
            "class": "",
            "module": "anim8"
        },
        {
            "file": "plugins/anim8js-pixi.js",
            "line": 165,
            "description": "=============================================================================\nDynamic Attributes defined in anim8js\n=============================================================================\nnumber: scaleX, scaleY, pivotX, pivotY, offsetX, offsetY, anchorX, anchorY\n2d: dimension\nrgba:",
            "class": "",
            "module": "anim8"
        }
    ],
    "warnings": [
        {
            "message": "param name missing: {Function|Number|Boolean}",
            "line": " lib/anim8js-calculator-2d.js:16"
        },
        {
            "message": "param name missing: {[type]}",
            "line": " lib/anim8js-calculator-2d.js:16"
        },
        {
            "message": "param name missing: {String|Object}",
            "line": " lib/anim8js-dom-core.js:115"
        },
        {
            "message": "param name missing: {anim8.FastMap}",
            "line": " lib/anim8js-fast-map.js:67"
        },
        {
            "message": "param name missing: {Number}",
            "line": " lib/anim8js-parser-travel.js:20"
        },
        {
            "message": "param name missing: {any}",
            "line": " lib/anim8js-parser-travel.js:20"
        },
        {
            "message": "param name missing: {Number}",
            "line": " lib/anim8js-parser-travel.js:20"
        },
        {
            "message": "param name missing: {Object}",
            "line": " lib/anim8js-spring-distance.js:64"
        },
        {
            "message": "param name missing: {Object}",
            "line": " lib/anim8js-spring-linear.js:71"
        },
        {
            "message": "param name missing: {jQuery}",
            "line": " plugins/anim8js-jquery.js:61"
        },
        {
            "message": "param name missing: {anim8}",
            "line": " plugins/anim8js-jquery.js:61"
        },
        {
            "message": "param name missing: {anim8s}",
            "line": " plugins/anim8js-jquery.js:61"
        },
        {
            "message": "Missing item type\nAnimate.css animations in anim8js.\n\nhttp://daneden.github.io/animate.css/",
            "line": " lib/anim8js-animate.css.js:1"
        },
        {
            "message": "Missing item type\nGenerate animations for all permutations of the following concepts:\n\n(slide|fade|zoom)(Out|In)(Down|Up)(Right|Left)(|x2|Big)",
            "line": " lib/anim8js-animate.css.js:1733"
        },
        {
            "message": "Missing item type\nAdds the following event methods to Animators: on, once, off, trigger.",
            "line": " lib/anim8js-animator.js:1647"
        },
        {
            "message": "Missing item type\nCreates the Defer prototype for the following Animator methods.",
            "line": " lib/anim8js-animator.js:1665"
        },
        {
            "message": "Missing item type\nAnimators is an instance of Array. All array methods are supported.",
            "line": " lib/anim8js-animators.js:17"
        },
        {
            "message": "Missing item type\nInvokes a callback for each element in the array.",
            "line": " lib/anim8js-animators.js:23"
        },
        {
            "message": "Missing item type\nAppends the array of animators given to the end of this array.",
            "line": " lib/anim8js-animators.js:43"
        },
        {
            "message": "Missing item type\nInvokes a callback for each element in the array and if a true value is\nreturned  that element is removed from the array.",
            "line": " lib/anim8js-animators.js:59"
        },
        {
            "message": "Missing item type\nReturns the subjects of the Animators optionally passing them through a \nwrapper function before it's returned.",
            "line": " lib/anim8js-animators.js:85"
        },
        {
            "message": "Missing item type\nReturns the first animator in the array.",
            "line": " lib/anim8js-animators.js:109"
        },
        {
            "message": "Missing item type\nReverses the order of animators in the array.",
            "line": " lib/anim8js-animators.js:119"
        },
        {
            "message": "Missing item type\nActivates all Animators in the array if they aren't active already.",
            "line": " lib/anim8js-animators.js:141"
        },
        {
            "message": "Missing item type\nPlays a sequence of events separated by a delay.",
            "line": " lib/anim8js-animators.js:169"
        },
        {
            "message": "Missing item type\nReturns the maximum time remaining out of all Animators in the array.",
            "line": " lib/anim8js-animators.js:181"
        },
        {
            "message": "Missing item type\nAdds the following methods to make an array of Animators appear like a single Animator.",
            "line": " lib/anim8js-animators.js:199"
        },
        {
            "message": "Missing item type\n[parse description]",
            "line": " lib/anim8js-calculator-2d.js:16"
        },
        {
            "message": "Missing item type\nRegister all calculators.",
            "line": " lib/anim8js-calculator-2d.js:206"
        },
        {
            "message": "Missing item type\nA calculator for objects with an x, y, and z component (number)",
            "line": " lib/anim8js-calculator-3d.js:2"
        },
        {
            "message": "Missing item type\nRegister the calculator.",
            "line": " lib/anim8js-calculator-3d.js:171"
        },
        {
            "message": "Missing item type\nA calculator for number primitives.",
            "line": " lib/anim8js-calculator-number.js:2"
        },
        {
            "message": "Missing item type\nRegister the calculators.",
            "line": " lib/anim8js-calculator-number.js:116"
        },
        {
            "message": "Missing item type\nA calculator for objects with an x, y, z, and angle components.",
            "line": " lib/anim8js-calculator-quaternion.js:2"
        },
        {
            "message": "Missing item type\nRegister the calculator.",
            "line": " lib/anim8js-calculator-quaternion.js:189"
        },
        {
            "message": "Missing item type\nA calculator for objects with r, g, & b components (numbers 0 -> 255)",
            "line": " lib/anim8js-calculator-rgb.js:2"
        },
        {
            "message": "Missing item type\nRegister the calculator.",
            "line": " lib/anim8js-calculator-rgb.js:180"
        },
        {
            "message": "Missing item type\nA calculator for objects with r, g, & b components \n(numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).",
            "line": " lib/anim8js-calculator-rgba.js:3"
        },
        {
            "message": "Missing item type\nRegister the calculator.",
            "line": " lib/anim8js-calculator-rgba.js:198"
        },
        {
            "message": "Missing item type\nReturns a calculator based on the input. If the input is an instance of\nanim8.Calculator it is immediately returned. If the input is a string the \ncalculator with that name is returned. If no calculator could be determined\nthe default calculator is returned.",
            "line": " lib/anim8js-calculator.js:2"
        },
        {
            "message": "Missing item type\nInstantiates a new Calculator instance.",
            "line": " lib/anim8js-calculator.js:25"
        },
        {
            "message": "Missing item type\nCreates the constants for this calculator.",
            "line": " lib/anim8js-calculator.js:36"
        },
        {
            "message": "Missing item type\nParses the given input for a value this calculator understands.",
            "line": " lib/anim8js-calculator.js:46"
        },
        {
            "message": "Missing item type\nCopies a value and places it in out and returns out.",
            "line": " lib/anim8js-calculator.js:58"
        },
        {
            "message": "Missing item type\nClones the value and returns the clone.",
            "line": " lib/anim8js-calculator.js:70"
        },
        {
            "message": "Missing item type\nCreates an empty value equivalent to zero.",
            "line": " lib/anim8js-calculator.js:81"
        },
        {
            "message": "Missing item type\nScales out by the given scalar value and returns out.",
            "line": " lib/anim8js-calculator.js:91"
        },
        {
            "message": "Missing item type\nAdds an amount to out and returns out.",
            "line": " lib/anim8js-calculator.js:103"
        },
        {
            "message": "Missing item type\nAdds an amount scaled by a scalar value to out and returns out.",
            "line": " lib/anim8js-calculator.js:115"
        },
        {
            "message": "Missing item type\nSubtracts an amount from out and returns out.",
            "line": " lib/anim8js-calculator.js:128"
        },
        {
            "message": "Missing item type\nMultiplies out by some amount and returns out.",
            "line": " lib/anim8js-calculator.js:140"
        },
        {
            "message": "Missing item type\nInterpolates out between start & end given a delta value and returns out. \nA delta value typically lies between 0 and 1 inclusively.",
            "line": " lib/anim8js-calculator.js:152"
        },
        {
            "message": "Missing item type\nReturns a random value between the given min and max.",
            "line": " lib/anim8js-calculator.js:170"
        },
        {
            "message": "Missing item type\nCalculates the distance between the two values.",
            "line": " lib/anim8js-calculator.js:183"
        },
        {
            "message": "Missing item type\nCalculates the squared distance between the two values.",
            "line": " lib/anim8js-calculator.js:195"
        },
        {
            "message": "Missing item type\nReturns the distance the given value is from zero.",
            "line": " lib/anim8js-calculator.js:207"
        },
        {
            "message": "Missing item type\nReturns the squared distance the given value is from zero.",
            "line": " lib/anim8js-calculator.js:218"
        },
        {
            "message": "Missing item type\nDetermines whether the given value is valid for this calculator.",
            "line": " lib/anim8js-calculator.js:229"
        },
        {
            "message": "Missing item type\nReturns whether the given value is not a number or has a component which is\nnot a number.",
            "line": " lib/anim8js-calculator.js:240"
        },
        {
            "message": "Missing item type\nDetermines whether the given value is equivalent to zero given an \nacceptable distance from zero (epsilon).",
            "line": " lib/anim8js-calculator.js:252"
        },
        {
            "message": "Missing item type\nDetermines whether the given values are equivalent up to an acceptable\ndistance apart.",
            "line": " lib/anim8js-calculator.js:265"
        },
        {
            "message": "Missing item type\nSets out to the minimum value between the two values and returns out.",
            "line": " lib/anim8js-calculator.js:279"
        },
        {
            "message": "Missing item type\nSets out to the maximum value between two values and returns out.",
            "line": " lib/anim8js-calculator.js:292"
        },
        {
            "message": "Missing item type\nClamps out between the given minimum and maximum values and returns out.",
            "line": " lib/anim8js-calculator.js:305"
        },
        {
            "message": "Missing item type\nDetermines whether the given value appears to be a relative value. Relative\nvalues are stored as strings starting with a plus or minus for positive or\nnegative respectively.",
            "line": " lib/anim8js-calculator.js:329"
        },
        {
            "message": "Missing item type\nReturns the relative amount of the given relative value. If the value is \nnot a valid relative value false is returned.",
            "line": " lib/anim8js-calculator.js:342"
        },
        {
            "message": "Missing item type\nInstantiates a new color given red, green, blue, and white components.\nIf a component is missed it's default value is either 255 (white) or\n1.0 (opaque).",
            "line": " lib/anim8js-color.js:2"
        },
        {
            "message": "Missing item type\nThe array of parsing methods to execute sequentally until a color is returned.",
            "line": " lib/anim8js-color.js:17"
        },
        {
            "message": "Missing item type\nParses a color from a string.",
            "line": " lib/anim8js-color.js:281"
        },
        {
            "message": "Missing item type\nFormats a color to a string.",
            "line": " lib/anim8js-color.js:304"
        },
        {
            "message": "Missing item type\nThe namespace for computed functions. Computed functions are functions that\nare invoked once at the start of an animation given the attrimator and \nanimator and the result replaces the function.",
            "line": " lib/anim8js-computed.js:3"
        },
        {
            "message": "Missing item type\nCalculates the current value for an animator.",
            "line": " lib/anim8js-computed.js:10"
        },
        {
            "message": "Missing item type\nCalculates a value relative to the attribute value currently in the animator.\nA mask can be used for mixed relative & absolute values in a single value\nwhere 1 makes it relative and 0 makes it absolute.",
            "line": " lib/anim8js-computed.js:35"
        },
        {
            "message": "Missing item type\nReturns a random value based on the given random selection.\n\n1. If an array is given an item is randomly chosen from that array.\n2. If an instance of anim8.Path is given a point is randomly computed and returned.\n3. If an object with min & max values is given a random value between them is returned.",
            "line": " lib/anim8js-computed.js:86"
        },
        {
            "message": "Missing item type\nDetermines whether the given value is a computed value. A computed value is\nfunction with a variable 'computed' set to a true value.",
            "line": " lib/anim8js-computed.js:152"
        },
        {
            "message": "Missing item type\nConverts an array of subjects into an array of Animators.",
            "line": " lib/anim8js-core.js:32"
        },
        {
            "message": "Missing item type\nInstantiates a Defer instance. Defer instances keep track of method calls\nto call at a later time - after an event occurs. The first argument needs\nto be a function which returns an instance of anim8.Defer when it's invoked.\nThe second argument is an array of methods that can be deferred.",
            "line": " lib/anim8js-defer.js:2"
        },
        {
            "message": "Missing item type\nResets the defer instance.",
            "line": " lib/anim8js-defer.js:23"
        },
        {
            "message": "Missing item type\nDetermines whether this Defer instance is at the root.",
            "line": " lib/anim8js-defer.js:48"
        },
        {
            "message": "Missing item type\nRegisters this Defer instance with the eventable.",
            "line": " lib/anim8js-defer.js:58"
        },
        {
            "message": "Missing item type\nCreates a defered function which passes the method and arguments for\nany method call into an array of calls on this Defer instance.",
            "line": " lib/anim8js-defer.js:66"
        },
        {
            "message": "Missing item type\nExecutes all defered method calls and starts any child Defer instances.",
            "line": " lib/anim8js-defer.js:83"
        },
        {
            "message": "Missing item type\nReturns the object before the defer statement.",
            "line": " lib/anim8js-defer.js:107"
        },
        {
            "message": "Missing item type\nDefers any following method calls to after the given event is triggered. A\ncallback can be specified which is a function invoked after the event is\ntriggered.",
            "line": " lib/anim8js-defer.js:117"
        },
        {
            "message": "Missing item type\nInstantiates a new AnimatorDom given a subject.",
            "line": " lib/anim8js-dom-animator.js:2"
        },
        {
            "message": "Missing item type\nExtends anim8.Animator",
            "line": " lib/anim8js-dom-animator.js:21"
        },
        {
            "message": "Missing item type\nBuilds the styles map in preparation to be applied.",
            "line": " lib/anim8js-dom-animator.js:261"
        },
        {
            "message": "Missing item type\nGets the current attribute values for all attributes specified. The argument must be an object\nwhere the key is the name of an attribute and the value is the desired unit.",
            "line": " lib/anim8js-dom-animator.js:291"
        },
        {
            "message": "Missing item type\nReturns a function that returns the current value for the given attribute when invoked.",
            "line": " lib/anim8js-dom-animator.js:337"
        },
        {
            "message": "Missing item type\nReturns the value for the given attribute as a string with the current units.",
            "line": " lib/anim8js-dom-animator.js:370"
        },
        {
            "message": "Missing item type\nReturns the value for the given attribute as a string with the current units.\nif the attribute doesn't exist a secondary one is looked up. If that value\nis an object and contains the given subproperty the value is resolved once again.",
            "line": " lib/anim8js-dom-animator.js:381"
        },
        {
            "message": "Missing item type\nReturns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\nreturned immediately. If the input is a string the attribute with the given name is returned. Otherwise\nthe default attribute is returned.",
            "line": " lib/anim8js-dom-attribute.js:2"
        },
        {
            "message": "Missing item type\nThe default attribute.",
            "line": " lib/anim8js-dom-attribute.js:23"
        },
        {
            "message": "Missing item type\nAll animatable attributes for AnimatorDoms & HTMLElements.",
            "line": " lib/anim8js-dom-attribute.js:28"
        },
        {
            "message": "Missing item type\nA factory for HTML Elements",
            "line": " lib/anim8js-dom-core.js:2"
        },
        {
            "message": "Missing item type\nDetermines whether the given subject is valid for this factory to create Animators for.",
            "line": " lib/anim8js-dom-core.js:17"
        },
        {
            "message": "Missing item type\nReturns an animator given a subject.",
            "line": " lib/anim8js-dom-core.js:28"
        },
        {
            "message": "Missing item type\nDestroys the animator by unlinking the animator from the subject.",
            "line": " lib/anim8js-dom-core.js:52"
        },
        {
            "message": "Missing item type\nReturns the attribute descriptor for the given attribute.",
            "line": " lib/anim8js-dom-core.js:62"
        },
        {
            "message": "Missing item type\nRegisters the DOM factory.",
            "line": " lib/anim8js-dom-core.js:103"
        },
        {
            "message": "Missing item type\nAll DOM related functions.",
            "line": " lib/anim8js-dom-core.js:110"
        },
        {
            "message": "Missing item type\nReturns a property for the given name.",
            "line": " lib/anim8js-dom-core.js:115"
        },
        {
            "message": "Missing item type\nComputes the desired style of the given element and returns it as a string. \nThe style given must be in hyphenated format like so: \nanim8.dom.style( element, 'font-size' ) = '12px'",
            "line": " lib/anim8js-dom-core.js:135"
        },
        {
            "message": "Missing item type\nGiven an array of styles this will return the first one that is present on elements in the current browser.",
            "line": " lib/anim8js-dom-core.js:189"
        },
        {
            "message": "Missing item type\nParses the string for a value and a unit.",
            "line": " lib/anim8js-dom-core.js:213"
        },
        {
            "message": "Missing item type\nConverts one unit to another for a given element.\n\nFor Example: anim8.dom.convert( element, '100px', '%', 'parentWidth' )\n   returns how much percent 100px relativeTo parentWidth of the given element",
            "line": " lib/anim8js-dom-core.js:240"
        },
        {
            "message": "Missing item type\nCalculators how many pixels a given value & unit is.\n\nFor Example: anim8.toPixels( 100, 'in' ) \n   returns how many pixels are in 1 inch, with up to 2 decimal points of accuracy.",
            "line": " lib/anim8js-dom-core.js:254"
        },
        {
            "message": "Missing item type\nProperties for the DOM animator.",
            "line": " lib/anim8js-dom-property.js:2"
        },
        {
            "message": "Missing item type\nEasings equivalent to the CSS animations. These are approximations since the\nexact functions don't perform quickly.",
            "line": " lib/anim8js-easing-css.js:2"
        },
        {
            "message": "Missing item type\nReturns an easing type based on the input. If the input is a function that \nfunction is immediately returned. If the input is a string the easing type \nwith that name is returned. If no easing type could be determined an error is\nthrown.",
            "line": " lib/anim8js-easing-type.js:2"
        },
        {
            "message": "Missing item type\nPlays the animation forward normally.",
            "line": " lib/anim8js-easing-type.js:31"
        },
        {
            "message": "Missing item type\nPlays the animation forward by flipping the easings momentum.",
            "line": " lib/anim8js-easing-type.js:45"
        },
        {
            "message": "Missing item type\nPlays the animation forward by flipping the easings momentum halfway.",
            "line": " lib/anim8js-easing-type.js:59"
        },
        {
            "message": "Missing item type\nPlays the aninmation forwards with the given easing, and backwards with the same easing momentum.",
            "line": " lib/anim8js-easing-type.js:80"
        },
        {
            "message": "Missing item type\nPlays the animation forwards with the given easing, and backwards reflecting the easing's momentum.",
            "line": " lib/anim8js-easing-type.js:101"
        },
        {
            "message": "Missing item type\nPlays the animation backwards with using the same easing momentum.",
            "line": " lib/anim8js-easing-type.js:122"
        },
        {
            "message": "Missing item type\nPlays the animation backwards by flipping the easing's momentum.",
            "line": " lib/anim8js-easing-type.js:136"
        },
        {
            "message": "Missing item type\nReturns an easing based on the given input. If the input is a function it's \nassumed to be an easing function and is returned immediately. If the input is\na string the easing with that name is returned. If the input is a string in \nthe format 'easing-easingType' then an easing is returned that is a \ncombination of the easing with the given name and the easingType with the \ngiven name. If the given input is an array with 4 elements it's assumed to be\na bezier path and one is created and returned. If no input is given the \ndefault easing is returned. If an easing cannot be determined then an error\nis thrown.",
            "line": " lib/anim8js-easing.js:2"
        },
        {
            "message": "Missing item type\nReturns true if the given string would result in returning an easing.",
            "line": " lib/anim8js-easing.js:63"
        },
        {
            "message": "Missing item type\nGenerates a bezier easing function given the two middle control points. The\nfirst point is {0,0} and the last point is {1, 1}.",
            "line": " lib/anim8js-easing.js:252"
        },
        {
            "message": "Missing item type\nPossible states an event can be in.",
            "line": " lib/anim8js-event.js:2"
        },
        {
            "message": "Missing item type\nInstantiates a new Event which extends anim8.Attrimator.",
            "line": " lib/anim8js-event.js:15"
        },
        {
            "message": "Missing item type\nReturns the computed value given a base value and a delta along the path.",
            "line": " lib/anim8js-event.js:48"
        },
        {
            "message": "Missing item type\nApplies the value to the frame and returns true, otherwise returns false.",
            "line": " lib/anim8js-event.js:76"
        },
        {
            "message": "Missing item type\nReturns a factory for the given subject and optionally throws an error if no\nfactory exists.",
            "line": " lib/anim8js-factory.js:3"
        },
        {
            "message": "Missing item type\nReturns a factory given the input and returns the default if none is found.",
            "line": " lib/anim8js-factory.js:37"
        },
        {
            "message": "Missing item type\nA factory creates Animator instances for subjects.",
            "line": " lib/anim8js-factory.js:57"
        },
        {
            "message": "Missing item type\nDetermines whether the given subject is valid for this factory to create Animators for.",
            "line": " lib/anim8js-factory.js:68"
        },
        {
            "message": "Missing item type\nReturns an animator given a subject.",
            "line": " lib/anim8js-factory.js:79"
        },
        {
            "message": "Missing item type\nExplodes the given subject to an array of Animators and adds them to the given array.",
            "line": " lib/anim8js-factory.js:90"
        },
        {
            "message": "Missing item type\nDestroys the animator by unlinking the animator from the subject.",
            "line": " lib/anim8js-factory.js:101"
        },
        {
            "message": "Missing item type\nReturns the attribute descriptor for the given attribute.",
            "line": " lib/anim8js-factory.js:111"
        },
        {
            "message": "Missing item type\nA FastMap has the key-to-value benefits of a map and iteration benefits of an\narray. This is especially beneficial when most of the time the contents of \nthe structure need to be iterated and order doesn't matter (since removal \nperforms a swap which breaks insertion order).",
            "line": " lib/anim8js-fast-map.js:2"
        },
        {
            "message": "Missing item type\nResets the map by initializing the values, keys, and indexes.",
            "line": " lib/anim8js-fast-map.js:30"
        },
        {
            "message": "Missing item type\nPuts the value in the map by the given key.",
            "line": " lib/anim8js-fast-map.js:44"
        },
        {
            "message": "Missing item type\nPuts all keys & values on the given map into this map overwriting any existing values mapped by similar keys.",
            "line": " lib/anim8js-fast-map.js:67"
        },
        {
            "message": "Missing item type\nReturns the value mapped by the given key.",
            "line": " lib/anim8js-fast-map.js:86"
        },
        {
            "message": "Missing item type\nRemoves the value by a given key",
            "line": " lib/anim8js-fast-map.js:97"
        },
        {
            "message": "Missing item type\nRemoves the value & key at the given index.",
            "line": " lib/anim8js-fast-map.js:113"
        },
        {
            "message": "Missing item type\nReturns the index of the value in the array given a key.",
            "line": " lib/anim8js-fast-map.js:137"
        },
        {
            "message": "Missing item type\nReturns whether this map has a value for the given key.",
            "line": " lib/anim8js-fast-map.js:148"
        },
        {
            "message": "Missing item type\nReturns whether the given input has overlap with keys in this map.",
            "line": " lib/anim8js-fast-map.js:159"
        },
        {
            "message": "Missing item type\nReturns the number of elements in the map.",
            "line": " lib/anim8js-fast-map.js:181"
        },
        {
            "message": "Missing item type\nClears all keys & values from the map.",
            "line": " lib/anim8js-fast-map.js:191"
        },
        {
            "message": "Missing item type\nWhether the animation cycle is currently running. This is true\nwhen where are active animators and anim8.run is being called\nand false otherwise.",
            "line": " lib/anim8js-loop.js:2"
        },
        {
            "message": "Missing item type\nLive Mode keeps the animation cycles running even when there aren't\nAnimators. For highly interactive applications enabling this may\ntake up more resources but it will result in smoother animations. When\nthe animation cycle goes from stopped to running it takes a few frames\nto smooth out when this is false.",
            "line": " lib/anim8js-loop.js:9"
        },
        {
            "message": "Missing item type\nThe anim8 instance for all active animators.",
            "line": " lib/anim8js-loop.js:18"
        },
        {
            "message": "Missing item type\nThe function to call if animations need to be done.",
            "line": " lib/anim8js-loop.js:23"
        },
        {
            "message": "Missing item type\nAdds an animator to the list if animating if it isn't there already. If the animation\nloop isn't currently running it's started.",
            "line": " lib/anim8js-loop.js:59"
        },
        {
            "message": "Missing item type\nExecutes an animation cycle which consists of four operations:\n  1. Call preupdate on all Animators\n  2. Call update on all Animators\n  3. Call apply on all Animators\n  4. Remove finished Animators\nWhen there are no more animating the cycle is stopped.",
            "line": " lib/anim8js-loop.js:82"
        },
        {
            "message": "Missing item type\nPauses all animators.",
            "line": " lib/anim8js-loop.js:140"
        },
        {
            "message": "Missing item type\nResumes all animators.",
            "line": " lib/anim8js-loop.js:154"
        },
        {
            "message": "Missing item type\nStops all animators.",
            "line": " lib/anim8js-loop.js:168"
        },
        {
            "message": "Missing item type\nEnds all animators.",
            "line": " lib/anim8js-loop.js:182"
        },
        {
            "message": "Missing item type\nFinishes all animators.",
            "line": " lib/anim8js-loop.js:196"
        },
        {
            "message": "Missing item type\nAdd events to the animation cycle: begin, end, finished, starting",
            "line": " lib/anim8js-loop.js:210"
        },
        {
            "message": "Missing item type\nA factory for plain objects.",
            "line": " lib/anim8js-object.js:2"
        },
        {
            "message": "Missing item type\nRegisters the object factory.",
            "line": " lib/anim8js-object.js:63"
        },
        {
            "message": "Missing item type\nThe Object namespace.",
            "line": " lib/anim8js-object.js:68"
        },
        {
            "message": "Missing item type\nReturns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\nreturned immediately. If the input is a string the attribute with the given name is returned. Otherwise\nthe default attribute is returned.",
            "line": " lib/anim8js-object.js:75"
        },
        {
            "message": "Missing item type\nThe default attribute.",
            "line": " lib/anim8js-object.js:97"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'deltas' & 'values' animation type.",
            "line": " lib/anim8js-parser-deltavalues.js:2"
        },
        {
            "message": "Missing item type\nRegister the parser.",
            "line": " lib/anim8js-parser-deltavalues.js:69"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'final' animation type.",
            "line": " lib/anim8js-parser-final.js:2"
        },
        {
            "message": "Missing item type\nRegister the parser.",
            "line": " lib/anim8js-parser-final.js:56"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'initial' animation type.",
            "line": " lib/anim8js-parser-initial.js:2"
        },
        {
            "message": "Missing item type\nRegister the parser.",
            "line": " lib/anim8js-parser-initial.js:55"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'keyframe' animation type.",
            "line": " lib/anim8js-parser-keyframe.js:2"
        },
        {
            "message": "Missing item type\nRegisters the parser.",
            "line": " lib/anim8js-parser-keyframe.js:160"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'move' animation type.",
            "line": " lib/anim8js-parser-move.js:2"
        },
        {
            "message": "Missing item type\nRegister the parser.",
            "line": " lib/anim8js-parser-move.js:32"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'move' animation type.",
            "line": " lib/anim8js-parser-physics.js:2"
        },
        {
            "message": "Missing item type\nRegister the parser.",
            "line": " lib/anim8js-parser-physics.js:38"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'move' animation type.",
            "line": " lib/anim8js-parser-springs.js:2"
        },
        {
            "message": "Missing item type\nRegister the parser.",
            "line": " lib/anim8js-parser-springs.js:39"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'move' animation type.",
            "line": " lib/anim8js-parser-travel.js:2"
        },
        {
            "message": "Missing item type\nThe computed function which returns a function which returns a value pointing\nto a given target given the current position of the animator.",
            "line": " lib/anim8js-parser-travel.js:20"
        },
        {
            "message": "Missing item type\nRegister the parser.",
            "line": " lib/anim8js-parser-travel.js:104"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'tweenTo' animation type.",
            "line": " lib/anim8js-parser-tween.js:2"
        },
        {
            "message": "Missing item type\nParses the animation object (and optionally an option object) and pushes\nall generated events to the given array.",
            "line": " lib/anim8js-parser-tween.js:13"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'tweenFrom' animation type.",
            "line": " lib/anim8js-parser-tweenFrom.js:2"
        },
        {
            "message": "Missing item type\nRegister the parser.",
            "line": " lib/anim8js-parser-tweenFrom.js:32"
        },
        {
            "message": "Missing item type\nInstantiates a new parser for the 'tweenTo' animation type.",
            "line": " lib/anim8js-parser-tweenTo.js:2"
        },
        {
            "message": "Missing item type\nRegister the parser.",
            "line": " lib/anim8js-parser-tweenTo.js:32"
        },
        {
            "message": "Missing item type\nReturns a parser based on the input. If the input is a function that function is immediately returned.\nIf the input is a string the parser with that name is returned. If no parser could be determined then\nfalse is returned.",
            "line": " lib/anim8js-parser.js:2"
        },
        {
            "message": "Missing item type\nInstantiates a new Parser.",
            "line": " lib/anim8js-parser.js:24"
        },
        {
            "message": "Missing item type\nParses the animation object (and optionally an option object) and pushes\nall generated attrimatorMap to the given array.",
            "line": " lib/anim8js-parser.js:35"
        },
        {
            "message": "Missing item type\nMerges the options with the given event instances. This is when an existing \nanimation is provided but the user wants to override the animation's options.\n\nBecause event properties can be specified in several places there's a priority\nto which one takes precedence. The properties specified in the animation object\nitself are highest priority, followed by the new options, then by the old\noptions, and finally by the existing property on the event instance.",
            "line": " lib/anim8js-parser.js:49"
        },
        {
            "message": "Missing item type\nInstantiates a new instance of Parser Helper.",
            "line": " lib/anim8js-parser.js:91"
        },
        {
            "message": "Missing item type\nIf an object with the given name doesn't exist on the input it's created.",
            "line": " lib/anim8js-parser.js:116"
        },
        {
            "message": "Missing item type\nParses an easing from the input.",
            "line": " lib/anim8js-parser.js:131"
        },
        {
            "message": "Missing item type\nParses repeats from the input.",
            "line": " lib/anim8js-parser.js:142"
        },
        {
            "message": "Missing item type\nParses delay from the input.",
            "line": " lib/anim8js-parser.js:153"
        },
        {
            "message": "Missing item type\nParses sleep from the input.",
            "line": " lib/anim8js-parser.js:164"
        },
        {
            "message": "Missing item type\nParses duration from the input.",
            "line": " lib/anim8js-parser.js:175"
        },
        {
            "message": "Missing item type\nParses scale from the input.",
            "line": " lib/anim8js-parser.js:186"
        },
        {
            "message": "Missing item type\nParses scale base from the input.",
            "line": " lib/anim8js-parser.js:197"
        },
        {
            "message": "Missing item type\nParses a value from the input given the attribute, option, and specific.",
            "line": " lib/anim8js-parser.js:208"
        },
        {
            "message": "Missing item type\nParses an event from the input given a path & parser for the event.",
            "line": " lib/anim8js-parser.js:221"
        },
        {
            "message": "Missing item type\nParses a number from the input given parse functions.",
            "line": " lib/anim8js-parser.js:244"
        },
        {
            "message": "Missing item type\nMerges easing based on the input, new options, and the current easing.",
            "line": " lib/anim8js-parser.js:268"
        },
        {
            "message": "Missing item type\nMerges repeats based on the input, new options, and the current repeat.",
            "line": " lib/anim8js-parser.js:280"
        },
        {
            "message": "Missing item type\nMerges delay based on the input, new options, and the current delay.",
            "line": " lib/anim8js-parser.js:292"
        },
        {
            "message": "Missing item type\nMerges sleep based on the input, new options, and the current sleep.",
            "line": " lib/anim8js-parser.js:304"
        },
        {
            "message": "Missing item type\nMerges duration based on the input, new options, and the current duration.",
            "line": " lib/anim8js-parser.js:316"
        },
        {
            "message": "Missing item type\nMerges scale based on the input, new options, and the current scale.",
            "line": " lib/anim8js-parser.js:328"
        },
        {
            "message": "Missing item type\nMerges scale base based on the input, new options, and the current scale \nbase.",
            "line": " lib/anim8js-parser.js:340"
        },
        {
            "message": "Missing item type\nReturns the first available option from input, new options, old options,\nand the current value.",
            "line": " lib/anim8js-parser.js:359"
        },
        {
            "message": "Missing item type\nMerges a number by returning the first occurrence from input, new options,\nold options, and the current value.",
            "line": " lib/anim8js-parser.js:375"
        },
        {
            "message": "Missing item type\nInstantiates a new PathCompiled.",
            "line": " lib/anim8js-path-compiled.js:2"
        },
        {
            "message": "Missing item type\nParses an object for a compiled path.",
            "line": " lib/anim8js-path-compiled.js:37"
        },
        {
            "message": "Missing item type\nInstantiates a new PathCubic.",
            "line": " lib/anim8js-path-cubic.js:2"
        },
        {
            "message": "Missing item type\nParses an object for a cubic path.",
            "line": " lib/anim8js-path-cubic.js:46"
        },
        {
            "message": "Missing item type\nInstantiates a new PathDelta.",
            "line": " lib/anim8js-path-delta.js:2"
        },
        {
            "message": "Missing item type\nParses an object for a delta path.",
            "line": " lib/anim8js-path-delta.js:38"
        },
        {
            "message": "Missing item type\nInstantiates a new PathJump.",
            "line": " lib/anim8js-path-jump.js:2"
        },
        {
            "message": "Missing item type\nParses an object for a jump path.",
            "line": " lib/anim8js-path-jump.js:29"
        },
        {
            "message": "Missing item type\nInstantiates a new PathKeyframe.",
            "line": " lib/anim8js-path-keyframe.js:2"
        },
        {
            "message": "Missing item type\nParses an object for a keyframe path.",
            "line": " lib/anim8js-path-keyframe.js:50"
        },
        {
            "message": "Missing item type\nInstantiates a new PathPoint.",
            "line": " lib/anim8js-path-point.js:2"
        },
        {
            "message": "Missing item type\nParses an object for a point path.",
            "line": " lib/anim8js-path-point.js:27"
        },
        {
            "message": "Missing item type\nInstantiates a new PathQuadratic.",
            "line": " lib/anim8js-path-quadratic.js:2"
        },
        {
            "message": "Missing item type\nParses an object for a quadratic path.",
            "line": " lib/anim8js-path-quadratic.js:43"
        },
        {
            "message": "Missing item type\nParses an object for a tween path.",
            "line": " lib/anim8js-path-tween.js:32"
        },
        {
            "message": "Missing item type\nParses a path given the input and returns an instance of anim8.Path or throws\nan error if the path could not be parsed. If the input is an object and has\na type property with a value that maps to a path type the path's parsing\nfunction is invoked with the object.",
            "line": " lib/anim8js-path.js:2"
        },
        {
            "message": "Missing item type\nAnimates a single attribute with a velocity and acceleration.",
            "line": " lib/anim8js-physics.js:2"
        },
        {
            "message": "Missing item type\nParses a value for the animator given a default value.",
            "line": " lib/anim8js-physics.js:29"
        },
        {
            "message": "Missing item type\nResolves the velocity to a value.",
            "line": " lib/anim8js-physics.js:49"
        },
        {
            "message": "Missing item type\nResolves the acceleration to a value.",
            "line": " lib/anim8js-physics.js:59"
        },
        {
            "message": "Missing item type\nThe maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\nto get to high the spring will overreact and produce undesirable results.",
            "line": " lib/anim8js-physics.js:159"
        },
        {
            "message": "Missing item type\nCreates a seqeuence for the given animators offseting animations be the given\ndelay and easing.",
            "line": " lib/anim8js-sequence.js:2"
        },
        {
            "message": "Missing item type\nReturns the maximum delay for delaying generated attrimators.",
            "line": " lib/anim8js-sequence.js:19"
        },
        {
            "message": "Missing item type\nCreates an AttrimatorMap with the given options for the animator at the \ngiven index.",
            "line": " lib/anim8js-sequence.js:29"
        },
        {
            "message": "Missing item type\nReverses the sequence by reversing the underlying array of animators.",
            "line": " lib/anim8js-sequence.js:55"
        },
        {
            "message": "Missing item type\nPlays the animation across the animators in this sequence.",
            "line": " lib/anim8js-sequence.js:67"
        },
        {
            "message": "Missing item type\nQueues the animation across the animators in this sequence.",
            "line": " lib/anim8js-sequence.js:101"
        },
        {
            "message": "Missing item type\nTransitions into the animation across the animators in this sequence.",
            "line": " lib/anim8js-sequence.js:150"
        },
        {
            "message": "Missing item type\nActivates all animators in this sequence and returns this.",
            "line": " lib/anim8js-sequence.js:187"
        },
        {
            "message": "Missing item type\nInstantiates a new SpringDistance.",
            "line": " lib/anim8js-spring-distance.js:2"
        },
        {
            "message": "Missing item type\nRegister the spring parser.",
            "line": " lib/anim8js-spring-distance.js:64"
        },
        {
            "message": "Missing item type\nInstantiates a new SpringLinear.",
            "line": " lib/anim8js-spring-linear.js:2"
        },
        {
            "message": "Missing item type\nRegister the spring parser.",
            "line": " lib/anim8js-spring-linear.js:71"
        },
        {
            "message": "Missing item type\nReturns a spring if the provided argument is a spring, the name of a spring, \nor an object with a spring type to be created. If none of these conditions \nare true then an error is thrown.",
            "line": " lib/anim8js-spring.js:1"
        },
        {
            "message": "Missing item type\nA spring has a resting point, a current position, and the velocity currently \nenacting on the position based on the implementing classes logic.",
            "line": " lib/anim8js-spring.js:28"
        },
        {
            "message": "Missing item type\nResets the spring's properties.",
            "line": " lib/anim8js-spring.js:39"
        },
        {
            "message": "Missing item type\nCalled the first time preupdate is called on an Animator to prepare the\nspring to be updated.",
            "line": " lib/anim8js-spring.js:62"
        },
        {
            "message": "Missing item type\nReturns whether this animator has computed values which need to be resolved\nby the subject animator calling prepare on this attribute animator.",
            "line": " lib/anim8js-spring.js:83"
        },
        {
            "message": "Missing item type\nParses a value with the calculator given a default value to fallback on.",
            "line": " lib/anim8js-spring.js:97"
        },
        {
            "message": "Missing item type\nResolves the rest to the expected format.",
            "line": " lib/anim8js-spring.js:117"
        },
        {
            "message": "Missing item type\nMethod that's invoked on each update.",
            "line": " lib/anim8js-spring.js:125"
        },
        {
            "message": "Missing item type\nThe maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\nto get to high the spring will overreact and produce undesirable results.",
            "line": " lib/anim8js-spring.js:176"
        },
        {
            "message": "Missing item type\nThe value used to determine whether two positions in a spring are different.",
            "line": " lib/anim8js-spring.js:182"
        },
        {
            "message": "Missing item type\nA factory for plain objects.",
            "line": " plugins/anim8js-easel.js:2"
        },
        {
            "message": "Missing item type\nRegisters the object factory.",
            "line": " plugins/anim8js-easel.js:67"
        },
        {
            "message": "Missing item type\n=============================================================================\nAttributes defined in EaselJS:\n=============================================================================\nDisplayObject:\n   alpha, regX, regY, rotation, scaleX, scaleY, skewX, \n   skewY, x, y, \nBitmapText (DisplayObject):\n   lineHeight, letterSpacing, spaceWidth\nBlurFilter:\n   blurX, blurY, quality\nColorFilter:\n   redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier,\n   redOffset, greenOffset, blueOffset, alphaOffset    \nGraphics.Arc:\n   x, y, radius, startAngle, endAngle\nGraphics.BezierCurveTo:\n   cp1x, cp1y, cp2x, cp2y, x, y\nGraphics.Circle:\n   x, y, radius\nGraphics.Ellipse:\n   x, y, w, h\nGraphics.Fill:\n   style (color)\nGraphics.LineTo:\n   x, y\nGraphics.MoveTo:\n   x, y\nGraphics.PolyStar:\n   x, y, radius, sides, pointSize, angle\nGraphics.QuadraticCurveTo:\n   cpx, cpy, x, y\nGraphics.Rect:\n   x, y, w, h\nGraphics.RoundRect:\n   x, y, w, h, radiusTL, radiusTR, radiusBR, radiusBL\nGraphics.Stroke:\n   style (color)\nGraphics.StrokeStyle:\n   width, miterLimit\nPoint:\n   x, y\nRectangle:\n   x, y, width, height\nShadow:\n   color, offsetX, offsetY, blur\nSprite:\n   currentAnimationFrame, framerate\nSpriteSheet:\n   framerate\nText:\n   color",
            "line": " plugins/anim8js-easel.js:119"
        },
        {
            "message": "Missing item type\n=============================================================================\nDynamic Attributes defined in anim8js\n=============================================================================\nnumber: cornerRadius, ColorMatrix{brightness, contrast, saturation, hue}\n2d: reg, position, offset, cp, cp1, cp2, filterBlur, size, scale, skew\nrgba: filterMultiplier, filterOffset",
            "line": " plugins/anim8js-easel.js:173"
        },
        {
            "message": "Missing item type\nA factory for jQuery objects.",
            "line": " plugins/anim8js-jquery.js:1"
        },
        {
            "message": "Missing item type\nDetermines whether the given subject is valid for this factory to create Animators for.",
            "line": " plugins/anim8js-jquery.js:12"
        },
        {
            "message": "Missing item type\nReturns an animator given a subject.",
            "line": " plugins/anim8js-jquery.js:23"
        },
        {
            "message": "Missing item type\nExplodes the given subject to an array of Animators and adds them to the given array.",
            "line": " plugins/anim8js-jquery.js:34"
        },
        {
            "message": "Missing item type\nRegisters the jQuery factory.",
            "line": " plugins/anim8js-jquery.js:56"
        },
        {
            "message": "Missing item type\nAdds useful anim8js functions to jQuery.",
            "line": " plugins/anim8js-jquery.js:61"
        },
        {
            "message": "Missing item type\nExtend the clone function to remove the attribute which stores the animator ID so clones get new animators.",
            "line": " plugins/anim8js-jquery.js:72"
        },
        {
            "message": "Missing item type\nAdds the m8, anim8, and animator functions to jQuery. An instance of anim8.Animator will be returned.",
            "line": " plugins/anim8js-jquery.js:88"
        },
        {
            "message": "Missing item type\nAdds the m8s, anim8s, animators functions to jQuery. An instance of anim8.Animators will be returned.",
            "line": " plugins/anim8js-jquery.js:98"
        },
        {
            "message": "Missing item type\nPlays the animation specified in the given data attribute.\n\nThe returned jQuery object is reduced to the elements that had a valid animation attribute.",
            "line": " plugins/anim8js-jquery.js:108"
        },
        {
            "message": "Missing item type\nQueues the animation specified in the given data attribute.\n\nThe returned jQuery object is reduced to the elements that had a valid animation attribute.",
            "line": " plugins/anim8js-jquery.js:143"
        },
        {
            "message": "Missing item type\nTransitions into the animation specified in the given data attribute.\n\nThe returned jQuery object is reduced to the elements that had a valid animation attribute.",
            "line": " plugins/anim8js-jquery.js:177"
        },
        {
            "message": "Missing item type\nWraps every character with a span and the class sequenced and returns a jquery\nelement containing all wrapped characters.",
            "line": " plugins/anim8js-jquery.js:213"
        },
        {
            "message": "Missing item type\nWraps every character in ever element in the jQuery object with a tag.\nIf an element already only has one character it remains untouched.",
            "line": " plugins/anim8js-jquery.js:229"
        },
        {
            "message": "Missing item type\nA factory for plain objects.",
            "line": " plugins/anim8js-pixi.js:2"
        },
        {
            "message": "Missing item type\nRegisters the object factory.",
            "line": " plugins/anim8js-pixi.js:67"
        },
        {
            "message": "Missing item type\n=============================================================================\nAttributes defined in Pixi.js:\n=============================================================================\nAbstractFilter: \n   padding\nAsciiFilter: \n   size\nDisplayObjectContainer: \n   alpha, height, pivot(2d), position(2d), rotation, scale(2d), width, x, y\nBlurFilter: \n   blur, blurX, blurY\nCircle: \n   radius\nColorStepFilter: \n   step\nDisplacementFilter: \n   offset(2d)\nDotScreenFilter: \n   angle\nGraphics: \n   blendMode, boundsPadding, fillAlpha, lineColor(rgba), lineWidth, tint(rgba)\nGrayFilter: \n   gray\nInvertFilter: \n   invert\nMatrix: \n   a, b, c, d, tx, ty\nNoiseFilter: \n   noise\nPixelateFilter: \n   size\nSepiaFilter: \n   sepia\nSmartBlurFilter: \n   blur\nSprite: \n   anchor(2d)\nText.style: \n   fill(rgba), stroke, strokeThickness, wordWrapWidth, dropShadowAngle, dropShadowDistance\nTilingSprite: \n   tilePosition, tileScale, tileScaleOffset\nTiltShiftFilter: \n   end, gradientBlur, start",
            "line": " plugins/anim8js-pixi.js:119"
        },
        {
            "message": "Missing item type\n=============================================================================\nDynamic Attributes defined in anim8js\n=============================================================================\nnumber: scaleX, scaleY, pivotX, pivotY, offsetX, offsetY, anchorX, anchorY\n2d: dimension\nrgba:",
            "line": " plugins/anim8js-pixi.js:165"
        }
    ]
}