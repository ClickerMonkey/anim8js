{"version":3,"sources":["anim8js-core.js","anim8js-easing.js","anim8js-path.js","anim8js-spring.js","anim8js-event.js","anim8js-animation.js","anim8js-animator.js","anim8js-color.js","anim8js-calculator.js","anim8js-parser-deltavalues.js","anim8js-parser-final.js","anim8js-parser-initial.js","anim8js-parser-keyframe.js","anim8js-object.js","anim8js-dom-core.js","anim8js-dom-property.js","anim8js-dom-attribute.js","anim8js-dom-animator.js"],"names":["m8","anim8","subjects","this","window","args","Array","prototype","slice","call","arguments","isArray","i","length","push","animators","arg","Animator","factory","factories","parseAnimators","noop","isDefined","x","isFunction","isNumber","isString","isObject","isElement","HTMLElement","nodeType","nodeName","now","Date","getTime","copy","p","clean","splice","prop","mapify","arr","value","map","coalesce","a","b","c","d","delegate","functionName","returning","RETURN_THIS","apply","RETURN_RESULTS","results","RETURN_FIRST","undefined","extend","target","eventize","object","onListeners","$this","property","events","callback","context","split","on","once","offListeners","listeners","event","eventListeners","k","off","$on","$once","triggerListeners","argument","clear","trigger","time","regex","conversions","s","sec","min","ms","hr","parsed","exec","parseFloat","unit","Math","floor","subject","factoryName","is","attribute","attr","defaultValue","easing","indexOf","pair","e","t","easingType","bezier","isEasingName","calculator","calc","parser","animation","options","Animation","parserName","defaults","duration","teasing","delay","sleep","repeat","each","iterator","filter","func","isAnimating","pause","transition","play","resume","stop","finish","queue","restore","eventsFor","set","get","spring","unspring","springsFor","running","animating","add","animator","active","requestAnimationFrame","run","preupdate","update","finished","cleanup","out","inout","pong","linear","quad","ease","i2","x2","eq1","eq2","cubic","quartic","quintic","back","x3","sine","sin","overshot","elastic","scale","wave","revisit","abs","lasso","cos","slowbounce","bounce","smallbounce","inv","tinybounce","hesitant","sqrt","sqrtf","log10","slingshot","circular","gentle","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","cssEase","cssEaseIn","cssEaseOut","cssEaseInOut","cssLinear","Path","reset","name","points","trues","hasTrue","compute","ps","reference","last","first","point","DeltaPath","deltas","delta","ds","end","d0","d1","pd","p0","p1","interpolate","PointPath","KeyframePath","easings","ea","CubicPath","p2","p3","d2","d3","i1","i3","adds","QuadraticPath","CompiledPath","path","pointCount","create","index","Tween","start","JumpPath","Spring","type","rest","position","parse","velocity","frame","dt","MAX_DT","starting","onUpdate","updated","isEqual","EPSILON","BoxSpring","constant","acceleration","sub","mul","box","LinearSpring","damping","stiffness","temp0","temp1","DistanceSpring","distance","temp","EventState","CREATED","DELAYED","ANIMATING","SLEEPING","PAUSED","FINISHED","Event","totalTime","newInstance","EventInstance","state","pauseTime","pauseState","elapsed","next","startup","catchup","progress","applyValue","newState","getPoint","getFuture","fdelta","getDelta","getStart","getEnd","baseValue","isDelayed","isSleeping","timeRemaining","timeRemainingInChain","isFinished","isPaused","hasStates","states","stateText","input","isSaved","mergeOptions","durations","delays","sleeps","repeats","newEvents","save","springs","attributes","wasFinished","placeSpring","placeEvent","trimEvents","createEvents","onAnimation","all","attrs","maxRemaining","max","transitionTime","transitionDelta","transitionEasing","e1","e2","transitionPath","transitionEvent","objectsFor","objects","objectCount","hasEvents","color","r","g","parsers","parseComponent","parseFunction","v","vparsed","isNaN","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","named","matches","parseInt","invalidColor","format","ca","cr","cg","cb","toString","methods","clone","amount","zero","distanceSq","amountScale","ab","isValid","isZero","epsilon","y","aliases","left","right","middle","center","top","bottom","_x","_y","dx","dy","z","dz","angle","da","dr","dg","db","number","values","deltaObject","calculators","initial","keyframe","kframes","sort","from","half","to","times","lastTime","maxTime","order","key","pathEasings","$animator","cached","style","hyphenize","str","replace","currentStyle","document","defaultView","getComputedStyle","getPropertyValue","prefix","createElement","prefixes","parseValue","defaultUnit","toPixels","baseUnit","defaultRate","body","div","appendChild","width","pixels","offsetWidth","removeChild","convert","getFontSize","notUnit","fontSize","getConverterScale","px","relativeTo","variables","parentWidth","parentNode","scrollWidth","parentHeight","scrollHeight","height","offsetHeight","parentFontSize","htmlFontSize","htmlElement","getElementsByTagName","pt","cm","mm","vw","deg","rad","PI","em","rem","given","converter","toUnit","fromUnit","converter1","converter2","dom","ids","has","getAttribute","animatorId","DomAnimator","setAttribute","id","nm","anim","converted","unset","factoryDerivable","deriver","factoryColor","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","outlineWidth","textIndent","borderSpacing","lineHeight","zIndex","backgroundColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","outlineColor","minWidth","maxWidth","minHeight","maxHeight","offsetTop","offsetLeft","visibility","backface","css","transformOrigin","keywords","setOriginAttribute","setOrigin","origin","originZ","valueOr","transform","translate","translate3d","scale3d","d4","rotate3d","translateX","translateY","translateZ","scaleX","scaleY","scaleZ","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY","desiredUnit","transforms","join","opacity","grayscale","sepia","saturate","hueRotate","invert","brightness","contrast","patterns","RegExp","filters","cx","cy","ccx","ccy","centerX","centerY","preset","units","rw","rh","orbit","DEGREE_TO_RADIAN","RADIAN_TO_DEGREE","ox","oy","orbitOffset","cunit","cox","coy","atan2","orbitX","orbitY","originUnit","originX","originY","outlineOffset","blur","saturation","properties","attributeToProperty","applyProperties","props","flash","other","subproperty"],"mappings":"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","file":"anim8js-dom.min.js","sourcesContent":["/*\n\nvar script = document.scripts[document.scripts.length - 1];\n\nvar m8prop = script.dataset['prop'] || '$';\nvar m8access = script.dataset['access'] || 'property';\nvar m8interval = script.dataset['interval'] || 10;\n\n */\n\nm8 = anim8 = function(subjects) \n{\n  if ( this === window ) \n  {\n\t\tvar args = Array.prototype.slice.call( arguments );\n\t\t\n\t\tif ( !anim8.isArray( subjects ) )\n\t\t{\n\t\t\tsubjects = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < args.length; i++)\n\t\t\t{\n\t\t\t\tsubjects.push( args[i] );\n\t\t\t}\n\t\t}\n\t\t\n    var animators = [];\n    \n    for (var i = 0; i < subjects.length; i++) \n    {\n      var arg = subjects[ i ];\n      \n      if ( arg instanceof anim8.Animator ) \n      {\n        animators.push( arg );\n      } \n      else\n      {\n\t\t\t\tvar factory = anim8.factories( arg );\n\t\t\t\t\n\t\t\t\tif (factory !== false)\n\t\t\t\t{\n          factory.parseAnimators( arg, animators );\n\t\t\t\t}\n      }\n    }\n\t\t\n\t\treturn new anim8( animators );\n  } \n  else \n  {\n    for (var i = 0; i < subjects.length; i++) \n    {\n      this.push( subjects[ i ] );\n    }\n  }\n};\n\n/*****************************************************************\n  UTILITY FUNCTIONS\n******************************************************************/\n\n\nanim8.noop = function() {};\n\nanim8.isDefined = function(x) \n{\n  return typeof x !== 'undefined';\n};\n\nanim8.isFunction = function(x) \n{\n  return typeof x === 'function';\n};\n\nanim8.isNumber = function(x) \n{\n  return typeof x === 'number';\n};\n\nanim8.isString = function(x) \n{\n  return typeof x === 'string';\n};\n\nanim8.isArray = function(x) \n{\n  return x instanceof Array;\n};\n\nanim8.isObject = function(x) \n{\n  return typeof x === 'object';\n};\n\nanim8.isElement = function(x)\n{\n  return typeof HTMLElement === \"object\" ? x instanceof HTMLElement :\n  x && typeof x === \"object\" && x !== null && x.nodeType === 1 && typeof x.nodeName === \"string\";\n};\n\nanim8.now = function() \n{\n  return new Date().getTime();\n};\n\nanim8.copy = function(x) \n{\n  if ( anim8.isArray(x) ) \n  {\n    var copy = [];\n    for (var i = 0; i < x.length; i++) \n    {\n      copy.push( anim8.copy( x[i] ) );\n    }\n    x = copy;\n  }\n  else if ( anim8.isObject(x) ) \n  {\n    var copy = {};\n    for (var p in x) \n    {\n      copy[p] = anim8.copy( x[p] );\n    }\n    x = copy;\n  }\n  \n  return x;\n};\n\nanim8.clean = function(x)\n{\n\tif ( anim8.isArray( x ) )\n\t{\n\t\tfor (var i = x.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif ( !x[i] )\n\t\t\t{\n\t\t\t\tx.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t}\n\telse if ( anim8.isObject( x ) )\n\t{\n\t\tfor (var prop in x)\n\t\t{\n\t\t\tif (!x[prop])\n\t\t\t{\n\t\t\t\tdelete x[prop];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn x;\n}\n\nanim8.mapify = function(arr, value)\n{\n\tvar map = {};\n\t\n\tfor (var i = 0; i < arr.length; i++)\n\t{\n\t\tmap[ arr[i] ] = value;\n\t}\n\t\n\treturn map;\n};\n\nanim8.coalesce = function(a, b, c, d) \n{\n  if (anim8.isDefined(a)) return a;\n  if (anim8.isDefined(b)) return b;\n  if (anim8.isDefined(c)) return c;\n  return d;\n};\n\nanim8.delegate = function(functionName, returning) \n{  \n  switch (returning)\n  {\n  case anim8.delegate.RETURN_THIS:\n    return function() \n    {\n      for (var i = 0; i < this.length; i++) \n      {\n        this[i][functionName].apply( this[i], arguments );\n      }\n      \n      return this;  \n    };\n    \n  case anim8.delegate.RETURN_RESULTS:\n    return function() \n    {\n      var results = [];\n    \n      for (var i = 0; i < this.length; i++) \n      {\n        results.push( this[i][functionName].apply( this[i], arguments ) );\n      }\n    \n      return results;\n    };\n    \n  case anim8.delegate.RETURN_FIRST:\n    return function()\n    {\n      return this.length === 0 ? undefined : this[0][functionName].apply( this[0], arguments );\n    };\n  }\n  \n  return anim8.noop;\n};\n\nanim8.delegate.RETURN_THIS = 'this';\nanim8.delegate.RETURN_RESULTS = 'results';\nanim8.delegate.RETURN_FIRST = 'first';\n\nanim8.extend = function(target)\n{\n\tfor (var i = 1; i < arguments.length; i++)\n\t{\n\t\tvar a = arguments[i];\n\t\t\n\t\tif ( anim8.isObject( a ) )\n\t\t{\n\t\t\tfor (var prop in a)\n\t\t\t{\n\t\t\t\tif (!(prop in target))\n\t\t\t\t{\n\t\t\t\t\ttarget[prop] = a[prop];\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t}\n\t\n\treturn target;\n};\n\nanim8.eventize = function(object)\n{\n  var onListeners = function($this, property, events, callback, context)\n  {\n    events = events.split(' ');\n    \n    if ( !anim8.isDefined( $this[ property ] ) )\n    {\n      $this[property] = {};\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      if ( !anim8.isDefined( $this[ property ][ events[i] ] ) )\n      {\n        $this[ property ][ events[i] ] = [];\n      }\n      \n      $this[ property ][ events[i] ].push( [ callback, context || this ] );\n    }\n  };\n  \n  object.on = function(events, callback, context)\n  {\n    onListeners( this, '$on', events, callback, context );\n  };\n  \n  object.once = function(events, callback, context)\n  {\n    onListeners( this, '$once', events, callback, context );\n  };\n  \n  var offListeners = function(listeners, event, callback)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var k = eventListeners.length - 1; k >= 0; k--)\n      {\n        if (eventListeners[ k ][0] === callback)\n        {\n          eventListeners.splice( k, 1 );\n        }\n      }  \n    }\n  };\n  \n  object.off = function(events, callback)\n  {\n    events = events.split(' ');\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      offListeners( this.$on, events[i] );\n      offListeners( this.$once, events[i] );\n    }\n  };\n  \n  var triggerListeners = function(listeners, event, argument, clear)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var i = 0; i < eventListeners.length; i++)\n      {\n        var callback = eventListeners[ i ];\n        \n        callback[0].call( callback[1], argument );\n      }\n      \n      if ( clear )\n      {\n        eventListeners.length = 0;\n      }\n    }\n  }\n  \n  object.trigger = function(event, argument)\n  {\n    triggerListeners( this.$on, event, argument, false );\n    triggerListeners( this.$once, event, argument, true );\n  };\n};\n\nanim8.time = (function()\n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(s|sec|min|ms|hr)?/;\n  \n  var conversions = {\n    s:    1000,\n    sec:  1000,\n    min:  1000 * 60,\n    ms:   1,\n    hr:   1000 * 60 * 60\n  };\n  \n  return function(time) \n  {  \n    if ( anim8.isNumber( time ) )\n    {\n      return time;\n    }\n    if ( anim8.isString( time ) )\n    {\n      var parsed = regex.exec( time );\n      \n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n        \n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n        \n        return Math.floor(time);\n      }\n    }\n    \n    return false;\n  };\n  \n})();\n\n\n/*****************************************************************\n  REGISTRIES\n******************************************************************/\n\n// FACTORY      {is(o), parseAnimators(o, out)}\nanim8.factories = function(subject) \n{\n\tfor (var factoryName in anim8.factories) \n\t{\n\t\tvar factory = anim8.factories[ factoryName ];\n\t\t\t\n\t\tif ( factory.is( subject ) )\n\t\t{\t\t\t\n\t\t\treturn factory;\n\t\t}\n\t}\n\t\n\tthrow 'No factory exists for subject ' + subject;\n};\n\n/* Attributes are the animatable properties of a subject\n\n  anim8.attribute[name] = {\n    // the default value for an attribute if none exists on the subject\n    defaultValue: 0,\n    // the name of the property this attribute maps to. default value: name of the attribute\n    property: propertyName,\n    // the name of the calculator this attribute requires for mathematical operations. default value: anim8.calculator.default\n    calculator: calculatorName,\n    // the name of an applier that must be called each frame to calculate the value of a dynamic attribute\n    applier: applier,\n    // other values can be specified here that the respective factory might use\n    \"factory specific attributes\"\n  }\n*/\nanim8.attribute = function(attr) \n{\n  if ( anim8.isObject(attr) && anim8.isDefined(attr.defaultValue) ) \n\t{\n    return attr;\n  }\n  if ( anim8.isString(attr) && attr in anim8.attribute ) \n\t{\n    return anim8.attribute[ attr ];\n  }\n\t\n  return anim8.attribute.default;\n};\n\nanim8.attribute.default = {defaultValue: 0};\n \n/* Easings are functions that are magic\n\n  anim8.applier[name] = {\n    // array of properties required \n    properties: [],\n    // function to invoke each frame\n    apply: function(e, anim)\n  }\n*/\n\nanim8.easing = function(easing) \n{\n  if ( anim8.isFunction( easing ) ) \n\t{\n    return easing;\n  }\n\tif ( anim8.isString( easing ) )\n\t{\n\t\tif ( easing in anim8.easing )\n\t\t{\n\t\t\treturn anim8.easing[ easing ];\n\t\t}\n\t\tif ( easing.indexOf('-') !== -1 )\n\t\t{\n\t\t\tvar pair = easing.split('-');\n\t\t\tvar e = pair[0];\n\t\t\tvar t = pair[1];\n\t\t\t\n\t\t\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t\t\t{\t\t\t\t\n\t\t\t\treturn anim8.easingType[ t ]( anim8.easing[ e ] );\n\t\t\t}\n\t\t}\n\t}\n  if ( anim8.isArray( easing ) && easing.length === 4 ) \n\t{\n    return anim8.easing.bezier.apply( null, easing );\n  }\n  if ( !anim8.isDefined( easing ) ) \n\t{\n    return anim8.easing.default;\n  }\n\t\n  throw easing + ' is not a valid easing';\n};\n\nanim8.isEasingName = function(easing)\n{\n  if ( easing in anim8.easing )\n  {\n    return true;\n  }\n  \n\tvar pair = easing.split('-');\n\tvar e = pair[0];\n\tvar t = pair[1];\n\t\n\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t{\t\t\t\t\n    return true;\n\t}\n  \n  return false;\n};\n\n/*\n \n \n */\nanim8.easingType = function(easingType)\n{\n\tif ( anim8.isFunction( easingType ) )\n\t{\n\t\treturn easingType;\n\t}\n\tif ( anim8.isString( easingType ) && easingType in anim8.easingType )\n\t{\n\t\treturn anim8.easingType[ easingType ];\n\t}\n\t\n\tthrow easingType + ' is not a valid easing type';\n};\n\n\n/*\n \n \n */\nanim8.calculator = function(calc)\n{\n\tif ( anim8.isObject(calc) )\n\t{\n\t\treturn calc;\n\t}\n\tif ( anim8.isString( calc ) && calc in anim8.calculator )\n\t{\n\t\treturn anim8.calculator[ calc ];\n\t}\n\t\n\treturn anim8.calculator.default;\n\t// throw calc + ' is not a valid calculator';\n};\n\n\n/*\n \n \n */\nanim8.parser = function(parser)\n{\n\tif ( anim8.isFunction( parser ) )\n\t{\n\t\treturn parser;\n\t}\n\tif ( anim8.isString( parser ) && parser in anim8.parser )\n\t{\n\t\treturn anim8.parser[ parser ];\n\t}\n\t\n\treturn false;\n\t// throw parser + ' is not a valid parser';\n};\n\n\n/*\n \n \n */\nanim8.animation = function(animation, options)\n{\n  if ( animation instanceof anim8.Animation )\n  {\n    return animation;\n  }\n\tif ( anim8.isString( animation ) && animation in anim8.animation )\n\t{\n\t\treturn anim8.animation[ animation ];\n\t}\n\tif ( anim8.isObject( animation ) )\n\t{\n\t\tvar events = [];\n\t\t\n\t\toptions = options || {};\n\t\t\n\t\tfor (var parserName in animation)\n\t\t{\n\t\t\tvar parser = anim8.parser( parserName );\n\t\t\t\n\t\t\tif ( parser !== false )\n\t\t\t{\n\t\t\t\tparser( animation, options, events );\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (events.length)\n\t\t{\n\t\t\treturn new anim8.Animation( false, animation, options, events );\n\t\t}\n\t}\n\t\n\treturn false;\n\t// throw animation + ' is not a valid animation';\n};\n\n\n/*\n \n \n */\nanim8.defaults = \n{\n  duration: 1000,\n  easing: 'ease',\n  teasing: 'linear',\n  delay: 0,\n  sleep: 0,\n  repeat: 1\n};\n\n\n/*****************************************************************\n  ANIM8 DEFINITION\n******************************************************************/\n\nanim8.prototype = new Array();\n\nanim8.prototype.each = function(iterator) \n{\n  for (var i = 0; i < this.length; i++) \n  {\n    if ( iterator.call( this[i], this[i], i ) === false ) \n    {\n      break;\n    }\n  }\n\t\n\treturn this;\n};\n\nanim8.prototype.filter = function(func)\n{\n\tfor (var i = this.length - 1; i >= 0; i--)\n\t{\n\t\tif ( func(this[i]) )\n\t\t{\n\t\t\tthis.slice(i, 1);\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\nanim8.prototype.isAnimating = function() \n{\n  for (var i = 0; i < this.length; i++)\n  {\n    if ( this[i].isAnimating() )\n    {\n      return true;\n    }\n  }\n  \n  return false;\n};\n\nanim8.prototype.pause \t\t\t= anim8.delegate( 'pause', anim8.delegate.RETURN_THIS );\nanim8.prototype.transition \t= anim8.delegate( 'transition', anim8.delegate.RETURN_THIS );\nanim8.prototype.play \t\t\t\t= anim8.delegate( 'play', anim8.delegate.RETURN_THIS );\nanim8.prototype.resume \t\t\t= anim8.delegate( 'resume', anim8.delegate.RETURN_THIS );\nanim8.prototype.stop \t\t\t\t= anim8.delegate( 'stop', anim8.delegate.RETURN_THIS );\nanim8.prototype.finish \t\t\t= anim8.delegate( 'finish', anim8.delegate.RETURN_THIS );\nanim8.prototype.queue \t\t\t= anim8.delegate( 'queue', anim8.delegate.RETURN_THIS );\nanim8.prototype.restore\t\t\t= anim8.delegate( 'restore', anim8.delegate.RETURN_THIS );\nanim8.prototype.eventsFor   = anim8.delegate( 'eventsFor', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.set         = anim8.delegate( 'set', anim8.delegate.RETURN_THIS );\nanim8.prototype.get         = anim8.delegate( 'get', anim8.delegate.RETURN_FIRST );\nanim8.prototype.spring \t\t\t= anim8.delegate( 'spring', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.unspring \t\t= anim8.delegate( 'unspring', anim8.delegate.RETURN_THIS );\nanim8.prototype.springsFor \t= anim8.delegate( 'springsFor', anim8.delegate.RETURN_RESULTS );\n\nanim8.prototype.on\t\t\t    = anim8.delegate( 'on', anim8.delegate.RETURN_THIS );\nanim8.prototype.once\t\t    = anim8.delegate( 'once', anim8.delegate.RETURN_THIS );\nanim8.prototype.off\t\t\t    = anim8.delegate( 'off', anim8.delegate.RETURN_THIS );\nanim8.prototype.trigger     = anim8.delegate( 'trigger', anim8.delegate.RETURN_THIS );\n\n/*****************************************************************\n  ANIM8 ANIMATION LOOP\n******************************************************************/\n\nanim8.running = false;\nanim8.animating = anim8();\n\nanim8.add = function(animator)\n{\n  if ( !animator.active )\n  {\n    anim8.animating.push( animator );\n    \n    animator.active = true;\n  }\n  \n  if ( !anim8.running )\n  {\n    anim8.running = true;\n\t\t\n    requestAnimationFrame( anim8.run );\n  }\n}\n\nanim8.run = function() \n{\n  var now = anim8.now();\n  \n  // notify animators that we're about to update\n  anim8.animating.each(function(animator)\n  {\n    animator.preupdate();\n  });\n  \n  // update animating based on the current time\n  anim8.animating.each(function(animator)\n  {\n    animator.update( now );\n  });\n  \n  // apply the attributes calculated\n  anim8.animating.each(function(animator)\n  {\n    animator.apply();\n  });\n  \n  // if the animator is done remove it\n  anim8.animating.filter(function(animator)\n  {\n    if ( animator.finished )\n    {\n\t\t\tanimator.cleanup();\n      animator.active = false;\n    }\n    \n    return animator.finished;\n  });\n  \n  // if there are animators still remaining call me again!\n  if ( anim8.animating.length )\n  {\n    requestAnimationFrame( anim8.run );\n  } \n  else \n  {\n    anim8.running = false;\n  }\n};","anim8.easingType.in = function(easing) \n{\n\treturn function(x) {\n\t\treturn easing( x );\n\t};\n};\n\nanim8.easingType.out = function(easing) \n{\n\treturn function(x) {\n\t\treturn 1.0 - easing( 1.0 - x );\n\t};\n};\n\nanim8.easingType.inout = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x ) * 0.5;\n\t  } else {\n\t    return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n\t  }\n\t};\n};\n\nanim8.easingType.pong = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x );\n\t  } else {\n\t    return easing( 2.0 - 2.0 * x );\n\t  }\n\t};\n};\n\nanim8.easing.linear = function(x) \n{\n  return x;\n};\n\nanim8.easing.quad = function(x)\n{\n  return x * x;\n};\n\nanim8.easing.ease = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n  \n  return eq1 * i + eq2 * x;\n};\n\nanim8.easing.cubic = function(x) \n{\n  return x * x * x;\n};\n\nanim8.easing.quartic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\nanim8.easing.quintic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\nanim8.easing.back = function(x) \n{\n  var x2 = x * x;\n\tvar x3 = x2 * x;\n\treturn x3 + x2 - x;\n};\n\nanim8.easing.sine = function(x) \n{\n\treturn Math.sin( x * 1.57079632679 );\n};\n\nanim8.easing.overshot = function(x)\n{\n  return (1.0 - x * (7.0 / 10/0)) * x * (10.0 / 3.0);\n};\n\nanim8.easing.elastic = function(x) \n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n\tvar wave = -Math.sin(x * 10.9955742876);\n\treturn scale * wave;\n};\n\nanim8.easing.revisit = function(x) \n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\nanim8.easing.lasso = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x))\n};\n\nanim8.easing.slowbounce = function(x) \n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\nanim8.easing.bounce = function(x) \n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.smallbounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.tinybounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\nanim8.easing.hesitant = function(x) \n{\n\treturn (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\nanim8.easing.lasso = function(x)\n{\n  var x2 = x * x;\n\treturn (1.0 - Math.cos(x2 * x * 36.0) * (1.0 - x));\n};\n\nanim8.easing.sqrt = function(x)\n{\n  return Math.sqrt( x );\n};\n\nanim8.easing.sqrtf = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\nanim8.easing.log10 = function(x)\n{\n  return (Math.log10(x) + 2.0) * 0.5;\n};\n\nanim8.easing.slingshot = function(x)\n{\n  if (x < 0.7) {\n\t\treturn (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\nanim8.easing.circular = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\nanim8.easing.gentle = function(x)\n{\n  return  (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\n// https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\nanim8.easing.bezier = function(mX1, mY1, mX2, mY2) \n{\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope == 0.0) return aGuessT;\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n  \n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\nanim8.easing.cssEase      = anim8.easing.ease;\nanim8.easing.cssEaseIn    = anim8.easing.quad;\nanim8.easing.cssEaseOut   = anim8.easingType.out( anim8.easing.quad );\nanim8.easing.cssEaseInOut = anim8.easingType.inout( anim8.easing.quad );\nanim8.easing.cssLinear    = anim8.easing.linear;\n\nanim8.easing.default      = anim8.easing.ease;","anim8.Path = function()\n{\n};\n\nanim8.Path.prototype = \n{\n  reset: function(name, calculator, points)\n  {\n    this.name = name;\n    this.calculator = anim8.calculator( calculator );\n    this.points = points;\n    this.trues = this.hasTrue();\n  },\n  compute: function(out, delta) \n\t{\n    return out;\n  },\n  hasTrue: function() \n\t{\n    var ps = this.points;\n    \n    for (var i = 0; i < ps.length; i++) \n    {\n      if (ps[i] === true) \n      {\n        return true;\n      }\n    }\n    return false;\n  },\n  reference: function() \n\t{\n    return this.trues ? this.copy() : this;\n  },\n  last: function()\n  {\n    return this.points[ this.points.length - 1 ];\n  },\n  first: function()\n  {\n    return this.points[ 0 ];\n  },\n  point: function(i)\n  {\n    return this.points[ i ];\n  }\n};\n\n\n\n\n\nanim8.DeltaPath = function(name, calculator, points, deltas) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n};\n\nanim8.DeltaPath.prototype = new anim8.Path();\n\nanim8.DeltaPath.prototype.compute = function(out, delta) \n{\n  var ds = this.deltas;\n  var end = ds.length - 2;\n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.points[i];\n  var p1 = this.points[i + 1];\n  \n  return this.calculator.interpolate( out, p0, p1, pd );\n};\n  \nanim8.DeltaPath.prototype.copy = function() \n{\n    return new anim8.DeltaPath( this.name, anim8.copy(this.points), anim8.copy(this.deltas), this.calculator );\n};\n\n\n\n\n\nanim8.PointPath = function(name, calculator, point)\n{\n  this.reset( name, calculator, [point] );\n};\n\nanim8.PointPath.prototype = new anim8.Path();\n\nanim8.PointPath.prototype.compute = function(out, delta)\n{\n  return this.calculator.copy( out, this.points[0] );\n};\n  \nanim8.PointPath.prototype.copy = function() \n{\n    return new anim8.PointPath( this.name, this.calculator, this.points[0] );\n};\n\n\n\nanim8.KeyframePath = function(name, calculator, points, deltas, easings) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n  this.easings = easings;\n};\n\nanim8.KeyframePath.prototype = new anim8.Path();\n\nanim8.KeyframePath.prototype.compute = function(out, delta) \n{  \n  var ds = this.deltas;\n  var end = ds.length - 2;\n  \n  if ( delta < ds[0] ) {\n    return false;\n  }\n  \n  if ( delta > ds[ds.length - 1] ) {\n    return this.points[ds.length - 1];\n  }\n  \n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.points[i];\n  var p1 = this.points[i + 1];\n  var ea = this.easings[i];\n  \n  return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n};\n  \nanim8.KeyframePath.prototype.copy = function() \n{\n    return new anim8.KeyframePath( this.name, this.calculator, anim8.copy(this.points), anim8.copy(this.deltas), anim8.copy(this.easings) );\n};\n\n\n\n\n\nanim8.CubicPath = function(name, calculator, p0, p1, p2, p3)\n{\n  this.reset( name, calculator, [p0, p1, p2, p3] );\n};\n\nanim8.CubicPath.prototype = new anim8.Path();\n\nanim8.CubicPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var d3 = d1 * d2;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  var i3 = i1 * i2;\n  \n  out = calc.copy( out, this.points[0] );\n  out = calc.scale( out, i3 );\n  out = calc.adds( out, this.points[1], 3 * i2 * d1 );\n  out = calc.adds( out, this.points[2], 3 * i1 * d2 );\n  out = calc.adds( out, this.points[3], d3 );\n  \n  return out;\n};\n  \nanim8.CubicPath.prototype.copy = function() \n{\n    return new anim8.CubicPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n};\n\n\n\n\n\nanim8.QuadraticPath = function(name, calculator, p0, p1, p2)\n{\n  this.reset( name, calculator, [p0, p1, p2] );\n};\n\nanim8.QuadraticPath.prototype = new anim8.Path();\n\nanim8.QuadraticPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  \n  out = calc.copy( out, this.points[0] );\n  out = calc.scale( out, i2 );\n  out = calc.adds( out, this.points[1], 2 * i1 * d1 );\n  out = calc.adds( out, this.points[2], d2 );\n    \n  return out;\n};\n  \nanim8.QuadraticPath.prototype.copy = function() \n{\n    return new anim8.QuadraticPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n};\n\n\n\n\n\nanim8.CompiledPath = function(name, path, pointCount)\n{\n  var calc = path.calculator;\n  var points = [];\n  \n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n  \n  this.reset( name, calc, points );\n};\n\nanim8.CompiledPath.prototype = new anim8.Path();\n\nanim8.CompiledPath.prototype.compute = function(out, delta)\n{\n  var ps = this.points;\n  var a = Math.floor( delta * ps.length );\n  var index = Math.min( a, ps.length - 1 );\n  \n  return this.calculator.copy( out, ps[ index ] );\n};\n  \nanim8.CompiledPath.prototype.copy = function() \n{\n    return new anim8.CompiledPath( this.name, this, this.points.length );\n};\n\n\n\n\n\nanim8.Tween = function(name, calculator, start, end)\n{\n  this.reset( name, calculator, [start, end] );\n};\n\nanim8.Tween.prototype = new anim8.Path();\n\nanim8.Tween.prototype.compute = function(out, delta)\n{\n  return this.calculator.interpolate( out, this.points[0], this.points[1], delta );\n};\n  \nanim8.Tween.prototype.copy = function() \n{\n    return new anim8.Tween( this.name, this.calculator, this.points[0], this.points[1] );\n};\n\n\n\n\n\nanim8.JumpPath = function(name, calculator, points)\n{\n  this.reset( name, calculator, points );\n};\n\nanim8.JumpPath.prototype = new anim8.Path();\n\nanim8.JumpPath.prototype.compute = function(out, delta)\n{\n  var ps = this.points;\n  var a = Math.floor( delta * ps.length );\n  var index = Math.min( a, ps.length - 1 );\n  \n  return this.calculator.copy( out, ps[ index ] );\n};\n  \nanim8.JumpPath.prototype.copy = function() \n{\n    return new anim8.JumpPath( this.name, this.calculator, anim8.copy(this.points) );\n};","/**\n * Returns a spring if the provided argument is a spring, the name of a spring, or\n * an object with a spring type to be created. If none of these conditions are true\n * then false is returned.\n */\nanim8.spring = function(spring)\n{\n  if ( spring instanceof anim8.Spring )\n  {\n    return spring;\n  }\n  if ( anim8.isString( spring ) && spring in anim8.spring )\n  {\n    return anim8.spring[ spring ];\n  }\n  if ( anim8.isObject( spring ) && spring.type in anim8.spring )\n  {\n    return anim8.spring[ spring.type ]( spring );\n  }\n  \n  return false;\n};\n\n\n/**\n * A spring has a resting point, a current position, and the velocity currently enacting on the position\n * based on the implementing classes logic.\n */\nanim8.Spring = function()\n{\n};\n\nanim8.Spring.prototype = \n{\n  /**\n   * Resets the spring's properties.\n   */\n  reset: function(attribute, calculator, rest, position)\n  {\n    var a = anim8.attribute( attribute );\n    \n    this.attribute    = attribute;\n    this.calculator   = anim8.calculator( calculator );\n    this.rest         = this.calculator.parse( rest, a.defaultValue );\n    this.position     = this.calculator.parse( position, a.defaultValue );\n    this.velocity     = this.calculator.create();\n    this.time         = 0;\n  },\n  /**\n   * Updates the spring given the current time in milliseconds and the frame which\n   * contains (or will contain) the attribute to which this spring is animating.\n   */\n  update: function(now, frame)\n  {\n    if (this.time === 0)\n    {\n      this.time = now;\n    }\n    \n    // the number of elapsed seconds (maxed to avoid crazy behavior with low FPS)\n    var dt = Math.min( (now - this.time) * 0.001, anim8.Spring.MAX_DT );\n    \n    // keep track of the starting position to determine whether the position has updated.\n    var starting = this.calculator.copy( {}, this.position );\n    \n    // call the update method which should update the position\n    this.onUpdate( dt );\n    \n    this.time = now;\n    \n    // track whether the attribute has updated so the animator knows if it needs to apply the attribute to the subject.\n    var updated = !this.calculator.isEqual( starting, this.position, anim8.Spring.EPSILON );\n    \n    if ( updated )\n    {\n      frame[ this.attribute ] = this.position;\n    }\n    \n    return updated;\n  },\n  onUpdate: function(dt)\n  {\n    // implemented in subclasses.\n  }\n};\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nanim8.Spring.MAX_DT = 0.1;\n\n/**\n * The value used to determine whether two positions in a spring are different.\n */\nanim8.Spring.EPSILON = 0.0001;\n\n\n\n\n/**\n * A box spring is a simple string\n */\nanim8.BoxSpring = function(attribute, calculator, position, rest, constant)\n{\n  var a = anim8.attribute( attribute );\n    \n  this.reset( attribute, calculator, rest, position );\n  \n  this.acceleration   = this.calculator.create();\n  this.constant       = this.calculator.parse( constant, a.defaultValue );\n};\n\nanim8.BoxSpring.prototype = new anim8.Spring();\n\nanim8.BoxSpring.prototype.onUpdate = function(dt)\n{\n  var calc = this.calculator;\n  \n  this.acceleration = calc.copy( this.acceleration, this.rest );\n  this.acceleration = calc.sub( this.acceleration, this.position );\n  this.acceleration = calc.mul( this.acceleration, this.constant );\n  this.position     = calc.adds( this.position, this.acceleration, dt );\n//  this.velocity     = calc.adds( this.velocity, this.acceleration, dt );\n};\n\nanim8.spring.box = function(spring)\n{ \n  return new anim8.BoxSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.constant\n  );\n};\n\n\n\n\nanim8.LinearSpring = function(attribute, calculator, position, rest, damping, stiffness)\n{\n  var a = anim8.attribute( attribute );\n  \n  this.reset( attribute, calculator, rest, position );\n  \n  this.damping      = this.calculator.parse( damping, a.defaultValue );\n  this.stiffness    = this.calculator.parse( stiffness, a.defaultValue );\n  this.temp0        = this.calculator.create();\n  this.temp1        = this.calculator.create();\n};\n\nanim8.LinearSpring.prototype = new anim8.Spring();\n\nanim8.LinearSpring.prototype.onUpdate = function(dt)\n{\n  // velocity += ((stiffness * (position - rest)) - (damping * velocity)) * elapsed.seconds;\n\t// position += velocity * elapsed.seconds;\n    \n  var calc = this.calculator;\n\n  this.temp1 = calc.copy( this.temp1, this.damping );\n  this.temp1 = calc.mul( this.temp1, this.velocity );\n  \n  this.temp0 = calc.copy( this.temp0, this.position );\n  this.temp0 = calc.sub( this.temp0, this.rest );\n  this.temp0 = calc.mul( this.temp0, this.stiffness );\n  this.temp0 = calc.sub( this.temp0, this.temp1 );\n  \n  this.velocity = calc.adds( this.velocity, this.temp0, dt );\n  this.position = calc.adds( this.position, this.velocity, dt );\n};\n\nanim8.spring.linear = function(spring)\n{ \n  return new anim8.LinearSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.damping,\n    spring.stiffness\n  );\n};\n\n\n\n\n\n\n\nanim8.DistanceSpring = function(attribute, calculator, position, rest, distance, damping, stiffness)\n{\n  this.reset( attribute, calculator, rest, position );\n  \n  this.distance   = distance;\n  this.damping    = damping;\n  this.stiffness  = stiffness;\n  this.temp       = this.calculator.create();\n};\n\nanim8.DistanceSpring.prototype = new anim8.Spring();\n\nanim8.DistanceSpring.prototype.onUpdate = function(dt)\n{\n  // d = DISTANCE( position, rest )\n  // velocity += ((position - rest) / d * stiffness * |distance - d| - (damping * velocity)) * elapsed.seconds;\n  // position += velocity * elapsed.seconds;\n\n  var calc = this.calculator;\n  var d = calc.distance( this.position, this.rest );\n  \n  this.temp = calc.copy( this.temp, this.position )\n  this.temp = calc.sub( this.temp, this.rest );\n  \n  if ( d !== 0 )\n  {\n  \tthis.temp = calc.scale( this.temp, 1.0 / d );\n  \tthis.temp = calc.scale( this.temp, (d - this.distance) * this.stiffness );\n  }\n\n  this.temp = calc.adds( this.temp, this.velocity, -this.damping );\n\n  this.velocity = calc.adds( this.velocity, this.temp, dt );\n  this.position = calc.adds( this.position, this.velocity, dt );\n};\n\nanim8.spring.distance = function(spring)\n{ \n  return new anim8.DistanceSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.distance,\n    spring.damping,\n    spring.stiffness\n  );\n};","\nanim8.EventState = \n{\n  CREATED: 0,\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  PAUSED: 8,\n  FINISHED: 16\n};\n\nanim8.Event = function(attribute, path, duration, easing, delay, sleep, repeat) \n{\n  this.attribute \t= attribute;\n  this.path \t\t\t= path;\n  this.easing \t\t= anim8.easing( easing );\n  this.delay \t\t\t= anim8.coalesce( delay, anim8.defaults.delay );\n  this.duration \t= anim8.coalesce( duration, anim8.defaults.duration );\n  this.sleep \t\t\t= anim8.coalesce( sleep, anim8.defaults.sleep );\n  this.repeat \t\t= anim8.coalesce( repeat, anim8.defaults.repeat );\n};\n\nanim8.Event.prototype = \n{\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  newInstance: function()\n  {\n    return new anim8.EventInstance( this );\n  }\n};\n\nanim8.EventInstance = function(event)\n{\n\tthis.event \t\t\t= event;\n\tthis.attribute \t= event.attribute;\n\tthis.path \t\t\t= event.path;\n\tthis.duration \t= event.duration;\n\tthis.easing \t\t= event.easing;\n\tthis.delay \t\t\t= event.delay;\n\tthis.sleep \t\t\t= event.sleep;\n\tthis.repeat \t\t= event.repeat;\n  this.state \t\t\t= anim8.EventState.CREATED;\n  this.time \t\t\t= 0;\n  this.pauseTime \t= 0;\n  this.pauseState = 0;\n\tthis.elapsed\t\t= 0;\n\tthis.next\t\t\t\t= null;\n};\n\nanim8.EventInstance.prototype = \n{\n  update: function(now, frame) \n\t{\n    var updated = false;\n    \n    this.startup( now );\n    \n    var elapsed = this.catchup( now );\n    \n    if (this.isAnimating()) \n\t\t{\t\t\t\n      var delta = elapsed / this.duration;\n      \n      if (delta >= 1 || this.duration === 0)\n\t\t\t{\n        if (--this.repeat === 0) \n\t\t\t\t{\n          this.finish(frame);\n\t\t\t\t\t\n          return true;\n        } \n\t\t\t\telse \n\t\t\t\t{\n          if (this.sleep)\n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.SLEEPING ); \n            delta = 1;\n            \n            this.trigger('sleeping', this);\n          } \n\t\t\t\t\telse \n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.ANIMATING );\n            delta -= 1;\n          }\n        }\n      }\n      \n      this.applyValue( frame, frame[this.attribute], delta );\n      updated = true;\n    }\n    \n    return updated;\n  },\n  progress: function(elapsed, time, newState) \n\t{\n    this.time += time;\n\t\tthis.elapsed += time;\n    this.state = newState;\n\t\t\n    return elapsed - time;\n  },\n  finish: function(frame) \n\t{\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = anim8.EventState.FINISHED;\n    \n    this.trigger('finish', this);\n  },\n  getPoint: function(delta)\n  {\n    return this.path.compute( this.path.calculator.create(), this.easing( delta ) );\n  },\n  getFuture: function(fdelta)\n  {\n    return this.getPoint( Math.min( 1.0, this.getDelta() + fdelta ) );\n  },\n  getDelta: function()\n  {\n    return this.isAnimating() ? Math.min( 1.0, (anim8.now() - this.time) / this.duration ) : 0.0;\n  },\n  getStart: function()\n  {\n    return this.getPoint( 0 );\n  },\n  getEnd: function() \n\t{\n    return this.getPoint( 1 );\n  },\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n        \n    if ( value !== false )\n    {\n      frame[this.attribute] = value;\n    }\n  },\n\tstartup: function(now)\n\t{\n    if (this.state === anim8.EventState.CREATED) \n\t\t{\n      this.time = now;\n\t\t\t\n      if (this.delay) \n\t\t\t{\n        this.state = anim8.EventState.DELAYED;\n        \n        this.trigger('delaying', this);\n      } \n\t\t\telse \n\t\t\t{\n        this.state = anim8.EventState.ANIMATING;\n      }\n    }\n\t},\n  catchup: function(now) \n\t{\n\t\tvar elapsed = now - this.time;\n\t\t\n    if (this.isDelayed()) \n\t\t{\n      if (elapsed > this.delay) \n\t\t\t{\n        this.trigger('delayed', this);\n        \n        elapsed = this.progress( elapsed, this.delay, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n    if (this.isSleeping()) \n\t\t{\n      if (elapsed > this.sleep)\n\t\t\t{\n        this.trigger('slept', this);\n        \n        elapsed = this.progress( elapsed, this.sleep, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n\t\t/*\n    TODO\n\t\tif (this.isAnimating())\n\t\t{\n\t\t\tvar total = (this.sleep + this.duration);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (this.sleep)\n\t\t\t{\n\t\t\t\tvar iterations = (this.sleep + this.duration);\n\t\t\t}\n\t\t}\n\t\t*/\n\t\t\n\t\treturn elapsed;\n  },\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  timeRemaining: function() \n\t{    \n\t\treturn this.totalTime() - this.elapsed;\n  },\n  timeRemainingInChain: function()\n  {\n    return this.timeRemaining() + (this.next ? this.next.timeRemainingInChain() : 0);\n  },\n  queue: function(e)\n  {\n    if ( this.next )\n    {\n      this.next.queue( e );\n    }\n    else\n    {\n      this.next = e;\n    }\n  },\n  pause: function() \n\t{\n    if (this.state !== anim8.EventState.PAUSED) \n\t\t{\n      this.pauseTime = anim8.now();\n      this.pauseState = this.state;\n      this.state = anim8.EventState.PAUSED; \n    }\n  },\n  resume: function() \n\t{\n    if (this.state === anim8.EventState.PAUSED) \n\t\t{\n      this.time += anim8.now() - this.pauseTime;\n      this.state = this.pauseState; \n    }\n  },\n  isAnimating: function() \n\t{\n    return (this.state === anim8.EventState.ANIMATING);\n  },\n  isFinished: function() \n\t{\n    return (this.state === anim8.EventState.FINISHED);\n  },\n  isDelayed: function() \n\t{\n    return (this.state === anim8.EventState.DELAYED);\n  },\n  isPaused: function() \n\t{\n    return (this.state === anim8.EventState.PAUSED);\n  },\n  isSleeping: function() \n\t{\n    return (this.state === anim8.EventState.SLEEPING);\n  },\n  hasStates: function(states) \n\t{\n    return (this.state & states) !== 0;\n  },\n  stateText: function() \n\t{\n    switch(this.state) \n    {\n      case anim8.EventState.CREATED:            return \"created\";\n      case anim8.EventState.DELAYED:            return \"delayed\";\n      case anim8.EventState.ANIMATING:          return \"animating\";\n      case anim8.EventState.SLEEPING:           return \"sleeping\";\n      case anim8.EventState.FINISHED:           return \"finished\";\n    }\n  },\n  hasTrue: function()\n  {\n    return this.path.trues;\n  }\n};\n\nanim8.eventize( anim8.EventInstance.prototype );","\nanim8.Animation = function(name, input, options, events)\n{\n\tthis.name = name;\n\tthis.input = input;\n\tthis.options = options;\n\tthis.events = events;\n};\n\nanim8.Animation.prototype = \n{\n  isSaved: function()\n  {\n    return (this.name !== false);\n  },\n  mergeOptions: function(options, events)\n  { \n    // TODO move to parsers\n    \n    var durations = this.input.durations || {};\n    var easings   = this.input.easings || {};\n    var delays    = this.input.delays || {};\n    var sleeps    = this.input.sleeps || {};\n    var repeats   = this.input.repeats || {};\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      e.easing   = anim8.easing( anim8.coalesce( easings[attr], options.easing, this.options.easing, e.easing ) );\n      e.duration = anim8.coalesce( durations[attr], options.duration, this.options.duration, e.duration );\n      e.delay    = anim8.coalesce( delays[attr], options.delay, this.options.delay, e.delay );\n      e.sleep    = anim8.coalesce( sleeps[attr], options.sleep, this.options.sleep, e.sleep );\n      e.repeat   = anim8.coalesce( repeats[attr], options.repeat, this.options.repeat, e.repeat );\n    }\n  },\n  newEvents: function()\n  {\n    var e = [];\n    \n    for (var i = 0; i < this.events.length; i++)\n    {\n      e.push( this.events[i].newInstance() );\n    }\n    \n    return e;\n  }\n};\n\nanim8.save = function(name, animation, options)\n{\n  var animation = anim8.animation( animation, options );\n  \n  animation.name = name;\n  \n\tanim8.animation[name] = animation;\n};","\n\nanim8.Animator = function(e) \n{\n\tthis.reset( e );\n};\n\nanim8.Animator.prototype = \n{\n\treset: function(e)\n\t{\n\t  this.e = e;\n\t  this.events = {};\n    this.springs = {};\n\t  this.options = {};\n\t  this.attributes = {};\n\t  this.frame = {};\n    this.updated = {};\n\t  this.finished = false;\n\t\tthis.factory = null;\n    this.active = false;\n\t},\n  restore: function()\n  {\n    \n  },\n  preupdate: function()\n  {\n    // \n  },\n  update: function(now) \n\t{  \n    this.wasFinished = this.finished;\n    \n    this.finished = true;\n\t\t\n    for (var attr in this.events)\n    {\n      var e = this.events[ attr ];\n      \n      this.updated[ attr ] = e.update( now, this.frame );\n      \n      this.finished = this.finished && e.isFinished();\n    }\n    \n    for (var attr in this.springs)\n    {\n      var s = this.springs[ attr ];\n      \n      this.updated[ attr ] = s.update( now, this.frame );\n      \n      this.finished = false;\n    }\n  },\n  placeSpring: function(s)\n  {\n    var attr = s.attribute;\n    \n    this.springs[ attr ] = s;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n  },\n  placeEvent: function(e)\n  {\n    var attr = e.attribute;\n    \n    this.events[ attr ] = e;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n  },\n  apply: function()\n\t{\n    for (var attr in this.frame)\n    {\n      if ( this.updated[attr] )\n      {\n        this.e[ attr ] = this.frame[ attr ]; \n      }\n    }\n    \n    this.trimEvents();\n  },\n  trimEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      var e = this.events[attr];\n      \n      if ( e.isFinished() )\n      {\n        if ( e.next )\n        {                    \n          this.placeEvent( e.next );\n          this.finished = false;\n        }\n        else\n        {\n          delete this.events[attr];\n        }\n      }\n    }\n    \n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n  },\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\tcleanup: function()\n\t{\n    // implemented by child classes\n    \n    this.trigger('cleanup', this);\n\t},\n  createEvents: function(animation, options)\n  {\n    options = options || {};\n    \n    var animation = anim8.animation( animation, options );\n  \n    if (animation === false)\n    {\n      return false;\n    }\n    \n    var events = animation.newEvents();\n    \n    if ( animation.isSaved() )\n    {\n      animation.mergeOptions( options, events );\n    }\n    \n    this.onAnimation( animation, options, events );\n    \n\t\tanim8.extend( this.options, options );\t  \n    \n    return events;\n  },\n  onAnimation: function(animation, options, events)\n  {\n    \n  },\n  spring: function(spring)\n  {\n    var spring = anim8.spring( spring );\n    \n    if ( spring === false )\n    {\n      return false;\n    }\n\n    this.placeSpring( spring );\n    \n    anim8.add( this );\n    \n    return spring;\n  },\n  unspring: function(attributes)\n  {\n    return this.springsFor( attributes, function(s)\n    {\n      delete this.springs[ s.attribute ];\n    });\n  },\n\tplay: function(animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    var attrs = {};\n    \n    for (var i = 0; i < events.length; i++)\n    { \n      this.placeEvent( events[i] );\n      \n      attrs[ events[i].attribute ] = true;\n    }\n    \n    if ( all )\n    {\n      for (var attr in this.events)\n      {\n        if ( !(attr in attrs) )\n        {\n          this.events[ attr ].finish( this.frame );\n        }\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\tqueue: function(animation, options)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n        \n    var maxRemaining = 0.0;\n    \n    for (var attr in this.events)\n    {\n      maxRemaining = Math.max( maxRemaining, this.events[attr].timeRemainingInChain() );\n    }\n        \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      if ( attr in this.events )\n      {    \n        e.delay += (maxRemaining - this.events[attr].timeRemainingInChain());\n        \n        this.events[attr].queue( e );\n      }\n      else\n      {\n        e.delay += maxRemaining;\n        \n        this.placeEvent( e );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\ttransition: function(transitionTime, transitionDelta, transitionEasing, animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e1 = events[i];\n      var attr = e1.attribute;\n      \n      if ( attr in this.events )\n      {\n        var path = e1.path;\n        var calc = path.calculator;\n        var e2 = this.events[attr];\n        \n        var p0 = calc.copy( calc.create(), this.frame[attr] );\n        var p1 = e2.getFuture( transitionDelta );\n        var p2 = e1.getPoint( 0 );\n        \n        var transitionPath = new anim8.QuadraticPath( attr, calc, p0, p1, p2 );\n        var transitionEvent = new anim8.Event( attr, transitionPath, transitionTime, transitionEasing, 0, 0, 1 ).newInstance();\n        \n        transitionEvent.next = e1;\n        \n        this.placeEvent( transitionEvent );\n      }\n      else\n      {\n        e1.delay += transitionTime;\n     \n        this.placeEvent( e1 );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n  objectsFor: function(attributes, callback, objects)\n  {\n\t\tif ( anim8.isString( attributes ) )\n\t\t{\n\t\t\tattributes = attributes.split( ' ' );\n\t\t}\n    \n    var objectCount = 0;\n    \n\t\tif ( anim8.isArray( attributes ) )\n\t\t{\n      for (var i = 0; i < attributes.length; i++)\n      {\n        var attr = attributes[i];\n        \n        if ( attr in objects )\n        {\n          callback.call( this, objects[attr] );\n        \n          objectCount++;\n        }\n      }\n\t\t}\n    else\n    {\n      for (var attr in objects)\n      {\n        callback.call( this, objects[attr] );\n        \n        objectCount++;\n      }\n    }\n    \n\t\treturn objectCount;\n  },\n\teventsFor: function(attributes, callback)\n\t{\n\t\treturn this.objectsFor( attributes, callback, this.events );\n\t},\n\tspringsFor: function(attributes, callback)\n\t{\n\t\treturn this.objectsFor( attributes, callback, this.springs );\n\t},\n\tstop: function(attributes)\n\t{\n\t\treturn this.eventsFor(attributes, function(event) \n\t\t{\n\t\t\twhile (event.next)\n\t\t\t{\n\t\t\t\tevent = event.next;\n\t\t\t}\n\t\t\t\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n\tfinish: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n\tpause: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.pause();\n\t\t});\n\t},\n\tresume: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.resume();\n\t\t});\n\t},\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n    }\n    \n    this.apply();\n  },\n  get: function(attributes)\n  {\n    var out = {};\n    \n    for (var attr in attributes)\n    {\n      out[ attr ] = this.frame[ attr ];\n    }\n    \n    return out;\n  },\n  hasEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      return true;\n    }\n    \n    return false;\n  },\n  isAnimating: function()\n  {\n    for (var attr in this.events)\n    {\n      if ( this.events[attr].isAnimating() )\n      {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n};\n\nanim8.eventize( anim8.Animator.prototype );","\nanim8.color = function(r, g, b, a) \n{\n  return {\n    r: anim8.coalesce( r, 255 ),\n    g: anim8.coalesce( g, 255 ),\n    b: anim8.coalesce( b, 255 ),\n    a: anim8.coalesce( a, 1.0 )\n  };\n};\n\nanim8.color.parsers = \n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, 'parseInt', 255),\n          g: this.parseComponent(input.g, 'parseInt', 255),\n          b: this.parseComponent(input.b, 'parseInt', 255),\n          a: this.parseComponent(input.a, 'parseFloat', 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = window[parseFunction](t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  }, \n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n// parses a color from \nanim8.color.parse = function(input)\n{\n  var cp = m8.color.parsers;\n  \n  for (var i = 0; i < this.parsers.length; i++)\n  {\n    var parsed = this.parsers[i].parse(input);\n    \n    if (parsed !== false) \n    {\n      return parsed;\n    }\n  }\n  \n  return this.invalidColor;\n};\n\n// formats a parsed color\nanim8.color.format = function(color)\n{\n  var ca = anim8.coalesce( color.a, 1.0 );\n  var cr = anim8.coalesce( color.r, 255 );\n  var cg = anim8.coalesce( color.g, 255 );\n  var cb = anim8.coalesce( color.b, 255 );\n  \n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n    \n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    \n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n// the color to return when input is invalid\nanim8.color.invalidColor = anim8.color.defaultValue =\n{\n  r: 255,\n  g: 255,\n  b: 255,\n  a: 1.0\n};","\t// parse(x, default)\n  // copy(out, copy)\n  //-clone(out)\n  // create()\n  // zero(out)\n  //-scale(out, scale)\n  //-add(out, amount)\n  // adds(out, amount, amountScale)\n  //-sub(out, amount)\n  // mul(out, scale)\n  //-interpolate(out, start, end, delta)\n  // distanceSq(a, b)\n  // isValid(a)\n  // isNaN(a)\n  // isZero(a, epsilon)\n  // isEqual(a, b, epsilon)\n\nanim8.calculator.create = function(name, methods)\n{\n\tanim8.calculator[name] = anim8.extend( methods, \n\t{\n\t  clone: function(out) \n\t\t{\n\t    return this.copy( this.create(), out );\n\t  },\n\t  scale: function(out, scale) \n\t\t{\n\t    return this.adds( out, out, scale - 1 );\n\t  },\n\t  add: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, 1 );\n\t  },\n\t  sub: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, -1 );\n\t  },\n\t  interpolate: function(out, start, end, delta) \n\t\t{\n\t    out = this.zero( out );\n\t    out = this.adds( out, start, 1 - delta );\n\t    out = this.adds( out, end, delta );\n\t    return out;\n\t  },\n\t\tdistance: function(a, b)\n\t\t{\n\t\t\treturn Math.sqrt( this.distanceSq( a, b ) );\n\t\t}\n\t});\n};\n\n/*********************************************************************\n * A calculator for number primitives.\n *********************************************************************/\nanim8.calculator.create('number', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn x;\n\t\t}\n\t\tif ( anim8.isString( x ) )\n\t\t{\n\t\t\tx = parseFloat( x );\n\t\t\t\n\t\t\tif (!isNaN(x))\n\t\t\t{\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn defaultValue;\n\t},\n  copy: function(out, copy) \n\t{\t\n    return copy;\n  },\n  create: function() \n\t{\n    return 0.0;\n  },\n  zero: function(out) \n\t{\n    return 0.0;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale) \n\t{\n    return out *= scale;\n  },\n  distanceSq: function(a, b) \n\t{\n    var ab = a - b;\n    return ab * ab;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'number';\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a - b) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with an x and y component (number)\n *********************************************************************/\nanim8.calculator.create('2d', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y )\n\t\t\t};\n\t\t}\n    if ( anim8.isString( x ) )\n    {\n      var aliases = {\n        'left':   0,\n        'right':  100,\n        'middle': 50,\n        'center': 50,\n        'top':    0,\n        'bottom': 100\n      };\n      \n      if ( x.indexOf(' ') === -1 )\n      {\n        var _x = parseFloat( x );\n        \n        if ( !isNaN(_x) || x in aliases )\n        {\n          return {\n            x: x in aliases ? aliases[x] : _x,\n            y: x in aliases ? aliases[x] : _x\n          };\n        }\n      }\n      else\n      {\n        var pair = x.split(' ');\n        var _x = parseFloat( pair[0] );\n        var _y = parseFloat( pair[1] );\n        \n        if ((!isNaN(_x) || pair[0] in aliases) && (!isNaN(_y) || pair[1] in aliases))\n        {\n          return {\n            x: pair[0] in aliases ? aliases[pair[0]] : _x,\n            y: pair[1] in aliases ? aliases[pair[1]] : _y\n          };\n        }\n      }\n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;    \n    return dx * dx + dy * dy;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with an x, y, and z component (number)\n *********************************************************************/\nanim8.calculator.create('3d',\n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x,\n\t\t\t\tz: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\t\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z )\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out) \n\t{ \n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t  \t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t\t Math.abs(a.z - b.z) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with an x, y, and z component (number)\n *********************************************************************/\nanim8.calculator.create('quaternion', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: 1,\n\t\t\t\tangle: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z ),\n\t\t\t\tangle: anim8.coalesce( x.angle, defaultValue.angle )\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n\t\tout.angle = copy.angle;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n\t\tout.angle = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n\t\tout.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n\t\tout.angle *= scale.angle;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n\t\tvar da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t  \t\t Math.abs(a.y) < epsilon && \n\t\t       Math.abs(a.z) < epsilon && \n\t\t       Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t   Math.abs(a.z - b.z) < epsilon && \n\t\t       Math.abs(a.angle - b.angle) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n *********************************************************************/\nanim8.calculator.create('rgb', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: x,\n\t\t\t\tg: x,\n\t\t\t\tb: x\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( x );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with r, g, & b components \n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n *********************************************************************/\nanim8.calculator.create('rgba', \n{\n\tparse: function(a, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( a ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: a,\n\t\t\t\tg: a,\n\t\t\t\tb: a,\n\t\t\t\ta: 1.0\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( a );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    var da = a.a - b.a;    \n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon && \n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon && \n           Math.abs(a.a - b.a) < epsilon;\n  }\n});\n\nanim8.calculator.default = anim8.calculator.number;","anim8.parser.deltas = function( animation, options, events ) \n{\n\tvar deltas = animation.deltas;\n\tvar values = animation.values;\n\t\n\tif ( anim8.isArray( deltas ) )\n\t{\n\t\tvar deltaObject = {};\n\t\t\n\t\tfor (var attr in values)\n\t\t{\n\t\t\tdeltaObject[attr] = deltas;\t\n\t\t}\n\t\t\n\t\tdeltas = deltaObject;\n\t}\n\t\n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculators[attr] = anim8.calculator.default;\n\t\t\tdefaults[attr] = calculators[attr].create();\n    }\n\t\t\n\t\tfor (var k = 0; k < value.length; k++)\n\t\t{\n      if ( value[k] !== true )\n      {\n  \t\t\tvalue[k] = calculators[attr].parse( value[k], defaults[attr] ); \n      }\n\t\t}\n\t\t\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var easing   = anim8.coalesce( easings[attr], options.easing, anim8.defaults.easing );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.DeltaPath( attr, calculators[attr], values[attr], deltas[attr] );\n    var event    = new anim8.Event( attr, path, duration, anim8.easing( easing ), delay, sleep, repeat );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.final = function( animation, options, events ) \n{\n\tvar values = animation.final;\n\t\n  var delays = animation.delays || {};\n  var durations = animation.durations || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n\n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay + duration, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.initial = function( animation, options, events ) \n{\n\tvar values = animation.initial;\n\t\n  var delays = animation.delays || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n    \n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.keyframe = function( animation, options, events ) \n{\n  var kframes = animation.keyframe;\n  \n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  \n  var teasing = anim8.easing( anim8.coalesce( options.teasing, anim8.defaults.teasing ) );\n  \n  var sort = false;\n  \n  var aliases = {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  };\n  \n  // split up comma delimited times\n  for (var time in kframes)\n  {\n    if ( time in aliases )\n    {\n      kframes[ aliases[time] ] = kframes[ time ];\n      \n      delete kframes[ time ];\n    }\n    else if ( time.indexOf(',') !== -1 )\n    {\n      var times = time.split(',');\n      \n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i]] = kframes[time];\n      }\n      \n      delete kframes[time];\n      \n      sort = true;\n    }\n  }\n  \n  var times = [];\n  \n  // validate times\n  var lastTime = 0.0;\n  var maxTime = 0.0;\n  \n  for (var time in kframes)\n  {\n    var t = parseFloat(time);\n    \n    if (isNaN(t))\n    {\n      delete kframes[time];\n    }\n    else\n    {\n      if (t < lastTime)\n      {\n        sort = true;\n      }\n      \n      times.push({\n        order: t,\n        key: time,\n        value: kframes[time]\n      });\n      \n      lastTime = t;\n      \n      maxTime = Math.max( maxTime, t );\n    }\n  }\n  \n  // sort if necessary\n  if (sort)\n  {\n    times.sort(function(a, b) {\n      return a.order - b.order;\n    });\n    \n    kframes = {};\n    \n    for (var i = 0; i < times.length; i++)\n    {\n      kframes[times[i].key] = times[i].value;\n    }\n  }\n  \n  // split up into deltas and values\n  var deltas = {};\n  var values = {};\n  var calculators = {};\n\tvar defaults = {};\n  var pathEasings = {};\n  \n  for (var i = 0; i < times.length; i++)\n  {\n    var frame = times[i];\n    var easing = anim8.coalesce( frame.value.easing, options.easing );\n    \n    delete frame.value.easing;\n    \n    for (var attr in frame.value)\n    {\n      if ( !(attr in deltas) )\n      {\n        deltas[attr] = [];\n        values[attr] = [];\n        pathEasings[attr] = [];\n        \n        if (attr in anim8.attribute)\n        {\n          calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n        }\n        else\n        {\n          calculators[attr] = anim8.calculator.default;\n\t\t\t\t\tdefaults[attr] = calculators[attr].create();\n        }\n      }\n\t\t\t\n      deltas[attr].push( frame.order / maxTime );\n      values[attr].push( frame.value[attr] === true ? true : calculators[attr].parse( frame.value[attr], defaults[attr] ) );\n      pathEasings[attr].push( anim8.easing( anim8.coalesce( easings[attr], easing ) ) );\n    }\n  }\n\t\n  // create events & paths\n  for (var attr in deltas)\n  {\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.KeyframePath( attr, calculators[attr], values[attr], deltas[attr], pathEasings[attr] );\n    var event    = new anim8.Event( attr, path, duration, teasing, delay, sleep, repeat );\n    \n    events.push( event );\n  }\n};","\nanim8.factories.object = \n{\n  is: function(subject) \n\t{\n    return anim8.isObject( subject ) && !anim8.isElement( subject );\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n    var animator = from.$animator;\n    \n    if ( !animator )\n    {\n      animator = new anim8.Animator( from );\n      animator.factory = this;\n      \n      from.$animator = animator;\n    }\n    \n    animators.push( animator );\n  }\n};","\n/*\n  DOM create styles to apply, then apply them all at the same time\n  don't apply styles if they're impercivable (convert value to pixels of applicable)\n\n*/\n\n/* \n  anim8.property[name] = {\n    get: function(e, anim) {\n      // based on anim.animating, gets one or more value from the entity and places it on anim.frame. this function should only do this for an attribute if\n      // anim.animating[attribute] === false. When it successfully gets a value anim.animating[attribute] should be set to true. This is called before an animation\n      // begins on attributes that will be animated based on the current value. \n    },\n    set: function(e, anim) {\n      // applies the applicable attributes in anim.frame to the entity, \n    }\n }\n*/\nanim8.property = function(prop) \n{\n  if ( anim8.isObject( prop ) && anim8.isFunction( prop.get ) && anim8.isFunction( prop.set ) ) \n  {\n    return prop;\n  }\n  if ( anim8.isString( prop ) && prop in anim8.property )\n  {\n\t  return anim8.property[ prop ];\n  }\n\t\n  throw prop + ' is not a valid property';\n}\n\nanim8.property.cached = {};\n\n/**\n * Computes the desired style of the given element and returns it as a string. The style\n * given must be in hyphenated format like so: anim8.style( element, 'font-size' ) = '12px'\n */\nanim8.style = (function()\n{\n  var hyphenize = function(str) \n\t{\n    str = str.replace(/[a-z][A-Z]/g, function(str, letter)\n    {\n     return str[0] + '-' + str[1].toLowerCase();\n    });\n    \n    str = str.replace(/^Webkit/, '-webkit');\n    str = str.replace(/^Moz/, '-moz');\n    str = str.replace(/^Ms/, '-ms');\n    str = str.replace(/^O/, '-o');\n    str = str.replace(/^Khtml/, '-khtml');\n    \n    return str;\n  };\n  \n  var vendored = function(str)\n  {\n    return str.match( /^(Webkit)/ )\n  }\n\t\n\treturn function(e, style) \n\t{\n\t  if (e.currentStyle)\n\t\t{\n\t    return e.currentStyle[ style ];\n\t  } \n\t\telse if (document.defaultView && document.defaultView.getComputedStyle) \n\t\t{\n\t    return document.defaultView.getComputedStyle( e, null ).getPropertyValue( hyphenize( style ) );\n\t  } \n\t\telse \n\t\t{\n\t    return e.style[ style ]; \n\t  }\n\t};\n\t\n})();\n\n/**\n * Given an array of styles this will return the first one that is present on elements in the current browser.\n */\nanim8.prefix = (function() \n{\n  var a = document.createElement('a');\n  \n  return function(prefixes) \n  {\n    for (var i = 0; i < prefixes.length; i++) \n    {\n      if ( anim8.isDefined( a.style[ prefixes[ i ] ] ) ) \n      {\n        return prefixes[i];\n      }\n    }\n    return false;\n  };\n  \n})();\n\n/**\n * Parses a value and returns an object with value & unit properties. If the value is completely invalid\n * then false is returned.\n */\nanim8.parseValue = (function() \n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(px|em|%|vw|ex|cm|mm|in|pt|pc|deg|rad)?/;\n  \n  return function(value, defaultUnit) \n  {\n    if ( !anim8.isDefined( defaultUnit ) )\n    {\n      defaultUnit = 'px';\n    }\n    \n    if ( anim8.isNumber( value ) ) \n    {\n      return {\n        value: value,\n        unit: defaultUnit\n      };\n    }\n    else if ( anim8.isString( value ) && value ) \n    {\n      var parsed = regex.exec( value );\n      \n      if (parsed) \n      {      \n        return {\n          value: parseFloat( parsed[1] ),\n          unit: parsed[3] || defaultUnit\n        }\n      }\n    }\n    \n    return false;\n  };\n  \n})();\n\n/**\n * Calculators how many pixels a given value & unit is.\n * \n * For Example: anim8.toPixels( 100, 'in' ) \n *    returns how many pixels are in 1 inch, with up to 2 decimal points of accuracy.\n */\nanim8.toPixels = function(baseValue, baseUnit, defaultRate)\n{\n  if ( document.body )\n  {\n    var div = document.createElement('div');\n    document.body.appendChild( div );\n    div.style.width = baseValue + baseUnit;\n    var pixels = (div.offsetWidth / baseValue);\n    document.body.removeChild( div );\n    return pixels || defaultRate;\n  }\n  \n  return defaultRate;\n};\n\n/**\n * Converts one unit to another for a given element.\n *\n * For Example: anim8.convert( element, '100px', '%', 'parentWidth' )\n *    returns how much percent 100px relativeTo parentWidth of the given element\n */\nanim8.convert = (function()\n{  \n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(px|em|%|vw|ex|cm|mm|in|pt|pc|deg|rad)?/;\n\n  var getFontSize = function(e, notUnit)\n  {\n    var fontSize = anim8.style( e, 'fontSize' );\n    var parsed = anim8.parseValue( fontSize );\n    \n    if ( !parsed || parsed.unit === notUnit )\n    {\n      return 12;\n    }\n    \n    if ( parsed.unit === 'px' ) \n    {\n      return parsed.value;\n    }\n    \n    return getConverterScale( e, conversions[ parsed.unit ].px, relativeTo );\n  };\n\n  var variables = {};\n  \n  variables.parentWidth = function(e)\n  {\n    return e.parentNode.scrollWidth;\n  };\n  variables.parentHeight = function(e)\n  {\n    return e.parentNode.scrollHeight;\n  };\n  variables.width = function(e)\n  {\n    return e.offsetWidth;\n  };\n  variables.height = function(e)\n  {\n    return e.offsetHeight;\n  };\n  variables.fontSize = function(e)\n  {\n    return getFontSize( e, '%' );\n  };\n  variables.parentFontSize = function(e)\n  {\n    return getFontSize( e.parentNode, '%' );\n  };\n  variables.htmlFontSize = function(e)\n  {\n    var htmlElement = document.getElementsByTagName(\"html\")[0];\n    \n    return getFontSize( htmlElement, '%' );\n  };\n  \n  var conversions = {};\n  \n  conversions.pt  = { px: anim8.toPixels(100, 'pt') };\n  conversions.in  = { px: anim8.toPixels(100, 'in') };\n  conversions.cm  = { px: anim8.toPixels(1000, 'cm') };\n  conversions.mm  = { px: anim8.toPixels(100000, 'mm') };\n  conversions.vw  = { px: anim8.toPixels(1000, 'vw') };\n  conversions.deg = { rad: Math.PI / 180.0};\n\n  conversions.em = \n  {\n    px: function(e, relativeTo) \n    {\n      return getFontSize( e, 'em' );\n    }\n  };\n  \n  conversions.rem = \n  {\n    px: function(e, relativeTo) \n    {\n      var htmlElement = document.getElementsByTagName(\"html\")[0];\n      \n      return getFontSize( htmlElement, 'rem' );\n    }\n  };\n  \n  conversions['%'] = \n  {\n    px: function(e, relativeTo) \n    {\n      if ( anim8.isNumber( relativeTo ) )\n      {\n        return relativeTo;\n      }\n      if ( relativeTo in variables )\n      {\n        return variables[ relativeTo ]( e ) / 100.0;\n      }\n      \n      return 1.0;\n    }\n  };\n  \n  // Populate conversions going other way.\n  for (var unit in conversions)\n  {\n    for (var to in conversions[ unit ])\n    {\n      if ( !(to in conversions) )\n      {\n        conversions[ to ] = {};\n      }\n      \n      if ( !(unit in conversions[ to ]) )\n      {\n        var given = conversions[ unit ][ to ];\n        \n        if ( anim8.isNumber( given ) )\n        {\n          conversions[ to ][ unit ] = 1.0 / given;  \n        }\n        if ( anim8.isFunction( given ) )\n        {\n          conversions[ to ][ unit ] = (function(converter) \n          {\n            return function(e, relativeTo) \n            {\n              return 1.0 / converter( e, relativeTo );\n            };\n          })( given );\n        }\n      }\n    }\n  }\n  \n  // Given an element, convert, and relativeTo - return the number we need to multiply by.\n  var getConverterScale = function(e, converter, relativeTo)\n  {\n    if ( anim8.isNumber( converter ) )\n    {\n      return converter;\n    }\n    else if ( anim8.isFunction( converter ) )\n    {\n      return converter( e, relativeTo );\n    }\n    \n    return 1.0;\n  };\n  \n  return function(e, from, toUnit, relativeTo)\n  {\n    if ( anim8.isNumber( from ) )\n    {\n      return from;\n    }\n    \n    var parsed = regex.exec( from );\n    \n    if ( !parsed )\n    {\n      return false;\n    }\n    \n    var value = parseFloat( parsed[1] );\n    var fromUnit = parsed[3];\n    \n    if ( !fromUnit || fromUnit === toUnit )\n    {\n      return value;\n    }\n    \n    // First see if we have a direct conversion available...\n    if ( fromUnit in conversions && toUnit in conversions[ fromUnit ] )\n    {\n      var converter = conversions[ fromUnit ][ toUnit ];\n      \n      value *= getConverterScale( e, converter, relativeTo );\n    }\n    // Otherwise convert it to px, then to the desired unit\n    else if ( fromUnit in conversions && conversions[ fromUnit ].px && toUnit in conversions.px )\n    {\n      var converter1 = conversions[ fromUnit ].px;\n      var converter2 = conversions.px[ toUnit ];\n      \n      value *= getConverterScale( e, converter1, relativeTo );\n      value *= getConverterScale( e, converter2, relativeTo );\n    }\n    \n    return value;\n  };\n  \n})();\n\n\nanim8.factories.dom = \n{\n\tids: 0,\n  \n\tcached: {},\n  \n  attribute: 'anim8',\n  \n  is: function(subject) \n\t{\n    return anim8.isElement( subject );\n  },\n  \n  has: function(from)\n  {\n    return from.getAttribute( this.attribute ) in this.cached;\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n\t\tvar animatorId = from.getAttribute( this.attribute );\n\t\t\n\t\tif (!(animatorId in this.cached)) \n\t\t{\n\t\t\tvar animator = new anim8.DomAnimator( from );\n\t\t\t\n\t\t\tfrom.setAttribute( this.attribute, animatorId = animator.id = ++this.ids );\n\t\t\t\n\t\t\tanimator.factory = this;\n\t\t\t\n\t\t\tthis.cached[animatorId] = animator;\n\t\t}\n\t\t\n\t\tanimators.push( this.cached[animatorId] );\n  },\n  \n\tcleanup: function(animator) \n\t{\n\t\tdelete this.cached[ animator.id ];\n\t}\n};","\nanim8.property.factory = function(nm, relativeTo) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var style = anim8.style( e, nm );\n        var converted = anim8.convert( e, style, anim.unit( nm ), relativeTo );\n        \n        if ( converted !== false ) \n        {\n          anim.frame[nm] = converted;\n          anim.animating[nm] = true;\n        }\n      }\n    },\n    set: function(e, anim) \n    { \n      e.style[nm] = anim.value( nm );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.factoryDerivable = function(nm, relativeTo, deriver) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var style = anim8.style( e, nm );\n        var converted = anim8.convert( e, style, anim.unit( nm ), relativeTo );\n        \n        if ( converted !== false ) \n        {\n          anim.frame[nm] = converted;\n          anim.animating[nm] = true;\n        }\n        else if ( anim8.isFunction( deriver ) )\n        {\n          converted = anim8.convert( e, deriver( e ), anim.unit( nm ), relativeTo );\n          \n          if ( converted !== false )\n          {\n            anim.frame[nm] = converted;\n            anim.animating[nm] = true;\n          }\n        }\n      }\n    },\n    set: function(e, anim) \n    { \n      e.style[nm] = anim.value( nm );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.factoryColor = function(nm) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var parsed = anim8.color.parse( e.style[nm] );\n        \n        if (parsed !== anim8.color.invalidColor) \n        {\n          anim.frame[nm] = parsed;\n          anim.animating[nm] = true;\n        }              \n      }\n    },\n    set: function(e, anim) \n    {\n      e.style[nm] = anim8.color.format( anim.frame[nm] );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.padding                  = anim8.property.factory( 'padding', 'parentWidth' );\nanim8.property.paddingTop               = anim8.property.factory( 'paddingTop', 'parentWidth' );\nanim8.property.paddingRight             = anim8.property.factory( 'paddingRight', 'parentWidth' );\nanim8.property.paddingBottom            = anim8.property.factory( 'paddingBottom', 'parentWidth' );\nanim8.property.paddingLeft              = anim8.property.factory( 'paddingLeft', 'parentWidth' );\n\nanim8.property.margin                   = anim8.property.factory( 'margin', 'parentWidth' );\nanim8.property.marginTop                = anim8.property.factory( 'marginTop', 'parentWidth' );\nanim8.property.marginRight              = anim8.property.factory( 'marginRight', 'parentWidth' );\nanim8.property.marginBottom             = anim8.property.factory( 'marginBottom', 'parentWidth' );\nanim8.property.marginLeft               = anim8.property.factory( 'marginLeft', 'parentWidth' );\n\nanim8.property.borderRadius             = anim8.property.factory( 'borderRadius', 'width' );\nanim8.property.borderTopLeftRadius      = anim8.property.factory( 'borderTopLeftRadius', 'width' );\nanim8.property.borderTopRightRadius     = anim8.property.factory( 'borderTopRightRadius', 'width' );\nanim8.property.borderBottomLeftRadius   = anim8.property.factory( 'borderBottomLeftRadius', 'width' );\nanim8.property.borderBottomRightRadius  = anim8.property.factory( 'borderBottomRightRadius', 'width' );\n\nanim8.property.borderWidth              = anim8.property.factory( 'borderWidth' );\nanim8.property.borderTopWidth           = anim8.property.factory( 'borderTopWidth' );\nanim8.property.borderRightWidth         = anim8.property.factory( 'borderRightWidth' );\nanim8.property.borderBottomWidth        = anim8.property.factory( 'borderBottomWidth' );\nanim8.property.borderLeftWidth          = anim8.property.factory( 'borderLeftWidth' );\n\nanim8.property.outlineWidth             = anim8.property.factory( 'outlineWidth' );\nanim8.property.textIndent               = anim8.property.factory( 'textIndent', 'parentWidth' );\nanim8.property.borderSpacing            = anim8.property.factory( 'borderSpacing' );\nanim8.property.fontSize                 = anim8.property.factory( 'fontSize', 'parentFontSize' );\nanim8.property.lineHeight               = anim8.property.factory( 'lineHeight', 'fontSize' );\nanim8.property.zIndex                   = anim8.property.factory( 'zIndex' );\n\nanim8.property.color                    = anim8.property.factoryColor( 'color' );\nanim8.property.backgroundColor          = anim8.property.factoryColor( 'backgroundColor' );\nanim8.property.borderTopColor           = anim8.property.factoryColor( 'borderTopColor' );\nanim8.property.borderRightColor         = anim8.property.factoryColor( 'borderRightColor' );\nanim8.property.borderBottomColor        = anim8.property.factoryColor( 'borderBottomColor' );\nanim8.property.borderLeftColor          = anim8.property.factoryColor( 'borderLeftColor' );\nanim8.property.outlineColor             = anim8.property.factoryColor( 'outlineColor' );\n\nanim8.property.minWidth                 = anim8.property.factory( 'minWidth', 'parentWidth' );\nanim8.property.maxWidth                 = anim8.property.factory( 'maxWidth', 'parentWidth' );\nanim8.property.minHeight                = anim8.property.factory( 'minHeight', 'parentHeight' );\nanim8.property.maxHeight                = anim8.property.factory( 'maxHeight', 'parentHeight' );\n\nanim8.property.width                    = anim8.property.factoryDerivable('width', 'parentWidth', function(e) { return e.offsetWidth + 'px'; });\nanim8.property.height                   = anim8.property.factoryDerivable('height', 'parentHeight', function(e) { return e.offsetHeight + 'px'; });\n\nanim8.property.top                      = anim8.property.factoryDerivable('top', 'parentHeight', function(e) { return e.offsetTop + 'px'; });\nanim8.property.right                    = anim8.property.factoryDerivable('right', 'parentWidth', function(e) { return (e.parentNode.scrollWidth - (e.offsetLeft + e.offsetWidth)) + 'px'; });\nanim8.property.bottom                   = anim8.property.factoryDerivable('bottom', 'parentHeight', function(e) { return (e.parentNode.scrollHeight - (e.offsetTop + e.offsetHeight)) + 'px'; });\nanim8.property.left                     = anim8.property.factoryDerivable('left', 'parentWidth', function(e) { return e.offsetLeft + 'px'; });\n\nanim8.property.visibility = \n{\n  get: function(e, anim) \n  {\n    if (anim.animating.visibility === false) \n    {\n      var style = anim8.style( e, 'visibility' );\n      anim.frame.visibility = style === 'hidden' ? 0.0 : 1.0;\n      anim.animating = true;\n    }\n  },\n  set: function(e, anim) \n  {\n    e.style.visibility = anim.frame.visibility < 0.5 ? 'hidden' : 'visible'\n  },\n  unset: function(e, anim)\n  {\n    e.style.visibility = null;\n  }\n}\n\nanim8.property.backface = (function()\n{\n  var css = anim8.prefix(['WebkitBackfaceVisibility', 'MozBackfaceVisibility', 'msBackfaceVisibility', 'BackfaceVisibility']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  return {\n    \n    get: function(e, anim)\n    {\n      if ( anim.animating.backface === false )\n      {\n        var style = anim8.style( e, css ); \n        \n        anim.frame.backface = (style === 'visible') ? 1.0 : 0.0;\n        anim.animating.backface = true;\n      }\n    },\n    set: function(e, anim)\n    {\n      e.style[css] = anim.frame.backface < 0.5 ? 'none' : 'visible';\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n    \n  };\n  \n})();\n\nanim8.property.transformOrigin = (function() \n{\n  var css = anim8.prefix(['WebkitTransformOrigin', 'MozTransformOrigin', 'OTransformOrigin', 'msTransformOrigin', 'transformOrigin']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  var keywords = \n  {\n    'left':   '0%',\n    'center': '50%',\n    'right':  '100%',\n    'top':    '0%',\n    'bottom': '100%'\n  };\n  \n  var setOriginAttribute = function(e, value, anim, attr, relativeTo ) \n  {\n    if (anim.animating[attr] === false) \n    {\n      if ( value in keywords )\n      {        \n        value = keywords[ value ];\n      }\n\n      var converted = anim8.convert( e, value, anim.unit( attr ), relativeTo );\n      \n      if ( converted !== false )\n      {\n        anim.frame[ attr ] = converted;\n        anim.animating[ attr ] = true;\n      }\n    }\n  };\n  \n  var setOrigin = function(e, split, anim) \n  {\n    if (anim.animating.origin === false) \n    {\n      if ((split.length === 1) || \n          (split.length === 2 && split[0] === split[1]) || \n          (split.length === 3 && split[0] === split[1] && split[1] === split[2])) \n      {     \n        setOriginAttribute( e, split[0], anim, 'origin', 'width' );\n      }            \n    }\n  };\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      var style = anim8.style( e, css );\n      \n      if (style) \n      {\n        var origin = style.toLowerCase();\n        var split = origin.split(' ');\n        \n        switch (split.length) \n        {\n        case 3:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[1], anim, 'originY', 'height' );\n          setOriginAttribute( e, split[2], anim, 'originZ' );\n          setOrigin( e, split, anim );\n          break;\n        case 2:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[1], anim, 'originY', 'height' );\n          setOrigin( e, split, anim );\n          break;\n        case 1:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[0], anim, 'originY', 'height' );\n          setOrigin( e, split, anim );\n          break;\n        }\n      }\n    },\n    set: function(e, anim) \n    {      \n      var style = null;\n      \n      if ( anim8.isDefined( anim.frame.originZ ) )\n      {\n        style = anim.valueOr( 'originX', 'origin', 'x' ) + ' ' + anim.valueOr( 'originY', 'origin', 'y' ) + ' ' + anim.valueOr( 'originZ', 'origin', 'z' );\n      } \n      else \n      {\n        style = anim.valueOr( 'originX', 'origin', 'x' ) + ' ' + anim.valueOr( 'originY', 'origin', 'y' );\n      }\n      \n      e.style[css] = style;      \n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n  };\n  \n})();\n\nanim8.property.transform = (function() \n{\n  var css = anim8.prefix(['WebkitTransform', 'MozTransform', 'OTransform', 'msTransform', 'transform']);\n   \n  if ( !css )\n  {\n    return false;\n  }\n\n  var d2 = { translate: true, scale: true };\n  var d3 = { translate3d: true, scale3d: true };\n  var d4 = { rotate3d: true };\n  var axis = ['X', 'Y', 'Z'];\n    \n  var regex = \n  {\n    translate: /translate\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    translate3d: /translate3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    translateX: /translateX\\(([^\\)]+)\\)/i,\n    translateY: /translateY\\(([^\\)]+)\\)/i,\n    translateZ: /translateZ\\(([^\\)]+)\\)/i,\n    scale: /scale\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    scale3d: /scale3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    scaleX: /scaleX\\(([^\\)]+)\\)/i,\n    scaleY: /scaleY\\(([^\\)]+)\\)/i,\n    scaleZ: /scaleZ\\(([^\\)]+)\\)/i,\n    rotate: /rotate\\(([^\\)]+)\\)/i,\n    rotate3d: /rotate3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    rotateX: /rotateX\\(([^\\)]+)\\)/i,\n    rotateY: /rotateY\\(([^\\)]+)\\)/i,\n    rotateZ: /rotateZ\\(([^\\)]+)\\)/i,\n    skew: /skew\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    skewX: /skewX\\(([^\\)]+)\\)/i,\n    skewY: /skewY\\(([^\\)]+)\\)/i\n  };\n  \n  var parse = function( e, value, anim, attr, relativeTo )\n  {\n    var desiredUnit = anim.unit( attr );\n    var converted = anim8.convert( e, value, desiredUnit, relativeTo );\n    \n    if ( converted !== false )\n    {\n      return converted;\n    }\n    \n    // TODO show convert this to desiredUnit, however defaultValue may be non-scalar.\n    return anim8.attribute( attr ).defaultValue;    \n  };\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      var style = anim8.style( e, css );\n      \n      for (var attr in anim.animating) \n      {\n        if ( anim.animating[ attr ] === false && attr in regex ) \n        {\n          var parsed = regex[ attr ].exec( style );\n          \n          if ( parsed ) \n          {\n            if ( attr in d4 ) \n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' ),\n                z: parse( e, parsed[3], anim, attr ),\n                angle: parse( e, parsed[4], anim, attr )\n              };\n            }\n            else if ( attr in d3 )\n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' ),\n                z: parse( e, parsed[3], anim, attr )\n              };\n            }\n            else if ( attr in d2 ) \n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' )\n              };\n            }\n            else \n            {\n              anim.frame[attr] = parse( e, parsed[1], anim, attr, 'width' );\n            }\n            \n            anim.animating[attr] = true;\n          }\n        }\n      }\n    },\n    set: function(e, anim) \n    {  \n      var transforms = [];\n      \n      for (var attr in regex) \n      {\n        if (attr in anim.frame) \n        {\n          if ( !anim.updated[attr] )\n          {\n            continue;\n          }\n          \n          var value = anim.frame[ attr ];\n          var unit = anim.unit( attr );\n          \n          if (attr in d4) \n          {\n            transforms.push( attr + '(' + value.x + ',' + value.y + ',' + value.z + ',' + value.angle + unit + ')' );\n          }\n          else if (attr in d3) \n          {\n            transforms.push( attr + '(' + value.x + unit + ',' + value.y + unit + ',' + value.z + unit + ')' );\n          }\n          else if (attr in d2) \n          {\n            transforms.push( attr + '(' + value.x + unit + ',' + value.y + unit + ')' );\n          }\n          else\n          {\n            transforms.push( attr + '(' + value + unit + ')' );\n          }\n        }\n      }\n\t\t\t\n      if (transforms.length) \n      {\n        e.style[css] = transforms.join(' ');\n      }\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n  };\n  \n})();\n\nanim8.property.opacity = (function() \n{\n  var css = anim8.prefix(['WebkitOpacity', 'MozOpacity', 'KhtmlOpacity', 'opacity']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating.opacity === false) \n      {\n        var style = anim8.style( e, css );\n        var opacity = parseFloat( style );\n        \n        if ( !isNaN(opacity) ) \n        {\n          anim.frame.opacity = opacity\n          anim.animating.opacity = true;\n        }\n      }\n    },\n    set: function(e, anim) \n    {\n      e.style[ css ] = anim.frame.opacity;\n    },\n    unset: function(e, anim)\n    {\n      e.style[ css ] = null;\n    }\n  };\n  \n})();\n\nanim8.property.filter = (function() \n{\n  var css = anim8.prefix(['WebkitFilter', 'MozFilter', 'OFilter', 'msFilter', 'filter']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n\tvar methods = \n  {\n\t\tgrayscale: \t'grayscale',\n\t\tsepia: \t\t\t'sepia',\n\t\tsaturate: \t'saturate',\n\t\thueRotate: \t'hue-rotate',\n\t\tinvert: \t\t'invert',\n\t\tbrightness: 'brightness',\n\t\tcontrast: \t'contrast'\n\t};\n\t\n\tvar patterns = {};\n\t\n\tfor (var attr in methods) \n  {\n\t\tpatterns[attr] = new RegExp( methods[attr] + '\\(([^\\)]+)\\)', 'i');\n\t}\n  \n\treturn {\n    \n\t\tget: function(e, anim) \n    {\n\t\t\tvar style = anim8.style( e, css );\n      \n\t\t\tfor (var attr in patterns) \n      {\n\t\t\t\tif ( anim.animating[attr] === false ) \n        {\n\t\t\t\t\tvar parsed = patterns[attr].exec( style );\n          \n\t\t\t\t\tif (parsed !== false) \n          {\n            var converted = anim8.convert( e, parsed[1], anim.unit( attr ) );\n            \n            if ( converted !== false )\n            {\n              anim.frame[ attr ] = converted;\n              anim.animating[ attr ] = true;\n            }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, \n\t\tset: function(e, anim) \n    {\n\t\t\tvar filters = [];\n      \n\t\t\tfor (var attr in methods) \n      {\n\t\t\t\tif ( attr in anim.frame ) \n        {\n          if ( anim.updated[attr] )\n          {\n            filters.push( methods[attr] + '(' + anim.value( attr ) + ')' );\n          }\n\t\t\t\t}\n\t\t\t}\n      \n\t\t\tif (filters.length) \n      {\n\t\t\t\te.style[ css ] = filters.join(' ');\n\t\t\t}\n\t\t},\n    unset: function(e, anim)\n    {\n      e.style[ css ] = null;\n    }\n\t};\n\t\n})();\n\nanim8.property.center = \n{\n  get: function(e, anim)\n  {\n    var cx = (e.offsetLeft + e.offsetWidth * 0.5) + 'px';\n    var cy = (e.offsetTop + e.offsetHeight * 0.5) + 'px';\n    \n    if ( anim.animating.center === false )\n    {\n      var desiredUnit = anim.unit( 'center' );\n      var ccx = anim8.convert( e, cx, desiredUnit, 'parentWidth' );\n      var ccy = anim8.convert( e, cy, desiredUnit, 'parentHeight' );\n      \n      if ( ccx !== false && ccy !== false )\n      {\n        anim.frame.center = {\n          x: ccx,\n          y: ccy\n        };\n        anim.animating.center = true;\n      }\n    }\n    if ( anim.animating.centerX === false )\n    {\n      var desiredUnit = anim.unit( 'centerX' );\n      var ccx = anim8.convert( e, cx, desiredUnit, 'parentWidth' );\n      \n      if ( ccx !== false )\n      {\n        anim.frame.centerX = ccx;\n        anim.animating.centerX = true;\n      }\n    }\n    if ( anim.animating.centerY === false )\n    {\n      var desiredUnit = anim.unit( 'centerY' );\n      var ccy = anim8.convert( e, cy, desiredUnit, 'parentHeight' );\n      \n      if ( ccy !== false )\n      {\n        anim.frame.centerY = ccy;\n        anim.animating.centerY = true;\n      }\n    }\n  },\n  preset: function(e, anim)\n  {\n    anim.cached.width  = anim8.convert( e, e.offsetWidth + 'px', anim.units.centerX || anim.units.center, 'x' );\n    anim.cached.height = anim8.convert( e, e.offsetHeight + 'px', anim.units.centerY || anim.units.center, 'y' );\n  },\n  set: function(e, anim)\n  {\n    var rw = anim.cached.width * 0.5;\n    var rh = anim.cached.height * 0.5;\n        \n    if ( anim.updated.center )\n    {      \n      e.style.left = (anim.frame.center.x - rw) + anim.unit( 'center' );\n      e.style.top = (anim.frame.center.y - rh) + anim.unit( 'center' );\n    }\n    if ( anim.updated.centerX )\n    {\n      e.style.left = (anim.frame.centerX - rw) + anim.unit( 'centerX' );\n    }\n    if ( anim.updated.centerY )\n    {\n      e.style.top = (anim.frame.centerY - rh) + anim.unit( 'centerY' );\n    }\n  }\n};\n\nanim8.property.orbit = \n{\n  DEGREE_TO_RADIAN: Math.PI / 180.0,\n  \n  RADIAN_TO_DEGREE: 180.0 / Math.PI,\n  \n  get: function(e, anim)\n  {\n    var ox = (e.parentNode.scrollWidth * 0.5);\n    var oy = (e.parentNode.scrollHeight * 0.5); \n    var cx = (e.offsetLeft + e.offsetWidth * 0.5);\n    var cy = (e.offsetTop + e.offsetHeight * 0.5);\n    var dx = cx - ox;\n    var dy = cy - oy;\n  \n    if ( anim.animating.orbitOffset === false )\n    {\n      var cunit = anim.unit( 'orbitOffset' );\n      var cox = anim8.convert( e, ox + 'px', cunit, 'parentWidth' );\n      var coy = anim8.convert( e, oy + 'px', cunit, 'parentHeight' );\n      \n      if ( cox !== false && coy !== false )\n      {\n        anim.frame.orbitOffset = {\n          x: cox,\n          y: coy\n        };\n        anim.animating.orbitOffset = false;\n      }\n    }\n    \n    if ( anim.animating.distance === false )\n    {\n      anim.frame.distance = Math.sqrt( dx * dx + dy * dy );\n      anim.animating.distance = true;\n    }\n    \n    if ( anim.animating.angle === false )\n    {\n      anim.frame.angle = Math.atan2( dy, dx ) * this.RADIAN_TO_DEGREE;\n      anim.animating.angle = true;\n    }\n  },\n  \n  preset: function(e, anim)\n  {  \n    anim.cached.parentWidth = e.parentNode.scrollWidth;\n    anim.cached.parentHeight = e.parentNode.scrollHeight;\n    anim.cached.width = e.offsetWidth;\n    anim.cached.height = e.offsetHeight;\n  },\n  \n  set: function(e, anim)\n  {\n    // TODO calculator this correctly\n    var cunit = anim.unit( 'orbitOffset' ) || '%';\n    var orbitX = anim.frame.orbitOffset ? anim.frame.orbitOffset.x : 50;\n    var orbitY = anim.frame.orbitOffset ? anim.frame.orbitOffset.y : 50;\n    \n    var originUnit = anim.unit( 'origin' ) || '%';\n    var originX = anim.frame.origin ? anim.frame.origin.x : 50;\n    var originY = anim.frame.origin ? anim.frame.origin.y : 50;\n    \n    var cox = anim8.convert( e, orbitX + cunit, 'px', anim.cached.parentWidth / 100.0 );\n    var coy = anim8.convert( e, orbitY + cunit, 'px', anim.cached.parentHeight / 100.0 );\n    \n    var ox = anim8.convert( e, originX + originUnit, 'px', anim.cached.width / 100.0 );\n    var oy = anim8.convert( e, originY + originUnit, 'px', anim.cached.height / 100.0 );\n    \n    var angle = (anim.frame.angle || 0.0) * this.DEGREE_TO_RADIAN;\n    var distance = anim.frame.distance || 0.0;\n        \n    var cos = Math.cos( angle ) * distance;\n    var sin = Math.sin( angle ) * distance;\n    \n    e.style.left = (cox + cos - ox) + 'px';\n    e.style.top = (coy + sin - oy) + 'px';\n  }\n};","anim8.attribute.padding                 = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingTop              = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingRight            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingBottom           = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingLeft             = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.margin                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginTop               = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginRight             = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginBottom            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginLeft              = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.borderRadius            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopLeftRadius     = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopRightRadius    = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomLeftRadius  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomRightRadius = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.borderWidth             = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopWidth          = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderRightWidth        = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomWidth       = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderLeftWidth         = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.outlineWidth\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.outlineOffset\t\t\t\t\t\t= {defaultValue: 0};\nanim8.attribute.textIndent\t\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderSpacing\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.fontSize\t\t\t\t\t\t\t\t= {defaultValue: 1, defaultUnit: 'em'};\nanim8.attribute.lineHeight\t\t\t\t\t\t\t= {defaultValue: 1, defaultUnit: 'em'};\n\nanim8.attribute.origin                  = {defaultValue: {x:50, y:50}, defaultUnit: '%', property: 'transformOrigin', calculator: '2d'};\nanim8.attribute.originX                 = {defaultValue: 50, defaultUnit: '%', property: 'transformOrigin'};\nanim8.attribute.originY                 = {defaultValue: 50, defaultUnit: '%', property: 'transformOrigin'};\n\nanim8.attribute.opacity                 = {defaultValue: 1};\nanim8.attribute.zIndex                  = {defaultValue: 1};\n\nanim8.attribute.width                   = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.minWidth                = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.maxWidth                = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.height                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.minHeight               = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.maxHeight               = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.angle                   = {defaultValue: 0, property: 'orbit'};\nanim8.attribute.distance                = {defaultValue: 0, property: 'orbit'};\nanim8.attribute.orbitOffset             = {defaultValue: {x:50, y:50}, defaultUnit: '%', property: 'orbitOffset', calculator: '2d'};\n\nanim8.attribute.top                     = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.right                   = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.bottom                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.left                    = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.center                  = {defaultValue: {x:0, y:0}, defaultUnit: 'px', property: 'center', calculator: '2d'};\nanim8.attribute.centerX                 = {defaultValue: 0, defaultUnit: 'px', property: 'center'};\nanim8.attribute.centerY                 = {defaultValue: 0, defaultUnit: 'px', property: 'center'};\n\nanim8.attribute.blur                    = {defaultValue: 0, property: 'filter', defaultUnit: 'px'};\nanim8.attribute.sepia                   = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.brightness              = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.grayscale               = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.contrast                = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.invert                  = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.saturation              = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.hueRotate               = {defaultValue: 0, property: 'filter', defaultUnit: 'deg'};\n\nanim8.attribute.rotate                  = {defaultValue: 0, property: 'transform', defaultUnit: 'deg'};\nanim8.attribute.rotate3d                = {defaultValue: {x:0, y:0, z:1, angle:0}, property: 'transform', calculator: 'quaternion', defaultUnit: 'deg'};\n\nanim8.attribute.translate               = {defaultValue: {x:0, y:0}, property: 'transform', calculator: '2d', defaultUnit: 'px'};\nanim8.attribute.translateX              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translateY              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translateZ              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translate3d             = {defaultValue: {x:0, y:0, z:0}, property: 'transform', calculator: '3d', defaultUnit: 'px'};\n\nanim8.attribute.scale                   = {defaultValue: {x: 0, y:0}, property: 'transform', calculator: '2d'};\nanim8.attribute.scaleX\t                = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scaleY  \t              = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scaleZ  \t              = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scale3d                 = {defaultValue: {x:1, y:1, z:1}, property: 'transform', calculator: '3d'};\n\nanim8.attribute.skew                    = {defaultValue: {x:0, y:0}, defaultUnit: 'deg', property: 'transform', calculator: '2d'};\nanim8.attribute.skewX                   = {defaultValue: 0, defaultUnit: 'deg', property: 'transform'};\nanim8.attribute.skewY                   = {defaultValue: 0, defaultUnit: 'deg', property: 'transform'};\n\nanim8.attribute.backface                = {defaultValue: 0};\nanim8.attribute.visibility              = {defaultValue: 1};\n\nanim8.attribute.backgroundColor         = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.color                   = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderTopColor          = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderRightColor        = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderBottomColor       = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderLeftColor         = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.outlineColor            = {defaultValue: anim8.color(), calculator: 'rgba'};","\nanim8.DomAnimator = function(e)\n{\n\tthis.reset( e );\n  this.properties = {};\n  this.trues = {};\n  this.attributeToProperty = {};\n  this.animating = {};\n  this.units = {};\n  this.cached = {};\n  this.animation = null;\n};\n\nanim8.DomAnimator.prototype = new anim8.Animator();\n\nanim8.DomAnimator.prototype.preupdate = function()\n{\n  if ( this.trues.length === 0 )\n  {\n    return;\n  }\n  \n  var properties = {};\n  \n  for (var attr in this.trues)\n  {\n    properties[ this.attributeToProperty[attr] ] = true;\n      \n    this.animating[ attr ] = false;\n  }\n  \n  for (var prop in properties)\n  {\n    this.properties[ prop ].get( this.e, this );\n  }\n  \n  for (var attr in this.trues)\n  {\n    if ( this.animating[attr] === true )\n    {      \n      var e = this.trues[ attr ];\n      var p = e.path.copy();\n      var ps = p.points;\n            \n      for (var i = 0; i < ps.length; i++)\n      {\n        if ( ps[i] === true )\n        {\n          ps[i] = this.frame[attr];\n        }\n      }\n    \n      e.path = p;\n    }\n    \n    delete this.trues[ attr ];\n  }\n  \n  for (var prop in this.properties)\n  {\n    var property = this.properties[ prop ];\n    \n    if ( anim8.isFunction( property.preset ) )\n    {\n      property.preset( this.e, this );\n    }\n  }\n};\n\nanim8.DomAnimator.prototype.onAnimation = function(animation, options, events)\n{\n  this.animation = animation;\n};\n\nanim8.DomAnimator.prototype.apply = function()\n{\n  var applyProperties = {};\n  \n  for (var attr in this.frame)\n  {\n    if ( this.updated[ attr ] )\n    {\n      var prop = this.attributeToProperty[ attr ];\n      \n      if ( prop in this.properties )\n      {\n        applyProperties[ prop ] = true; \n      }\n    }\n  }\n  \n  for (var prop in applyProperties)\n  {\n    this.properties[ prop ].set( this.e, this );\n  }\n  \n  for (var attr in this.frame)\n  {\n    this.updated[ attr ] = false;\n  }\n  \n  this.trimEvents();\n};\n\nanim8.DomAnimator.prototype.placeEvent = function( e )\n{\n  anim8.Animator.prototype.placeEvent.apply( this, arguments );\n  \n  var attr = e.attribute;\n  var attribute = anim8.attribute( attr );\n  var prop = anim8.coalesce( attribute.property, attr );\n  var property = anim8.property( prop );\n    \n  if ( e.hasTrue() )\n  {    \n    this.trues[ attr ] = e;\n  }\n  \n  this.attributes[ attr ] = attribute;\n  this.properties[ prop ] = property;\n  this.attributeToProperty[ attr ] = prop;\n  \n  if ( this.animation && this.animation.input && this.animation.input.units && attr in this.animation.input.units )\n  {\n    this.units[ attr ] = this.animation.input.units[ attr ];\n  }\n  else\n  {\n    this.units[ attr ] = attribute.defaultUnit;\n  }\n};\n\nanim8.DomAnimator.prototype.placeSpring = function( s )\n{\n  anim8.Animator.prototype.placeSpring.apply( this, arguments );\n  \n  var attr = s.attribute;\n  var attribute = anim8.attribute( attr );\n  var prop = anim8.coalesce( attribute.property, attr );\n  var property = anim8.property( prop );\n  \n  this.attributes[ attr ] = attribute;\n  this.properties[ prop ] = property;\n  this.attributeToProperty[ attr ] = prop;\n  this.units[ attr ] = attribute.defaultUnit;\n};\n\nanim8.DomAnimator.prototype.restore = function()\n{\n  for (var prop in this.properties)\n  {\n    this.properties[prop].unset( this.e, this );\n  }\n};\n\nanim8.DomAnimator.prototype.cleanup = function()\n{\n\tthis.factory.cleanup( this );\n  \n  this.trigger('cleanup');\n};\n\nanim8.DomAnimator.prototype.set = function(attributes)\n{\n  var props = {};\n  var updated = {};\n  var units = {};\n  \n  for (var attr in attributes)\n  {\n    var attribute = anim8.attribute( attr );\n    var prop      = anim8.coalesce( attribute.property, attr );\n    var property  = anim8.property( prop );\n    var calc      = anim8.calculator( attribute.calculator );\n    var value     = attributes[ attr ];\n    \n    units[ attr ] = attribute.defaultUnit;\n    \n    if ( anim8.isString( value ) )\n    {\n      var parsed = anim8.parseValue( value, attribute.defaultUnit );\n    \n      if ( parsed !== false )\n      {\n        units[ attr ] = parsed.unit;\n        value = parsed.value;\n      }  \n    }\n    \n    var parsed = calc.parse( value, attribute.defaultValue );\n    \n    if ( parsed !== false )\n    {\n      props[ prop ] = property;\n      attributes[ attr ] = parsed;\n      updated[ attr ] = true;\n    }\n  }\n    \n  var flash = \n  {\n    units: units,\n    \n    frame: attributes,\n    \n    updated: updated,\n    \n    cached: {},\n    \n    value: function(attr)\n    {\n      return attributes[ attr ] + this.unit( attr );\n    },\n    \n    valueOr: function(attr, other, subproperty)\n    {\n      var value = attributes[ attr ];\n      \n      if ( !anim8.isDefined( value ) )\n      {\n        value = attributes[ attr = other ];\n      \n        if ( anim8.isDefined( subproperty ) )\n        {\n          value = value[ subproperty ];\n        }\n      }\n  \n      return value + this.unit( attr );\n    },\n    \n    unit: function(attr)\n    {\n      return units[ attr ] || '';\n    }\n  };\n  \n  for (var prop in props)\n  {\n    var property = props[ prop ];\n    \n    if ( anim8.isFunction( property.preset ) )\n    {\n      props[ prop ].preset( this.e, flash );\n    }\n  }\n  \n  for (var prop in props)\n  {\n    props[ prop ].set( this.e, flash );\n  }\n};\n\nanim8.DomAnimator.prototype.get = function(attributes)\n{\n  var props = {};\n  var animating = {};\n  var units = {};\n  var out = {};\n  \n  for (var attr in attributes)\n  {    \n    var attribute = anim8.attribute( attr );\n    var prop      = anim8.coalesce( attribute.property, attr );\n    var property  = anim8.property( prop );\n    var calc      = anim8.calculator( attribute.calculator );\n    \n    animating[ attr ] = false;    \n    units[ attr ] = attributes[ attr ] || attribute.defaultUnit;\n    props[ prop ] = property;\n    out[ attr ] = calc.clone( attribute.defaultValue );\n  }\n  \n  var flash = \n  {\n    units: units,\n    \n    frame: out,\n    \n    animating: animating,\n    \n    unit: function(attr)\n    {\n      return units[ attr ] || '';\n    }\n  };\n  \n  for (var prop in props)\n  {\n    props[ prop ].get( this.e, flash );\n  }\n  \n  return out;\n};\n\nanim8.DomAnimator.prototype.value = function(attr)\n{\n  return this.frame[ attr ] + this.unit( attr );\n};\n\nanim8.DomAnimator.prototype.valueOr = function(attr, other, subproperty)\n{\n  var value = this.frame[ attr ];\n    \n  if ( !anim8.isDefined( value ) )\n  {\n    value = this.frame[ attr = other ];\n      \n    if ( anim8.isDefined( subproperty ) )\n    {\n      value = value[ subproperty ];\n    }\n  }\n  \n  return value + this.unit( attr );\n};\n\nanim8.DomAnimator.prototype.unit = function(attr)\n{\n  return ( this.units[ attr ] || '' );\n};\n"],"sourceRoot":"/source/"}