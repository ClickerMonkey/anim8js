{"version":3,"sources":["anim8js-core.js","anim8js-defer.js","anim8js-easing.js","anim8js-color.js","anim8js-calculator.js","anim8js-path.js","anim8js-spring.js","anim8js-event.js","anim8js-animation.js","anim8js-animator.js","anim8js-sequence.js","anim8js-parser.js","anim8js-parser-deltavalues.js","anim8js-parser-final.js","anim8js-parser-initial.js","anim8js-parser-keyframe.js","anim8js-object.js","anim8js-dom-core.js","anim8js-dom-property.js","anim8js-dom-attribute.js","anim8js-dom-animator.js","anim8js-animate.css.js","anim8js-jquery.js"],"names":["m8","anim8","subjects","this","window","args","Array","prototype","slice","call","arguments","isArray","i","length","push","animators","arg","Animator","factory","factories","parseAnimators","noop","isDefined","x","isFunction","constructor","apply","isNumber","isString","isObject","isElement","HTMLElement","nodeType","nodeName","now","Date","getTime","copy","p","coalesce","a","b","c","d","delegate","functionName","returning","RETURN_THIS","RETURN_RESULTS","results","RETURN_FIRST","undefined","eventize","object","onListeners","$this","property","events","callback","context","split","on","once","offListeners","listeners","event","eventListeners","k","splice","off","$on","$once","triggerListeners","argument","clear","max","trigger","time","regex","conversions","s","sec","min","ms","hr","parsed","exec","parseFloat","unit","Math","floor","constant","variable","subject","optional","factoryName","is","attribute","attr","defaultValue","defaults","duration","easing","teasing","delay","sleep","repeat","each","iterator","filter","filterer","alive","remove","isAnimating","first","sequence","animation","options","Sequence","pause","transition","play","resume","stop","finish","end","queue","restore","eventsFor","set","get","spring","unspring","springsFor","tweenTo","applyInitialState","running","live","animating","requestRun","vendors","requestor","requestAnimationFrame","lastTime","timeToCall","currTime","id","setTimeout","add","animator","active","run","preupdate","update","finished","deactivate","Defer","methods","$factory","$push","$reset","eventable","previous","eventType","$eventable","$previous","$eventType","$event","$callback","$calls","$next","$isRoot","$register","$run","methodName","undefer","defer","next","indexOf","pair","e","t","easingType","bezier","isEasingName","out","inout","pong","linear","quad","ease","i2","x2","eq1","eq2","cubic","quartic","quintic","back","x3","sine","sin","overshot","elastic","scale","wave","revisit","abs","lasso","cos","slowbounce","bounce","smallbounce","inv","tinybounce","hesitant","sqrt","sqrtf","log10","slingshot","circular","gentle","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","cssEase","cssEaseIn","cssEaseOut","cssEaseInOut","cssLinear","color","r","g","parsers","parse","input","parseComponent","parseFunction","v","vparsed","isNaN","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","named","matches","parseInt","invalidColor","format","ca","cr","cg","cb","toString","calculator","calc","create","name","defaultMethods","clone","adds","amount","sub","interpolate","start","delta","zero","distance","distanceSq","isPristine","method","amountScale","mul","ab","isValid","isZero","epsilon","isEqual","y","aliases","left","right","middle","center","top","bottom","_x","_y","dx","dy","z","dz","angle","da","dr","dg","db","number","path","Path","type","reset","points","trues","hasTrue","compute","ps","reference","last","point","resolvePoint","DeltaPath","deltas","ds","d0","d1","pd","p0","p1","PointPath","KeyframePath","easings","ea","keyframe","defaultEasing","CubicPath","p2","p3","d2","d3","i1","i3","QuadraticPath","quadratic","CompiledPath","pointCount","index","compiled","Tween","tween","JumpPath","jump","Spring","rest","position","gravity","velocity","frame","dt","MAX_DT","starting","updateVelocity","updated","EPSILON","resolveRest","BoxSpring","acceleration","box","LinearSpring","damping","stiffness","temp0","temp1","DistanceSpring","temp","EventState","CREATED","DELAYED","ANIMATING","SLEEPING","PAUSED","FINISHED","Event","hasInitialState","parser","totalTime","newInstance","EventInstance","state","pauseTime","pauseState","elapsed","catchup","isInfinite","progress","applyValue","getParser","getPoint","getFuture","fdelta","getDelta","getStart","getEnd","baseValue","value","isPaused","isDelayed","isSleeping","cycle","cycleCount","maxCycles","newState","timeRemaining","timeRemainingInChain","Number","POSITIVE_INFINITY","hasStarted","isFinished","hasStates","states","stateText","Animation","parserName","isSaved","newEvents","save","springs","attributes","wasFinished","placeSpring","placeEvent","trimEvents","destroy","createEvents","merge","onAnimation","all","attrs","maxRemaining","transitionTime","transitionDelta","transitionEasing","e1","e2","transitionPath","transitionEvent","f","target","eventCount","ref","request","current","follow","objectsFor","objects","resulting","objectCount","hasEvents","hasSprings","DeferAnimator","maxDelay","delayOffset","Parser","newOptions","oldOptions","durations","delays","sleeps","repeats","ParserDeltas","values","valueCount","deltaObject","calculators","ParserFinal","ParserInitial","initial","ParserKeyframe","kframes","sort","from","half","to","times","maxTime","order","key","pathEasings","$animator","dom","prop","style","hyphenize","str","replace","currentStyle","document","defaultView","getComputedStyle","getPropertyValue","prefix","createElement","prefixes","toPixels","baseUnit","defaultRate","body","div","appendChild","width","pixels","offsetWidth","removeChild","parseValue","convert","getFontSize","notUnit","fontSize","getConverterScale","px","relativeTo","variables","parentWidth","parentNode","scrollWidth","parentHeight","scrollHeight","height","offsetHeight","parentFontSize","htmlFontSize","htmlElement","getElementsByTagName","pt","cm","mm","vw","deg","rad","PI","em","rem","given","converter","toUnit","fromUnit","converter1","converter2","ids","cached","has","getAttribute","animatorId","DomAnimator","setAttribute","nm","anim","converted","units","styles","unset","factoryDerivable","deriver","factoryColor","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","outlineWidth","textIndent","borderSpacing","lineHeight","zIndex","backgroundColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","outlineColor","minWidth","maxWidth","minHeight","maxHeight","offsetTop","offsetLeft","visibility","backface","css","transformOrigin","keywords","setOriginAttribute","setOrigin","origin","originZ","valueOr","transform","translate","translate3d","scale3d","d4","rotate3d","translateX","translateY","translateZ","scaleX","scaleY","scaleZ","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY","desiredUnit","transforms","join","opacity","grayscale","sepia","saturate","hueRotate","invert","brightness","contrast","blur","patterns","RegExp","filters","cx","cy","ccx","ccy","centerX","centerY","preset","rw","rh","orbit","DEGREE_TO_RADIAN","RADIAN_TO_DEGREE","ox","oy","orbitOffset","cunit","cox","coy","atan2","orbitX","orbitY","originUnit","originX","originY","defaultUnit","outlineOffset","saturation","properties","truesUpdated","attributeToProperty","styled","stylesUpdated","getStyles","applyProperties","props","flash","other","subproperty","0,20,53,80,100","40,43","70","90","0,100","30","40","50","65","75","0,50,100","25,75","0","100","10,30,50,70,90","20,40,60,80","20","60","80","10,20","30,50,70,90","40,60,80","15","45","50,55","40,45","final","20,60","actions","slide","fade","zoom","directions","Out","In","vertical","Down","Up","horizontal","Right","Left","sizes","Big","dir","ver","h","hor","siz","animName","$","SYMBOL","REPEAT","DELAY","SLEEP","INFINITY","fn","animationText","parseAnimation","dataPlay","animationAttribute","data","queueAnimation","dataQueue","transitionText","tran","parseTransition","dataTransition","transitionAttribute","stopIt","finishIt","endIt","setAttributes","getAttributes","text","parts","charAt","substring","num","jQuery"],"mappings":"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","file":"anim8js-jquery.min.js","sourcesContent":["\n/**\n * The core object of the framework. It extends Array and the method can be used \n * to construct an array of animators from subjects.\n * \n * @param {array} subjects\n */\nm8 = anim8 = function(subjects) \n{\n  if ( this === window ) \n  {\n\t\tvar args = Array.prototype.slice.call( arguments );\n\t\t\n\t\tif ( !anim8.isArray( subjects ) )\n\t\t{\n\t\t\tsubjects = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < args.length; i++)\n\t\t\t{\n\t\t\t\tsubjects.push( args[i] );\n\t\t\t}\n\t\t}\n\t\t\n    var animators = [];\n    \n    for (var i = 0; i < subjects.length; i++) \n    {\n      var arg = subjects[ i ];\n      \n      if ( arg instanceof anim8.Animator ) \n      {\n        animators.push( arg );\n      } \n      else\n      {\n\t\t\t\tvar factory = anim8.factories( arg );\n\t\t\t\t\n\t\t\t\tif (factory !== false)\n\t\t\t\t{\n          factory.parseAnimators( arg, animators );\n\t\t\t\t}\n      }\n    }\n\t\t\n\t\treturn new anim8( animators );\n  } \n  else \n  {\n    for (var i = 0; i < subjects.length; i++) \n    {\n      this.push( subjects[ i ] );\n    }\n  }\n};\n\n/*****************************************************************\n  UTILITY FUNCTIONS\n******************************************************************/\n\n/**\n * A function that does nothing.\n */\nanim8.noop = function() {};\n\n/**\n * Returns true if the given variable is defined.\n */\nanim8.isDefined = function(x) \n{\n  return typeof x !== 'undefined';\n};\n\n/**\n * Returns true if the given variable is a function.\n */\nanim8.isFunction = function(x) \n{\n  return !!(x && x.constructor && x.call && x.apply);\n};\n\n/**\n * Returns true if the given variable is a number.\n */\nanim8.isNumber = function(x) \n{\n  return typeof x === 'number';\n};\n\n/**\n * Returns true if the given variable is a string.\n */\nanim8.isString = function(x) \n{\n  return typeof x === 'string';\n};\n\n/**\n * Returns true if the given variable is an array. This should be checked before\n * anim8.isObject since Arrays are objects.\n */\nanim8.isArray = function(x) \n{\n  return x instanceof Array;\n};\n\n/**\n * Returns true if the given variable is an object.\n */\nanim8.isObject = function(x) \n{\n  return typeof x === 'object';\n};\n\n/**\n * Returns true if the given variable is an HTML element.\n */\nanim8.isElement = function(x)\n{\n  return typeof HTMLElement === \"object\" ? x instanceof HTMLElement :\n  x && typeof x === \"object\" && x !== null && x.nodeType === 1 && typeof x.nodeName === \"string\";\n};\n\n/**\n * Returns the current time in milliseconds.\n */\nanim8.now = (function() {\n\n  return Date.now ? Date.now : function() \n  {\n    return new Date().getTime();\n  };\n  \n})();\n\n\n/**\n * Performs a deep copy of the given variable. If the variable is an array or object a new instance\n * of that type is created where the values are copied as well. All other types can't be copied\n * (most likely because they're scalar) so they are returned as-is.\n *\n * @param {any} x\n */\nanim8.copy = function(x) \n{\n  if ( anim8.isArray(x) ) \n  {\n    var copy = [];\n    for (var i = 0; i < x.length; i++) \n    {\n      copy.push( anim8.copy( x[i] ) );\n    }\n    x = copy;\n  }\n  else if ( anim8.isObject(x) ) \n  {\n    var copy = {};\n    for (var p in x) \n    {\n      copy[p] = anim8.copy( x[p] );\n    }\n    x = copy;\n  }\n  \n  return x;\n};\n\n/**\n * Returns the first defined variable of a possible 4 variables.\n */\nanim8.coalesce = function(a, b, c, d) \n{\n  if (anim8.isDefined(a)) return a;\n  if (anim8.isDefined(b)) return b;\n  if (anim8.isDefined(c)) return c;\n  return d;\n};\n\n/**\n * Creates a function which calls a method on all elements in the array or on the first element.\n *\n * @param {string} functionName\n * @param {string} returning\n */\nanim8.delegate = function(functionName, returning) \n{  \n  switch (returning)\n  {\n  case anim8.delegate.RETURN_THIS:\n    return function() \n    {\n      for (var i = 0; i < this.length; i++) \n      {\n        this[i][functionName].apply( this[i], arguments );\n      }\n      \n      return this;  \n    };\n    \n  case anim8.delegate.RETURN_RESULTS:\n    return function() \n    {\n      var results = [];\n    \n      for (var i = 0; i < this.length; i++) \n      {\n        results.push( this[i][functionName].apply( this[i], arguments ) );\n      }\n    \n      return results;\n    };\n    \n  case anim8.delegate.RETURN_FIRST:\n    return function()\n    {\n      return this.length === 0 ? undefined : this[0][functionName].apply( this[0], arguments );\n    };\n  }\n  \n  return anim8.noop;\n};\n\n/**\n * this is returned at the end.\n */\nanim8.delegate.RETURN_THIS = 'this';\n\n/**\n * An array of results for each method call is returned.\n */\nanim8.delegate.RETURN_RESULTS = 'results';\n\n/**\n * The result of the first element.\n */\nanim8.delegate.RETURN_FIRST = 'first';\n\n\n/**\n * Adds functions to the given object (or prototype) so you can listen for any number of events\n * on the given object, optionally once. Listeners can be removed later.\n */\nanim8.eventize = function(object)\n{\n  var onListeners = function($this, property, events, callback, context)\n  {\n    events = events.split(' ');\n    \n    if ( !anim8.isDefined( $this[ property ] ) )\n    {\n      $this[ property ] = {};\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      if ( !anim8.isDefined( $this[ property ][ events[i] ] ) )\n      {\n        $this[ property ][ events[i] ] = [];\n      }\n      \n      $this[ property ][ events[i] ].push( [ callback, context || $this ] );\n    }\n  };\n  \n  object.on = function(events, callback, context)\n  {\n    onListeners( this, '$on', events, callback, context );\n  };\n  \n  object.once = function(events, callback, context)\n  {\n    onListeners( this, '$once', events, callback, context );\n  };\n  \n  var offListeners = function(listeners, event, callback)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var k = eventListeners.length - 1; k >= 0; k--)\n      {\n        if (eventListeners[ k ][0] === callback)\n        {\n          eventListeners.splice( k, 1 );\n        }\n      }  \n    }\n  };\n  \n  object.off = function(events, callback)\n  {\n    events = events.split(' ');\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      offListeners( this.$on, events[i] );\n      offListeners( this.$once, events[i] );\n    }\n  };\n  \n  var triggerListeners = function(listeners, event, argument, clear)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n\t\t\tvar max = eventListeners.length;\n      \n      for (var i = 0; i < max; i++)\n      {\n        var callback = eventListeners[ i ];\n        \n        callback[0].call( callback[1], argument );\n      }\n      \n      if ( clear )\n      {\n\t\t\t\tif ( eventListeners.length !== max )\n\t\t\t\t{\n\t\t\t\t\tlisteners[ event ] = eventListeners.slice( max );\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t        eventListeners.length = 0;\t\n\t\t\t\t}\n      }\n\t\t}\n  };\n  \n  object.trigger = function(event, argument)\n  {\n    triggerListeners( this.$on, event, argument, false );\n    triggerListeners( this.$once, event, argument, true );\n  };\n};\n\n/**\n * Parses milliseconds from a string or number. If a number is given it's assumed to be milliseconds\n * and is returned immediately.\n *\n * @param {string|number} time\n */\nanim8.time = (function()\n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(s|sec|min|ms|hr)?/;\n  \n  var conversions = {\n    s:    1000,\n    sec:  1000,\n    min:  1000 * 60,\n    ms:   1,\n    hr:   1000 * 60 * 60\n  };\n  \n  return function(time) \n  {  \n    if ( anim8.isNumber( time ) )\n    {\n      return time;\n    }\n    if ( anim8.isString( time ) )\n    {\n      var parsed = regex.exec( time );\n      \n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n        \n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n        \n        return Math.floor(time);\n      }\n    }\n    \n    return false;\n  };\n  \n})();\n\n/**\n * Provides a way to wrap a variable so calculators don't try copying it on parse.\n *\n * @param {any} variable\n */\nanim8.constant = function(variable)\n{\n  return function() \n  {\n    return variable;\n  };\n};\n\n\n/*****************************************************************\n  REGISTRIES\n******************************************************************/\n\n/**\n * Returns a factory for the given subject or throws an error if no factory exists.\n *\n * @param {any} subject\n */\nanim8.factories = function(subject, optional) \n{\n\tfor (var factoryName in anim8.factories) \n\t{\n\t\tvar factory = anim8.factories[ factoryName ];\n\t\t\t\n\t\tif ( factory.is( subject ) )\n\t\t{\t\t\t\n\t\t\treturn factory;\n\t\t}\n\t}\n  \n  if ( optional )\n  {\n    return false;\n  }\n\t\n\tthrow 'No factory exists for subject ' + subject;\n};\n\n/* Attributes are the animatable properties of a subject\n\n  anim8.attribute[name] = {\n    // the default value for an attribute if none exists on the subject\n    defaultValue: 0,\n    // the name of the calculator this attribute requires for mathematical operations. default value: anim8.calculator.default\n    calculator: calculatorName,\n    // other values can be specified here that the respective factory might use\n    \"factory specific attributes\"\n  }\n*/\n\n/**\n * Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\n * returned immediately. If the input is a string the attribute with the given name is returned. Otherwise\n * the default attribute is returned.\n *\n * @param {object|string} attr\n */\nanim8.attribute = function(attr) \n{\n  if ( anim8.isObject(attr) && anim8.isDefined(attr.defaultValue) ) \n\t{\n    return attr;\n  }\n  if ( anim8.isString(attr) && attr in anim8.attribute ) \n\t{\n    return anim8.attribute[ attr ];\n  }\n\t\n  return anim8.attribute.default;\n};\n\n/**\n * The default attribute.\n */\nanim8.attribute.default = {defaultValue: 0};\n\n/**\n * The default values for event properties.\n */\nanim8.defaults = \n{\n  duration: 1000,\n  easing: 'ease',\n  teasing: 'linear',\n  delay: 0,\n  sleep: 0,\n  repeat: 1\n};\n\n\n/*****************************************************************\n  ANIM8 DEFINITION\n******************************************************************/\n\n/**\n * anim8 is an instance of Array. All array methods are supported.\n */\nanim8.prototype = new Array();\n\n/**\n * Invokes a callback for each element in the array.\n * \n * @param {function} iterator\n */\nanim8.prototype.each = function(iterator, context) \n{\n  for (var i = 0; i < this.length; i++) \n  {\n    if ( iterator.call( context || this[i], this[i], i ) === false ) \n    {\n      break;\n    }\n  }\n\t\n\treturn this;\n};\n\n/**\n * Invokes a callback for each element in the array and if true is returned that element is removed from the array.\n *\n * @param {function} filterer\n */\nanim8.prototype.filter = function(filterer)\n{\t\n\tvar alive = 0;\n\t\n\tfor (var i = 0; i < this.length; i++)\n\t{\n\t\tvar remove = filterer( this[i] );\n\t\t\n\t\tif ( !remove )\n\t\t{\n\t\t\tthis[alive++] = this[i];\n\t\t}\n\t}\n\t\n\tthis.length = alive;\n\t\n\treturn this;\n};\n\n/**\n * Returns true if any of the animators in the array are animating.\n */\nanim8.prototype.isAnimating = function() \n{\n  for (var i = 0; i < this.length; i++)\n  {\n    if ( this[i].isAnimating() )\n    {\n      return true;\n    }\n  }\n  \n  return false;\n};\n\n/**\n * Returns the first animator in the array.\n */\nanim8.prototype.first = function()\n{\n  return this[0];\n};\n\n/**\n * Plays a sequence of events separated by a delay given an animation to play on all Animators.\n */\nanim8.prototype.sequence = function(delay, easing, animation, options)\n{\n  return new anim8.Sequence( this, delay, easing, animation, options );\n};\n\n/**\n * Adds the following methods to anim8 to make an array of Animators appear like a single Animator.\n */\nanim8.prototype.pause \t\t\t= anim8.delegate( 'pause', anim8.delegate.RETURN_THIS );\nanim8.prototype.transition \t= anim8.delegate( 'transition', anim8.delegate.RETURN_THIS );\nanim8.prototype.play \t\t\t\t= anim8.delegate( 'play', anim8.delegate.RETURN_THIS );\nanim8.prototype.resume \t\t\t= anim8.delegate( 'resume', anim8.delegate.RETURN_THIS );\nanim8.prototype.stop \t\t\t\t= anim8.delegate( 'stop', anim8.delegate.RETURN_THIS );\nanim8.prototype.finish \t\t\t= anim8.delegate( 'finish', anim8.delegate.RETURN_THIS );\nanim8.prototype.end   \t\t\t= anim8.delegate( 'end', anim8.delegate.RETURN_THIS );\nanim8.prototype.queue \t\t\t= anim8.delegate( 'queue', anim8.delegate.RETURN_THIS );\nanim8.prototype.restore\t\t\t= anim8.delegate( 'restore', anim8.delegate.RETURN_THIS );\nanim8.prototype.eventsFor   = anim8.delegate( 'eventsFor', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.set         = anim8.delegate( 'set', anim8.delegate.RETURN_THIS );\nanim8.prototype.get         = anim8.delegate( 'get', anim8.delegate.RETURN_FIRST );\nanim8.prototype.spring \t\t\t= anim8.delegate( 'spring', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.unspring \t\t= anim8.delegate( 'unspring', anim8.delegate.RETURN_THIS );\nanim8.prototype.springsFor \t= anim8.delegate( 'springsFor', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.tweenTo   \t= anim8.delegate( 'tweenTo', anim8.delegate.RETURN_THIS );\nanim8.prototype.applyInitialState = anim8.delegate( 'applyInitialState', anim8.delegate.RETURN_THIS );\n\nanim8.prototype.on\t\t\t    = anim8.delegate( 'on', anim8.delegate.RETURN_THIS );\nanim8.prototype.once\t\t    = anim8.delegate( 'once', anim8.delegate.RETURN_THIS );\nanim8.prototype.off\t\t\t    = anim8.delegate( 'off', anim8.delegate.RETURN_THIS );\nanim8.prototype.trigger     = anim8.delegate( 'trigger', anim8.delegate.RETURN_THIS );\n\n/*****************************************************************\n  ANIM8 ANIMATION LOOP\n******************************************************************/\n\n/**\n * Whether the animation cycle is currently running. This is true\n * when where are active animators and anim8.run is being called\n * and false otherwise.\n */\nanim8.running = false;\n\n/**\n * Live Mode keeps the animation cycles running even when there aren't\n * Animators. For highly interactive applications enabling this may\n * take up more resources but it will result in smoother animations. When\n * the animation cycle goes from stopped to running it takes a few frames\n * to smooth out when this is false.\n */\nanim8.live = false;\n\n/**\n * The anim8 instance for all active animators.\n */\nanim8.animating = anim8();\n\n/**\n * The function to call if animations need to be done.\n *\n * @param {function} callback\n */\nanim8.requestRun = (function() \n{  \n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n  var requestor = window.requestAnimationFrame;\n  \n  for (var x = 0; x < vendors.length && !requestor; ++x) \n  {\n    requestor = window[ vendors[x] + 'RequestAnimationFrame' ];\n  }\n  \n  if (!requestor)\n  {\n    var lastTime = 0;\n    \n    return function(callback)\n    {\n      var now = anim8.now();\n      var timeToCall = Math.max( 0, 16 - (currTime - lastTime) );\n      var id = window.setTimeout( function() { callback( currTime + timeToCall ); }, timeToCall );\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n  \n  return function(callback)\n  {\n    requestor( callback );\n  };\n  \n})();\n\n/**\n * Adds an animator to the list if animating if it isn't there already. If the animation\n * loop isn't currently running it's started.\n * \n * @param {anim8.Animator} animator\n */\nanim8.add = function(animator)\n{\n  if ( !animator.active )\n  {\n    anim8.animating.push( animator );\n    \n    animator.active = true;\n  }\n  \n  if ( !anim8.running )\n  {\n    anim8.running = true;\n\t\tanim8.trigger('starting');\n\t\tanim8.requestRun( anim8.run );\n  }\n}\n\n/**\n * Executes an animation cycle which consists of four operations:\n *   1. Call preupdate on all Animators\n *   2. Call update on all Animators\n *   3. Call apply on all Animators\n *   4. Remove finished Animators\n * When there are no more animating the cycle is stopped.\n */\nanim8.run = function() \n{\n\tanim8.trigger('begin');\n\t\n  var now = anim8.now();\n  \n  // notify animators that we're about to update\n  anim8.animating.each(function(animator)\n  {\n    animator.preupdate();\n  });\n  \n  // update animating based on the current time\n  anim8.animating.each(function(animator)\n  {\n    animator.update( now );\n  });\n  \n  // apply the attributes calculated\n  anim8.animating.each(function(animator)\n  {\n    animator.apply();\n  });\n  \n  // if the animator is done remove it\n  anim8.animating.filter(function(animator)\n  {\n    if ( animator.finished )\n    {\n\t\t\tanimator.deactivate();\n      animator.active = false;\n    }\n    \n    return animator.finished;\n  });\n\t\n\tanim8.trigger('end');\n  \n  // if there are animators still remaining call me again!\n  if ( anim8.animating.length || anim8.live )\n  {\n\t\tanim8.requestRun( anim8.run );\n  } \n  else \n  {\n    anim8.running = false;\n\t\tanim8.trigger('finished');\n  }\n};\n\n/**\n * Add events to the animation cycle: begin, end, finished, starting\n */\nanim8.eventize( anim8 );","anim8.Defer = function(factory, methods)\n{\n\tthis.$factory = factory;\n\t\n\tfor (var i = 0; i < methods.length; i++)\n\t{\t\n\t\tthis[ methods[i] ] = this.$push( methods[i] );\n\t}\n};\n\nanim8.Defer.prototype = \n{\t\n\t$reset: function(eventable, previous, eventType, event, callback)\n\t{\n\t\tthis.$eventable = eventable;\n\t\tthis.$previous = previous;\n\t\tthis.$eventType = eventType;\n\t\tthis.$event = event;\n    this.$callback = callback;\n\t\tthis.$calls = [];\n\t\tthis.$next = [];\n\t\t\n\t\tif ( this.$isRoot() )\n\t\t{\n\t\t\tthis.$register();\n\t\t}\n\t},\n\t$isRoot: function()\n\t{\n\t\treturn this.$eventable === this.$previous;\n\t},\n\t$register: function()\n\t{\n\t\tthis.$eventable[ this.$eventType ]( this.$event, this.$run, this );\n\t},\n\t$push: function(methodName)\n\t{\n\t\treturn function() \n\t\t{\n\t\t\tthis.$calls.push( [methodName, arguments] );\n\t\t\t\n\t\t\treturn this;\n\t\t};\n\t},\n\t$run: function() \n\t{\n    if ( anim8.isFunction( this.$callback ) )\n    {\n      this.$callback.call( this.$eventable, this );\n    }\n    \n\t\tfor (var i = 0; i < this.$calls.length; i++)\n\t\t{\n\t\t\tvar call = this.$calls[ i ];\n\t\t\t\n\t\t\tthis.$eventable[ call[0] ].apply( this.$eventable, call[1] );\n\t\t}\n\t\t\n\t\tfor (var k = 0; k < this.$next.length; k++)\n\t\t{\n\t\t\tthis.$next[ k ].$register();\n\t\t}\n\t},\n\tundefer: function()\n\t{\n\t\treturn this.$previous;\n\t},\n\tdefer: function(eventType, event, callback)\n\t{\n\t\tvar next = new this.$factory( this.$eventable, this, eventType, event, callback );\n\t\t\n\t\tthis.$next.push( next );\n\t\t\n\t\treturn next;\n\t}\n};","\n/**\n * Returns an easing based on the given input. If the input is a function it's assumed to be an easing function and is\n * returned immediately. If the input is a string the easing with that name is returned. If the input is a string in the\n * format 'easing-easingType' then an easing is returned that is a combination of the easing with the given name and the\n * easingType with the given name. If the given input is an array with 4 elements it's assumed to be a bezier path and\n * one is created and returned. If no input is given the default easing is returned. If an easing cannot be determined\n * then an error is thrown.\n * \n * @param {function|string|array} easing\n */\nanim8.easing = function(easing, optional) \n{\n  if ( anim8.isFunction( easing ) ) \n\t{\n    return easing;\n  }\n\tif ( anim8.isString( easing ) )\n\t{\n\t\tif ( easing in anim8.easing )\n\t\t{\n\t\t\treturn anim8.easing[ easing ];\n\t\t}\n\t\tif ( easing.indexOf('-') !== -1 )\n\t\t{\n\t\t\tvar pair = easing.split('-');\n\t\t\tvar e = pair[0];\n\t\t\tvar t = pair[1];\n\t\t\t\n\t\t\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t\t\t{\t\t\t\t\n\t\t\t\treturn anim8.easingType[ t ]( anim8.easing[ e ] );\n\t\t\t}\n\t\t}\n\t}\n  if ( anim8.isArray( easing ) && easing.length === 4 && anim8.isNumber( easing[0] ) && anim8.isNumber( easing[1] ) && anim8.isNumber( easing[2] ) && anim8.isNumber( easing[3] ) ) \n\t{\n    return anim8.easing.bezier.apply( null, easing );\n  }\n  if ( !anim8.isDefined( easing ) ) \n\t{\n    return anim8.easing.default;\n  }\n\t\n  if ( optional )\n  {\n    return false;\n  }\n  \n  throw easing + ' is not a valid easing';\n};\n\n/**\n * Returns true if the given string would result in returning an easing.\n * \n * @see anim8.easing\n * @param {string} easing\n */\nanim8.isEasingName = function(easing)\n{\n  if ( easing in anim8.easing )\n  {\n    return true;\n  }\n  \n\tvar pair = easing.split('-');\n\tvar e = pair[0];\n\tvar t = pair[1];\n\t\n\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t{\t\t\t\t\n    return true;\n\t}\n  \n  return false;\n};\n\n/**\n * Returns an easing type based on the input. If the input is a function that function is immediately returned. \n * If the input is a string the easing type with that name is returned. If no easing type could be determined\n * an error is thrown.\n *\n * @param {function|string} easingType\n */\nanim8.easingType = function(easingType, optional)\n{\n\tif ( anim8.isFunction( easingType ) )\n\t{\n\t\treturn easingType;\n\t}\n\tif ( anim8.isString( easingType ) && easingType in anim8.easingType )\n\t{\n\t\treturn anim8.easingType[ easingType ];\n\t}\n  \n  if ( optional )\n  {\n    return false;\n  }\n\t\n\tthrow easingType + ' is not a valid easing type';\n};\n\n\n/**\n * Easing & Easing Type functions\n */\n\nanim8.easingType.in = function(easing) \n{\n\treturn function(x) {\n\t\treturn easing( x );\n\t};\n};\n\nanim8.easingType.out = function(easing) \n{\n\treturn function(x) {\n\t\treturn 1.0 - easing( 1.0 - x );\n\t};\n};\n\nanim8.easingType.inout = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x ) * 0.5;\n\t  } else {\n\t    return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n\t  }\n\t};\n};\n\nanim8.easingType.pong = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x );\n\t  } else {\n\t    return easing( 2.0 - 2.0 * x );\n\t  }\n\t};\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-\nanim8.easing.linear = function(x) \n{\n  return x;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.quad = function(x)\n{\n  return x * x;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDAuMyooMS14KSooMS14KSp4KSsoMy4wKigxLXgpKngqeCkrKHgqeCp4KSkqKDEteCkreCooMS0oMS14KSooMS14KSooMS14KSooMS14KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.ease = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n  \n  return eq1 * i + eq2 * x;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d\nanim8.easing.cubic = function(x) \n{\n  return x * x * x;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-\nanim8.easing.quartic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.quintic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KngpKyh4KngpLXgiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.back = function(x) \n{\n  var x2 = x * x;\n\tvar x3 = x2 * x;\n\treturn x3 + x2 - x;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzaW4oeCoxLjU3MDc5NjMyNjc5KSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d\nanim8.easing.sine = function(x) \n{\n\treturn Math.sin( x * 1.57079632679 );\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLXgqKDcuMC8xMCkpKngqKDEwLjAvMy4wKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d\nanim8.easing.overshot = function(x)\n{\n  return (1.0 - x * (7.0 / 10)) * x * (10.0 / 3.0);\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KigoMi4wKngqeCp4KSt4KngtKDQuMCp4KSsyLjApKSotc2luKHgqMTAuOTk1NTc0Mjg3NikiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.elastic = function(x) \n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n\tvar wave = -Math.sin(x * 10.9955742876);\n\treturn scale * wave;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJhYnMoeC1zaW4oeCozLjE0MTU5MjY1MzU5KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.revisit = function(x) \n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWNvcyh4KngqeCozNi4wKSooMS4wLXgpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d\nanim8.easing.lasso = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x));\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgqeCkqY29zKHgqeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.slowbounce = function(x) \n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgpKmNvcyh4KngqMTQuODA0NDA2NjAxNikpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d\nanim8.easing.bounce = function(x) \n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.smallbounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjcpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.tinybounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoY29zKHgqeCoxMi4wKSp4KigxLjAteCkreCkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.hesitant = function(x) \n{\n\treturn (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzcXJ0KHgpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-\nanim8.easing.sqrt = function(x)\n{\n  return Math.sqrt( x );\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDEuMC0oMS14KSooMS14KSooMS14KSooMS14KSkreCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-\nanim8.easing.sqrtf = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIobG9nKHgpKzIuMCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-\nanim8.easing.log10 = function(x)\n{\n  return (Math.log10(x) + 2.0) * 0.5;\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeDwwLjc_KHgqLTAuMzU3KTooKCh4LTAuNykqKHgtMC43KSoyNy41LTAuNSkqMC41KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--\nanim8.easing.slingshot = function(x)\n{\n  if (x < 0.7) {\n\t\treturn (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIxLXNxcnQoMS14KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-\nanim8.easing.circular = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\n// http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMy4wKigxLjAteCkqeCp4KSsoeCp4KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-\nanim8.easing.gentle = function(x)\n{\n  return (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\nanim8.easing.bezier = function(mX1, mY1, mX2, mY2) \n{\n  // https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\n  \n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope == 0.0) return aGuessT;\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n  \n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\nanim8.easing.cssEase      = anim8.easing.ease;\nanim8.easing.cssEaseIn    = anim8.easing.quad;\nanim8.easing.cssEaseOut   = anim8.easingType.out( anim8.easing.quad );\nanim8.easing.cssEaseInOut = anim8.easingType.inout( anim8.easing.quad );\nanim8.easing.cssLinear    = anim8.easing.linear;\n\nanim8.easing.default      = anim8.easing.ease;","\n/**\n * Instantiates a new color given red, green, blue, and white components.\n * If a component is missed it's default value is either 255 (white) or\n * 1.0 (opaque).\n */\nanim8.color = function(r, g, b, a) \n{\n  return {\n    r: anim8.coalesce( r, 255 ),\n    g: anim8.coalesce( g, 255 ),\n    b: anim8.coalesce( b, 255 ),\n    a: anim8.coalesce( a, 1.0 )\n  };\n};\n\n/**\n * The array of parsing methods to execute sequentally until a color is returned.\n */\nanim8.color.parsers = \n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, 'parseInt', 255),\n          g: this.parseComponent(input.g, 'parseInt', 255),\n          b: this.parseComponent(input.b, 'parseInt', 255),\n          a: this.parseComponent(input.a, 'parseFloat', 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = window[parseFunction](t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  }, \n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n/**\n * Parses a color from a string.\n *\n * @param {string} input\n */\nanim8.color.parse = function(input)\n{\n  var cp = m8.color.parsers;\n  \n  for (var i = 0; i < this.parsers.length; i++)\n  {\n    var parsed = this.parsers[i].parse(input);\n    \n    if (parsed !== false) \n    {\n      return parsed;\n    }\n  }\n  \n  return this.invalidColor;\n};\n\n/**\n * Formats a color to a string.\n * \n * @param {object} color\n */\nanim8.color.format = function(color)\n{\n  var ca = anim8.coalesce( color.a, 1.0 );\n  var cr = anim8.coalesce( color.r, 255 );\n  var cg = anim8.coalesce( color.g, 255 );\n  var cb = anim8.coalesce( color.b, 255 );\n  \n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n    \n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    \n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n/**\n * The color to return when input is invalid.\n */\nanim8.color.invalidColor = anim8.color.defaultValue =\n{\n  r: 255,\n  g: 255,\n  b: 255,\n  a: 1.0\n};","/**\n * Calculators perform math and basic operations for a specific data structure. Calculators have the following methods.\n *\n *  parse(x, default)\n *  copy(out, copy)\n * -clone(out)\n *  create()\n *  zero(out)\n * -scale(out, scale)\n * -add(out, amount)\n *  adds(out, amount, amountScale)\n * -sub(out, amount)\n *  mul(out, scale)\n * -interpolate(out, start, end, delta)\n *  distanceSq(a, b)\n *  isValid(a)\n *  isNaN(a)\n *  isZero(a, epsilon)\n *  isEqual(a, b, epsilon)\n */\n\n/**\n * Returns a calculator based on the input. If the input is an object that object is immediately returned.\n * If the input is a string the calculator with that name is returned. If no calculator could be determined\n * the default calculator is returned.\n *\n * @param {object|string} calc\n */\nanim8.calculator = function(calc)\n{\n\tif ( anim8.isObject(calc) )\n\t{\n\t\treturn calc;\n\t}\n\tif ( anim8.isString( calc ) && calc in anim8.calculator )\n\t{\n\t\treturn anim8.calculator[ calc ];\n\t}\n\t\n\treturn anim8.calculator.default;\n};\n\n/**\n * Creates a calculator and fills in any missing methods where possible.\n * \n * @param {string} name\n * @param {object} methods\n */\nanim8.calculator.create = function(name, methods)\n{\n  var defaultMethods = \n\t{\n\t  clone: function(out) \n\t\t{\n\t    return this.copy( this.create(), out );\n\t  },\n\t  scale: function(out, scale) \n\t\t{\n\t    return this.adds( out, out, scale - 1 );\n\t  },\n\t  add: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, 1 );\n\t  },\n\t  sub: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, -1 );\n\t  },\n\t  interpolate: function(out, start, end, delta) \n\t\t{\n\t    out = this.zero( out );\n\t    out = this.adds( out, start, 1 - delta );\n\t    out = this.adds( out, end, delta );\n\t    return out;\n\t  },\n\t\tdistance: function(a, b)\n\t\t{\n\t\t\treturn Math.sqrt( this.distanceSq( a, b ) );\n\t\t},\n    isPristine: function(x)\n    {\n      return ( x === true || anim8.isFunction( x ) );\n    }\n\t};\n  \n  for (var method in defaultMethods)\n  {\n    if ( !(method in methods) )\n    {\n      methods[ method ] = defaultMethods[ method ];\n    }\n  }\n  \n\tanim8.calculator[name] = methods; \n};\n\n/**\n * A calculator for number primitives.\n */\nanim8.calculator.create('number', \n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn x;\n\t\t}\n\t\tif ( anim8.isString( x ) )\n\t\t{\n\t\t\tx = parseFloat( x );\n\t\t\t\n\t\t\tif (!isNaN(x))\n\t\t\t{\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn defaultValue;\n\t},\n  copy: function(out, copy) \n\t{\t\n    return copy;\n  },\n  create: function() \n\t{\n    return 0.0;\n  },\n  zero: function(out) \n\t{\n    return 0.0;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale) \n\t{\n    return out *= scale;\n  },\n  distanceSq: function(a, b) \n\t{\n    var ab = a - b;\n    return ab * ab;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'number';\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a - b) < epsilon;\n  }\n});\n\n/*\n * A calculator for objects with an x and y component (number)\n */\nanim8.calculator.create('2d', \n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y )\n\t\t\t};\n\t\t}\n    if ( anim8.isString( x ) )\n    {\n      var aliases = {\n        'left':   0,\n        'right':  100,\n        'middle': 50,\n        'center': 50,\n        'top':    0,\n        'bottom': 100\n      };\n      \n      if ( x.indexOf(' ') === -1 )\n      {\n        var _x = parseFloat( x );\n        \n        if ( !isNaN(_x) || x in aliases )\n        {\n          return {\n            x: x in aliases ? aliases[x] : _x,\n            y: x in aliases ? aliases[x] : _x\n          };\n        }\n      }\n      else\n      {\n        var pair = x.split(' ');\n        var _x = parseFloat( pair[0] );\n        var _y = parseFloat( pair[1] );\n        \n        if ((!isNaN(_x) || pair[0] in aliases) && (!isNaN(_y) || pair[1] in aliases))\n        {\n          return {\n            x: pair[0] in aliases ? aliases[pair[0]] : _x,\n            y: pair[1] in aliases ? aliases[pair[1]] : _y\n          };\n        }\n      }\n    }\n    \n    if ( anim8.isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );      \n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;    \n    return dx * dx + dy * dy;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with an x, y, and z component (number)\n */\nanim8.calculator.create('3d',\n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x,\n\t\t\t\tz: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\t\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z )\n\t\t\t};\n\t\t}\n    \n    if ( anim8.isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );      \n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out) \n\t{ \n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t  \t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t\t Math.abs(a.z - b.z) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with an x, y, z, and angle components.\n */\nanim8.calculator.create('quaternion', \n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: 1,\n\t\t\t\tangle: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z ),\n\t\t\t\tangle: anim8.coalesce( x.angle, defaultValue.angle )\n\t\t\t};\n\t\t}\n    \n    if ( anim8.isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );      \n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n\t\tout.angle = copy.angle;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n\t\tout.angle = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n\t\tout.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n\t\tout.angle *= scale.angle;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n\t\tvar da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t  \t\t Math.abs(a.y) < epsilon && \n\t\t       Math.abs(a.z) < epsilon && \n\t\t       Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t   Math.abs(a.z - b.z) < epsilon && \n\t\t       Math.abs(a.angle - b.angle) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n */\nanim8.calculator.create('rgb', \n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: x,\n\t\t\t\tg: x,\n\t\t\t\tb: x\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( x );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with r, g, & b components \n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n */\nanim8.calculator.create('rgba', \n{\n\tparse: function(a, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( a ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: a,\n\t\t\t\tg: a,\n\t\t\t\tb: a,\n\t\t\t\ta: 1.0\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( a );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    var da = a.a - b.a;    \n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon && \n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon && \n           Math.abs(a.a - b.a) < epsilon;\n  }\n});\n\n/**\n * Sets the default calculator to the numeric calculator.\n */\nanim8.calculator.default = anim8.calculator.number;","anim8.path = function(path)\n{\n  if ( path instanceof anim8.Path )\n  {\n    return path;\n  }\n  if ( anim8.isString( path ) && path in anim8.path )\n  {\n    return anim8.path[ spring ];\n  }\n  if ( anim8.isObject( path ) && path.type in anim8.path )\n  {\n    return anim8.path[ path.type ]( path );\n  }\n  \n  return false;\n};\n\n\nanim8.Path = function()\n{\n};\n\nanim8.Path.prototype = \n{\n  reset: function(name, calculator, points)\n  {\n    this.name = name;\n    this.calculator = anim8.calculator( calculator );\n    this.points = points;\n    this.trues = this.hasTrue();\n  },\n  compute: function(out, delta) \n\t{\n    return out;\n  },\n  hasTrue: function() \n\t{\n    var ps = this.points;\n    \n    for (var i = 0; i < ps.length; i++) \n    {\n      if (ps[i] === true) \n      {\n        return true;\n      }\n    }\n    return false;\n  },\n  reference: function() \n\t{\n    return this.trues ? this.copy() : this;\n  },\n  last: function()\n  {\n    return this.points[ this.points.length - 1 ];\n  },\n  first: function()\n  {\n    return this.points[ 0 ];\n  },\n  point: function(i)\n  {\n    return this.points[ i ];\n  },\n  resolvePoint: function(i)\n  {\n    var p = this.points[ i ];\n    \n    if ( anim8.isFunction( p ) )\n    {\n      p = p();\n    }\n    \n    return p;\n  }\n};\n\n\n\n\n\nanim8.DeltaPath = function(name, calculator, points, deltas) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n};\n\nanim8.DeltaPath.prototype = new anim8.Path();\n\nanim8.DeltaPath.prototype.compute = function(out, delta) \n{\n  var ds = this.deltas;\n  var end = ds.length - 2;\n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.resolvePoint( i );\n  var p1 = this.resolvePoint( i + 1 );\n  \n  return this.calculator.interpolate( out, p0, p1, pd );\n};\n  \nanim8.DeltaPath.prototype.copy = function() \n{\n    return new anim8.DeltaPath( this.name, anim8.copy(this.points), anim8.copy(this.deltas), this.calculator );\n};\n\nanim8.path.delta = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  if (!path.deltas)\n  {\n    path.deltas = [];\n    \n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  for (var i = 0; i < path.points.length; i++)\n  {\n    path.points[ i ] = calc.parse( path.points[i] );\n  }\n  \n  return new anim8.DeltaPath(\n    path.name,\n    calc,\n    path.points,\n    path.deltas\n  );\n};\n\n\n\nanim8.PointPath = function(name, calculator, point)\n{\n  this.reset( name, calculator, [point] );\n};\n\nanim8.PointPath.prototype = new anim8.Path();\n\nanim8.PointPath.prototype.compute = function(out, delta)\n{\n  return this.calculator.copy( out, this.resolvePoint( 0 ) );\n};\n  \nanim8.PointPath.prototype.copy = function() \n{\n  return new anim8.PointPath( this.name, this.calculator, this.points[0] );\n};\n\nanim8.path.point = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  return new anim8.PointPath(\n    path.name,\n    calc,\n    calc.parse( path.point )\n  );\n};\n\n\n\nanim8.KeyframePath = function(name, calculator, points, deltas, easings) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n  this.easings = easings;\n};\n\nanim8.KeyframePath.prototype = new anim8.Path();\n\nanim8.KeyframePath.prototype.compute = function(out, delta) \n{  \n  var ds = this.deltas;\n  var end = ds.length - 2;\n  \n  if ( delta < ds[0] ) {\n    return false;\n  }\n  \n  if ( delta > ds[ds.length - 1] ) {\n    return this.points[ds.length - 1];\n  }\n  \n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.resolvePoint( i );\n  var p1 = this.resolvePoint( i + 1 );\n  var ea = this.easings[i];\n  \n  return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n};\n  \nanim8.KeyframePath.prototype.copy = function() \n{\n  return new anim8.KeyframePath( this.name, this.calculator, anim8.copy(this.points), anim8.copy(this.deltas), anim8.copy(this.easings) );\n};\n\nanim8.path.keyframe = function(point)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  if (!path.deltas)\n  {\n    path.deltas = [];\n    \n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n  \n  var defaultEasing = anim8.easing( path.easings, true );\n  \n  if ( !anim8.isDefined( path.easings ) || !anim8.isArray( path.easings ) || defaultEasing !== null )\n  {\n    path.easings = [];\n    \n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.easings[ i ] = defaultEasing;\n    }\n  }\n  \n  for (var i = 0; i < path.easings.length; i++)\n  {\n    path.easings[ i ] = anim8.easing( path.easings[ i ] );\n  }\n  \n  for (var i = 0; i < path.points.length; i++)\n  {\n    path.points[ i ] = calc.parse( path.points[i] );\n  }\n  \n  return new anim8.KeyframePath(\n    path.name,\n    calc,\n    path.points,\n    path.deltas,\n    path.easings\n  );\n};\n\n\n\n\nanim8.CubicPath = function(name, calculator, p0, p1, p2, p3)\n{\n  this.reset( name, calculator, [p0, p1, p2, p3] );\n};\n\nanim8.CubicPath.prototype = new anim8.Path();\n\nanim8.CubicPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var d3 = d1 * d2;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  var i3 = i1 * i2;\n  \n  out = calc.copy( out, this.resolvePoint( 0 ) );\n  out = calc.scale( out, i3 );\n  out = calc.adds( out, this.resolvePoint( 1 ), 3 * i2 * d1 );\n  out = calc.adds( out, this.resolvePoint( 2 ), 3 * i1 * d2 );\n  out = calc.adds( out, this.resolvePoint( 3 ), d3 );\n  \n  return out;\n};\n  \nanim8.CubicPath.prototype.copy = function() \n{\n  return new anim8.CubicPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n};\n\nanim8.path.cubic = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  return new anim8.CubicPath(\n    path.name,\n    calc,\n    calc.parse( path.p0 ),\n    calc.parse( path.p1 ),\n    calc.parse( path.p2 ),\n    calc.parse( path.p3 )\n  );\n};\n\n\n\n\nanim8.QuadraticPath = function(name, calculator, p0, p1, p2)\n{\n  this.reset( name, calculator, [p0, p1, p2] );\n};\n\nanim8.QuadraticPath.prototype = new anim8.Path();\n\nanim8.QuadraticPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  \n  out = calc.copy( out, this.resolvePoint( 0 ) );\n  out = calc.scale( out, i2 );\n  out = calc.adds( out, this.resolvePoint( 1 ), 2 * i1 * d1 );\n  out = calc.adds( out, this.resolvePoint( 2 ), d2 );\n    \n  return out;\n};\n  \nanim8.QuadraticPath.prototype.copy = function() \n{\n  return new anim8.QuadraticPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n};\n\nanim8.path.quadratic = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  return new anim8.QuadraticPath(\n    path.name,\n    calc,\n    calc.parse( path.p0 ),\n    calc.parse( path.p1 ),\n    calc.parse( path.p2 )\n  );\n};\n\n\n\nanim8.CompiledPath = function(name, path, pointCount)\n{\n  var calc = path.calculator;\n  var points = [];\n  \n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n  \n  this.reset( name, calc, points );\n};\n\nanim8.CompiledPath.prototype = new anim8.Path();\n\nanim8.CompiledPath.prototype.compute = function(out, delta)\n{\n  var a = Math.floor( delta * this.points.length );\n  var index = Math.min( a, this.points.length - 1 );\n  \n  return this.calculator.copy( out, this.resolvePoint( index ) );\n};\n  \nanim8.CompiledPath.prototype.copy = function() \n{\n  return new anim8.CompiledPath( this.name, this, this.points.length );\n};\n\nanim8.path.compiled = function(path)\n{\n  return new anim8.CompiledPath(\n    path.name,\n    anim8.path( path.path ),\n    path.pointCount\n  );\n};\n\n\n\n\n\nanim8.Tween = function(name, calculator, start, end)\n{\n  this.reset( name, calculator, [start, end] );\n};\n\nanim8.Tween.prototype = new anim8.Path();\n\nanim8.Tween.prototype.compute = function(out, delta)\n{\n  return this.calculator.interpolate( out, this.resolvePoint( 0 ), this.resolvePoint( 1 ), delta );\n};\n  \nanim8.Tween.prototype.copy = function() \n{\n    return new anim8.Tween( this.name, this.calculator, this.points[0], this.points[1] );\n};\n\nanim8.path.tween = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  return new anim8.Tween(\n    path.name, \n    calc,\n    calc.parse( path.start ),\n    calc.parse( path.end )\n  );\n};\n\n\n\n\nanim8.JumpPath = function(name, calculator, points)\n{\n  this.reset( name, calculator, points );\n};\n\nanim8.JumpPath.prototype = new anim8.Path();\n\nanim8.JumpPath.prototype.compute = function(out, delta)\n{\n  var a = Math.floor( delta * this.points.length );\n  var index = Math.min( a, this.points.length - 1 );\n  \n  return this.calculator.copy( out, this.resolvePoint( index ) );\n};\n  \nanim8.JumpPath.prototype.copy = function() \n{\n  return new anim8.JumpPath( this.name, this.calculator, anim8.copy(this.points) );\n};\n\nanim8.path.jump = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  for (var i = 0; i < path.points.length; i++)\n  {\n    path.points[ i ] = calc.parse( path.points[i] );\n  }\n  \n  return new anim8.JumpPath(\n    path.name, \n    calc,\n    path.points\n  );\n};\n\n","/**\n * Returns a spring if the provided argument is a spring, the name of a spring, or\n * an object with a spring type to be created. If none of these conditions are true\n * then false is returned.\n *\n * @param {anim8.Spring|string|object} spring\n */\nanim8.spring = function(spring)\n{\n  if ( spring instanceof anim8.Spring )\n  {\n    return spring;\n  }\n  if ( anim8.isString( spring ) && spring in anim8.spring )\n  {\n    return anim8.spring[ spring ];\n  }\n  if ( anim8.isObject( spring ) && spring.type in anim8.spring )\n  {\n    return anim8.spring[ spring.type ]( spring );\n  }\n  \n  return false;\n};\n\n\n/**\n * A spring has a resting point, a current position, and the velocity currently enacting on the position\n * based on the implementing classes logic.\n */\nanim8.Spring = function()\n{\n};\n\nanim8.Spring.prototype = \n{\n  /**\n   * Resets the spring's properties.\n   * \n   * @param {string} attribute\n   * @param {string|object} calculator\n   * @param {any} rest\n   * @param {any} position\n   */\n  reset: function(attribute, calculator, rest, position, gravity)\n  {\n    var calc = anim8.calculator( calculator );\n    var a = anim8.attribute( attribute );\n    \n    this.attribute    = attribute;\n    this.calculator   = calc;\n    this.rest         = calc.parse( rest, a.defaultValue );\n    this.position     = calc.parse( position, a.defaultValue );\n    this.gravity      = calc.parse( gravity, calc.create() );\n    this.velocity     = calc.create();\n    this.time         = 0;\n  },\n  \n  /**\n   * Updates the spring given the current time in milliseconds and the frame which\n   * contains (or will contain) the attribute to which this spring is animating.\n   *\n   * @param {number} now\n   * @param {object} frame\n   */\n  update: function(now, frame)\n  {\n    if (this.time === 0)\n    {\n      this.time = now;\n    }\n    \n    var calc = this.calculator;\n    \n    // the number of elapsed seconds (maxed to avoid crazy behavior with low FPS)\n    var dt = Math.min( (now - this.time) * 0.001, anim8.Spring.MAX_DT );\n    \n    // keep track of the starting position to determine whether the position has updated.\n    var starting = calc.copy( {}, this.position );\n    \n    // call the update method which should update the position\n    this.updateVelocity( dt );\n    this.velocity = calc.adds( this.velocity, this.gravity, dt );\n    this.position = calc.adds( this.position, this.velocity, dt );\n    \n    this.time = now;\n    \n    // track whether the attribute has updated so the animator knows if it needs to apply the attribute to the subject.\n    var updated = !calc.isEqual( starting, this.position, anim8.Spring.EPSILON );\n    \n    if ( updated )\n    {\n      frame[ this.attribute ] = this.position;\n    }\n    \n    return updated;\n  },\n  \n  /**\n   * Resolves the position to the expected format.\n   */\n  resolveRest: function()\n  {\n    return anim8.isFunction( this.rest ) ? this.rest() : this.rest;\n  },\n  \n  /**\n   * Method that's invoked on each update.\n   *\n   * @param {number} dt\n   */\n  updateVelocity: function(dt)\n  {\n    \n  }\n};\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nanim8.Spring.MAX_DT = 0.1;\n\n/**\n * The value used to determine whether two positions in a spring are different.\n */\nanim8.Spring.EPSILON = 0.0001;\n\n\n\n\n/**\n * A box spring is a simple string\n */\nanim8.BoxSpring = function(attribute, calculator, position, rest, constant, gravity)\n{\n  var a = anim8.attribute( attribute );\n    \n  this.reset( attribute, calculator, rest, position, gravity );\n  \n  this.acceleration   = this.calculator.create();\n  this.constant       = this.calculator.parse( constant, a.defaultValue );\n};\n\nanim8.BoxSpring.prototype = new anim8.Spring();\n\nanim8.BoxSpring.prototype.updateVelocity = function(dt)\n{\n  var calc = this.calculator;\n  \n  this.acceleration = calc.copy( this.acceleration, this.resolveRest() );\n  this.acceleration = calc.sub( this.acceleration, this.position );\n  this.acceleration = calc.mul( this.acceleration, this.constant );\n  this.velocity     = calc.adds( this.velocity, this.acceleration, dt );\n};\n\nanim8.spring.box = function(spring)\n{ \n  return new anim8.BoxSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.constant,\n    spring.gravity\n  );\n};\n\n\n\n\nanim8.LinearSpring = function(attribute, calculator, position, rest, damping, stiffness, gravity)\n{\n  var a = anim8.attribute( attribute );\n  \n  this.reset( attribute, calculator, rest, position, gravity );\n  \n  this.damping      = this.calculator.parse( damping, a.defaultValue );\n  this.stiffness    = this.calculator.parse( stiffness, a.defaultValue );\n  this.temp0        = this.calculator.create();\n  this.temp1        = this.calculator.create();\n};\n\nanim8.LinearSpring.prototype = new anim8.Spring();\n\nanim8.LinearSpring.prototype.updateVelocity = function(dt)\n{\n  // velocity += ((stiffness * (position - rest)) - (damping * velocity)) * elapsed.seconds;\n\t// position += velocity * elapsed.seconds;\n    \n  var calc = this.calculator;\n\n  this.temp1 = calc.copy( this.temp1, this.damping );\n  this.temp1 = calc.mul( this.temp1, this.velocity );\n  \n  this.temp0 = calc.copy( this.temp0, this.position );\n  this.temp0 = calc.sub( this.temp0, this.resolveRest() );\n  this.temp0 = calc.mul( this.temp0, this.stiffness );\n  this.temp0 = calc.sub( this.temp0, this.temp1 );\n  \n  this.velocity = calc.adds( this.velocity, this.temp0, dt );\n};\n\nanim8.spring.linear = function(spring)\n{ \n  return new anim8.LinearSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.damping,\n    spring.stiffness,\n    spring.gravity\n  );\n};\n\n\n\n\n\n\n\nanim8.DistanceSpring = function(attribute, calculator, position, rest, distance, damping, stiffness, gravity)\n{\n  this.reset( attribute, calculator, rest, position, gravity );\n  \n  this.distance   = distance;\n  this.damping    = damping;\n  this.stiffness  = stiffness;\n  this.temp       = this.calculator.create();\n};\n\nanim8.DistanceSpring.prototype = new anim8.Spring();\n\nanim8.DistanceSpring.prototype.updateVelocity = function(dt)\n{\n  // d = DISTANCE( position, rest )\n  // velocity += ((position - rest) / d * stiffness * |distance - d| - (damping * velocity)) * elapsed.seconds;\n  // position += velocity * elapsed.seconds;\n\n  var calc = this.calculator;\n  var rest = this.resolveRest();\n  \n  var d = calc.distance( this.position, rest );\n  \n  this.temp = calc.copy( this.temp, this.position )\n  this.temp = calc.sub( this.temp, rest );\n  \n  if ( d !== 0 )\n  {\n  \tthis.temp = calc.scale( this.temp, 1.0 / d );\n  \tthis.temp = calc.scale( this.temp, (d - this.distance) * this.stiffness );\n  }\n\n  this.temp = calc.adds( this.temp, this.velocity, -this.damping );\n\n  this.velocity = calc.adds( this.velocity, this.temp, dt );\n};\n\nanim8.spring.distance = function(spring)\n{ \n  return new anim8.DistanceSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.distance,\n    spring.damping,\n    spring.stiffness,\n    spring.gravity\n  );\n};","\nanim8.EventState = \n{\n  CREATED: 0,\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  PAUSED: 8,\n  FINISHED: 16\n};\n\nanim8.Event = function(attribute, path, duration, easing, delay, sleep, repeat, hasInitialState, parser) \n{\n  this.attribute \t      = attribute;\n  this.path \t\t\t      = path;\n  this.easing \t\t      = anim8.easing( easing );\n  this.delay \t\t\t      = anim8.coalesce( delay, anim8.defaults.delay );\n  this.duration \t      = anim8.coalesce( duration, anim8.defaults.duration );\n  this.sleep \t\t\t      = anim8.coalesce( sleep, anim8.defaults.sleep );\n  this.repeat \t\t      = anim8.coalesce( repeat, anim8.defaults.repeat );\n  this.hasInitialState  = hasInitialState;\n  this.parser           = parser;\n};\n\nanim8.Event.prototype = \n{\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  newInstance: function()\n  {\n    return new anim8.EventInstance( this );\n  }\n};\n\nanim8.EventInstance = function(event)\n{\n\tthis.event \t\t\t      = event;\n\tthis.attribute \t      = event.attribute;\n\tthis.path \t\t\t      = event.path;\n\tthis.duration \t      = event.duration;\n\tthis.easing \t\t      = event.easing;\n\tthis.delay \t\t\t      = event.delay;\n\tthis.sleep \t\t\t      = event.sleep;\n\tthis.repeat \t\t      = event.repeat;\n  this.state \t\t\t      = anim8.EventState.CREATED;\n  this.time \t\t\t      = 0;\n  this.pauseTime \t      = 0;\n  this.pauseState       = 0;\n\tthis.elapsed\t\t      = 0;\n\tthis.next\t\t\t\t      = null;\n};\n\nanim8.EventInstance.prototype = \n{\n  update: function(now, frame) \n\t{\n    var updated = false;\n    var elapsed = this.catchup( now );\n    \n    if ( this.isAnimating() ) \n\t\t{\t\t\t\n      var delta = elapsed / this.duration;\n      \n      if (delta >= 1 || this.duration === 0)\n\t\t\t{\n        if (!this.isInfinite() && --this.repeat === 0) \n\t\t\t\t{\n          this.finish(frame);\n\t\t\t\t\t\n          return true;\n        } \n\t\t\t\telse \n\t\t\t\t{\n          if (this.sleep)\n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.SLEEPING ); \n            delta = 1;\n            \n            this.trigger('sleeping', this);\n          } \n\t\t\t\t\telse \n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.ANIMATING );\n            delta -= 1;\n          }\n        }\n      }\n      \n      this.applyValue( frame, frame[this.attribute], delta );\n      updated = true;\n    }\n    \n    return updated;\n  },\n  hasInitialState: function()\n  {\n    return this.event.hasInitialState;\n  },\n  getParser: function()\n  {\n    return this.event.parser;\n  },\n  getPoint: function(delta)\n  {\n    return this.path.compute( this.path.calculator.create(), this.easing( delta ) );\n  },\n  getFuture: function(fdelta)\n  {\n    return this.getPoint( Math.min( 1.0, this.getDelta() + fdelta ) );\n  },\n  getDelta: function()\n  {\n    return this.isAnimating() ? Math.min( 1.0, (anim8.now() - this.time) / this.duration ) : 0.0;\n  },\n  getStart: function()\n  {\n    return this.getPoint( 0 );\n  },\n  getEnd: function() \n\t{\n    return this.getPoint( 1 );\n  },\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n        \n    if ( value !== false )\n    {\n      frame[this.attribute] = value;\n    }\n  },\n  catchup: function(now)\n\t{\n    if ( this.isPaused() )\n    {\n      return;\n    }\n    \n    if ( this.state === anim8.EventState.CREATED )\n\t\t{\n      this.time = now;\n\t\t\t\n      if ( this.delay )\n\t\t\t{\n        this.state = anim8.EventState.DELAYED;\n        \n        this.trigger('delaying', this);\n      } \n\t\t\telse \n\t\t\t{\n        this.state = anim8.EventState.ANIMATING;\n      }\n    }\n    \n\t\tvar elapsed = now - this.time;\n    \n    if ( this.isDelayed() )\n\t\t{\n      if ( elapsed > this.delay ) \n\t\t\t{\n        this.trigger('delayed', this);\n        \n        elapsed = this.progress( elapsed, this.delay, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n    if ( this.isSleeping() )\n\t\t{\n      if ( elapsed > this.sleep )\n\t\t\t{\n        this.trigger('slept', this);\n        \n        elapsed = this.progress( elapsed, this.sleep, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n    if ( this.isAnimating() && this.duration )\n    {\n      var cycle = this.duration + this.sleep;\n      var cycleCount = Math.floor( ( elapsed + this.sleep ) / cycle );\n      var maxCycles = Math.min( this.repeat, cycleCount );\n            \n      elapsed = this.progress( elapsed, maxCycles * cycle, anim8.EventState.ANIMATING );\n      \n      if ( !this.isInfinite() )\n      { \n        if (maxCycles === this.repeat)\n        {\n          elapsed = this.duration;\n          this.repeat = 1;\n        }\n        else\n        {\n          this.repeat -= cycleCount;\n        }\n      }\n      \n      if ( elapsed > this.duration )\n      {\n        elapsed = this.progress( elapsed, this.duration, anim8.EventState.SLEEPING );\n        \n        this.trigger('sleeping', this);\n      }\n    }\n\t\t\n\t\treturn elapsed;\n  },\n  progress: function(elapsed, time, newState) \n\t{\n    this.time += time;\n\t\tthis.elapsed += time;\n    this.state = newState;\n\t\t\n    return elapsed - time;\n  },\n  finish: function(frame) \n\t{\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = anim8.EventState.FINISHED;\n    \n    this.trigger('finish', this);\n  },\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  timeRemaining: function() \n\t{    \n\t\treturn this.totalTime() - this.elapsed;\n  },\n  timeRemainingInChain: function()\n  {\n    return this.timeRemaining() + (this.next ? this.next.timeRemainingInChain() : 0);\n  },\n  queue: function(e)\n  {\n    if ( this.next )\n    {\n      this.next.queue( e );\n    }\n    else\n    {\n      this.next = e;\n    }\n  },\n  pause: function() \n\t{\n    if (this.state !== anim8.EventState.PAUSED) \n\t\t{\n      this.pauseTime = anim8.now();\n      this.pauseState = this.state;\n      this.state = anim8.EventState.PAUSED; \n    }\n  },\n  resume: function() \n\t{\n    if (this.state === anim8.EventState.PAUSED) \n\t\t{\n      this.time += anim8.now() - this.pauseTime;\n      this.state = this.pauseState; \n    }\n  },\n  isInfinite: function()\n  {\n    return (this.repeat === Number.POSITIVE_INFINITY);\n  },\n\thasStarted: function()\n\t{\n\t\treturn (this.state !== anim8.EventState.CREATED && this.state !== anim8.EventState.DELAYED);\n\t},\n  isAnimating: function() \n\t{\n    return (this.state === anim8.EventState.ANIMATING);\n  },\n  isFinished: function() \n\t{\n    return (this.state === anim8.EventState.FINISHED);\n  },\n  isDelayed: function() \n\t{\n    return (this.state === anim8.EventState.DELAYED);\n  },\n  isPaused: function() \n\t{\n    return (this.state === anim8.EventState.PAUSED);\n  },\n  isSleeping: function() \n\t{\n    return (this.state === anim8.EventState.SLEEPING);\n  },\n  hasStates: function(states) \n\t{\n    return (this.state & states) !== 0;\n  },\n  stateText: function() \n\t{\n    switch(this.state) \n    {\n      case anim8.EventState.CREATED:            return \"created\";\n      case anim8.EventState.DELAYED:            return \"delayed\";\n      case anim8.EventState.ANIMATING:          return \"animating\";\n      case anim8.EventState.SLEEPING:           return \"sleeping\";\n      case anim8.EventState.FINISHED:           return \"finished\";\n    }\n  },\n  hasTrue: function()\n  {\n    return this.path.trues;\n  }\n};\n\n/**\n * Adds the following event methods to EventInstances: on, once, off, trigger.\n */\nanim8.eventize( anim8.EventInstance.prototype );","\n/**\n * Returns an animation based on the input. If the input is an instance of anim8.Animation that instance\n * is immediately returned. If the input is a string the animation with that name is returned. If the\n * input is an object an anonymous animation is created using the second options argument. If no animation\n * could be determined then false is returned.\n * \n * @param {anim8.Animation|string|object} animation\n * @param [object] options\n */\nanim8.animation = function(animation, options)\n{\n  if ( animation instanceof anim8.Animation )\n  {\n    return animation;\n  }\n\tif ( anim8.isString( animation ) && animation in anim8.animation )\n\t{\n\t\treturn anim8.animation[ animation ];\n\t}\n\tif ( anim8.isObject( animation ) )\n\t{\n\t\tvar events = [];\n\t\t\n\t\toptions = options || {};\n\t\t\n\t\tfor (var parserName in animation)\n\t\t{\n\t\t\tvar parser = anim8.parser( parserName );\n\t\t\t\n\t\t\tif ( parser !== false )\n\t\t\t{\n\t\t\t\tparser.parse( animation, options, events );\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (events.length)\n\t\t{\n\t\t\treturn new anim8.Animation( false, animation, options, events );\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Instantiates a new Animation given it's name, the input & options passed, and the events that\n * were generated from the input & options. If the name is false this is an anonymous animation.\n * Input & Options are used by parsers to generate events, options allow for an animations\n * default event properties to be overriden.\n *\n * @param {string} name\n * @param {object} input\n * @param [object] options\n * @param {array:anim8.Event} events\n */\nanim8.Animation = function(name, input, options, events)\n{\n\tthis.name = name;\n\tthis.input = input;\n\tthis.options = options;\n\tthis.events = events;\n};\n\nanim8.Animation.prototype = \n{\n  \n  /**\n   * Returns true if this animation was a saved animation, otherwise it's an anonymous one\n   * and false is returned.\n   */\n  isSaved: function()\n  {\n    return (this.name !== false);\n  },\n  \n  /**\n   * Generates an array of event instances from the events in this animation.\n   */\n  newEvents: function()\n  {\n    var e = [];\n    \n    for (var i = 0; i < this.events.length; i++)\n    {\n      e.push( this.events[i].newInstance() );\n    }\n    \n    return e;\n  }\n};\n\n/**\n * Saves an animation under the given name. It can be played, queued, and transitioned into\n * at a later time providing the name and optionally options to override with.\n *\n * @param {string} name\n * @param {object} animation\n * @param [object] options\n */\nanim8.save = function(name, animation, options)\n{\n  var animation = anim8.animation( animation, options );\n  \n  animation.name = name;\n  \n\tanim8.animation[name] = animation;\n};","\n/**\n * Instantiates a new Animator given a subject to animate.\n *\n * @param {any} e\n */\nanim8.Animator = function(e) \n{\n\tthis.reset( e );\n};\n\nanim8.Animator.prototype = \n{\n  /**\n   * Resets the animator given a subject to animate.\n   *\n   * @param {any} e\n   */\n\treset: function(e)\n\t{\n\t  this.e = e;\n\t  this.events = {};\n    this.springs = {};\n\t  this.attributes = {};\n\t  this.frame = {};\n    this.updated = {};\n\t  this.finished = false;\n\t\tthis.factory = null;\n    this.active = false;\n    \n    return this;\n\t},\n  \n  /**\n   * Restores any temporary state that may exist on this Animator that\n   * is a result from animations.\n   */\n  restore: function()\n  {\n    \n    return this;\n  },\n  \n  /**\n   * A method thats invoked along with all other animators before updates are called.\n   * This is used to make any necessary preparations before the animator is updated.\n   */\n  preupdate: function()\n  {\n\t\tthis.trigger('preupdate');\n    \n    return this;\n  },\n  \n  /**\n   * Updates the animator with the current time. All events and springs in this\n   * animator are updated.\n   *\n   * @param {number} now\n   */\n  update: function(now) \n\t{  \n    this.wasFinished = this.finished;\n    \n    this.finished = true;\n\t\t\n    for (var attr in this.events)\n    {\n      var e = this.events[ attr ];\n      \n      this.updated[ attr ] = e.update( now, this.frame );\n      \n      this.finished = this.finished && e.isFinished();\n    }\n    \n    for (var attr in this.springs)\n    {\n      var s = this.springs[ attr ];\n      \n      this.updated[ attr ] = s.update( now, this.frame );\n      \n      this.finished = false;\n    }\n\t\n\t\tthis.trigger('update');\n    \n    return this;\n  },\n  \n  /**\n   * Places the spring in this animator replacing any spring that exists for the same\n   * attribute. The next time the animator is updated the spring will be started.\n   *\n   * @param {anim8.Spring} s\n   */\n  placeSpring: function(s)\n  {\n    var attr = s.attribute;\n    \n    this.springs[ attr ] = s;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n\t\t\n\t\tthis.finished = false;\n  },\n  \n  /**\n   * Places the event in this animator replacing any event that exists for the same\n   * attribute. The next time the animator is updated the event will be started.\n   *\n   * @param {anim8.EventInstance} e\n   */\n  placeEvent: function(e)\n  {\n    var attr = e.attribute;\n    \n    this.events[ attr ] = e;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n\t\t\n\t\tthis.finished = false;\n  },\n  \n  /**\n   * Applies all updated attributes to the subject. This method is invoked with all of the other\n   * animators at the end of the animation cycle.\n   */\n  apply: function()\n\t{\n    for (var attr in this.frame)\n    {\n      if ( this.updated[ attr ] )\n      {\n        this.e[ attr ] = this.frame[ attr ]; \n\t\t\t\tthis.updated[ attr ] = false;\n      }\n    }\n\t\n\t\tthis.trigger('apply');\n\t\n    this.trimEvents();\n    \n    return this;\n  },\n  \n  /**\n   * Removes any finished events and places queued events. If the animator previously wasn't finished\n   * but now it is the 'finished' event will be triggered.\n   */\n  trimEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      var e = this.events[attr];\n      \n      if ( e.isFinished() )\n      {\n        if ( e.next )\n        {                    \n          this.placeEvent( e.next );\n          this.finished = false;\n        }\n        else\n        {\n          delete this.events[attr];\n        }\n      }\n    }\n    \n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n  },\n  \n  /**\n   * Returns the current value for the given attribute (or undefined if the attribute is not or \n   * has not animated).\n   *\n   * @param {string} attr\n   */\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n  \n  /**\n   * A method that is invoked when an animator is finished and is being removed from the list\n   * of currently animating Animators.\n   */\n\tdeactivate: function()\n\t{ \n    this.trigger('deactivate', this);\n\t},\n  \n  /**\n   * A method that can be invoked to destroy an animator - removing any relationship between\n   * the subject and animator. The next time an animator is generated for the subject a new\n   * one will be created.\n   */\n  destroy: function()\n  {\n    this.finished = true;\n    \n    this.trigger('destroyed');\n  },\n  \n  /**\n   * Creates event instances for the given animation and options. The animation can be an animation\n   * object or an animation name. If a name is provided the options are merged in.\n   *\n   * @param {anim8.Animation|string|object} animation\n   * @param [object] options\n   */\n  createEvents: function(animation, options)\n  {\n    options = options || {};\n    \n    var animation = anim8.animation( animation, options );\n  \n    if (animation === false)\n    {\n      return false;\n    }\n    \n    var events = animation.newEvents();\n    \n    if ( animation.isSaved() )\n    {      \n      for (var parserName in animation.input)\n      {\n        var parser = anim8.parser( parserName );\n        \n        if ( parser !== false )\n        {\n          parser.merge( animation.input, options, animation.options, events );\n        }\n      }\n    }\n    \n    this.onAnimation( animation, options, events );\n    \n    return events;\n  },\n  \n  /**\n   * A method invoked when an animation is about to be played in the Animator.\n   * \n   * @param {anim8.Animation} animation\n   * @param {object} options\n   * @param {array:anim8.EventInstance} events\n   */\n  onAnimation: function(animation, options, events)\n  {\n    \n  },\n  \n  /**\n   * Adds a spring to this animator replacing any existing spring for the same attribute.\n   * A spring object can be given, an instance of anim8.Spring, or a name of a saved Spring.\n   * \n   * @param {anim8.Spring|string|object} spring\n   */\n  spring: function(spring)\n  {\n    var spring = anim8.spring( spring );\n    \n    if ( spring === false )\n    {\n      return false;\n    }\n\n    this.placeSpring( spring );\n    \n    anim8.add( this );\n    \n    return spring;\n  },\n  \n  /**\n   * Removes springs for the specified attributes. If no attributes are specified then all springs\n   * are removed. Attributes can be specified as an array of attribute names or a string with attribute\n   * names separated by a space.\n   *\n   * @param {string|Array} attributes\n   */\n  unspring: function(attributes)\n  {\n    return this.springsFor( attributes, function(s)\n    {\n      delete this.springs[ s.attribute ];\n    });\n  },\n  \n  /**\n   * Adds an animation to this Animator optionally finishing events for attributes not specified in the\n   * given attribute. Events will be replaced immediately.\n   *\n   * @param {string|object|anim8.Animation} animation\n   * @param [object] options\n   * @param [boolean] all \n   */\n\tplay: function(animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    var attrs = {};\n    \n    for (var i = 0; i < events.length; i++)\n    { \n      this.placeEvent( events[i] );\n      \n      attrs[ events[i].attribute ] = true;\n    }\n    \n    if ( all )\n    {\n      for (var attr in this.events)\n      {\n        if ( !(attr in attrs) )\n        {\n          this.events[ attr ].finish( this.frame );\n        }\n      }\n    }\n    \n    anim8.add( this );\n    \n\t\treturn this;\n\t},\n  \n  /**\n   * Queues an animation on this Animator. The events generated for the given animation\n   * will all start at the same time - at the end of the events currently on the Animator.\n   *\n   * @param {string|object|anim8.Animation} animation\n   * @param [object] options\n   */\n\tqueue: function(animation, options)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n        \n    var maxRemaining = 0.0;\n    \n    for (var attr in this.events)\n    {\n      var e = this.events[ attr ];\n      \n      if ( !e.isInfinite() )\n      {\n        maxRemaining = Math.max( maxRemaining, this.events[attr].timeRemainingInChain() );  \n      }\n    }\n        \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      if ( attr in this.events  && !this.events[ attr ].isInfinite() )\n      {    \n        e.delay += (maxRemaining - this.events[attr].timeRemainingInChain());\n        \n        this.events[attr].queue( e );\n      }\n      else\n      {\n        e.delay += maxRemaining;\n        \n        this.placeEvent( e );\n      }\n    }\n    \n    anim8.add( this );\n    \n\t\treturn this;\n\t},\n  \n  /**\n   * Transitions from the currently playing events into a new animation. The transition is made\n   * by constructing a quadratic curve from the current value to a point further on the current\n   * path to the starting point of the new animation.\n   *\n   * @param {number} transitionTime \n   * @param {number} transitionDelta\n   * @param {string|function|array} transitionEasing\n   * @param {string|object|anim8.Animation} animation\n   * @param [object] options\n   * @param [boolean] all\n   */\n\ttransition: function(transitionTime, transitionDelta, transitionEasing, animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    // Check if we even need to transition\n    var transition = false;\n    \n    for (var i = 0; i < events.length && !transition; i++)\n    {      \n      if ( events[i].attribute in this.events )\n      {\n        transition = true;\n      }\n    }\n    \n    // Only transition if we need to\n    if ( transition )\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        var e1 = events[i];\n        var attr = e1.attribute;\n      \n        if ( attr in this.events )\n        {\n          var path = e1.path;\n          var calc = path.calculator;\n          var e2 = this.events[attr];\n        \n          var p0 = calc.copy( calc.create(), this.frame[attr] );\n          var p1 = e2.getFuture( transitionDelta );\n          var p2 = e1.getPoint( 0 );\n        \n          var transitionPath = new anim8.QuadraticPath( attr, calc, p0, p1, p2 );\n          var transitionEvent = new anim8.Event( attr, transitionPath, transitionTime, transitionEasing, 0, 0, 1, true ).newInstance();\n        \n          transitionEvent.next = e1;\n        \n          this.placeEvent( transitionEvent );\n        }\n        else\n        {\n          e1.delay += transitionTime;\n     \n          this.placeEvent( e1 );\n        }\n      }\n    }\n    // We don't need to transition, just play the events\n    else\n    {\n      for (var i = 0; i < events.length; i++)\n      { \n        this.placeEvent( events[i] );\n      }\n    }\n    \n    anim8.add( this );\n    \n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Tweens a single attribute or a map of attributes to target values.\n\t *\n\t * .tweenTo( attributeName, targetValue, duration, delay, easing, repeat, sleep )\n\t * .tweenTo( attributeMap, duration, delay, easing, repeat sleep )\n\t *\n\t * @param {object|string}\n\t * @param [any]\n\t * @param \n\t */\n\ttweenTo: function(input, a, b, c, d, e, f)\n\t{\n\t\tif ( anim8.isString( input ) )\n\t\t{\n\t\t\tvar attr = anim8.attribute( input );\n\t\t\tvar calc = anim8.calculator( attr.calculator );\n\t\t\tvar target = calc.parse( a, attr.defaultValue );\n\t\t\tvar duration = anim8.coalesce( b, anim8.defaults.duration );\n\t\t\tvar delay = anim8.coalesce( c, anim8.defaults.delay );\n\t\t\tvar easing = anim8.easing( d );\n\t\t\tvar repeat = anim8.coalesce( e, anim8.defaults.repeat );\n\t\t\tvar sleep = anim8.coalesce( f, anim8.defaults.sleep );\n\t\t\t\n\t\t\tvar path = new anim8.Tween( input, calc, this.frame[ input ], target );\n\t\t\tvar event = new anim8.Event( input, path, duration, easing, delay, sleep, repeat );\n\t\t\t\n\t\t\tthis.placeEvent( event.newInstance() );\n\t\t}\n\t\telse if ( anim8.isObject( input ) )\n\t\t{\n\t\t\tfor ( var attribute in input )\n\t\t\t{\n\t\t\t\tvar attr = anim8.attribute( input );\n\t\t\t\tvar calc = anim8.calculator( attr.calculator );\n\t\t\t\tvar target = calc.parse( input[ attribute ], attr.defaultValue );\n\t\t\t\tvar duration = anim8.coalesce( a, anim8.defaults.duration );\n\t\t\t\tvar delay = anim8.coalesce( b, anim8.defaults.delay );\n\t\t\t\tvar easing = anim8.easing( c );\n\t\t\t\tvar repeat = anim8.coalesce( d, anim8.defaults.repeat );\n\t\t\t\tvar sleep = anim8.coalesce( e, anim8.defaults.sleep );\n\t\t\t\t\n\t\t\t\tvar path = new anim8.Tween( input, calc, this.frame[ input ], target );\n\t\t\t\tvar event = new anim8.Event( input, path, duration, easing, delay, sleep, repeat );\n\t\t\t\t\n\t\t\t\tthis.placeEvent( event.newInstance() );\n\t\t\t}\n\t\t}\n\t\t\n\t\tanim8.add( this );\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Applies the initial state of all unstarted current events for the specified attributes immediately. \n\t * Attribute names can be given as an array or a space separated string. If no attributes are given all \n\t * attributes are assumed.\n\t *\n   * @param {string|array} attributes\n\t */\n\tapplyInitialState: function(attributes)\n\t{\n\t\tvar eventCount = this.eventsFor( attributes, function(event, attr)\n\t\t{\n\t\t\tif ( !event.hasStarted() && event.hasInitialState() )\n\t\t\t{\n\t\t\t\tevent.applyValue( this.frame, this.frame[ attr ], 0.0 );\n\t\t\t\t\n\t\t\t\tthis.updated[ attr ] = true;\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tthis.apply();\n\t\t\n\t\treturn eventCount;\n\t},\n  \n  /**\n   * Returns a function that returns the current value for the given attribute when invoked.\n   * \n   * @param {string} attribute\n   */\n  ref: function(attribute)\n  {\n    var animator = this;\n    var request = {};\n    \n    return function()\n    {\n      if ( attribute in animator.frame )\n      {\n        return animator.frame[ attribute ];\n      }\n      \n      request[ attribute ] = true;\n      \n      var current = animator.get( request );\n      \n      if ( anim8.isDefined( current[ attribute ] ) )\n      {\n        return current[ attribute ];\n      }\n      \n      return anim8.attribute( attribute ).defaultValue;\n    };\n  },\n  \n  /**\n   * Follows the attribute along the given path definition.\n   * \n   * @param {string} attribute\n   * @param {anim8.Path|object|string} path\n   * @param [number] duration\n   * @param [number] delay\n   * @param [function|string] easing\n   * @param [number] repeat\n   * @param [number] sleep  \n   */\n  follow: function(attribute, path, duration, delay, easing, repeat, sleep)\n  {\n    var path = anim8.path( path );\n    \n    // attribute, path, duration, easing, delay, sleep, repeat) \n    var event = new anim8.Event( \n      attribute, \n      path, \n      anim8.coalesce( duration, anim8.defaults.duration ),\n      anim8.easing( easing ),\n      anim8.coalesce( delay, anim8.defaults.delay ),\n      anim8.coalesce( sleep, anim8.defaults.sleep ),\n      anim8.coalesce( repeat, anim8.defaults.repeat ),\n      true\n    );\n    \n    this.placeEvent( event.newInstance() );\n    \n    anim8.add( this );\n    \n    return this;\n  },\n  \n  /**\n   * Helper method that calls a callback for each object in the given map that exists\n   * in the attribute string/array.\n   *\n   * @param {string|array} attributes\n   * @param {function} callback\n   * @param {object} objects\n   */\n  objectsFor: function(attributes, callback, objects)\n  {\n\t\tif ( anim8.isString( attributes ) )\n\t\t{\n\t\t\tattributes = attributes.split( ' ' );\n\t\t}\n    \n    var resulting = !anim8.isFunction( callback );\n    var objectCount = 0;\n    var results = [];\n    \n\t\tif ( anim8.isArray( attributes ) )\n\t\t{\n      for (var i = 0; i < attributes.length; i++)\n      {\n        var attr = attributes[i];\n        \n        if ( attr in objects )\n        {\n          if ( resulting )\n          {\n            results.push( objects[attr] );\n          }\n          else\n          {\n            callback.call( this, objects[attr], attr ); \n            \n            objectCount++;\n          }\n        }\n      }\n\t\t}\n    else\n    {\n      for (var attr in objects)\n      {\n        if ( resulting )\n        {\n          results.push( objects[attr] );\n        }\n        else\n        {\n          callback.call( this, objects[attr], attr ); \n          \n          objectCount++;\n        }\n      }\n    }\n    \n\t\treturn resulting ? results : objectCount;\n  },\n  \n  /**\n   * Invokes the callback for each event for the given attributes.\n   * \n   * @param {string|array} attributes\n   * @param {function} callback\n   */\n\teventsFor: function(attributes, callback)\n\t{\n\t\treturn this.objectsFor( attributes, callback, this.events );\n\t},\n  \n  /**\n   * Invokes the callback for each spring for the given attributes.\n   *\n   * @param {string|array} attributes\n   * @param {function} callback\n   */\n\tspringsFor: function(attributes, callback)\n\t{\n\t\treturn this.objectsFor( attributes, callback, this.springs );\n\t},\n\t\n  /**\n   * Stops all events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tstop: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event, attr) \n\t\t{\n\t\t\tdelete this.events[ attr ];\n\t\t});\n\t},\n  \n  /**\n   * Ends all events for the specified attributes. If events are queued the last value of the last event\n   * is applied to this Animator before being completely removed. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tend: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event) \n\t\t{\n\t\t\twhile (event.next)\n\t\t\t{\n\t\t\t\tevent = event.next;\n\t\t\t}\n\t\t\t\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n  \n  /**\n   * Finishes all current events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tfinish: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n  \n  /**\n   * Pauses all current events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tpause: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.pause();\n\t\t});\n\t},\n  \n  /**\n   * Resumes all current events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tresume: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.resume();\n\t\t});\n\t},\n  \n  /**\n   * Sets the given attributes to this Animator immediately.\n   *\n   * @param {object} attributes\n   */\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n\t\t\tthis.updated[ attr ] = true;\n    }\n    \n    this.apply();\n    \n    return this;\n  },\n  \n  /**\n   * Gets the current attribute values for all attributes specified. The argument must be an object\n   * where the key is the name of an attribute.\n   *\n   * @param {object} attributes\n   */\n  get: function(attributes)\n  {\n    var out = {};\n    \n    for (var attr in attributes)\n    {\n      out[ attr ] = this.frame[ attr ];\n    }\n    \n    return out;\n  },\n  \n  /**\n   * Returns true if there are any events on this Animator.\n   */\n  hasEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      return true;\n    }\n    \n    return false;\n  },\n  \n  /**\n   * Returns true if there are any springs on this Animator.\n   */\n  hasSprings: function()\n  {\n    for (var attr in this.springs)\n    {\n      return true;\n    }\n    \n    return false;\n  },\n  \n  /**\n   * Returns true if there are any springs on this Animator or animating events.\n   */\n  isAnimating: function()\n  {\n    if ( this.hasSprings() )\n    {\n      return true;\n    }\n    \n    for (var attr in this.events)\n    {\n      if ( this.events[attr].isAnimating() )\n      {\n        return true;\n      }\n    }\n    \n    return false;\n  },\n\t\n\t/**\n\t * Defers the method calls following this one to when the given event type (on or once) and event.\n\t * To return this animator you need to call undefer() as many times as you called defer().\n\t *\n\t * @param {string} eventType\n\t * @param {string} event\n\t */\n\tdefer: function(eventType, event, callback)\n\t{\n\t\treturn new anim8.DeferAnimator( this, this, eventType, event, callback );\n\t}\n  \n};\n\n/**\n * Adds the following event methods to Animators: on, once, off, trigger.\n */\nanim8.eventize( anim8.Animator.prototype );\n\n/**\n * Provides the ability to defer method calls until certain events are triggered.\n */\nanim8.DeferAnimator = function(animator, previous, eventType, event)\n{\n\tthis.$reset( animator, previous, eventType, event );\n};\n\n/**\n * Creates the Defer prototype for the following Animator methods.\n */\nanim8.DeferAnimator.prototype = new anim8.Defer( anim8.DeferAnimator, [\n  'play', 'queue', 'transition', 'restore', 'set', 'resume', 'pause', \n  'finish', 'end', 'stop', 'follow', 'applyInitialState', 'tweenTo', \n  'spring', 'unspring', 'apply', 'placeSpring', 'placeEvent'\n]);\n","anim8.Sequence = function(animators, delay, easing, animation, options)\n{\n  this.animators = animators;\n  this.delay = delay;\n  this.easing = anim8.easing( easing );\n  this.animation = anim8.animation( animation, options );\n  this.options = options;\n};\n\nanim8.Sequence.prototype =\n{\n  maxDelay: function()\n  {\n    return this.delay * (this.animators.length - 1);\n  },\n  \n  createEvents: function(i)\n  {\n    var events = this.animation.newEvents();\n    var delta = i / (this.animators.length - 1);\n    var delayOffset = this.easing( delta ) * this.maxDelay();\n    \n    for (var k = 0; k < events.length; k++)\n    {\n      events[k].delay += delayOffset;\n    }\n    \n    return events;\n  },\n  \n  play: function()\n  {    \n    this.animators.each(function(animator, i)\n    {\n      var events = this.createEvents(i);\n      \n      for (var k = 0; k < events.length; k++)\n      {\n        animator.placeEvent( events[k] );\n      }\n            \n    }, this);\n    \n    return this.add();\n  },\n  \n  add: function()\n  {\n    this.animators.each(function(animator)\n    {\n      if ( !animator.active )\n      {\n        animator.active = true;\n        anim8.animating.push( animator ); \n      }\n    });\n    \n    this.animators.applyInitialState();\n    \n    if ( !anim8.running )\n    {\n      anim8.running = true;\n  \t\tanim8.trigger('starting');\n  \t\tanim8.requestRun( anim8.run );\n    }\n    \n    return this;\n  }\n  \n};","\n/**\n * Returns a parser based on the input. If the input is a function that function is immediately returned.\n * If the input is a string the parser with that name is returned. If no parser could be determined then\n * false is returned.\n * \n * @param {function|string} parser\n */\nanim8.parser = function(parser)\n{\n  if ( parser instanceof anim8.Parser )\n  {\n    return parser;\n  }\n\tif ( anim8.isString( parser ) && parser in anim8.parser )\n\t{\n\t\treturn anim8.parser[ parser ];\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Instantiates a new Parser.\n */\nanim8.Parser = function()\n{\n  \n};\n\nanim8.Parser.prototype = \n{\n  \n  /**\n   * Parses the animation object (and optionally an option object) and pushes\n   * all generated events to the given array.\n   * \n   * @param {object} animation\n   * @param {object} options\n   * @param {Array} events\n   */\n  parse: function( animation, options, events )\n  {\n    return true;\n  },\n  \n  /**\n   * Merges the options with the given event instances. This is when an existing \n   * animation is provided but the user wants to override the animation's options.\n   *\n   * Because event properties can be specified in several places there's a priority\n   * to which one takes precedence. The properties specified in the animation object\n   * itself are highest priority, followed by the new options, then by the old\n   * options, and finally by the existing property on the event instance.\n   *\n   * @param {object} animation\n   * @param {object} newOptions\n   * @param {object} oldOptions\n   * @param {Array} events\n   */\n  merge: function( animation, newOptions, oldOptions, events )\n  {\n    var durations = animation.durations || {};\n    var easings   = animation.easings || {};\n    var delays    = animation.delays || {};\n    var sleeps    = animation.sleeps || {};\n    var repeats   = animation.repeats || {};\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      if ( e.getParser() !== this )\n      {\n        continue;\n      }\n      \n      e.easing   = anim8.coalesce( easings[attr],   newOptions.easing,    oldOptions.easing,    e.easing );\n      e.duration = anim8.coalesce( durations[attr], newOptions.duration,  oldOptions.duration,  e.duration );\n      e.delay    = anim8.coalesce( delays[attr],    newOptions.delay,     oldOptions.delay,     e.delay );\n      e.sleep    = anim8.coalesce( sleeps[attr],    newOptions.sleep,     oldOptions.sleep,     e.sleep );\n      e.repeat   = anim8.coalesce( repeats[attr],   newOptions.repeat,    oldOptions.repeat,    e.repeat );\n      e.easing   = anim8.easing( e.easing );\n    }\n  }\n};","\n/**\n * Instantiates a new parser for the 'deltas' & 'values animation type.\n */\nanim8.ParserDeltas = function()\n{\n  \n};\n\n// ParserDeltas extends anim8.Parser()\nanim8.ParserDeltas.prototype = new anim8.Parser();\n  \n/**\n * Parses the animation object (and optionally an option object) and pushes\n * all generated events to the given array.\n * \n * @param {object} animation\n * @param {object} options\n * @param {Array} events\n */\nanim8.ParserDeltas.prototype.parse = function( animation, options, events )\n{\n  // 1. If deltas wasn't specified, assume a uniform distribution of points\n  // 2. If deltas was an array, expand out into an object where the keys are attributes and the value is the delta array\n  // 3. Generate the events\n  \n\tvar deltas = animation.deltas;\n\tvar values = animation.values;\n\n  if ( !anim8.isDefined( deltas ) )\n  {\n    var valueCount = 0;\n    \n\t\tfor (var attr in values)\n\t\t{\n      valueCount++; \n    }\n    \n    deltas = [];\n    \n    for (var i = 0; i < valueCount; i++)\n    {\n      deltas[i] = i / (valueCount - 1);\n    }\n  }\n\tif ( anim8.isArray( deltas ) )\n\t{\n\t\tvar deltaObject = {};\n\t\t\n\t\tfor (var attr in values)\n\t\t{\n\t\t\tdeltaObject[attr] = deltas;\t\n\t\t}\n\t\t\n\t\tdeltas = deltaObject;\n\t}\n\t\n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculators[attr] = anim8.calculator.default;\n\t\t\tdefaults[attr] = calculators[attr].create();\n    }\n\t\t\n\t\tfor (var k = 0; k < value.length; k++)\n\t\t{\n\t\t\tvalue[k] = calculators[attr].parse( value[k], defaults[attr] );\n\t\t}\n\t\t\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var easing   = anim8.coalesce( easings[attr], options.easing, anim8.defaults.easing );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.DeltaPath( attr, calculators[attr], values[attr], deltas[attr] );\n    var event    = new anim8.Event( attr, path, duration, anim8.easing( easing ), delay, sleep, repeat, true, this );\n    \n    events.push( event );\n\t}\n};\n\n// Add the parser to the object of possible parsers\nanim8.parser.values = new anim8.ParserDeltas();","\n/**\n * Instantiates a new parser for the 'final' animation type.\n */\nanim8.ParserFinal = function()\n{\n  \n};\n\n// ParserFinal extends anim8.Parser()\nanim8.ParserFinal.prototype = new anim8.Parser();\n  \n/**\n * Parses the animation object (and optionally an option object) and pushes\n * all generated events to the given array.\n * \n * @param {object} animation\n * @param {object} options\n * @param {Array} events\n */\nanim8.ParserFinal.prototype.parse = function( animation, options, events )\n{\n  // 1. Generate the events, only caring about the delays and durations\n  \n\tvar values = animation.final;\n\t\n  var delays = animation.delays || {};\n  var durations = animation.durations || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n\n    value = calculator.parse( value, defaultValue ); \n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay + duration, 0, 1, false, this );\n    \n    events.push( event );\n\t}\n};\n\n/**\n * Merges the options with the given event instances. This is when an existing \n * animation is provided but the user wants to override the animation's options.\n *\n * Because event properties can be specified in several places there's a priority\n * to which one takes precedence. The properties specified in the animation object\n * itself are highest priority, followed by the new options, then by the old\n * options, and finally by the existing property on the event instance.\n *\n * @param {object} animation\n * @param {object} newOptions\n * @param {object} oldOptions\n * @param {Array} events\n */\nanim8.ParserFinal.prototype.merge = function( animation, newOptions, oldOptions, events )\n{\n  var durations = animation.durations || {};\n  var delays    = animation.delays || {};\n  \n  for (var i = 0; i < events.length; i++)\n  {\n    var e = events[i];\n    var attr = e.attribute;\n      \n    if ( e.getParser() !== this )\n    {\n      continue;\n    }\n    \n    e.delay    = anim8.coalesce( delays[attr],    newOptions.delay,     oldOptions.delay,     e.delay ) +\n                 anim8.coalesce( durations[attr], newOptions.duration,  oldOptions.duration,  e.duration );\n  }\n};\n\n// Add the parser to the object of possible parsers\nanim8.parser.final = new anim8.ParserFinal();","\n/**\n * Instantiates a new parser for the 'initial' animation type.\n */\nanim8.ParserInitial = function()\n{\n  \n};\n\n// ParserInitial extends anim8.Parser()\nanim8.ParserInitial.prototype = new anim8.Parser();\n  \n/**\n * Parses the animation object (and optionally an option object) and pushes\n * all generated events to the given array.\n * \n * @param {object} animation\n * @param {object} options\n * @param {Array} events\n */\nanim8.ParserInitial.prototype.parse = function( animation, options, events )\n{\n  // 1. Generate the events, only caring about the delays\n  \n\tvar values = animation.initial;\n\t\n  var delays = animation.delays || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n    \n    value = calculator.parse( value, defaultValue ); \n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay, 0, 1, true, this );\n    \n    events.push( event );\n\t}\n};\n\n/**\n * Merges the options with the given event instances. This is when an existing \n * animation is provided but the user wants to override the animation's options.\n *\n * Because event properties can be specified in several places there's a priority\n * to which one takes precedence. The properties specified in the animation object\n * itself are highest priority, followed by the new options, then by the old\n * options, and finally by the existing property on the event instance.\n *\n * @param {object} animation\n * @param {object} newOptions\n * @param {object} oldOptions\n * @param {Array} events\n */\nanim8.ParserInitial.prototype.merge = function( animation, newOptions, oldOptions, events )\n{\n  var durations = animation.durations || {};\n  var delays    = animation.delays || {};\n  \n  for (var i = 0; i < events.length; i++)\n  {\n    var e = events[i];\n    var attr = e.attribute;\n      \n    if ( e.getParser() !== this )\n    {\n      continue;\n    }\n    \n    e.delay    = anim8.coalesce( delays[attr],    newOptions.delay,     oldOptions.delay,     e.delay );\n  }\n};\n\n// Add the parser to the object of possible parsers\nanim8.parser.initial = new anim8.ParserInitial();","\n/**\n * Instantiates a new parser for the 'keyframe' animation type.\n */\nanim8.ParserKeyframe = function()\n{\n  \n};\n\n// ParserKeyframe extends anim8.Parser()\nanim8.ParserKeyframe.prototype = new anim8.Parser();\n  \n/**\n * Parses the animation object (and optionally an option object) and pushes\n * all generated events to the given array.\n * \n * @param {object} animation\n * @param {object} options\n * @param {Array} events\n */\nanim8.ParserKeyframe.prototype.parse = function( animation, options, events )\n{\n  // 1. Normalize keys by converting aliases to the actual value\n  // 2. Split up keys that have commas into multiple entries\n  // 3. Validate keys and remove invalid ones - also calculate max key value\n  // 4. Sort frames by the key\n  // 5. Expand frames to generate delta arrays, value arrays, and easing arrays\n  // 6. Generate the events\n  \n  var kframes = animation.keyframe;\n  \n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  \n  var teasing = anim8.easing( anim8.coalesce( options.teasing, anim8.defaults.teasing ) );\n  \n  var sort = false;\n  \n  var aliases = {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  };\n  \n  // split up comma delimited times\n  for (var time in kframes)\n  {\n    if ( time in aliases )\n    {\n      kframes[ aliases[time] ] = kframes[ time ];\n      \n      delete kframes[ time ];\n    }\n    else if ( time.indexOf(',') !== -1 )\n    {\n      var times = time.split(',');\n      \n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i]] = kframes[time];\n      }\n      \n      delete kframes[time];\n      \n      sort = true;\n    }\n  }\n  \n  var times = [];\n  \n  // validate times\n  var lastTime = 0.0;\n  var maxTime = 0.0;\n  \n  for (var time in kframes)\n  {\n    var t = parseFloat(time);\n    \n    if (isNaN(t))\n    {\n      delete kframes[time];\n    }\n    else\n    {\n      if (t < lastTime)\n      {\n        sort = true;\n      }\n      \n      times.push({\n        order: t,\n        key: time,\n        value: kframes[time]\n      });\n      \n      lastTime = t;\n      \n      maxTime = Math.max( maxTime, t );\n    }\n  }\n  \n  // sort if necessary\n  if (sort)\n  {\n    times.sort(function(a, b) {\n      return a.order - b.order;\n    });\n    \n    kframes = {};\n    \n    for (var i = 0; i < times.length; i++)\n    {\n      kframes[times[i].key] = times[i].value;\n    }\n  }\n  \n  // split up into deltas and values\n  var deltas = {};\n  var values = {};\n  var calculators = {};\n\tvar defaults = {};\n  var pathEasings = {};\n  \n  for (var i = 0; i < times.length; i++)\n  {\n    var frame = times[i];\n    var easing = anim8.coalesce( frame.value.easing, options.easing );\n    \n    delete frame.value.easing;\n    \n    for (var attr in frame.value)\n    {\n      if ( !(attr in deltas) )\n      {\n        deltas[attr] = [];\n        values[attr] = [];\n        pathEasings[attr] = [];\n        \n        if (attr in anim8.attribute)\n        {\n          calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n        }\n        else\n        {\n          calculators[attr] = anim8.calculator.default;\n\t\t\t\t\tdefaults[attr] = calculators[attr].create();\n        }\n      }\n\t\t\t\n      deltas[attr].push( frame.order / maxTime );\n      values[attr].push( calculators[attr].parse( frame.value[attr], defaults[attr] ) );\n      pathEasings[attr].push( anim8.easing( anim8.coalesce( easings[attr], easing ) ) );\n    }\n  }\n\t\n  // create events & paths\n  for (var attr in deltas)\n  {\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n    \n    var path     = new anim8.KeyframePath( attr, calculators[attr], values[attr], deltas[attr], pathEasings[attr] );\n    var event    = new anim8.Event( attr, path, duration, teasing, delay, sleep, repeat, true, this );\n    \n    events.push( event );\n  }\n};\n\n// Add the parser to the object of possible parsers\nanim8.parser.keyframe = new anim8.ParserKeyframe();","\n/**\n * The factory for Plain-Old-Javascript-Objects.\n */\nanim8.factories.object = \n{\n  is: function(subject) \n\t{\n    return anim8.isObject( subject ) && !anim8.isElement( subject );\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n    var animator = from.$animator;\n    \n    if ( !animator )\n    {\n      animator = new anim8.Animator( from );\n      animator.factory = this;\n      \n      from.$animator = animator;\n    }\n    \n    animators.push( animator );\n  }\n};","\n/*\n  DOM create styles to apply, then apply them all at the same time\n  don't apply styles if they're impercivable (convert value to pixels of applicable)\n\n*/\n\n/**\n * All DOM related\n */\nanim8.dom = {};\n\n/* \n  anim8.property[name] = {\n    get: function(e, anim) {\n      // based on anim.animating, gets one or more value from the entity and places it on anim.frame. this function should only do this for an attribute if\n      // anim.animating[attribute] === false. When it successfully gets a value anim.animating[attribute] should be set to true. This is called before an animation\n      // begins on attributes that will be animated based on the current value. \n    },\n    set: function(e, anim) {\n      // applies the applicable attributes in anim.frame to the entity, \n    }\n }\n*/\nanim8.property = function(prop) \n{\n  if ( anim8.isObject( prop ) && anim8.isFunction( prop.get ) && anim8.isFunction( prop.set ) ) \n  {\n    return prop;\n  }\n  if ( anim8.isString( prop ) && prop in anim8.property )\n  {\n\t  return anim8.property[ prop ];\n  }\n\t\n  throw prop + ' is not a valid property';\n}\n\n/**\n * Computes the desired style of the given element and returns it as a string. The style\n * given must be in hyphenated format like so: anim8.style( element, 'font-size' ) = '12px'\n */\nanim8.style = (function()\n{\n  var hyphenize = function(str) \n\t{\n    str = str.replace(/[a-z][A-Z]/g, function(str, letter)\n    {\n     return str[0] + '-' + str[1].toLowerCase();\n    });\n    \n    str = str.replace(/^Webkit/, '-webkit');\n    str = str.replace(/^Moz/, '-moz');\n    str = str.replace(/^Ms/, '-ms');\n    str = str.replace(/^O/, '-o');\n    str = str.replace(/^Khtml/, '-khtml');\n    \n    return str;\n  };\n\t\n\treturn function(e, style) \n\t{\n\t  if (e.currentStyle)\n\t\t{\n\t    return e.currentStyle[ style ];\n\t  } \n\t\telse if (document.defaultView && document.defaultView.getComputedStyle) \n\t\t{\n\t    return document.defaultView.getComputedStyle( e, null ).getPropertyValue( hyphenize( style ) );\n\t  } \n\t\telse \n\t\t{\n\t    return e.style[ style ]; \n\t  }\n\t};\n\t\n})();\n\n/**\n * Given an array of styles this will return the first one that is present on elements in the current browser.\n */\nanim8.prefix = (function() \n{\n  var a = document.createElement('a');\n  \n  return function(prefixes) \n  {\n    for (var i = 0; i < prefixes.length; i++) \n    {\n      if ( anim8.isDefined( a.style[ prefixes[ i ] ] ) ) \n      {\n        return prefixes[i];\n      }\n    }\n    return false;\n  };\n  \n})();\n\n/**\n * Calculators how many pixels a given value & unit is.\n * \n * For Example: anim8.toPixels( 100, 'in' ) \n *    returns how many pixels are in 1 inch, with up to 2 decimal points of accuracy.\n */\nanim8.toPixels = function(baseValue, baseUnit, defaultRate)\n{\n  if ( document.body )\n  {\n    var div = document.createElement('div');\n    document.body.appendChild( div );\n    div.style.width = baseValue + baseUnit;\n    var pixels = (div.offsetWidth / baseValue);\n    document.body.removeChild( div );\n    return pixels || defaultRate;\n  }\n  \n  return defaultRate;\n};\n\n/**\n * Parses the string for a value and a unit.\n *\n * @param {string} value\n */\nanim8.parseValue = (function()\n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(px|em|%|vw|ex|cm|mm|in|pt|pc|deg|rad)?/;\n  \n  return function(x)\n  {\n    var parsed = regex.exec( x );\n    \n    if (parsed) \n    {      \n      return {\n        value: parseFloat( parsed[1] ),\n        unit: parsed[3]\n      }\n    }\n    \n    return false;\n  };\n})();\n\n\n/**\n * Converts one unit to another for a given element.\n *\n * For Example: anim8.convert( element, '100px', '%', 'parentWidth' )\n *    returns how much percent 100px relativeTo parentWidth of the given element\n *\n * @param {HTMLElement} e\n * @param {string} from\n * @param {string} toUnit\n * @param {string} relativeTo\n */\nanim8.convert = (function()\n{  \n  var getFontSize = function(e, notUnit)\n  {\n    var fontSize = anim8.style( e, 'fontSize' );\n    var parsed = anim8.parseValue( fontSize );\n    \n    if ( !parsed || parsed.unit === notUnit )\n    {\n      return 12;\n    }\n    \n    if ( parsed.unit === 'px' ) \n    {\n      return parsed.value;\n    }\n    \n    return getConverterScale( e, conversions[ parsed.unit ].px, relativeTo );\n  };\n\n  var variables = {};\n  \n  variables.parentWidth = function(e)\n  {\n    return e.parentNode.scrollWidth;\n  };\n  variables.parentHeight = function(e)\n  {\n    return e.parentNode.scrollHeight;\n  };\n  variables.width = function(e)\n  {\n    return e.offsetWidth;\n  };\n  variables.height = function(e)\n  {\n    return e.offsetHeight;\n  };\n  variables.fontSize = function(e)\n  {\n    return getFontSize( e, '%' );\n  };\n  variables.parentFontSize = function(e)\n  {\n    return getFontSize( e.parentNode, '%' );\n  };\n  variables.htmlFontSize = function(e)\n  {\n    var htmlElement = document.getElementsByTagName(\"html\")[0];\n    \n    return getFontSize( htmlElement, '%' );\n  };\n  \n  var conversions = {};\n  \n  conversions.pt  = { px: anim8.toPixels(100, 'pt') };\n  conversions.in  = { px: anim8.toPixels(100, 'in') };\n  conversions.cm  = { px: anim8.toPixels(1000, 'cm') };\n  conversions.mm  = { px: anim8.toPixels(100000, 'mm') };\n  conversions.vw  = { px: anim8.toPixels(1000, 'vw') };\n  conversions.deg = { rad: Math.PI / 180.0};\n\n  conversions.em = \n  {\n    px: function(e, relativeTo) \n    {\n      return getFontSize( e, 'em' );\n    }\n  };\n  \n  conversions.rem = \n  {\n    px: function(e, relativeTo) \n    {\n      var htmlElement = document.getElementsByTagName(\"html\")[0];\n      \n      return getFontSize( htmlElement, 'rem' );\n    }\n  };\n  \n  conversions['%'] = \n  {\n    px: function(e, relativeTo) \n    {\n      if ( anim8.isNumber( relativeTo ) )\n      {\n        return relativeTo;\n      }\n      if ( relativeTo in variables )\n      {\n        return variables[ relativeTo ]( e ) / 100.0;\n      }\n      \n      return 1.0;\n    }\n  };\n  \n  // Populate conversions going other way.\n  for (var unit in conversions)\n  {\n    for (var to in conversions[ unit ])\n    {\n      if ( !(to in conversions) )\n      {\n        conversions[ to ] = {};\n      }\n      \n      if ( !(unit in conversions[ to ]) )\n      {\n        var given = conversions[ unit ][ to ];\n        \n        if ( anim8.isNumber( given ) )\n        {\n          conversions[ to ][ unit ] = 1.0 / given;  \n        }\n        if ( anim8.isFunction( given ) )\n        {\n          conversions[ to ][ unit ] = (function(converter) \n          {\n            return function(e, relativeTo) \n            {\n              return 1.0 / converter( e, relativeTo );\n            };\n          })( given );\n        }\n      }\n    }\n  }\n  \n  // Given an element, convert, and relativeTo - return the number we need to multiply by.\n  var getConverterScale = function(e, converter, relativeTo)\n  {\n    if ( anim8.isNumber( converter ) )\n    {\n      return converter;\n    }\n    else if ( anim8.isFunction( converter ) )\n    {\n      return converter( e, relativeTo );\n    }\n    \n    return 1.0;\n  };\n  \n  return function(e, from, toUnit, relativeTo)\n  {\n    if ( anim8.isNumber( from ) )\n    {\n      return from;\n    }\n    \n    var parsed = anim8.parseValue( from );\n    \n    if ( !parsed )\n    {\n      return false;\n    }\n    \n    var value = parsed.value;\n    var fromUnit = parsed.unit;\n    \n    if ( !fromUnit || fromUnit === toUnit )\n    {\n      return value;\n    }\n    \n    // First see if we have a direct conversion available...\n    if ( fromUnit in conversions && toUnit in conversions[ fromUnit ] )\n    {\n      var converter = conversions[ fromUnit ][ toUnit ];\n      \n      value *= getConverterScale( e, converter, relativeTo );\n    }\n    // Otherwise convert it to px, then to the desired unit\n    else if ( fromUnit in conversions && conversions[ fromUnit ].px && toUnit in conversions.px )\n    {\n      var converter1 = conversions[ fromUnit ].px;\n      var converter2 = conversions.px[ toUnit ];\n      \n      value *= getConverterScale( e, converter1, relativeTo );\n      value *= getConverterScale( e, converter2, relativeTo );\n    }\n    \n    return value;\n  };\n  \n})();\n\n\nanim8.factories.dom = \n{\n\tids: 0,\n  \n\tcached: {},\n  \n  attribute: 'anim8',\n  \n  is: function(subject) \n\t{\n    return anim8.isElement( subject );\n  },\n  \n  has: function(from)\n  {\n    return from.getAttribute( this.attribute ) in this.cached;\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n\t\tvar animatorId = from.getAttribute( this.attribute );\n\t\t\n\t\tif (!(animatorId in this.cached)) \n\t\t{\n\t\t\tvar animator = new anim8.DomAnimator( from );\n\t\t\t\n\t\t\tfrom.setAttribute( this.attribute, animatorId = animator.id = ++this.ids );\n\t\t\t\n\t\t\tanimator.factory = this;\n\t\t\t\n\t\t\tthis.cached[animatorId] = animator;\n\t\t}\n\t\t\n\t\tanimators.push( this.cached[animatorId] );\n  },\n  \n\tdestroy: function(animator) \n\t{\n\t\tdelete this.cached[ animator.id ];\n\t}\n};","\nanim8.property.factory = function(nm, relativeTo) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var style = anim8.style( e, nm );\n        var converted = anim8.convert( e, style, anim.units[ nm ], relativeTo );\n        \n        if ( converted !== false ) \n        {\n          anim.frame[nm] = converted;\n          anim.animating[nm] = true;\n        }\n      }\n    },\n    set: function(e, anim) \n    { \n      anim.styles[nm] = anim.value( nm );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.factoryDerivable = function(nm, relativeTo, deriver) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var style = anim8.style( e, nm );\n        var converted = anim8.convert( e, style, anim.units[ nm ], relativeTo );\n        \n        if ( converted !== false ) \n        {\n          anim.frame[nm] = converted;\n          anim.animating[nm] = true;\n        }\n        else if ( anim8.isFunction( deriver ) )\n        {\n          converted = anim8.convert( e, deriver( e ), anim.units[ nm ], relativeTo );\n          \n          if ( converted !== false )\n          {\n            anim.frame[nm] = converted;\n            anim.animating[nm] = true;\n          }\n        }\n      }\n    },\n    set: function(e, anim) \n    { \n      anim.styles[nm] = anim.value( nm );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.factoryColor = function(nm) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var parsed = anim8.color.parse( e.style[nm] );\n        \n        if (parsed !== anim8.color.invalidColor) \n        {\n          anim.frame[nm] = parsed;\n          anim.animating[nm] = true;\n        }              \n      }\n    },\n    set: function(e, anim) \n    {\n      anim.styles[nm] = anim8.color.format( anim.frame[nm] );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.padding                  = anim8.property.factory( 'padding', 'parentWidth' );\nanim8.property.paddingTop               = anim8.property.factory( 'paddingTop', 'parentWidth' );\nanim8.property.paddingRight             = anim8.property.factory( 'paddingRight', 'parentWidth' );\nanim8.property.paddingBottom            = anim8.property.factory( 'paddingBottom', 'parentWidth' );\nanim8.property.paddingLeft              = anim8.property.factory( 'paddingLeft', 'parentWidth' );\n\nanim8.property.margin                   = anim8.property.factory( 'margin', 'parentWidth' );\nanim8.property.marginTop                = anim8.property.factory( 'marginTop', 'parentWidth' );\nanim8.property.marginRight              = anim8.property.factory( 'marginRight', 'parentWidth' );\nanim8.property.marginBottom             = anim8.property.factory( 'marginBottom', 'parentWidth' );\nanim8.property.marginLeft               = anim8.property.factory( 'marginLeft', 'parentWidth' );\n\nanim8.property.borderRadius             = anim8.property.factory( 'borderRadius', 'width' );\nanim8.property.borderTopLeftRadius      = anim8.property.factory( 'borderTopLeftRadius', 'width' );\nanim8.property.borderTopRightRadius     = anim8.property.factory( 'borderTopRightRadius', 'width' );\nanim8.property.borderBottomLeftRadius   = anim8.property.factory( 'borderBottomLeftRadius', 'width' );\nanim8.property.borderBottomRightRadius  = anim8.property.factory( 'borderBottomRightRadius', 'width' );\n\nanim8.property.borderWidth              = anim8.property.factory( 'borderWidth' );\nanim8.property.borderTopWidth           = anim8.property.factory( 'borderTopWidth' );\nanim8.property.borderRightWidth         = anim8.property.factory( 'borderRightWidth' );\nanim8.property.borderBottomWidth        = anim8.property.factory( 'borderBottomWidth' );\nanim8.property.borderLeftWidth          = anim8.property.factory( 'borderLeftWidth' );\n\nanim8.property.outlineWidth             = anim8.property.factory( 'outlineWidth' );\nanim8.property.textIndent               = anim8.property.factory( 'textIndent', 'parentWidth' );\nanim8.property.borderSpacing            = anim8.property.factory( 'borderSpacing' );\nanim8.property.fontSize                 = anim8.property.factory( 'fontSize', 'parentFontSize' );\nanim8.property.lineHeight               = anim8.property.factory( 'lineHeight', 'fontSize' );\nanim8.property.zIndex                   = anim8.property.factory( 'zIndex' );\n\nanim8.property.color                    = anim8.property.factoryColor( 'color' );\nanim8.property.backgroundColor          = anim8.property.factoryColor( 'backgroundColor' );\nanim8.property.borderTopColor           = anim8.property.factoryColor( 'borderTopColor' );\nanim8.property.borderRightColor         = anim8.property.factoryColor( 'borderRightColor' );\nanim8.property.borderBottomColor        = anim8.property.factoryColor( 'borderBottomColor' );\nanim8.property.borderLeftColor          = anim8.property.factoryColor( 'borderLeftColor' );\nanim8.property.outlineColor             = anim8.property.factoryColor( 'outlineColor' );\n\nanim8.property.minWidth                 = anim8.property.factory( 'minWidth', 'parentWidth' );\nanim8.property.maxWidth                 = anim8.property.factory( 'maxWidth', 'parentWidth' );\nanim8.property.minHeight                = anim8.property.factory( 'minHeight', 'parentHeight' );\nanim8.property.maxHeight                = anim8.property.factory( 'maxHeight', 'parentHeight' );\n\nanim8.property.width                    = anim8.property.factoryDerivable('width', 'parentWidth', function(e) { return e.offsetWidth + 'px'; });\nanim8.property.height                   = anim8.property.factoryDerivable('height', 'parentHeight', function(e) { return e.offsetHeight + 'px'; });\n\nanim8.property.top                      = anim8.property.factoryDerivable('top', 'parentHeight', function(e) { return e.offsetTop + 'px'; });\nanim8.property.right                    = anim8.property.factoryDerivable('right', 'parentWidth', function(e) { return (e.parentNode.scrollWidth - (e.offsetLeft + e.offsetWidth)) + 'px'; });\nanim8.property.bottom                   = anim8.property.factoryDerivable('bottom', 'parentHeight', function(e) { return (e.parentNode.scrollHeight - (e.offsetTop + e.offsetHeight)) + 'px'; });\nanim8.property.left                     = anim8.property.factoryDerivable('left', 'parentWidth', function(e) { return e.offsetLeft + 'px'; });\n\nanim8.property.visibility = \n{\n  get: function(e, anim) \n  {\n    if (anim.animating.visibility === false) \n    {\n      var style = anim8.style( e, 'visibility' );\n      anim.frame.visibility = style === 'hidden' ? 0.0 : 1.0;\n      anim.animating = true;\n    }\n  },\n  set: function(e, anim) \n  {\n    anim.styles.visibility = anim.frame.visibility < 0.5 ? 'hidden' : 'visible'\n  },\n  unset: function(e, anim)\n  {\n    e.style.visibility = null;\n  }\n}\n\nanim8.property.backface = (function()\n{\n  var css = anim8.prefix(['WebkitBackfaceVisibility', 'MozBackfaceVisibility', 'msBackfaceVisibility', 'BackfaceVisibility']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  return {\n    \n    get: function(e, anim)\n    {\n      if ( anim.animating.backface === false )\n      {\n        var style = anim8.style( e, css ); \n        \n        anim.frame.backface = (style === 'visible') ? 1.0 : 0.0;\n        anim.animating.backface = true;\n      }\n    },\n    set: function(e, anim)\n    {\n      anim.styles[css] = anim.frame.backface < 0.5 ? 'none' : 'visible';\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n    \n  };\n  \n})();\n\nanim8.property.transformOrigin = (function() \n{\n  var css = anim8.prefix(['WebkitTransformOrigin', 'MozTransformOrigin', 'OTransformOrigin', 'msTransformOrigin', 'transformOrigin']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  var keywords = \n  {\n    'left':   '0%',\n    'center': '50%',\n    'right':  '100%',\n    'top':    '0%',\n    'bottom': '100%'\n  };\n  \n  var setOriginAttribute = function(e, value, anim, attr, relativeTo ) \n  {\n    if (anim.animating[attr] === false) \n    {\n      if ( value in keywords )\n      {        \n        value = keywords[ value ];\n      }\n\n      var converted = anim8.convert( e, value, anim.units[ attr ], relativeTo );\n      \n      if ( converted !== false )\n      {\n        anim.frame[ attr ] = converted;\n        anim.animating[ attr ] = true;\n      }\n    }\n  };\n  \n  var setOrigin = function(e, split, anim) \n  {\n    if (anim.animating.origin === false) \n    {\n      if ((split.length === 1) || \n          (split.length === 2 && split[0] === split[1]) || \n          (split.length === 3 && split[0] === split[1] && split[1] === split[2])) \n      {     \n        setOriginAttribute( e, split[0], anim, 'origin', 'width' );\n      }            \n    }\n  };\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      var style = anim8.style( e, css );\n      \n      if (style) \n      {\n        var origin = style.toLowerCase();\n        var split = origin.split(' ');\n        \n        switch (split.length) \n        {\n        case 3:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[1], anim, 'originY', 'height' );\n          setOriginAttribute( e, split[2], anim, 'originZ' );\n          setOrigin( e, split, anim );\n          break;\n        case 2:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[1], anim, 'originY', 'height' );\n          setOrigin( e, split, anim );\n          break;\n        case 1:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[0], anim, 'originY', 'height' );\n          setOrigin( e, split, anim );\n          break;\n        }\n      }\n    },\n    set: function(e, anim) \n    {      \n      var style = null;\n      \n      if ( anim8.isDefined( anim.frame.originZ ) )\n      {\n        style = anim.valueOr( 'originX', 'origin', 'x' ) + ' ' + anim.valueOr( 'originY', 'origin', 'y' ) + ' ' + anim.valueOr( 'originZ', 'origin', 'z' );\n      } \n      else \n      {\n        style = anim.valueOr( 'originX', 'origin', 'x' ) + ' ' + anim.valueOr( 'originY', 'origin', 'y' );\n      }\n      \n      anim.styles[css] = style;\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n  };\n  \n})();\n\nanim8.property.transform = (function() \n{\n  var css = anim8.prefix(['WebkitTransform', 'MozTransform', 'OTransform', 'msTransform', 'transform']);\n   \n  if ( !css )\n  {\n    return false;\n  }\n\n  var d2 = { translate: true, scale: true };\n  var d3 = { translate3d: true, scale3d: true };\n  var d4 = { rotate3d: true };\n  var axis = ['X', 'Y', 'Z'];\n    \n  var regex = \n  {\n    translate: /translate\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    translate3d: /translate3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    translateX: /translateX\\(([^\\)]+)\\)/i,\n    translateY: /translateY\\(([^\\)]+)\\)/i,\n    translateZ: /translateZ\\(([^\\)]+)\\)/i,\n    scale: /scale\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    scale3d: /scale3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    scaleX: /scaleX\\(([^\\)]+)\\)/i,\n    scaleY: /scaleY\\(([^\\)]+)\\)/i,\n    scaleZ: /scaleZ\\(([^\\)]+)\\)/i,\n    rotate: /rotate\\(([^\\)]+)\\)/i,\n    rotate3d: /rotate3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    rotateX: /rotateX\\(([^\\)]+)\\)/i,\n    rotateY: /rotateY\\(([^\\)]+)\\)/i,\n    rotateZ: /rotateZ\\(([^\\)]+)\\)/i,\n    skew: /skew\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    skewX: /skewX\\(([^\\)]+)\\)/i,\n    skewY: /skewY\\(([^\\)]+)\\)/i\n  };\n  \n  var parse = function( e, value, anim, attr, relativeTo )\n  {\n    var desiredUnit = anim.units[ attr ];\n    var converted = anim8.convert( e, value, desiredUnit, relativeTo );\n    \n    if ( converted !== false )\n    {\n      return converted;\n    }\n    \n    // TODO show convert this to desiredUnit, however defaultValue may be non-scalar.\n    return anim8.attribute( attr ).defaultValue;    \n  };\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      var style = anim8.style( e, css );\n      \n      for (var attr in anim.animating) \n      {\n        if ( anim.animating[ attr ] === false && attr in regex ) \n        {\n          var parsed = regex[ attr ].exec( style );\n          \n          if ( parsed ) \n          {\n            if ( attr in d4 ) \n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' ),\n                z: parse( e, parsed[3], anim, attr ),\n                angle: parse( e, parsed[4], anim, attr )\n              };\n            }\n            else if ( attr in d3 )\n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' ),\n                z: parse( e, parsed[3], anim, attr )\n              };\n            }\n            else if ( attr in d2 ) \n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' )\n              };\n            }\n            else \n            {\n              anim.frame[attr] = parse( e, parsed[1], anim, attr, 'width' );\n            }\n            \n            anim.animating[attr] = true;\n          }\n        }\n      }\n    },\n    set: function(e, anim) \n    {  \n      // we don't check anim.updated[attr] here since the current value of a transform property is important\n      \n      var transforms = [];\n      \n      for (var attr in regex) \n      {\n        if (attr in anim.frame) \n        { \n          var value = anim.frame[ attr ];\n          var unit = anim.units[ attr ];\n          \n          if (attr in d4) \n          {\n            transforms.push( attr + '(' + value.x + ',' + value.y + ',' + value.z + ',' + value.angle + unit + ')' );\n          }\n          else if (attr in d3) \n          {\n            transforms.push( attr + '(' + value.x + unit + ',' + value.y + unit + ',' + value.z + unit + ')' );\n          }\n          else if (attr in d2) \n          {\n            transforms.push( attr + '(' + value.x + unit + ',' + value.y + unit + ')' );\n          }\n          else\n          {\n            transforms.push( attr + '(' + value + unit + ')' );\n          }\n        }\n      }\n\t\t\t\n      if (transforms.length) \n      {\n        anim.styles[css] = transforms.join(' ');\n      }\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n  };\n  \n})();\n\nanim8.property.opacity = (function() \n{\n  var css = anim8.prefix(['WebkitOpacity', 'MozOpacity', 'KhtmlOpacity', 'opacity']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating.opacity === false) \n      {\n        var style = anim8.style( e, css );\n        var opacity = parseFloat( style );\n        \n        if ( !isNaN(opacity) ) \n        {\n          anim.frame.opacity = opacity\n          anim.animating.opacity = true;\n        }\n      }\n    },\n    set: function(e, anim) \n    {\n      anim.styles[ css ] = anim.frame.opacity;\n    },\n    unset: function(e, anim)\n    {\n      e.style[ css ] = null;\n    }\n  };\n  \n})();\n\nanim8.property.filter = (function() \n{\n  var css = anim8.prefix(['WebkitFilter', 'MozFilter', 'OFilter', 'msFilter', 'filter']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n\tvar methods = \n  {\n\t\tgrayscale: \t'grayscale',\n\t\tsepia: \t\t\t'sepia',\n\t\tsaturate: \t'saturate',\n\t\thueRotate: \t'hue-rotate',\n\t\tinvert: \t\t'invert',\n\t\tbrightness: 'brightness',\n\t\tcontrast: \t'contrast',\n    blur:       'blur'\n\t};\n\t\n\tvar patterns = {};\n\t\n\tfor (var attr in methods) \n  {\n\t\tpatterns[attr] = new RegExp( methods[attr] + '\\(([^\\)]+)\\)', 'i');\n\t}\n  \n\treturn {\n    \n\t\tget: function(e, anim) \n    {\n\t\t\tvar style = anim8.style( e, css );\n      \n\t\t\tfor (var attr in patterns) \n      {\n\t\t\t\tif ( anim.animating[attr] === false ) \n        {\n\t\t\t\t\tvar parsed = patterns[attr].exec( style );\n          \n\t\t\t\t\tif (parsed !== false) \n          {\n            var converted = anim8.convert( e, parsed[1], anim.units[ attr ] );\n            \n            if ( converted !== false )\n            {\n              anim.frame[ attr ] = converted;\n              anim.animating[ attr ] = true;\n            }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, \n\t\tset: function(e, anim) \n    {\n      // we don't check anim.updated[attr] here since the current value of a transform property is important\n      \n\t\t\tvar filters = [];\n      \n\t\t\tfor (var attr in methods) \n      {\n\t\t\t\tif ( attr in anim.frame ) \n        {\n          filters.push( methods[attr] + '(' + anim.value( attr ) + ')' );\n\t\t\t\t}\n\t\t\t}\n      \n\t\t\tif (filters.length) \n      {\n\t\t\t\tanim.styles[ css ] = filters.join(' ');\n\t\t\t}\n\t\t},\n    unset: function(e, anim)\n    {\n      e.style[ css ] = null;\n    }\n\t};\n\t\n})();\n\nanim8.property.center = \n{\n  get: function(e, anim)\n  {\n    var cx = (e.offsetLeft + e.offsetWidth * 0.5) + 'px';\n    var cy = (e.offsetTop + e.offsetHeight * 0.5) + 'px';\n    \n    if ( anim.animating.center === false )\n    {\n      var desiredUnit = anim.units.center;\n      var ccx = anim8.convert( e, cx, desiredUnit, 'parentWidth' );\n      var ccy = anim8.convert( e, cy, desiredUnit, 'parentHeight' );\n      \n      if ( ccx !== false && ccy !== false )\n      {\n        anim.frame.center = {\n          x: ccx,\n          y: ccy\n        };\n        anim.animating.center = true;\n      }\n    }\n    if ( anim.animating.centerX === false )\n    {\n      var desiredUnit = anim.units.centerX;\n      var ccx = anim8.convert( e, cx, desiredUnit, 'parentWidth' );\n      \n      if ( ccx !== false )\n      {\n        anim.frame.centerX = ccx;\n        anim.animating.centerX = true;\n      }\n    }\n    if ( anim.animating.centerY === false )\n    {\n      var desiredUnit = anim.units.centerY;\n      var ccy = anim8.convert( e, cy, desiredUnit, 'parentHeight' );\n      \n      if ( ccy !== false )\n      {\n        anim.frame.centerY = ccy;\n        anim.animating.centerY = true;\n      }\n    }\n  },\n  preset: function(e, anim)\n  {\n    anim.cached.width  = anim8.convert( e, e.offsetWidth + 'px', anim.units.centerX || anim.units.center, 'x' );\n    anim.cached.height = anim8.convert( e, e.offsetHeight + 'px', anim.units.centerY || anim.units.center, 'y' );\n  },\n  set: function(e, anim)\n  {\n    var rw = anim.cached.width * 0.5;\n    var rh = anim.cached.height * 0.5;\n        \n    if ( anim.updated.center )\n    {      \n      anim.styles.left = (anim.frame.center.x - rw) + anim.units.center;\n      anim.styles.top = (anim.frame.center.y - rh) + anim.units.center;\n    }\n    if ( anim.updated.centerX )\n    {\n      anim.styles.left = (anim.frame.centerX - rw) + anim.units.centerX;\n    }\n    if ( anim.updated.centerY )\n    {\n      anim.styles.top = (anim.frame.centerY - rh) + anim.units.centerY;\n    }\n  }\n};\n\nanim8.property.orbit = \n{\n  DEGREE_TO_RADIAN: Math.PI / 180.0,\n  \n  RADIAN_TO_DEGREE: 180.0 / Math.PI,\n  \n  get: function(e, anim)\n  {\n    var ox = (e.parentNode.scrollWidth * 0.5);\n    var oy = (e.parentNode.scrollHeight * 0.5); \n    var cx = (e.offsetLeft + e.offsetWidth * 0.5);\n    var cy = (e.offsetTop + e.offsetHeight * 0.5);\n    var dx = cx - ox;\n    var dy = cy - oy;\n  \n    if ( anim.animating.orbitOffset === false )\n    {\n      var cunit = anim.units.orbitOffset;\n      var cox = anim8.convert( e, ox + 'px', cunit, 'parentWidth' );\n      var coy = anim8.convert( e, oy + 'px', cunit, 'parentHeight' );\n      \n      if ( cox !== false && coy !== false )\n      {\n        anim.frame.orbitOffset = {\n          x: cox,\n          y: coy\n        };\n        anim.animating.orbitOffset = false;\n      }\n    }\n    \n    if ( anim.animating.distance === false )\n    {\n      anim.frame.distance = Math.sqrt( dx * dx + dy * dy );\n      anim.animating.distance = true;\n    }\n    \n    if ( anim.animating.angle === false )\n    {\n      anim.frame.angle = Math.atan2( dy, dx ) * this.RADIAN_TO_DEGREE;\n      anim.animating.angle = true;\n    }\n  },\n  \n  preset: function(e, anim)\n  {  \n    anim.cached.parentWidth = e.parentNode.scrollWidth;\n    anim.cached.parentHeight = e.parentNode.scrollHeight;\n    anim.cached.width = e.offsetWidth;\n    anim.cached.height = e.offsetHeight;\n  },\n  \n  set: function(e, anim)\n  {\n    // TODO calculator this correctly\n    var cunit = anim.units.orbitOffset || '%';\n    var orbitX = anim.frame.orbitOffset ? anim.frame.orbitOffset.x : 50;\n    var orbitY = anim.frame.orbitOffset ? anim.frame.orbitOffset.y : 50;\n    \n    var originUnit = anim.units.origin || '%';\n    var originX = anim.frame.origin ? anim.frame.origin.x : 50;\n    var originY = anim.frame.origin ? anim.frame.origin.y : 50;\n    \n    var cox = anim8.convert( e, orbitX + cunit, 'px', anim.cached.parentWidth / 100.0 );\n    var coy = anim8.convert( e, orbitY + cunit, 'px', anim.cached.parentHeight / 100.0 );\n    \n    var ox = anim8.convert( e, originX + originUnit, 'px', anim.cached.width / 100.0 );\n    var oy = anim8.convert( e, originY + originUnit, 'px', anim.cached.height / 100.0 );\n    \n    var angle = (anim.frame.angle || 0.0) * this.DEGREE_TO_RADIAN;\n    var distance = anim.frame.distance || 0.0;\n        \n    var cos = Math.cos( angle ) * distance;\n    var sin = Math.sin( angle ) * distance;\n    \n    anim.styles.left = (cox + cos - ox) + 'px';\n    anim.styles.top = (coy + sin - oy) + 'px';\n  }\n};","\n/**\n * All animatable attributes for DomAnimators & HTMLElements.\n */\n\nanim8.attribute.padding                 = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingTop              = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingRight            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingBottom           = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingLeft             = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.margin                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginTop               = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginRight             = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginBottom            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginLeft              = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.borderRadius            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopLeftRadius     = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopRightRadius    = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomLeftRadius  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomRightRadius = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.borderWidth             = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopWidth          = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderRightWidth        = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomWidth       = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderLeftWidth         = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.outlineWidth\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.outlineOffset\t\t\t\t\t\t= {defaultValue: 0};\nanim8.attribute.textIndent\t\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderSpacing\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.fontSize\t\t\t\t\t\t\t\t= {defaultValue: 1, defaultUnit: 'em'};\nanim8.attribute.lineHeight\t\t\t\t\t\t\t= {defaultValue: 1, defaultUnit: 'em'};\n\nanim8.attribute.origin                  = {defaultValue: {x:50, y:50}, defaultUnit: '%', property: 'transformOrigin', calculator: '2d'};\nanim8.attribute.originX                 = {defaultValue: 50, defaultUnit: '%', property: 'transformOrigin'};\nanim8.attribute.originY                 = {defaultValue: 50, defaultUnit: '%', property: 'transformOrigin'};\n\nanim8.attribute.opacity                 = {defaultValue: 1};\nanim8.attribute.zIndex                  = {defaultValue: 1};\n\nanim8.attribute.width                   = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.minWidth                = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.maxWidth                = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.height                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.minHeight               = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.maxHeight               = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.angle                   = {defaultValue: 0, property: 'orbit'};\nanim8.attribute.distance                = {defaultValue: 0, property: 'orbit'};\nanim8.attribute.orbitOffset             = {defaultValue: {x:50, y:50}, defaultUnit: '%', property: 'orbitOffset', calculator: '2d'};\n\nanim8.attribute.top                     = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.right                   = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.bottom                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.left                    = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.center                  = {defaultValue: {x:0, y:0}, defaultUnit: 'px', property: 'center', calculator: '2d'};\nanim8.attribute.centerX                 = {defaultValue: 0, defaultUnit: 'px', property: 'center'};\nanim8.attribute.centerY                 = {defaultValue: 0, defaultUnit: 'px', property: 'center'};\n\nanim8.attribute.blur                    = {defaultValue: 0, property: 'filter', defaultUnit: 'px'};\nanim8.attribute.sepia                   = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.brightness              = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.grayscale               = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.contrast                = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.invert                  = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.saturation              = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.hueRotate               = {defaultValue: 0, property: 'filter', defaultUnit: 'deg'};\n\nanim8.attribute.rotate                  = {defaultValue: 0, property: 'transform', defaultUnit: 'deg'};\nanim8.attribute.rotate3d                = {defaultValue: {x:0, y:0, z:1, angle:0}, property: 'transform', calculator: 'quaternion', defaultUnit: 'deg'};\n\nanim8.attribute.translate               = {defaultValue: {x:0, y:0}, property: 'transform', calculator: '2d', defaultUnit: 'px'};\nanim8.attribute.translateX              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translateY              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translateZ              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translate3d             = {defaultValue: {x:0, y:0, z:0}, property: 'transform', calculator: '3d', defaultUnit: 'px'};\n\nanim8.attribute.scale                   = {defaultValue: {x: 0, y:0}, property: 'transform', calculator: '2d'};\nanim8.attribute.scaleX\t                = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scaleY  \t              = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scaleZ  \t              = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scale3d                 = {defaultValue: {x:1, y:1, z:1}, property: 'transform', calculator: '3d'};\n\nanim8.attribute.skew                    = {defaultValue: {x:0, y:0}, defaultUnit: 'deg', property: 'transform', calculator: '2d'};\nanim8.attribute.skewX                   = {defaultValue: 0, defaultUnit: 'deg', property: 'transform'};\nanim8.attribute.skewY                   = {defaultValue: 0, defaultUnit: 'deg', property: 'transform'};\n\nanim8.attribute.backface                = {defaultValue: 0};\nanim8.attribute.visibility              = {defaultValue: 1};\n\nanim8.attribute.backgroundColor         = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.color                   = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderTopColor          = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderRightColor        = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderBottomColor       = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderLeftColor         = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.outlineColor            = {defaultValue: anim8.color(), calculator: 'rgba'};","\n/**\n * Instantiates a new DomAnimator given a subject.\n * \n * @param {HTMLElement} e\n */\nanim8.DomAnimator = function(e)\n{\n\tthis.reset( e );\n  this.properties = {};\n  this.trues = {};\n  this.truesUpdated = false;\n  this.attributeToProperty = {};\n  this.animating = {};\n  this.units = {};\n  this.cached = {};\n  this.styles = {};\n  this.styled = false;\n  this.stylesUpdated = false;\n  this.animation = null;\n};\n\n/**\n * Extends anim8.Animator\n */\nanim8.DomAnimator.prototype = new anim8.Animator();\n\n/**\n * A method thats invoked along with all other animators before updates are called.\n * This is used to make any necessary preparations before the animator is updated.\n *\n * If any events that were recently added have true values this is where we replace\n * this true values with the values currently on the subject.\n */\nanim8.DomAnimator.prototype.preupdate = function()\n{\n  if ( this.truesUpdated )\n  {    \n    var properties = {};\n  \n    for (var attr in this.trues)\n    {\n      properties[ this.attributeToProperty[attr] ] = true;\n      \n      this.animating[ attr ] = false;\n    }\n  \n    for (var prop in properties)\n    {\n      this.properties[ prop ].get( this.e, this );\n    }\n    \n    for (var attr in this.trues)\n    {\n      if ( this.animating[attr] === true )\n      {\n        var e = this.trues[ attr ];\n        var p = e.path.copy();\n        var ps = p.points;\n        \n        for (var i = 0; i < ps.length; i++)\n        {\n          if ( ps[i] === true )\n          {\n            ps[i] = this.frame[ attr ];\n          }\n        }\n    \n        e.path = p;\n      }\n    \n      delete this.trues[ attr ];\n    }\n    \n    this.truesUpdated = false;\n  }\n  \n  for (var prop in this.properties)\n  {\n    var property = this.properties[ prop ];\n    \n    if ( anim8.isFunction( property.preset ) )\n    {\n      property.preset( this.e, this );\n    }\n  }\n  \n  this.trigger('preupdate');\n};\n  \n/**\n * Updates the animator with the current time. All events and springs in this\n * animator are updated.\n *\n * @param {number} now\n */\nanim8.DomAnimator.prototype.update = function(now)\n{\n  anim8.Animator.prototype.update.apply( this, arguments );\n    \n  this.getStyles();\n  this.stylesUpdated = true;\n};\n\n/**\n * A method invoked when an animation is about to be played in the Animator.\n * \n * @param {anim8.Animation} animation\n * @param {object} options\n * @param {array:anim8.EventInstance} events\n */\nanim8.DomAnimator.prototype.onAnimation = function(animation, options, events)\n{  \n  if ( animation.input.units )\n  {\n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n    \n      if ( attr in animation.input.units )\n      {\n        e.unit = animation.input.units[ attr ];\n      }\n    }  \n  }\n};\n\n/**\n * Builds the styles map in preparation to be applied.\n */\nanim8.DomAnimator.prototype.getStyles = function()\n{\n  this.styles = {};\n  \n  var applyProperties = {};\n  \n  for (var attr in this.frame)\n  {\n    if ( this.updated[ attr ] )\n    {\n      var prop = this.attributeToProperty[ attr ];\n      \n      if ( prop in this.properties )\n      {\n        applyProperties[ prop ] = true; \n      }\n    }\n  }\n  \n  for (var prop in applyProperties)\n  {\n    this.properties[ prop ].set( this.e, this );  \n    \n    this.styled = true;\n  }\n};\n\n/**\n * Applies all updated attributes to the subject. This method is invoked with all of the other\n * animators at the end of the animation cycle.\n */\nanim8.DomAnimator.prototype.apply = function()\n{\n  if ( !this.styled && !this.stylesUpdated )\n  {\n    this.getStyles();\n  }\n  \n  if ( this.styled )\n  {    \n    for (var prop in this.styles)\n    {\n       this.e.style[ prop ] = this.styles[ prop ];\n    }\n    \n    for (var attr in this.frame)\n    {\n      this.updated[ attr ] = false;\n    }\n  \n    this.styled = false;\n  }\n  \n  this.stylesUpdated = false;\n  \n  this.trigger('apply');\n  \n  this.trimEvents();\n};\n  \n/**\n * Places the event in this animator replacing any event that exists for the same\n * attribute. The next time the animator is updated the event will be started.\n *\n * @param {anim8.EventInstance} e\n */\nanim8.DomAnimator.prototype.placeEvent = function( e )\n{\n  anim8.Animator.prototype.placeEvent.apply( this, arguments );\n  \n  var attr = e.attribute;\n  var attribute = anim8.attribute( attr );\n  var prop = anim8.coalesce( attribute.property, attr );\n  var property = anim8.property( prop );\n  \n  if ( e.hasTrue() )\n  {    \n    this.trues[ attr ] = e;\n    this.truesUpdated = true;\n  }\n  \n  this.attributes[ attr ] = attribute;\n  this.properties[ prop ] = property;\n  this.attributeToProperty[ attr ] = prop;\n  this.units[ attr ] = e.unit || attribute.defaultUnit || '';\n};\n  \n/**\n * Places the spring in this animator replacing any spring that exists for the same\n * attribute. The next time the animator is updated the spring will be started.\n *\n * @param {anim8.Spring} s\n */\nanim8.DomAnimator.prototype.placeSpring = function( s )\n{\n  anim8.Animator.prototype.placeSpring.apply( this, arguments );\n  \n  var attr = s.attribute;\n  var attribute = anim8.attribute( attr );\n  var prop = anim8.coalesce( attribute.property, attr );\n  var property = anim8.property( prop );\n  \n  this.attributes[ attr ] = attribute;\n  this.properties[ prop ] = property;\n  this.attributeToProperty[ attr ] = prop;\n  this.units[ attr ] = attribute.defaultUnit || '';\n};\n  \n/**\n * Restores any temporary state that may exist on this Animator that\n * is a result from animations.\n */\nanim8.DomAnimator.prototype.restore = function()\n{\n  for (var prop in this.properties)\n  {\n    this.properties[ prop ].unset( this.e, this );\n  }\n\t\n\tthis.frame = {};\n};\n\n/**\n * A method that can be invoked to destroy an animator - removing any relationship between\n * the subject and animator. The next time an animator is generated for the subject a new\n * one will be created.\n */\nanim8.DomAnimator.prototype.destroy = function()\n{\n  this.factory.destroy( this );\n  \n  anim8.Animator.prototype.destroy.apply( this, arguments );\n};\n\n/**\n * Sets the given attributes to this Animator immediately.\n *\n * @param {object} attributes\n */\nanim8.DomAnimator.prototype.set = function(attributes)\n{\n  var props = {};\n  var updated = {};\n  var units = {};\n  var styles = {};\n  \n  for (var attr in attributes)\n  {\n    var attribute = anim8.attribute( attr );\n    var prop      = anim8.coalesce( attribute.property, attr );\n    var property  = anim8.property( prop );\n    var calc      = anim8.calculator( attribute.calculator );\n    var value     = attributes[ attr ];\n    \n    units[ attr ] = attribute.defaultUnit || '';\n    \n    if ( anim8.isString( value ) )\n    {\n      var parsed = anim8.parseValue( value, attribute.defaultUnit );\n      \n      if ( parsed !== false )\n      {\n        units[ attr ] = parsed.unit || attribute.defaultUnit || '';\n        value = parsed.value;\n      }  \n    }\n    \n    var parsed = calc.parse( value, attribute.defaultValue );\n    \n    if ( parsed !== false )\n    {\n      props[ prop ] = property;\n      attributes[ attr ] = parsed;\n      updated[ attr ] = true;\n    }\n  }\n    \n  var flash = \n  {\n    units: units,\n     \n    frame: attributes,\n    \n    updated: updated,\n    \n    styles: styles,\n    \n    cached: {},\n    \n    value: function(attr)\n    {\n      return attributes[ attr ] + units[ attr ];\n    },\n    \n    valueOr: function(attr, other, subproperty)\n    {\n      var value = attributes[ attr ];\n      \n      if ( !anim8.isDefined( value ) )\n      {\n        value = attributes[ attr = other ];\n      \n        if ( anim8.isDefined( subproperty ) )\n        {\n          value = value[ subproperty ];\n        }\n      }\n  \n      return value + units[ attr ];\n    }\n  };\n  \n  for (var prop in props)\n  {\n    var property = props[ prop ];\n    \n    if ( anim8.isFunction( property.preset ) )\n    {\n      props[ prop ].preset( this.e, flash );\n    }\n  }\n  \n  for (var prop in props)\n  {\n    props[ prop ].set( this.e, flash );\n  }\n  \n  for (var prop in styles)\n  {\n    this.e.style[ prop ] = styles[ prop ];\n  }\n};\n\n/**\n * Gets the current attribute values for all attributes specified. The argument must be an object\n * where the key is the name of an attribute and the value is the desired unit.\n *\n * @param {object} attributes\n */\nanim8.DomAnimator.prototype.get = function(attributes)\n{\n  var props = {};\n  var animating = {};\n  var units = {};\n  var out = {};\n  \n  for (var attr in attributes)\n  {    \n    var attribute = anim8.attribute( attr );\n    var prop      = anim8.coalesce( attribute.property, attr );\n    var property  = anim8.property( prop );\n    var calc      = anim8.calculator( attribute.calculator );\n    \n    animating[ attr ] = false;    \n    units[ attr ] = attributes[ attr ] || attribute.defaultUnit || '';\n    props[ prop ] = property;\n    out[ attr ] = calc.clone( attribute.defaultValue );\n  }\n  \n  var flash = \n  {    \n    units: units,\n    \n    frame: out,\n    \n    animating: animating,\n    \n    unit: function(attr)\n    {\n      return units[ attr ];\n    }\n  };\n  \n  for (var prop in props)\n  {\n    props[ prop ].get( this.e, flash );\n  }\n  \n  return out;\n};\n\n/**\n * Returns a function that returns the current value for the given attribute when invoked.\n * \n * @param {string} attribute\n */\nanim8.DomAnimator.prototype.ref = function(attribute, desiredUnit, relativeTo)\n{\n  var animator = this;\n  var request = {};\n  \n  return function()\n  {\n    if ( attribute in animator.frame && anim8.isNumber( animator.frame[ attribute ] ) )\n    {\n      return anim8.convert( animator.e, animator.value( attribute ), desiredUnit, relativeTo );\n    }\n    \n    request[ attribute ] = desiredUnit;\n    \n    var current = animator.get( request );\n    \n    if ( anim8.isDefined( current[ attribute ] ) )\n    {\n      return current[ attribute ];\n    }\n    \n    return anim8.attribute( attribute ).defaultValue;\n  };\n},\n\n/**\n * Returns the value for the given attribute as a string with the current units.\n *\n * @param {string} attr\n */\nanim8.DomAnimator.prototype.value = function(attr)\n{\n  return this.frame[ attr ] + this.units[ attr ];\n};\n\n/**\n * Returns the value for the given attribute as a string with the current units.\n * if the attribute doesn't exist a secondary one is looked up. If that value\n * is an object and contains the given subproperty the value is resolved once again.\n *\n * @param {string} attr\n * @param {string} other\n * @param [string] subproperty\n */\nanim8.DomAnimator.prototype.valueOr = function(attr, other, subproperty)\n{\n  var value = this.frame[ attr ];\n    \n  if ( !anim8.isDefined( value ) )\n  {\n    value = this.frame[ attr = other ];\n    \n    if ( anim8.isDefined( subproperty ) )\n    {\n      value = value[ subproperty ];\n    }\n  }\n  \n  return value + this.units[ attr ];\n};\n","/**\n * Animate.css animations in anim8js.\n *\n * http://daneden.github.io/animate.css/\n */\n\nanim8.save('bounce', {\n\tkeyframe: {\n    '0,20,53,80,100': {\n      translate3d: 0,\n      easing: [0.215, 0.610, 0.355, 1.000]\n    },\n    '40,43': {\n      translate3d: {y:-30},\n      easing: [0.755, 0.050, 0.855, 0.060]\n    },\n    '70': {\n      translate3d: {y:-15},\n      easing: [0.755, 0.050, 0.855, 0.060]\n    },\n    '90': {\n      translate3d: {y:-4}\n    }\n\t}\n});\n\nanim8.save('rubberBand', {\n\tkeyframe: {\n    '0,100': {\n      scale3d: 1\n    },\n    '30': {\n      scale3d: {x:1.25, y:0.75}\n    },\n    '40': {\n      scale3d: {x:0.75, y:1.25}\n    },\n    '50': {\n      scale3d: {x:1.15, y:0.85}\n    },\n    '65': {\n      scale3d: {x:0.95, y:1.05}\n    },\n    '75': {\n      scale3d: {x:1.05, y:0.95}\n    }\n\t}\n});\n\nanim8.save('flash', {\n  keyframe: {\n    '0,50,100': {\n      opacity: 1\n    },\n    '25,75': {\n      opacity: 0\n    }\n  }\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('pulse', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0\n    },\n    '50': {\n      scale3d: 1.05\n    },\n    '100': {\n      scale3d: 1.0\n    }\n  }\n});\n\nanim8.save('shake', {\n  keyframe: {\n    '0,100': {\n      translateX: 0.0\n    },\n    '10,30,50,70,90': {\n      translateX: -10.0\n    },\n    '20,40,60,80': {\n      translateX: 10.0\n    } \n  }\n});\n\nanim8.save('swing', {\n  keyframe: {\n    '0': {\n      rotate: 0\n    },\n    '20': {\n      rotate: 15\n    },\n    '40': {\n      rotate: -10\n    },\n    '60': {\n      rotate: 5\n    },\n    '80': {\n      rotate: -5\n    },\n    '100': {\n      rotate: 0\n    }\n  },\n  initial: {\n    origin: 'center top'\n  }\n});\n\nanim8.save('tada', {\n  keyframe: {\n    '0,100': {\n      scale3d: 1,\n      rotate: 0\n    },\n    '10,20': {\n      scale3d: 0.9,\n      rotate: -3\n    },\n    '30,50,70,90': {\n      scale3d: 1.1,\n      rotate: 3\n    },\n    '40,60,80': {\n      scale3d: 1.1,\n      rotate: -3\n    }\n  }\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('wobble', {\n  keyframe: {\n    '0,100': {\n      translateX: 0,\n      rotate: 0\n    },\n    '15': {\n      translateX: -25,\n      rotate: -5\n    },\n    '30': {\n      translateX: 20,\n      rotate: 3\n    },\n    '45': {\n      translateX: -15,\n      rotate: -3\n    },\n    '60': {\n      translateX: 10,\n      rotate: 2\n    },\n    '75': {\n      translateX: -5,\n      rotate: -1\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('bounceIn', {\n  keyframe: {\n    '0': {\n      opacity: 0.0,\n      scale3d: 0.3\n    },\n    '20': {\n      scale3d: 1.1\n    },\n    '40': {\n      scale3d: 0.9\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 1.03\n    },\n    '80': {\n      scale3d: 0.97\n    },\n    '100': {\n      opacity: 1.0,\n      scale3d: 1.0\n    }\n  }\n}, {\n  easing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceInDown', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: -3000\n    },\n    '60': {\n      opacity: 1,\n      translateY: 25\n    },\n    '75': {\n      translateY: -10\n    },\n    '90': {\n      translateY: 5\n    },\n    '100': {\n      translateY: 0\n    }\n  }\n}, {\n  duration: 2000,\n  easing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceInLeft', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -3000\n    },\n    '60': {\n      opacity: 1,\n      translateX: 25\n    },\n    '75': {\n      translateX: -10\n    },\n    '90': {\n      translateX: 5\n    },\n    '100': {\n      translateX: 0\n    }\n  }\n}, {\n  duration: 2000,\n  teasing: [0.215, 0.610, 0.355, 1.000]\n});\n\n\nanim8.save('bounceInRight', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: 3000\n    },\n    '60': {\n      opacity: 1,\n      translateX: -25\n    },\n    '75': {\n      translateX: 10\n    },\n    '90': {\n      translateX: -5\n    },\n    '100': {\n      translateX: 0\n    }\n  }\n}, {\n  duration: 2000,\n  teasing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceInUp', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: 3000\n    },\n    '60': {\n      opacity: 1,\n      translateY: -25\n    },\n    '75': {\n      translateY: 10\n    },\n    '90': {\n      translateY: -5\n    },\n    '100': {\n      translateY: 0\n    }\n  }\n}, {\n  duration: 1000,\n  teasing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceOut', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0\n    },\n    '20': {\n      scale3d: 0.9\n    },\n    '50,55': {\n      opacity: 1,\n      scale3d: 1.1\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.3\n    }\n  }\n}, {\n  duration: 750\n});\n\nanim8.save('bounceOutDown', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '20': {\n      translateY: 10\n    },\n    '40,45': {\n      opacity: 1,\n      translateY: -20\n    },\n    '100': {\n      opacity: 0,\n      translateY: 2000\n    }\n  }\n});\n\nanim8.save('bounceOutLeft', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '20': {\n      opacity: 1,\n      translateX: 20\n    },\n    '100': {\n      opacity: 0,\n      translateX: -2000\n    }\n  }\n});\n\nanim8.save('bounceOutRight', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '20': {\n      opacity: 1,\n      translateX: -20\n    },\n    '100': {\n      opacity: 0,\n      translateX: 2000\n    }\n  }\n});\n\nanim8.save('bounceOutUp', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '20': {\n      translateY: -10\n    },\n    '40,45': {\n      opacity: 1,\n      translateY: 20\n    },\n    '100': {\n      opacity: 0,\n      translateY: -2000\n    }\n  }\n});\n\nanim8.save('fadeIn', {\n  keyframe: {\n    '0': {\n      opacity: 0\n    },\n    '100': {\n      opacity: 1\n    }\n  }\n});\n\nanim8.save('fadeInDown', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: -100\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeInDownBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: -2000\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('fadeInLeft', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -100\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeInLeftBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -2000\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('fadeInRight', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: 100\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeInRightBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: 2000\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('fadeInUp', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: 100\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  }, \n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeInUpBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: 2000\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('fadeOut', {\n  keyframe: {\n    '0': {\n      opacity: 1\n    },\n    '100': {\n      opacity: 0\n    }\n  }\n});\n\nanim8.save('fadeOutDown', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: 100\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeOutDownBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: 2000\n    }\n  }\n});\n\nanim8.save('fadeOutLeft', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: -100\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeOutLeftBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: -2000\n    }\n  }\n});\n\nanim8.save('fadeOutRight', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: 100\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeOutRightBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: 2000\n    }\n  }\n});\n\nanim8.save('fadeOutUp', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: -100\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeOutUpBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: -2000\n    }\n  }\n});\n\nanim8.save('flip', {\n  keyframe: {\n    '0': {\n      translateZ: 0,\n      rotate3d: {x:0, y:1, z:0, angle:-360},\n      scale3d: 1.0,\n      easing: 'cssEaseOut'\n    },\n    '40': {\n      translateZ: 150,\n      rotate3d: {x:0, y:1, z:0, angle:-190},\n      easing: 'cssEaseOut'\n    },\n    '50': {\n      translateZ: 150,\n      rotate3d: {x:0, y:1, z:0, angle:-170},\n      easing: 'cssEaseIn'\n    },\n    '80': {\n      translateZ: 0,\n      rotate3d: {x:0, y:1, z:0, angle:0},\n      scale3d: 0.95,\n      easing: 'cssEaseIn'\n    },\n    '100': {\n      scale3d: 1.0\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n});\n\nanim8.save('flipInX', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      rotate3d: {x:1, y:0, z:0, angle:90},\n      easing: 'cssEaseIn'\n    },\n    '40': {\n      rotate3d: {x:1, y:0, z:0, angle:-20},\n      easing: 'cssEaseIn'\n    },\n    '60': {\n      opacity: 1,\n      rotate3d: {x:1, y:0, z:0, angle:10}\n    },\n    '80': {\n      rotate3d: {x:1, y:0, z:0, angle:-5}\n    },\n    '100': {\n      rotate3d: {x:1, y:0, z:0, angle:0}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n});\n\nanim8.save('flipInY', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      rotate3d: {x:0, y:1, z:0, angle:90},\n      easing: 'cssEaseIn'\n    },\n    '40': {\n      rotate3d: {x:0, y:1, z:0, angle:-20},\n      easing: 'cssEaseIn'\n    },\n    '60': {\n      opacity: 1,\n      rotate3d: {x:0, y:1, z:0, angle:10}\n    },\n    '80': {\n      rotate3d: {x:0, y:1, z:0, angle:-5}\n    },\n    '100': {\n      rotate3d: {x:0, y:1, z:0, angle:0}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n});\n\nanim8.save('flipOutX', {\n  keyframe: {\n    '0': {\n      rotate3d: {x:1, y:0, z:0, angle:0}\n    },\n    '30': {\n      opacity: 1,\n      rotate3d: {x:1, y:0, z:0, angle:-20}\n    },\n    '100': {\n      opacity: 0,\n      rotate3d: {x:1, y:0, z:0, angle:90}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n}, {\n  duration: 750\n});\n\nanim8.save('flipOutY', {\n  keyframe: {\n    '0': {\n      rotate3d: {x:0, y:1, z:0, angle:0}\n    },\n    '30': {\n      opacity: 1,\n      rotate3d: {x:0, y:1, z:0, angle:-20}\n    },\n    '100': {\n      opacity: 0,\n      rotate3d: {x:0, y:1, z:0, angle:90}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n}, {\n  duration: 750\n});\n\nanim8.save('lightSpeedIn', {\n  keyframe: {\n    '0': {\n      translateX: 100,\n      skewX: -30,\n      opacity: 0\n    },\n    '60': {\n      skewX: 20,\n      opacity: 1\n    },\n    '80': {\n      skewX: -5\n    },\n    '100': {\n      translateX: 0,\n      skewX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n}, {\n  easing: 'cssEaseOut'\n});\n\nanim8.save('lightSpeedOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0,\n      skewX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: 100,\n      skewX: 30\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n}, {\n  easing: 'cssEaseIn'\n});\n\nanim8.save('rotateIn', {\n  keyframe: {\n    '0': {\n      rotate: -200,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'center'\n  }\n});\n\nanim8.save('rotateInDownLeft', {\n  keyframe: {\n    '0': {\n      rotate: -45,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n});\n\nanim8.save('rotateInDownRight', {\n  keyframe: {\n    '0': {\n      rotate: 45,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('rotateInUpLeft', {\n  keyframe: {\n    '0': {\n      rotate: 45,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n});\n\nanim8.save('rotateInUpRight', {\n  keyframe: {\n    '0': {\n      rotate: -90,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('rotateOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: 200\n    }\n  },\n  initial: {\n    origin: 'center'\n  }\n});\n\nanim8.save('rotateOutDownLeft', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: 45\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n})\n\nanim8.save('rotateOutDownRight', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: -45\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('rotateOutUpLeft', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: -45\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n});\n\nanim8.save('rotateOutUpRight', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: 90\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('hinge', {\n  keyframe: {\n    '0': {\n      rotate: 0\n    },\n    '20,60': {\n      rotate: 80\n    },\n    '40': {\n      rotate: 60\n    },\n    '80': {\n      rotate: 60,\n      translateY: 0,\n      opacity: 1\n    },\n    '100': {\n      rotate: 0,\n      translateY: 700,\n      opacity: 0\n    }\n  },\n  initial: {\n    origin: 'top left'\n  }\n}, {\n  easing: 'cssEaseInOut',\n  duration: 2000\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('rollIn', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -100,\n      rotate: -120\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0,\n      rotate: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('rollOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0.0,\n      translateX: 100,\n      rotate: 120\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('zoomIn', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.3\n    },\n    '50': {\n      opacity: 1\n    },\n    '100': {\n      scale3d: 1\n    }\n  }\n});\n\nanim8.save('zoomInDown', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: -1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: 60,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('zoomInLeft', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: -1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: 10,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('zoomInRight', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: 1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: -10,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('zoomInUp', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: 1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: -10,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('zoomOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      scale3d: 1\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.3\n    }\n  }\n}, {\n  duration: 500\n});\n\nanim8.save('zoomOutDown', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateY: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: -60,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: 2000,\n      origin: 'center bottom'\n    }\n  }\n});\n\nanim8.save('zoomOutLeft', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateX: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: 42,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: -2000,\n      origin: 'left center'\n    }\n  }\n});\n\nanim8.save('zoomOutRight', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateX: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: -42,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: 2000,\n      origin: 'right center'\n    }\n  }\n});\n\nanim8.save('zoomOutUp', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateY: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: 60,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: -2000,\n      origin: 'center bottom'\n    }\n  }\n});\n\nanim8.save('slideInDown', {\n  keyframe: {\n    '0': {\n      translateY: -100\n    },\n    '100': {\n      translateY: 0\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('slideInLeft', {\n  keyframe: {\n    '0': {\n      translateX: -100\n    },\n    '100': {\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('slideInRight', {\n  keyframe: {\n    '0': {\n      translateX: 100\n    },\n    '100': {\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('slideInUp', {\n  keyframe: {\n    '0': {\n      translateY: 100\n    },\n    '100': {\n      translateY: 0\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('slideOutDown', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '100': {\n      translateY: 100\n    }\n  },\n  units: {\n    translateY: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\nanim8.save('slideOutLeft', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '100': {\n      translateX: -100\n    }\n  },\n  units: {\n    translateX: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\nanim8.save('slideOutRight', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '100': {\n      translateX: 100\n    }\n  },\n  units: {\n    translateX: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\nanim8.save('slideOutUp', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '100': {\n      translateY: -100\n    }\n  },\n  units: {\n    translateY: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\n/* anim8js animations */\n\nanim8.save('blurOut', {\n  keyframe: {\n    '0': {\n      blur: 0,\n      opacity: 1\n    },\n    '50': {\n      blur: 4,\n      opacity: 0.9\n    },\n    '100': {\n      blur: 5,\n      opacity: 0\n    }\n  }\n});\n\nanim8.save('blurIn', {\n  keyframe: {\n    '0': {\n      blur: 5,\n      opacity: 0\n    },\n    '50': {\n      blur: 4,\n      opacity: 0.9\n    },\n    '100': {\n      blur: 0,\n      opacity: 1\n    }\n  }\n});\n\n/**\n * Generate animations for all permutations of the following concepts:\n *\n * (slide|fade|zoom)(Out|In)(Down|Up)(Right|Left)(|x2|Big)\n */\n(function() \n{\n  var actions = {\n    'slide': {},\n    'fade': {opacity:{from:0,to:1}},\n    'zoom': {scale3d:{from:0,to:1}}\n  };\n  \n  var directions = {\n    'Out':  {from:0, to:1},\n    'In':   {from:1, to:0}\n  };\n  \n  var vertical = {\n    'Down': 1,\n    'Up': -1\n  };\n  \n  var horizontal = {\n    'Right': 1,\n    'Left': -1\n  };\n  \n  var sizes = {\n    '':     {value: 100, unit: '%'},\n    'x2':   {value: 200, unit: '%'},\n    'Big':  {value: 2000, unit: 'px'}\n  };\n  \n  for ( var a in actions )\n  {\n    var attrs = actions[ a ];\n    \n    for ( var d in directions )\n    {\n      var dir = directions[ d ];\n      \n      for ( var v in vertical )\n      {\n        var ver = vertical[ v ];\n        \n        for ( var h in horizontal )\n        {\n          var hor = horizontal[ h ];\n          \n          for ( var s in sizes )\n          {\n            var siz = sizes[ s ];\n            \n            var animName = a + d + v + h + s;\n            \n            if ( animName in anim8.animation )\n            {\n              continue;\n            }\n            \n            var anim = \n            {\n              keyframe: {\n                from: {\n                  translateX: hor * dir.from * siz.value,\n                  translateY: ver * dir.from * siz.value\n                },\n                to: {\n                  translateX: hor * dir.to * siz.value,\n                  translateY: ver * dir.to * siz.value\n                }\n              },\n              units: {\n                translateX: siz.unit,\n                translateY: siz.unit\n              }\n            };\n            \n            for (var attr in attrs)\n            {\n              var attribute = attrs[attr];\n              \n              anim.keyframe.from[ attr ] = dir.to * attribute.to + dir.to * attribute.from;\n              anim.keyframe.to[ attr ]   = dir.from * attribute.from + dir.from * attribute.to;\n            }\n            \n            anim8.save( animName, anim );\n          }\n        }\n      }\n    }\n  }\n  \n})();","(function($, m8)\n{\n  var SYMBOL = \n  {\n    REPEAT: 'x',\n    DELAY: '~',\n    SLEEP: 'z',\n    INFINITY: 'infinite'\n  };\n  \n  $.fn.animators = function()\n  {\n\t\treturn m8( this.get() );\t\t\n  };\n  \n  $.fn.play = function( animationText, all )\n  {\n    var anim = parseAnimation( animationText );\n    \n    if ( anim !== false )\n    {\n      this.animators().play( anim.animation, anim.options, all );\n    }\n    \n    return this; \n  };\n  \n  $.fn.dataPlay = function( animationAttribute, all )\n  {\n\t\treturn this.filter(function()\n\t  {\n\t\t\tvar animationText = $(this).data( animationAttribute );\n\t\t\n\t\t\tif ( animationText )\n\t\t\t{\n\t\t    var anim = parseAnimation( animationText );\n\t\t\n\t\t\t\tif ( anim !== false )\n\t\t\t\t{\t\t\t\t\t\n\t\t\t  \tm8( this ).play( anim.animation, anim.options, all );\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n  \t});\n  };\n  \n  $.fn.queueAnimation = function( animationText )\n  {\n    var anim = parseAnimation( animationText );\n    \n    if ( anim !== false )\n    {\n      this.animators().queue( anim.animation, anim.options );\n    }\n    \n    return this; \n  };\n  \n  $.fn.dataQueue = function( animationAttribute )\n  {\t\n  \treturn this.filter(function()\n    {\n  \t\tvar animationText = $(this).data( animationAttribute );\n\t\t\n  \t\tif ( animationText )\n  \t\t{\n  \t    var anim = parseAnimation( animationText );\n\t\t\n\t\t\t\tif ( anim !== false )\n\t\t\t\t{\n\t\t   \t\tm8( this ).queue( anim.animation, anim.options );\t\t\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n  \t\t}\n\t\t\t\n\t\t\treturn false;\n    });\n  };\n\n  $.fn.transition = function( animationText, transitionText )\n  {\n    var anim = parseAnimation( animationText );\n    var tran = parseTransition( transitionText );\n    \n    if ( anim !== false )\n    {\n      this.animators().transition( tran.time, tran.delta, tran.easing, anim.animation, anim.options );\n    }\n    \n    return this; \n  };\n  \n  $.fn.dataTransition = function( animationAttribute, transitionAttribute )\n  {\t\n\t\treturn this.filter(function()\n\t\t{\n\t\t\tvar animationText = $(this).data( animationAttribute );\n\t\t\tvar transitionText = $(this).data( transitionAttribute );\n\t\t\n\t\t\tif ( animationText && transitionText )\n\t\t\t{\n\t\t    var anim = parseAnimation( animationText );\n\t\t\t\tvar tran = parseTransition( transitionText );\n\n\t\t\t\tif ( anim !== false )\n\t\t\t\t{\n\t\t\t  \tm8( this ).transition( tran.time, tran.delta, tran.easing, anim.animation, anim.options );\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t});\n  };\n  \n  $.fn.pause = function()\n  {\n    this.animators().pause();\n    \n    return this;\n  };\n  \n  $.fn.resume = function()\n  {\n    this.animators().resume();\n    \n    return this;\n  };\n  \n  $.fn.restore = function()\n  {\n    this.animators().restore();\n    \n    return this;\n  };\n  \n  $.fn.stopIt = function()\n  {\n    this.animators().stop();\n    \n    return this;\n  };\n  \n  $.fn.finishIt = function()\n  {\n    this.animators().finish();\n    \n    return this;\n  };\n  \n  $.fn.endIt = function()\n  {\n    this.animators().end();\n    \n    return this;\n  };\n  \n  $.fn.eventsFor = function( attributes, callback, context )\n  {\n    this.animators().eventsFor( attributes, callback, context );\n    \n    return this;\n  };\n  \n  $.fn.springsFor = function( attributes, callback, context )\n  {\n    this.animators().springsFor( attributes, callback, context );\n    \n    return this;\n  };\n  \n  $.fn.setAttributes = function( attributes )\n  {\n    this.animators().set( attributes );\n    \n    return this;\n  };\n  \n  $.fn.getAttributes = function( attributes )\n  {\n    return this.animators().get( attributes );\n  };\n  \n  $.fn.spring = function( spring  )\n  {\n    return this.animators().spring( spring );\n  };\n  \n  $.fn.unspring = function( springs )\n  {\n    this.animators().unspring( springs );\n    \n    return this;\n  };\n  \n  $.fn.applyInitialState = function( attributes )\n  {\n    this.animators().applyInitialState( attributes );\n\t \t \n\t  return this;\n  };\n  \n  $.fn.isAnimating = function( attributes )\n  {\n    return this.animators().isAnimating();\n  };\n  \n  $.fn.hasEvents = function( attributes )\n  {\n    return this.animators().hasEvents();\n  };\n  \n  var parseAnimation = function( text )\n  {\n\t\tif ( !anim8.isString( text ) )\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n    var parts = text.split(' ');\n    var options = {};\n    var animation = null;\n    \n    for (var i = 0; i < parts.length; i++)\n    {\n      var p = parts[i];\n            \n      if ( p in m8.animation )\n      {\n        animation = p;\n      }\n      else if ( m8.isEasingName( p ) )\n      {\n        options.easing = p;\n      }\n      else if ( p.charAt(0) === SYMBOL.REPEAT )\n      {\n        var repeats = parseInt( p.substring(1) );\n        \n        if (!isNaN(repeats)) \n        {\n          options.repeat = repeats;\n        }\n      }\n      else if ( p.charAt(0) === SYMBOL.SLEEP )\n      {\n        var sleeps = m8.time( p.substring(1) );\n        \n        if ( sleeps !== false )\n        {\n          options.sleep = sleeps;\n        }\n      }\n      else if ( p.charAt(0) === SYMBOL.DELAY )\n      {\n        var delays = m8.time( p.substring(1) );\n        \n        if ( delays !== false )\n        {\n          options.delay = delays;\n        }\n      }\n      else if ( p === SYMBOL.INFINITY )\n      {\n        options.repeat = Number.POSITIVE_INFINITY;\n      }\n      else\n      {\n        var duration = m8.time( p );\n        \n        if ( duration !== false )\n        {\n          options.duration = duration;\n        }\n      }\n    }\n    \n    if ( animation === null )\n    {\n      return false;\n    }\n    \n    return {\n      animation: animation,\n      options: options\n    };\n  };\n\n  var parseTransition = function( text )\n  {\n\t\tif ( !anim8.isString( text ) )\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n    var transition = \n    {\n      time: 500,\n      delta: 0.2,\n      easing: 'ease'\n    };\n    \n    var parts = text.split(' ');\n    \n    for (var i = 0; i < parts.length; i++)\n    {\n      var p = parts[i];\n      var num = parseFloat(p);\n      \n      if ( m8.isEasingName( p ) )\n      {\n        transition.easing = p;\n      }\n      else if ( !isNaN(num) && num >= 0.0 && num <= 1.0 )\n      {\n        transition.delta = num;\n      }\n      else\n      {\n        var times = m8.time( p );\n        \n        if ( times !== false )\n        {\n          transition.time = times;\n        }\n      }\n    }\n    \n    return transition;\n  };\n  \n})(jQuery, anim8);\n"],"sourceRoot":"/source/"}