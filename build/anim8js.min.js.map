{"version":3,"sources":["anim8js.min.js"],"names":["root","factory","define","amd","module","exports","global","m8","anim8","m8s","anim8s","this","noop","isDefined","x","isFunction","constructor","call","apply","isNumber","isBoolean","isString","isArray","Array","isObject","isEmpty","length","prop","toArray","split","props","push","copy","copied","i","p","extend","out","arguments","o","coalesce","a","b","c","d","constant","variable","resolve","Animation","name","input","options","attrimators","Animator","e","reset","Animators","$","fill","Attrimator","AttrimatorMap","Builder","BuilderHelper","oldOptions","newOptions","prepareSpecifics","Calculator","Defer","methods","$factory","$push","DeferAnimator","animator","previous","eventType","event","$reset","Event","attribute","path","duration","easing","delay","sleep","offset","repeat","scale","scaleBase","parameters","hasInitialState","builder","next","mergeId","$easing","$duration","$sleep","$repeat","$scale","calculator","parse","ZERO","$delay","$offset","Factory","priority","FastMap","map","putMap","put","Oncer","value","applied","Path","Physics","position","velocity","acceleration","terminal","stopTime","$number","Number","POSITIVE_INFINITY","$time","finished","Sequence","animators","Spring","subject","$factoryFor","animatorFor","subjects","animatorsFor","isRunning","running","isLive","live","setLive","newLive","activateAnimator","pushAnimator","activate","active","animating","trigger","requestRun","run","currentTime","now","preupdate","update","filter","handleFinished","pause","attributes","resume","stop","end","finish","nopeat","Color","r","g","computed","funcOrName","func","isComputed","delegate","functionName","returning","DelegateTypes","THIS","array","RESULTS","results","FIRST","undefined","TRUE","composite","frame","partial","subattribute","spread","eventize","target","Class","defineProperty","on","once","off","addListener","$this","property","events","callback","context","removeListeners","listeners","eventListeners","k","splice","deleteProperty","obj","triggerListeners","argument","clear","max","slice","$on","$once","gcd","temp","choose","n","m","num","den","clamp","v","min","param","paramName","paramCalculator","paramDefaultValue","getCalculator","parseValue","$calculator","defaultValue","attrimator","getAttribute","paramFactory","paramResolve","computer","Parameters","parent","handleCalculation","calc","parser","save","animation","$animation","SaveOptions","cache","qualifiedName","prefix","key","toLowerCase","Animations","saveGroup","prefixOrOptions","animations","previousOptions","parsedOptions","$options","Defaults","noOptions","animationName","translate","mappings","saveAs","parsed","newAttrimators","fromAttribute","toAttribute","get","rekey","translated","Calculator2d","createConstants","Calculator3d","CalculatorNumber","CalculatorQuaternion","CalculatorRGB","CalculatorRGBA","CalculatorString","FactoryObject","BuilderAnd","BuilderDeltas","BuilderFinal","BuilderInitial","BuilderKeyframe","BuilderMove","BuilderPath","BuilderPhysics","BuilderQueue","BuilderSpring","BuilderTravel","BuilderTweenFrom","BuilderTweenTo","PathDelta","points","deltas","set","PathParametric","loop","matrix","weight","invert","PathBasisSpline","PathBezier","weights","PathCatmullRom","PathCombo","paths","uniform","granularity","PathCompiled","pointCount","PathCubic","p0","p1","p2","p3","PathHermite","start","startTangent","endTangent","PathJump","PathKeyframe","easings","PathLinear","PathQuadratic","PathQuadraticCorner","midpoint","PathSub","PathUniform","Tween","SpringDistance","rest","distance","damping","stiffness","gravity","finishOnRest","SpringLinear","temp0","temp1","Movie","currentTimelines","sequenceDelay","sequenceEasing","Easings","linear","introduce","timelines","autoEnd","MoviePlayer","movie","speed","time","playing","runner","MovieTimeline","hasOptions","merge","$attrimatorsFor","helper","builderName","$builder","saved","cacheIt","animationsQueued","animationsMerged","base","j","animationString","trim","animationSplit","parsedAnimation","additionalOptions","hasAdditionalOptions","parsedAttrimators","queueMap","builderInput","Builders","calculatorInput","Calculators","returnOnInvalid","EasingTypes","indexOf","pair","t","bezier","$easingType","easingType","optional","factoryInput","Factories","highestPriorityFactory","factoryName","is","parseFloat","isNaN","originalInput","cacheOptions","Options","part","first","charAt","paramSplit","substring","paramValue","parseOptionProperty","parseFunction","propertyAdd","propertyScale","$path","pathInput","Paths","type","$spring","springInput","Springs","$transition","transition","Transitions","transitionArray","intro","outro","lookup","transitionTime","transitionOutro","transitionIntro","transitionEasing","transitionGranularity","transitionLookup","cacheTransitions","noTransition","superPrefix","construct","parentConstructor","properties","F","prototype","Object","enumerable","configurable","writable","teasing","frameRate","pauseTime","comboPathUniformGranularity","calculatorNumber","calculator2d","y","calculator3d","z","calculatorQuaternion","angle","calculatorRGB","calculatorRGBA","calculatorString","Date","getTime","String","replace","id","_id","clone","attrimatorMap","attrimatorsAdded","updated","cycleCurrent","cycleNext","cycleEnded","newCycle","applyCycle","cycle","applyCurrentCycle","values","attr","startCycle","endCurrentCycle","restore","applyInitialState","aa","setDefault","cloneDefault","wasFinished","minCycle","setTime","isFinished","Math","placeAttrimator","existing","trimAttrimators","removeAt","deactivate","destroy","spring","play","all","playAttrimators","finishNotPresent","unplay","unplayAttrimators","startings","transitionAttrimators","queue","queueAttrimators","transitionMap","transitionGetValue","transitionGetValueAt","transitionStopAttrimator","relativeTime","valueAt","getElapsed","stopIn","tweenTo","current","fromOptions","tweenManyTo","targets","tweenFrom","starting","tweenManyFrom","tween","starts","ends","tweenMany","move","amount","relative","moveMany","amounts","ref","request","follow","attrimatorsFor","keys","resulting","remove","unset","timeRemaining","hasAttrimators","size","getSubject","wrapper","invoke","args","defer","onCycleStart","onCycleEnd","at","index","each","iterator","filterer","alive","getSubjects","reverse","last","mid","floor","e0","e1","sequence","maxRemaining","startTime","elapsed","paused","prestart","prestartNext","overrideNext","totalTime","isFinite","milliseconds","stopAt","valueAtSearch","attrimatorAt","hasComputed","isInfinite","totalPausedTime","isPaused","getBuilder","nextAt","setGroup","groupId","force","deep","onNewAttribute","hasCallback","mapOffset","timeOffset","unqueueAt","playMapAt","stopNotPresentAt","playAttrimatorAt","getValue","getValueAt","stopAttrimator","hasOverlap","curr","currValue","create","pastLookahead","pastVelocity","sub","pastNegativeVelocity","past","add","outTime","outPoint","outNext","inTime","inPoint","inNext","outVelocity","outPerMillis","inVelocity","inPerMillis","compiled","lastPoint","totalDistance","distances","requiredTime","timeDelta","transitionEvent","has","indices","returnInfinity","Infinity","nextCycle","currentDepth","nextDepth","iterate","depth","nextMergeId","mergeAttrimator","mergeEasing","mergeRepeat","mergeDelay","mergeSleep","mergeDuration","mergeOffset","mergeScale","mergeScaleBase","mergeParameters","submerge","specifics","parseEasing","parseFirst","parseRepeat","parseNumber","parseDelay","parseSleep","parseDuration","parseOffset","parseScale","parseScaleBase","option","parseEvent","parseParameters","parseOptionFunction","optionAdd","optionScale","baseRaw","mergeFirst","mergeNumber","specific","ONE","INFINITY","parseArray","output","parsedDefault","zero","abs","adds","mul","div","interpolate","delta","random","sqrt","distanceSq","lengthSq","isValid","isZero","isEqual","dot","distSq","setLength","isRelative","test","getRelativeAmount","eventable","$eventable","$previous","$eventType","$event","$callback","$calls","$next","$isRoot","$register","$run","methodName","undefer","i2","x2","eq1","eq2","x3","sin","wave","cos","inv","log10","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","EventState","DELAYED","ANIMATING","SLEEPING","FINISHED","computeValue","baseValue","compute","applyValue","newRepeat","ceil","state","replaceComputed","oldState","newState","iteration","sleepTime","animateTime","fromKey","toKey","lastValue","pop","lastKey","deterministic","isDeterministic","examinePoints","examiner","returnOnTrue","returnOnFalse","ps","resolvePoint","isLinear","prev","deltadelta","resolveVelocity","resolveAcceleration","initalPosition","dt","MAX_DT","vel","acc","pos","usePosition","maxDelay","createAttrimators","template","delayOffset","remaining","resolveRest","updateVelocity","EPSILON","vendors","requestor","requestAnimationFrame","lastTime","timeToCall","setTimeout","parsers","color","parseComponent","parseInt","vparsed","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","named","regex","matches","exec","cp","format","ca","cr","cg","cb","toString","relativeAmount","mask","relativeFunction","randomSelection","randomFunction","selected","resolvedMin","resolvedMax","valueResolve","scalar","calcScalar","scalarResolve","neg","round","truncate","denominator","calcDenominator","denominatorResolve","mod","divisor","calcDivisor","divisorResolve","toDegrees","PI","toRadians","cosDegrees","sinDegrees","tanDegrees","propertyName","aliases","left","right","middle","center","top","bottom","def","cx","cy","rx","ry","ix","iy","parseString","amountScale","dx","dy","epsilon","cz","rz","iz","dz","ab","ra","ia","da","rr","rg","rb","ir","ig","ib","dr","dg","db","$animator","object","calculatorName","and","deltaObject","valueMax","initial","oncer","from","half","to","kframes","keyframe","sort","times","maxTime","order","pathEasings","pathDefinition","parsedPath","physics","physic","springs","travel","traveling","fromParsed","toParsed","pointing","traveler","subtractVelocity","pointingFunction","targetValue","difference","ds","d0","d1","pd","d2","d3","loops","_set","MATRIX","WEIGHT","computeWeights","inverses","w","pathCount","lengthGranularity","lengthTotal","lengths","lengthCurrent","cachedLength","_length","previousDelta","deltaDistance","deltaGap","pathDelta","compile","i1","i3","ea","getTimes","invlength","negmidpoint","halfmidpoint","_start","nextTimeline","setAutoEnd","getTimelines","with","additional","getTimeline","timelineId","$timelineId","timeline","seek","by","eachCurrentTimeline","onTimeline","timeGap","backward","forward","applyNow","avoidApplyTrigger","goto","applyTime","evaluatePlaying","player","currentValue","parseArry","defaultEasing","conversions","inf","infinity","infinite","twice","thrice","dozen","ms","cs","jiffy","third","s","sec","h","hr","unit","fn","factoryFor","number","Aninmation","PathTween"],"mappings":"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","file":"anim8js.min.js","sourcesContent":["/* anim8js 1.0.5 - anim8js - Anim8 Everything by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define('anim8', [], function() { // jshint ignore:line\n      return factory(root);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global);  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.m8 = root.anim8 = factory(root);\n    root.m8s = root.anim8s = root.anim8.anim8s;\n  }\n}(this, function(global)\n{\n\n\nvar Class =\n{\n  superPrefix: '_',\n\n  extend: function(construct, parentConstructor, properties)\n  {\n    function F() {}\n\n    F.prototype = parentConstructor.prototype;\n\n    construct.prototype = new F();\n\n    if ( isObject( properties ) )\n    {\n      this.define( construct, properties );\n    }\n  },\n\n  define: function(construct, properties)\n  {\n    var target = construct.prototype;\n\n    for (var prop in properties)\n    {\n      if ( prop in target )\n      {\n        this.defineProperty( target, this.superPrefix + prop, target[ prop ] );\n      }\n\n      this.defineProperty( target, prop, properties[ prop ] );\n    }\n  },\n\n  defineProperty: function(target, property, value)\n  {\n    if ( Object.defineProperty )\n    {\n      Object.defineProperty( target, property, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    }\n    else\n    {\n      target[ property ] = value;\n    }\n  }\n};\n\n\n\n/**\n * The default values for anim8js properties.\n *\n * @property {Object} anim8.Defaults\n */\nvar Defaults =\n{\n\n  /**\n   * The default animation duration in milliseconds.\n   *\n   * @property {Number} duration\n   * @for anim8.Defaults\n   * @default 1000\n   */\n  duration: 1000,\n\n  /**\n   * The default easing.\n   *\n   * @property {String|Function|Array} easing\n   * @for anim8.Defaults\n   * @default 'ease'\n   */\n  easing: 'ease',\n\n  /**\n   * The default \"total easing\" which is the overall easing\n   * for an animation which actually has easing values per frame.\n   *\n   * @property {String|Function|Array} teasing\n   * @for anim8.Defaults\n   * @default 'linear'\n   */\n  teasing: 'linear',\n\n  /**\n   * The default animation delay in milliseconds.\n   *\n   * @property {Number} delay\n   * @for anim8.Defaults\n   * @default 0\n   */\n  delay: 0,\n\n  /**\n   * The default animation sleep in milliseconds.\n   *\n   * @property {Number} sleep\n   * @for anim8.Defaults\n   * @default 0\n   */\n  sleep: 0,\n\n  /**\n   * The default number of repeats for an animation.\n   *\n   * @property {Number} repeat\n   * @for anim8.Defaults\n   * @default 1\n   */\n  repeat: 1,\n\n  /**\n   * The default scale for an animation.\n   *\n   * @property scale\n   * @for anim8.Defaults\n   * @default 1.0\n   * @type {Number}\n   */\n  scale: 1.0,\n\n  /**\n   * The default animation offset in milliseconds.\n   *\n   * @property {Number} offset\n   * @for anim8.Defaults\n   * @default 0\n   */\n  offset: 0,\n\n  /**\n   * The default transition time in milliseconds.\n   *\n   * @property {Number} transitionTime\n   * @for anim8.Defaults\n   * @default 500\n   */\n  transitionTime: 500,\n\n  /**\n   * The default transition outroduction time in milliseconds.\n   *\n   * @property {Number} transitionOutro\n   * @for anim8.Defaults\n   * @default 100\n   */\n  transitionOutro: 100,\n\n  /**\n   * The default transition introduction time in milliseconds.\n   *\n   * @property {Number} transitionIntro\n   * @for anim8.Defaults\n   * @default 100\n   */\n  transitionIntro: 100,\n\n  /**\n   * The default transition easing when none is specified.\n   *\n   * @property {String|Function|Array} transitionEasing\n   * @for anim8.Defaults\n   * @default 'linear'\n   */\n  transitionEasing: 'linear',\n\n  /**\n   * The default transition granularity. This is used for smooth transitions to\n   * provide a smooth transition from the outro velocity to the intro velocity,\n   * the cubic or quadratic path between the two is a curve with unknown length\n   * so the length needs to be calculated using a maximum number of points to\n   * calculate along the path - summing the distances between the consecutive points.\n   *\n   * @property {Number} transitionGranularity\n   * @for anim8.Defaults\n   * @default 0\n   */\n  transitionGranularity: 0,\n\n  /**\n   * TODO\n   *\n   * @property {Number} transitionLookup\n   * @for anim8.Defaults\n   * @default 10\n   */\n  transitionLookup: 10,\n\n  /**\n   * Whether animtions are cached whenever possible. Animations that can be\n   * cached are strings with options specified in the string and without an\n   * option object given. For example 'tada ~1s 3s x3' is cacheable.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cache\n   * @for anim8.Defaults\n   * @default false\n   */\n  cache: false,\n\n  /**\n   * Whether parsed options are cached whenever possible. Options that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheOptions\n   * @for anim8.Defaults\n   * @default false\n   */\n  cacheOptions: false,\n\n  /**\n   * Whether parsed transitions are cached whenever possible. Transitions that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheTransitions\n   * @for anim8.Defaults\n   * @default false\n   */\n  cacheTransitions: false,\n\n  /**\n   * The value to return when options could not be parsed from input.\n   *\n   * @property {Object} noOptions\n   * @for anim8.Defaults\n   * @default {}\n   */\n  noOptions: {},\n\n  /**\n   * The value to return when a transition could not be parsed from input.\n   *\n   * @property {Object} noTransition\n   * @for anim8.Defaults\n   * @default {}\n   */\n  noTransition: {},\n\n  /**\n   * The target number of milliseconds between frames. This only applies if the\n   * browser doesn't support any of the requestAnimationFrame variations.\n   *\n   * @property {Number} frameRate\n   * @for anim8.Defaults\n   * @default 33\n   */\n  frameRate: 16,\n\n  /**\n   * The number of milliseconds to pause between looping to let the UI react\n   * to user events.\n   *\n   * @property {Number} pauseTime\n   * @for anim8.Defaults\n   * @default 5\n   */\n  pauseTime: 5,\n\n  /**\n   * The granularity for uniform combo paths used to calculate path lengths.\n   *\n   * @property {Number} comboPathUniformGranularity\n   * @for anim8.Defaults\n   * @default 100\n   */\n\n  comboPathUniformGranularity: 100,\n\n  calculatorNumber: 0,\n\n  calculator2d: {x: 0, y: 0},\n\n  calculator3d: {x: 0, y: 0, z: 0},\n\n  calculatorQuaternion: {x: 0, y: 0, z: 0, angle: 0},\n\n  calculatorRGB: {r: 0, g: 0, b: 0},\n\n  calculatorRGBA: {r: 0, g: 0, b: 0, a: 1},\n\n  calculatorString: ''\n};\n\n\nvar DelegateTypes =\n{\n\n  /**\n   * this is returned at the end.\n   *\n   * @property THIS\n   * @for DelegateTypes\n   */\n  THIS: 'this',\n\n  /**\n   * An array of results for each method call is returned.\n   *\n   * @property RESULTS\n   * @for DelegateTypes\n   */\n  RESULTS: 'results',\n\n  /**\n   * The result of the first element.\n   *\n   * @property RETURN_FIRST\n   * @for delegate\n   */\n  FIRST: 'first',\n\n  /**\n   * True if any of the methods return true, otherwise false.\n   *\n   * @property RETURN_TRUE\n   * @for delegate\n   */\n  TRUE: 'true'\n\n};\n\n\n\n/**\n * @class Core\n */\n\n/**\n * A function that does nothing.\n *\n * @property anim8.noop\n */\nfunction noop() {}\n\n/**\n * Returns true if the given variable is defined.\n *\n * **Examples:**\n *\n *     anim8.isDefined( 0 );     // true\n *     anim8.isDefined( false ); // true\n *     anim8.isDefined();        // false\n *\n * @method anim8.isDefined\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isDefined(x)\n{\n  return typeof x !== 'undefined';\n}\n\n/**\n * Returns true if the given variable is a function.\n *\n * @method anim8.isFunction\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isFunction(x)\n{\n  return !!(x && x.constructor && x.call && x.apply);\n}\n\n/**\n * Returns true if the given variable is a number.\n *\n * **Examples:**\n *\n *     anim8.isNumber( 0 );     // true\n *     anim8.isNumber( -45.6 ); // true\n *     anim8.isNumber( true );  // false\n *     anim8.isNumber( '1' );   // false\n *     anim8.isNumber();        // false\n *\n * @method anim8.isNumber\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isNumber(x)\n{\n  return typeof x === 'number';\n}\n\n/**\n * Returns true if the given variable is a boolean variable.\n *\n * **Examples:**\n *\n *     anim8.isBoolean( 0 );     // false\n *     anim8.isBoolean( -45.6 ); // false\n *     anim8.isBoolean( true );  // true\n *     anim8.isBoolean( false ); // true\n *     anim8.isBoolean( '1' );   // false\n *     anim8.isBoolean();        // false\n *\n * @method anim8.isBoolean\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isBoolean(x)\n{\n  return typeof x === 'boolean';\n}\n\n/**\n * Returns true if the given variable is a string.\n *\n * **Examples:**\n *\n *     anim8.isString( '' );    // true\n *     anim8.isString( '1' );   // true\n *     anim8.isString( 4.5 );   // false\n *     anim8.isString();        // false\n *\n * @method anim8.isString\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isString(x)\n{\n  return typeof x === 'string';\n}\n\n/**\n * Returns true if the given variable is an array. This should be checked before\n * anim8.isObject since Arrays are objects.\n *\n * **Examples:**\n *\n *     anim8.isArray( [] );     // true\n *     anim8.isArray( [4, 5] ); // true\n *     anim8.isArray( 4.5 );    // false\n *     anim8.isArray();         // false\n *\n * @method anim8.isArray\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isArray(x)\n{\n  return x instanceof Array;\n}\n\n/**\n * Returns true if the given variable is an object. Arrays are considered\n * objects.\n *\n * **Examples:**\n *\n *     anim8.isObject( {} );     // true\n *     anim8.isObject( [] );     // true\n *     anim8.isObject( 4.5 );    // false\n *     anim8.isObject();         // false\n *     anim8.isObject( null );   // false\n *\n * @method anim8.isObject\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isObject(x)\n{\n  return typeof x === 'object' && x !== null;\n}\n\n/**\n * Returns the current time in milliseconds.\n *\n * @method anim8.now\n * @return {Number}\n */\nvar now = (function()\n{\n  return Date.now ? Date.now : function()\n  {\n    return new Date().getTime();\n  };\n\n})();\n\n/**\n * Returns the trimmed version of the given string. A trimmed string has no\n * whitespace in the beginning or end of it.\n *\n * **Examples:**\n *\n *     anim8.trim( 'x' );     // 'x'\n *     anim8.trim( '   x' );  // 'x'\n *     anim8.trim( 'x   ' );  // 'x'\n *     anim8.trim( '  x ' );  // 'x'\n *     anim8.trim( '    ' );  // ''\n *\n * @method anim8.trim\n * @param  {String} x\n * @return {String}\n */\nvar trim = (function()\n{\n  if (String.prototype.trim) {\n    return function(x) {\n      return x.trim();\n    };\n  }\n  return function(x) {\n    return x.replace(/^([\\s]*)|([\\s]*)$/g, '');\n  };\n})();\n\n/**\n * Determines whether the given variable is empty.\n *\n * **Examples:**\n *\n *     anim8.isEmpty( '' );        // true\n *     anim8.isEmpty( 0 );         // true\n *     anim8.isEmpty( [] );        // true\n *     anim8.isEmpty( {} );        // true\n *     anim8.isEmpty( null );      // true\n *     anim8.isEmpty( true );      // true\n *     anim8.isEmpty( false );     // true\n *     anim8.isEmpty( 'x' );       // false\n *     anim8.isEmpty( 0.3 );       // false\n *     anim8.isEmpty( [0] );       // false\n *     anim8.isEmpty( {x:3} );     // false\n *\n * @method anim8.isEmpty\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isEmpty(x)\n{\n  if ( isArray( x ) || isString( x ) )\n  {\n    return x.length > 0;\n  }\n  else if ( x === null )\n  {\n    return true;\n  }\n  else if ( isObject( x ) )\n  {\n    for (var prop in x)\n    {\n      return false;\n    }\n  }\n  else if ( isNumber( x ) )\n  {\n    return x !== 0.0;\n  }\n\n  return true;\n}\n\n/**\n * Parses the given input and returns an array.\n *\n * **Examples:**\n *\n *     anim8.toArray();            // []\n *     anim8.toArray('a b');       // ['a b']\n *     anim8.toArray('a b', ' ');  // ['a', 'b']\n *     anim8.toArray({a:0,b:0});   // ['a', 'b']\n *     anim8.toArray(['a', 'b']);  // ['a', 'b']\n *     anim8.toArray(3.2);         // [3.2]\n *     anim8.toArray(true);        // [true]\n *\n * @param  {Any} x\n * @param  {String} [split]\n * @return {Array}\n */\nfunction toArray( x, split )\n{\n  if ( isString( x ) )\n  {\n    return split ? x.split( split ) : [ x ];\n  }\n  else if ( isArray ( x ) )\n  {\n    return x;\n  }\n  else if ( isObject( x ) )\n  {\n    var props = [];\n\n    for ( var prop in x )\n    {\n      props.push( prop );\n    }\n\n    return props;\n  }\n  else if ( isDefined( x ) )\n  {\n    return [ x ];\n  }\n\n  return [];\n}\n\n/**\n * Performs a deep copy of the given variable. If the variable is an array or\n * object a new instance of that type is created where the values are copied as\n * well. All other types can't be copied (most likely because they're scalar) so\n * they are returned as-is.\n *\n * @method anim8.copy\n * @param {T} x\n * @return {T}\n */\nfunction copy(x)\n{\n  if ( isArray(x) )\n  {\n    var copied = [];\n\n    for (var i = 0; i < x.length; i++)\n    {\n      copied.push( copy( x[i] ) );\n    }\n\n    x = copied;\n  }\n  else if ( isObject(x) )\n  {\n    var copied = {};\n\n    for (var p in x)\n    {\n      copied[p] = copy( x[p] );\n    }\n\n    x = copied;\n  }\n\n  return x;\n}\n\n/**\n * Extends the given object by merging the following objects into it, avoiding\n * overriding any existing properties.\n *\n * @method anim8.extend\n * @param  {Object} out\n * @return {Object}\n */\nfunction extend(out)\n{\n  for (var i = 1; i < arguments.length; i++)\n  {\n    var o = arguments[ i ];\n\n    if ( isObject( o ) )\n    {\n      for (var prop in o)\n      {\n        if ( !(prop in out) )\n        {\n          out[prop] = o[prop];\n        }\n      }\n    }\n  }\n\n  return out;\n}\n\n/**\n * Returns the first defined variable of a possible 4 variables.\n *\n * **Examples:**\n *\n *     anim8.coalesce( 1, 2, 3 );           // 1\n *     anim8.coalesce( undefined, 2, 3 );   // 2\n *     anim8.coalesce();                    // undefined\n *\n * @method anim8.coalesce\n */\nfunction coalesce(a, b, c, d)\n{\n  if (isDefined(a)) {\n    return a;\n  }\n  if (isDefined(b)) {\n    return b;\n  }\n  if (isDefined(c)) {\n    return c;\n  }\n  return d;\n}\n\n/**\n * Provides a way to wrap a variable so calculators don't try copying it on parse.\n *\n * **Examples:**\n *\n *     anim8.constant( 5 );   // function() { return 5; }\n *\n * @method anim8.constant\n * @param {T} variable\n * @return {Function}\n */\nfunction constant(variable)\n{\n  return function()\n  {\n    return variable;\n  };\n}\n\n/**\n * Resolves the given variable. If the variable is a function the result is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.resolve( 5 );                     // 5\n *     anim8.resolve( true );                  // true\n *     anim8.resolve( function(){return 7;} ); // 7\n *\n * @method anim8.resolve\n * @param  {Function|E} variable\n * @return {E}\n */\nfunction resolve(variable)\n{\n  return isFunction( variable ) ? variable() : variable;\n}\n\n/**\n * Returns a \"unique\" identifier.\n *\n * @method id\n * @return {Number}\n */\nvar id = (function()\n{\n  var _id = 0;\n  return function() {\n    return ++_id;\n  };\n\n})();\n\n\n/**\n * Instantiates a new Animation given it's name, the input & options passed, and\n * the attrimators that were generated from the input & options. If the name is\n * false this is an anonymous animation. Input & Options are used by builders to\n * generate attrimators, options allow for an animations default properties to\n * be overriden.\n *\n * @param {String|Boolean} name\n * @param {Object} input\n * @param {Object} options\n * @param {AttrimatorMap} attrimators\n * @class Animation\n * @constructor\n */\nfunction Animation(name, input, options, attrimators)\n{\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {String|False} name\n   */\n  this.name = name;\n\n  /**\n   * The object which created the animation.\n   *\n   * @property {Object} input\n   */\n  this.input = input;\n\n  /**\n   * The options given when the animation was created.\n   *\n   * @property {Object} [options]\n   */\n  this.options = options;\n\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {AttrimatorMap} name\n   */\n  this.attrimators = attrimators;\n}\n\nClass.define( Animation,\n{\n\n  /**\n   * Generates an map of event instances from the attrimators in this animation.\n   *\n   * @method newAttrimators\n   * @return {AttrimatorMap}\n   */\n  newAttrimators: function()\n  {\n    return this.attrimators.clone();\n  },\n\n  /**\n   * Merges options with the options in this animation and places them in the\n   * events.\n   *\n   * @method merge\n   * @param {Object} [options]\n   * @param {AttrimatorMap} attrimatorMap\n   * @return {AttrimatorMap}\n   */\n  merge: function(options, attrimatorMap)\n  {\n    var helper = new BuilderHelper( this.input, this.options, options );\n\n    for (var builderName in this.input)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( this.input, options, this.options, attrimatorMap, helper );\n      }\n    }\n\n    return attrimatorMap;\n  }\n\n});\n\n\n/**\n * Instantiates a new Animator given a subject to animate.\n *\n * @param {Any} e\n * @class Animator\n * @constructor\n * @extends anim8.eventize\n */\nfunction Animator(e)\n{\n  this.reset( e );\n}\n\n/**\n * The event triggered after preupdate is called. Pre-update is used to run any\n * preparations on the subject before updates are made and attributes are\n * applied.\n *\n * @event preupdate\n */\n\n/**\n * The event triggered after all attrimators are updated and any new values\n * have been applied to the current values (frame) on the animator.\n *\n * @event update\n */\n\n/**\n * The event triggered after the current values (frame) on the animator are\n * applied to the subject.\n *\n * @event apply\n */\n\n/**\n * The event triggered when the given animation cycle starts (and initial\n * values are applied) for all attrimators in the cycle.\n *\n * @event cycleStart:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when the given animation cycle ends which occurs when the\n * last attrimator for an animation finishes or is interrupted by commands like\n * play, queue, transition, end, finish, & stop.\n *\n * @event cycleEnd:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when all animations on the animator have finished.\n *\n * @event finished\n * @param {Animator} animator\n */\n\n/**\n * The event triggered when an animator is deactivated which occurs when an\n * animator has finished animating and is being taken off the list of live\n * animators (anim8.animating).\n *\n * @event deactivate\n */\n\n/**\n * The event triggered after the user calls destroy on an animator.\n *\n * @event destroyed\n */\n\nClass.define( Animator,\n{\n\n  /**\n   * Resets the animator given a subject to animate.\n   *\n   * @method reset\n   * @param {Any} subject\n   * @chainable\n   * @protected\n   */\n  reset: function(subject)\n  {\n    /**\n     * The subject which is being animated.\n     *\n     * @property {Any} subject\n     */\n    this.subject = subject;\n\n    /**\n     * The map of attrimators animating the subject.\n     *\n     * @property {AttrimatorMap} attrimators\n     */\n    this.attrimators = new AttrimatorMap();\n\n    /**\n     * The array of attrimators recently added to the animator that\n     * are ready to be started.\n     *\n     * @property {Array} attrimatorsAdded\n     * @protected\n     */\n    this.attrimatorsAdded = [];\n\n    /**\n     * The object which stores the attribute values being animated.\n     *\n     * @property {Object} frame\n     */\n    this.frame = {};\n\n    /**\n     * The object which stores the attributes last updated.\n     *\n     * @property {Object} updated\n     */\n    this.updated = {};\n\n    /**\n     * Whether or not this animator has completely finished animating it's subject.\n     *\n     * @property {Boolean} finished\n     */\n    this.finished = false;\n\n    /**\n     * The factory which created this Animator given a subject.\n     *\n     * @property {Factory} factory\n     */\n    this.factory = null;\n\n    /**\n     * Whether or not this animator is actively being updated.\n     *\n     * @property {Boolean} active\n     */\n    this.active = false;\n\n    /**\n     * The current cycle being animated. Multiple cycles can be animated at once, this is the first one.\n     *\n     * @property {Number} cycleCurrent\n     * @protected\n     */\n    this.cycleCurrent = 0;\n\n    /**\n     * The ID of the next cycle of animations to be added to this Animator.\n     *\n     * @property {Number} cycleNext\n     * @protected\n     */\n    this.cycleNext = 0;\n\n    /**\n     * The last cycle that was ended.\n     *\n     * @property {Number} cycleEnded\n     * @protected\n     */\n    this.cycleEnded = 0;\n\n    return this;\n  },\n\n  /**\n   * Starts a new animation cycle. This is done before events & springs are\n   * placed to group them together so we know when to apply their initial value.\n   *\n   * @method newCycle\n   * @param {Attrimator|AttrimatorMap} attrimators\n   * @chainable\n   * @protected\n   */\n  newCycle: function(attrimators)\n  {\n    this.cycleNext++;\n\n    if ( attrimators instanceof AttrimatorMap )\n    {\n      this.cycleNext = attrimators.applyCycle( this.cycleNext );\n    }\n    else if ( attrimators instanceof Attrimator )\n    {\n      attrimators.cycle = this.cycleNext;\n    }\n\n    return this;\n  },\n\n  /**\n   * Applies the current cycle. This involves finding all attrimators with the\n   * same cycle identifier and applying their initial state.\n   *\n   * @method applyCurrentCycle\n   * @chainable\n   * @protected\n   */\n  applyCurrentCycle: function()\n  {\n    var cycle = this.cycleCurrent;\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      if ( attrimator.cycle === cycle )\n      {\n        this.updated[ attr ] = (attrimator.startCycle( this.frame ) !== false) || this.updated[ attr ];\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Ends the current cycle which calls any listening functions.\n   *\n   * @method endCurrentCycle\n   * @chainable\n   * @protected\n   */\n  endCurrentCycle: function()\n  {\n    if ( this.cycleCurrent > this.cycleEnded )\n    {\n      this.cycleEnded = this.cycleCurrent;\n      this.trigger( 'cycleEnd:' + this.cycleCurrent, this.cycleCurrent );\n    }\n  },\n\n  /**\n   * Returns the attribute descriptor given the name of the attribute.\n   *\n   * @method getAttribute\n   * @param  {String} attr\n   * @return {Object}\n   */\n  getAttribute: function(attr)\n  {\n    return this.factory.attribute( attr );\n  },\n\n  /**\n   * Restores any temporary state that may exist on this Animator that\n   * is a result from animations.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore: function()\n  {\n    return this;\n  },\n\n  /**\n   * Applies the initial state of recently added attrimators immediately.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState: function()\n  {\n    var currentTime = now();\n\n    this.preupdate( currentTime );\n    this.update( currentTime );\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * A method thats invoked along with all other animators before updates are\n   * called. This is used to make any necessary preparations before the animator\n   * is updated.\n   *\n   * @method preupdate\n   * @param {Number} now\n   * @chainable\n   */\n  preupdate: function(now)\n  {\n    // If there are attribute placed on the animator since the last preupdate\n    // that has computed values we need to replace the path on the event with\n    // a copy containing the computed values. This is where current value &\n    // relative values are injected from the animator into the attribute.\n    var aa = this.attrimatorsAdded;\n    if ( aa.length )\n    {\n      for (var i = 0; i < aa.length; i++)\n      {\n        var attrimator = aa[ i ];\n        var attr = attrimator.attribute;\n\n        if ( attr in this.subject )\n        {\n          this.frame[ attr ] = this.subject[ attr ];\n        }\n        else\n        {\n          this.setDefault( attr );\n        }\n\n        attrimator.start( now, this );\n      }\n\n      aa.length = 0;\n    }\n\n    this.trigger('preupdate');\n\n    return this;\n  },\n\n  /**\n   * Sets the default value for the given attribute in the frame of this\n   * Animator if there's no value there.\n   *\n   * @method setDefault\n   * @param {String} attr\n   * @protected\n   */\n  setDefault: function(attr)\n  {\n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = this.getAttribute( attr ).cloneDefault();\n    }\n  },\n\n  /**\n   * Updates all attrimators in this animator with the given time.\n   *\n   * @method update\n   * @param {Number} now\n   * @chainable\n   */\n  update: function(now)\n  {\n    this.wasFinished = this.finished;\n    this.finished = true;\n\n    var attrimators = this.attrimators.values;\n    var minCycle = this.cycleNext;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      this.updated[ attr ] = attrimator.setTime( now, this.frame );\n\n      this.finished = this.finished && attrimator.isFinished();\n\n      minCycle = Math.min( minCycle, attrimator.cycle );\n    }\n\n    if ( this.cycleCurrent < minCycle )\n    {\n      while ( this.cycleCurrent < minCycle )\n      {\n        this.endCurrentCycle();\n        this.cycleCurrent++;\n      }\n\n      this.cycleCurrent = minCycle;\n      this.applyCurrentCycle();\n      this.trigger( 'cycleStart:' + this.cycleCurrent, this.cycleCurrent );\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.endCurrentCycle();\n    }\n\n    this.trigger('update');\n\n    return this;\n  },\n\n  /**\n   * Places the attribute animator in this animator replacing any existing\n   * animator for the same attribute. The next time the animator is updated the\n   * attribute animator will be started. The previous (if any) attrimator is\n   * returned.\n   *\n   * @method placeAttrimator\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  placeAttrimator: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var existing = this.attrimators.get( attr );\n\n    this.attrimators.put( attr, attrimator );\n    this.attrimatorsAdded.push( attrimator );\n\n    this.finished = false;\n\n    return existing;\n  },\n\n  /**\n   * Applies all updated attributes to the subject. This method is invoked with\n   * all of the other animators at the end of the animation cycle.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function()\n  {\n    for (var attr in this.frame)\n    {\n      if ( this.updated[ attr ] )\n      {\n        this.subject[ attr ] = this.frame[ attr ];\n        this.updated[ attr ] = false;\n      }\n    }\n\n    this.trigger('apply');\n\n    this.trimAttrimators();\n\n    return this;\n  },\n\n  /**\n   * Removes any finished attrimators and places any queued attrimators. If the\n   * animator previously wasn't finished but now is the 'finished' event will\n   * be triggered.\n   *\n   * @method trimAttrimators\n   * @chainable\n   * @protected\n   */\n  trimAttrimators: function()\n  {\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( attrimator.isFinished() )\n      {\n        if ( attrimator.next )\n        {\n          this.placeAttrimator( attrimator.next );\n        }\n        else\n        {\n          this.attrimators.removeAt( i );\n        }\n      }\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the current value for the given attribute (or undefined if the\n   * attribute is not or has not animated).\n   *\n   * @method value\n   * @param {String} attr\n   * @return {Any}\n   */\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\n  /**\n   * Activates this Animator by adding it to the main loop if it isn't there\n   * already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    activateAnimator( this );\n\n    return this;\n  },\n\n  /**\n   * A method that is invoked when an animator is finished and is being removed\n   * from the list of currently animating Animators.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate: function()\n  {\n    this.trigger('deactivate', this);\n\n    return this;\n  },\n\n  /**\n   * A method that can be invoked to destroy an animator - removing any\n   * relationship between the subject and animator. The next time an animator is\n   * generated for the subject a new animator will be created.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy: function()\n  {\n    this.finished = true;\n\n    this.factory.destroy( this );\n\n    this.trigger('destroyed');\n\n    return this;\n  },\n\n  /**\n   * Adds a spring to this animator replacing any existing attrimator for the\n   * same attribute. A spring object can be given, an instance of anim8.Spring,\n   * or a name of a saved Spring. The spring added to the animator is returned.\n   *\n   * @method spring\n   * @param {Spring|String|Object} spring\n   * @return {Spring}\n   */\n  spring: function(spring)\n  {\n    var spring = $spring( spring );\n\n    if ( spring === false )\n    {\n      return false;\n    }\n\n    this.newCycle( spring );\n    this.placeAttrimator( spring );\n\n    this.activate();\n\n    return spring;\n  },\n\n  /**\n   * Plays an animation. Attributes in the animation that are currently being\n   * animated will be stopped and replaced with the new attrimators. If `all` is\n   * true then any attrimators animating not specified in the given animation\n   * will be stopped.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.playAttrimators( attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Plays a map of attrimators. Attributes in the attrimator map that are\n   * currently being animated will be stopped and replaced with the new\n   * attrimators. If \"all\" is true then any attrimators animating not specified\n   * in the given attrimator map will be stopped. This method will not activate\n   * the Animator, that has to be done manually.\n   *\n   * @method playAttrimators\n   * @param {AttrimatorMap} animatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  playAttrimators: function(attrimatorMap, all)\n  {\n    if ( all )\n    {\n      this.attrimators.finishNotPresent( attrimatorMap, 0 );\n    }\n\n    var attrimators = attrimatorMap.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      this.placeAttrimator( attrimators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Unplays an animation. Attributes in the animation that are currently being\n   * animated will be transitioned to their starting values. If `all` is true\n   * then any attrimators animating not specified in the given animation will be\n   * stopped.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method unplay\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} transition\n   * @param {String|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  unplay: function(animation, transition, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.unplayAttrimators( attrimatorMap, transition, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Unplays a map of attrimators. Attributes in the attrimator map that are\n   * currently being animated will be transitioned to their starting values.\n   * If \"all\" is true then any attrimators animating not specified\n   * in the given attrimator map will be stopped. This method will not activate\n   * the Animator, that has to be done manually.\n   *\n   * @method unplayAttrimators\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Object} transition\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  unplayAttrimators: function(attrimatorMap, transition, all)\n  {\n    var unplayAttrimators = new AttrimatorMap();\n    var attrimators = attrimatorMap.values;\n    var startings = {};\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      if ( attrimator.startCycle( startings ) )\n      {\n        unplayAttrimators.put( attr, new Oncer( attr, startings[ attr ], 0, true ) );\n      }\n    }\n\n    this.newCycle( unplayAttrimators );\n    this.transitionAttrimators( transition, unplayAttrimators, all );\n\n    return this;\n  },\n\n  /**\n   * Queues an animation. The attrimators generated from the given animation\n   * will be started at the same time - as soon as all finite attrimators for\n   * the same attributes are finished. Any infinite attrimators will be\n   * automatically stopped when all queued attrimators are set to start.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.queueAttrimators( attrimatorMap );\n\n    return this.activate();\n  },\n\n  /**\n   * Queues a map of attrimators. The map of attrimators will be started at the\n   * same time - as soon as all finished attrimators for the same attribute are\n   * finished. Any infinite attrimators will be automatically stopped when all\n   * queued attrimators are set to start.\n   *\n   * @method queueAttrimators\n   * @param {AttrimatorMap} attrimatorMap\n   * @chainable\n   * @protected\n   */\n  queueAttrimators: function(attrimatorMap)\n  {\n    this.attrimators.queueMap( attrimatorMap, 0, this.placeAttrimator, this );\n\n    return this;\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given animation will be stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {String|Object|Animation} animation\n   * @param {Object} [options]\n   * @param {Boolean} [all]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.transitionAttrimators( transition, attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given attrimator map will be\n   * stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * @method transitionAttrimators\n   * @param {Object} transition\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators: function(transition, attrimatorMap, all)\n  {\n    if ( all )\n    {\n      this.attrimators.finishNotPresent( attrimatorMap, transition.time );\n    }\n\n    this.attrimators.transitionMap(\n      transition,\n      attrimatorMap,\n      this.transitionGetValue,\n      this.getAttribute,\n      this.placeAttrimator,\n      this.transitionGetValueAt,\n      this.transitionStopAttrimator,\n      this\n    );\n\n    return this;\n  },\n\n  transitionGetValue: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\n  transitionGetValueAt: function(attrimator, relativeTime, out)\n  {\n    return attrimator.valueAt( attrimator.getElapsed() + relativeTime, out );\n  },\n\n  transitionStopAttrimator: function(attrimator, relativeTime)\n  {\n    attrimator.stopIn( relativeTime );\n  },\n\n  /**\n   * Tweens a single attribute to a target value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenTo\n   * @param {String} attr\n   * @param {T} target\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenTo: function(attr, target, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var end       = attribute.parse( target );\n    var path      = new Tween( attr, attribute.calculator, computed.current, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes to target values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyTo\n   * @param {Object} targets\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenManyTo: function(targets, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in targets )\n    {\n      var attribute = this.getAttribute( attr );\n      var end       = attribute.parse( targets[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, computed.current, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens a single attribute from a starting value to the current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenFrom\n   * @param {String} attr\n   * @param {T} starting\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenFrom: function(attr, starting, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starting );\n    var path      = new Tween( attr, attribute.calculator, start, computed.current );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to the current values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyFrom\n   * @param {Object} startings\n   * @param {String|Array|Object} [options]\n   * @chainable\n   */\n  tweenManyFrom: function(startings, options)\n  {\n    var options = $options( options );\n\n    this.newCycle();\n\n    for ( var attr in startings )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( startings[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, computed.current );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens an attribute from a starting value to an ending value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tween\n   * @param {String} attr\n   * @param {T} starts\n   * @param {T} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tween: function(attr, starts, ends, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starts );\n    var end       = attribute.parse( ends );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to ending values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenMany\n   * @param {Object} starts\n   * @param {Object} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenMany: function(starts, ends, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in starts )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( starts[ attr ] );\n      var end       = attribute.parse( ends[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Moves an attribute relative to its current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method move\n   * @param {String} attr\n   * @param {T} amount\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  move: function(attr, amount, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var relative  = attribute.parse( amount );\n    var start     = computed.current;\n    var end       = isComputed( relative ) ? relative : computed.relative( relative );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Moves multiple attribute relative to their current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method moveMany\n   * @param {Object} amounts\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  moveMany: function(amounts, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in amounts )\n    {\n      var attribute = this.getAttribute( attr );\n      var relative  = attribute.parse( amounts[ attr ] );\n      var start     = computed.current;\n      var end       = isComputed( relative ) ? relative : computed.relative( relative );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Returns a function that returns the current value for the given attribute\n   * when invoked. The returned function can be given as values for paths &\n   * springs that are evaluated every frame.\n   *\n   * @method ref\n   * @param {String} attr\n   * @return {Function}\n   */\n  ref: function(attr)\n  {\n    var animator = this;\n    var attribute = this.getAttribute( attr );\n    var request = {};\n\n    return function()\n    {\n      if ( attr in animator.frame )\n      {\n        return animator.frame[ attr ];\n      }\n\n      request[ attr ] = true;\n\n      var current = animator.get( request );\n\n      if ( isDefined( current[ attr ] ) )\n      {\n        return current[ attr ];\n      }\n\n      return attribute.defaultValue;\n    };\n  },\n\n  /**\n   * Follows the attribute along the given path definition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method follow\n   * @param {String} attr\n   * @param {Path|Object|String} path\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  follow: function(attr, path, options, cache)\n  {\n    var options = $options( options, cache );\n    var path    = $path( path );\n    var event   = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Helper method that iterates over given attributes. If callback is specified\n   * it is invoked for each attrimator in this animator for the given\n   * attributes. If no callback is given an array of anim8.Attrimators is\n   * returned for each attrimator in this animator for the given attributes.\n   *\n   * @method attrimatorsFor\n   * @param {String|Array|Object} attributes\n   * @param {Function} callback\n   * @return {this|Array}\n   */\n  attrimatorsFor: function(attributes, callback)\n  {\n    var attrimatorMap = this.attrimators;\n    var attributes = toArray( coalesce( attributes, attrimatorMap.keys ), ' ' );\n    var resulting = !isFunction( callback );\n    var results = [];\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n      var attrimator = attrimatorMap.get( attr );\n\n      if ( attrimator )\n      {\n        if ( resulting )\n        {\n          results.push( attrimator );\n        }\n        else\n        {\n          callback.call( this, attrimator, attr );\n        }\n      }\n    }\n\n    return resulting ? results : this;\n  },\n\n  /**\n   * Stops all attributes for the specified attributes. Attribute names can be\n   * given as an array or a space separated string. If no attributes are given\n   * all attributes are assumed.\n   *\n   * @method stop\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  stop: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator, attr)\n    {\n      this.attrimators.remove( attr );\n    });\n  },\n\n  /**\n   * Ends all attributes for the specified attributes. If attributes are queued\n   * the last value of the last attribute is applied to this Animator before\n   * being completely removed. Attribute names can be given as an array or a\n   * space separated string. If no attributes are given all attributes are\n   * assumed.\n   *\n   * @method end\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  end: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      while (attrimator.next)\n      {\n        attrimator = attrimator.next;\n      }\n\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Finishes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method finish\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  finish: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Calls nopeat on all current attrimators for the specified attributes.\n   * Attribute names can be given as an array or a space separated string. If\n   * no attributes are given all attributes are assumed.\n   *\n   * **See:** {{#crossLink \"Attrimator/nopeat:method\"}}Attrimator.nopeat{{/crossLink}}\n   *\n   * @method nopeat\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  nopeat: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.nopeat();\n    });\n  },\n\n  /**\n   * Pauses all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method pause\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  pause: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.pause();\n    });\n  },\n\n  /**\n   * Resumes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method resume\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  resume: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.resume();\n    });\n  },\n\n  /**\n   * Sets the given attributes to this Animator immediately.\n   *\n   * @method set\n   * @param {Object} attributes\n   * @chainable\n   */\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n      this.updated[ attr ] = true;\n    }\n\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * Unsets the attribute, array of attributes, or object of attributes.\n   * Unsetting involves removing all attrimators and the current value in the\n   * frame,\n   *\n   * @method unset\n   * @param {String|Array|Object} attributes\n   * @chainable\n   */\n  unset: function(attributes)\n  {\n    var attributes = toArray( coalesce( attributes, this.frame ), ' ' );\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n\n      this.attrimators.remove( attr );\n\n      delete this.frame[ attr ];\n    }\n\n    return this;\n  },\n\n  /**\n   * Gets the current attribute values for all attributes specified. The\n   * argument must be an object where the key is the name of an attribute.\n   *\n   * @method get\n   * @param {Object} attributes\n   * @return {Object}\n   */\n  get: function(attributes)\n  {\n    var out = {};\n\n    for (var attr in attributes)\n    {\n      out[ attr ] = this.frame[ attr ];\n    }\n\n    return out;\n  },\n\n  /**\n   * Returns the amount of finite time remaining before the animator is done\n   * animating. Attrimators that don't have a known end time are not included.\n   * If there are no attrimators with end times then zero is returned.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.attrimators.timeRemaining();\n  },\n\n  /**\n   * Returns true if there are any attrimators on this Animator.\n   *\n   * @method hasAttrimators\n   * @return {Boolean}\n   */\n  hasAttrimators: function()\n  {\n    return this.attrimators.size() > 0;\n  },\n\n  /**\n   * Returns the subject of the Animator optionally passing it through a wrapper\n   * function before it's returned.\n   *\n   * @method getSubject\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubject: function(wrapper)\n  {\n    var subject = this.subject;\n\n    if ( isFunction( wrapper ) )\n    {\n      subject = wrapper( subject );\n    }\n\n    return subject;\n  },\n\n  /**\n   * Invokes a function with the given context or the context of this Animator\n   * if none is given. This is particularly useful for having a function be\n   * called on deferred statements.\n   *\n   * @method invoke\n   * @param {Function} func\n   * @param {Object} [context]\n   * @param {Array} [args]\n   * @chainable\n   */\n  invoke: function(func, context, args)\n  {\n    if ( isFunction( func ) )\n    {\n      func.apply( context || this, args || [] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Defers the method calls following this one to when the given event type\n   * (on or once) and event. To return this animator you need to call undefer()\n   * as many times as you called defer().\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} [callback]\n   * @return {DeferAnimator}\n   */\n  defer: function(eventType, event, callback)\n  {\n    return new DeferAnimator( this, this, eventType, event, callback );\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned starts.\n   *\n   * @method onCycleStart\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleStart: function(callback, context)\n  {\n    this.once( 'cycleStart:' + this.cycleNext, callback, context );\n\n    return this;\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned ends.\n   *\n   * @method onCycleEnd\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleEnd: function(callback, context)\n  {\n    this.once( 'cycleEnd:' + this.cycleNext, callback, context );\n\n    return this;\n  }\n\n});\n\n/**\n * Adds the following event methods to Animators: on, once, off, trigger.\n */\neventize( Animator.prototype );\n\n\n/**\n * Instantiates an Array of {{#crossLink \"Animator\"}}{{/crossLink}} instances.\n *\n * @param {Array} [input]\n * @class Animators\n * @constructor\n * @extends {Array}\n */\nfunction Animators(input)\n{\n  this.$ = [];\n\n  if ( isArray( input ) )\n  {\n    this.fill( input );\n  }\n}\n\n/**\n * Animators is an instance of Array. All array methods are supported.\n */\nClass.define( Animators,\n{\n\n  /**\n   * Adds an animator to this set of animators.\n   *\n   * @param  {Animator} animator\n   * @chainable\n   */\n  push: function(animator)\n  {\n    this.$.push( animator );\n\n    return this;\n  },\n\n  /**\n   * Returns the number of animators in this set.\n   *\n   * @return {Number}\n   */\n  length: function()\n  {\n    return this.$.length;\n  },\n\n  /**\n   * Returns the animator at the given index.\n   *\n   * @param  {Number} index\n   * @return {Animator}\n   */\n  at: function(index)\n  {\n    return this.$[ index ];\n  },\n\n  /**\n   * Invokes a callback for each element in the array.\n   *\n   * @method each\n   * @param {Function} iterator\n   * @param {Object} context\n   * @chainable\n   */\n  each: function(iterator, context)\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      if ( iterator.call( context || array[i], array[i], i ) === false )\n      {\n        break;\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Appends the array of animators given to the end of this array.\n   *\n   * @method fill\n   * @param {Array} animators\n   * @chainable\n   */\n  fill: function(animators)\n  {\n    for (var i = 0; i < animators.length; i++)\n    {\n      this.push( animators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Invokes a callback for each element in the array and if a true value is\n   * returned  that element is removed from the array.\n   *\n   * @method filter\n   * @param {Function} filterer\n   * @chainable\n   */\n  filter: function(filterer)\n  {\n    var array = this.$;\n    var alive = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      var remove = filterer( array[i] );\n\n      if ( !remove )\n      {\n        array[alive++] = array[i];\n      }\n    }\n\n    array.length = alive;\n\n    return this;\n  },\n\n  /**\n   * Returns the subjects of the Animators optionally passing them through a\n   * wrapper function before it's returned.\n   *\n   * @method getSubjects\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubjects: function(wrapper)\n  {\n    var array = this.$;\n    var subjects = [];\n\n    for (var i = 0; i < array.length; i++)\n    {\n      subjects.push( array[i].subject );\n    }\n\n    if ( isFunction( wrapper ) )\n    {\n      subjects = wrapper( subjects );\n    }\n\n    return subjects;\n  },\n\n  /**\n   * Returns the first animator in the array.\n   *\n   * @method first\n   * @return {Animator}\n   */\n  first: function()\n  {\n    return this.$[0];\n  },\n\n  /**\n   * Reverses the order of animators in the array.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    var array = this.$;\n    var last = array.length - 1;\n    var mid = Math.floor( array.length / 2 );\n\n    for (var i = 0; i < mid; i++)\n    {\n      var e0 = array[ i ];\n      var e1 = array[ last - i ];\n\n      array[ i ] = e1;\n      array[ last - i ] = e0;\n    }\n\n    return this;\n  },\n\n  /**\n   * Activates all Animators in the array if they aren't active already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      pushAnimator( array[i] );\n    }\n\n    activate();\n\n    return this;\n  },\n\n  /**\n   * Creates a sequence of events separated by a delay.\n   *\n   * @method sequence\n   * @param {String|Number} delay\n   * @param {String|Array|Function} easing\n   * @return {Sequence}\n   */\n  sequence: function(delay, easing)\n  {\n    return new Sequence( this, delay, easing );\n  },\n\n  /**\n   * Returns the maximum time remaining out of all Animators in the array.\n   *\n   * **See:** {{#crossLink \"Animating/timeRemaining:method\"}}{{/crossLink}}\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    var array = this.$;\n    var maxRemaining = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      maxRemaining = Math.max( maxRemaining, array[ i ].timeRemaining() );\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method preupdate\n   * @chainable\n   */\n  preupdate: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].preupdate( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/update:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method update\n   * @chainable\n   */\n  update: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].update( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function(max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].apply();\n    }\n\n    return this;\n  },\n\n  /**\n   * Handles an animator if it's finished, and returns false if the animator can\n   * be removed from the set of animators.\n   *\n   * @method handleFinished\n   * @param {Animator} animator\n   * @return {Boolean}\n   */\n  handleFinished: function(animator)\n  {\n    if ( animator.finished )\n    {\n      animator.deactivate();\n      animator.active = false;\n    }\n\n    return animator.finished;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} on each\n   * animator in the array and returns this.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore               : delegate( 'restore', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method placeAttrimator\n   * @chainable\n   */\n  placeAttrimator       : delegate( 'placeAttrimator', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState     : delegate( 'applyInitialState', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trimAttrimators\n   * @chainable\n   */\n  trimAttrimators       : delegate( 'trimAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate            : delegate( 'deactivate', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy               : delegate( 'destroy', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method spring\n   * @chainable\n   */\n  spring                : delegate( 'spring', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/play:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method play\n   * @chainable\n   */\n  play                  : delegate( 'play', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/unplay:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method unplay\n   * @chainable\n   */\n  unplay                : delegate( 'unplay', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method playAttrimators\n   * @chainable\n   * @protected\n   */\n  playAttrimators       : delegate( 'playAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queue\n   * @chainable\n   */\n  queue                 : delegate( 'queue', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queueAttrimators\n   * @chainable\n   * @protected\n   */\n  queueAttrimators      : delegate( 'queueAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method transition\n   * @chainable\n   */\n  transition            : delegate( 'transition', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}}\n   * on each animator in the array and returns this.\n   *\n   * @method transitionAttrimators\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators : delegate( 'transitionAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tween\n   * @chainable\n   */\n  tween                 : delegate( 'tween', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenTo\n   * @chainable\n   */\n  tweenTo               : delegate( 'tweenTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenFrom\n   * @chainable\n   */\n  tweenFrom             : delegate( 'tweenFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenMany\n   * @chainable\n   */\n  tweenMany             : delegate( 'tweenMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyTo\n   * @chainable\n   */\n  tweenManyTo           : delegate( 'tweenManyTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyFrom\n   * @chainable\n   */\n  tweenManyFrom         : delegate( 'tweenManyFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/move:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method move\n   * @chainable\n   */\n  move                  : delegate( 'move', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method moveMany\n   * @chainable\n   */\n  moveMany              : delegate( 'moveMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method follow\n   * @chainable\n   */\n  follow                : delegate( 'follow', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/attrimatorsFor:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method attrimatorsFor\n   * @chainable\n   */\n  attrimatorsFor        : delegate( 'attrimatorsFor', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method stop\n   * @chainable\n   */\n  stop                  : delegate( 'stop', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/end:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method end\n   * @chainable\n   */\n  end                   : delegate( 'end', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method finish\n   * @chainable\n   */\n  finish                : delegate( 'finish', DelegateTypes.THIS ),\n\n/**\n   * Calls {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method nopeat\n   * @chainable\n   */\n  nopeat                : delegate( 'nopeat', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause                 : delegate( 'pause', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume                : delegate( 'resume', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/set:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method set\n   * @chainable\n   */\n  set                   : delegate( 'set', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method unset\n   * @chainable\n   */\n  unset                 : delegate( 'unset', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/get:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method get\n   * @chainable\n   */\n  get                   : delegate( 'get', DelegateTypes.FIRST ),\n\n  /**\n   * Calls {{#crossLink \"Animator/hasAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method hasAttrimators\n   * @chainable\n   */\n  hasAttrimators        : delegate( 'hasAttrimators', DelegateTypes.TRUE ),\n\n  /**\n   * Calls {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method invoke\n   * @chainable\n   */\n  invoke                : delegate( 'invoke', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleStart\n   * @chainable\n   */\n  onCycleStart          : delegate( 'onCycleStart', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleEnd\n   * @chainable\n   */\n  onCycleEnd            : delegate( 'onCycleEnd', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/on:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method on\n   * @chainable\n   */\n  on                    : delegate( 'on', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/once:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method once\n   * @chainable\n   */\n  once                  : delegate( 'once', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/off:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method off\n   * @chainable\n   */\n  off                   : delegate( 'off', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trigger:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trigger\n   * @chainable\n   */\n  trigger               : delegate( 'trigger', DelegateTypes.THIS )\n\n});\n\n\n/**\n * Animates a single attribute over any period of time.\n *\n * @class Attrimator\n * @constructor\n */\nfunction Attrimator()\n{\n\n}\n\nClass.define( Attrimator,\n{\n\n  /**\n   * Resets this attrimator for the given attribute created by the given builder.\n   *\n   * @method reset\n   * @param {String} attribute\n   * @param {Builder} builder\n   * @param {Attrimator} [next]\n   */\n  reset: function(attribute, builder, next)\n  {\n    /**\n     * The name of the attribute this attrimator is animating.\n     *\n     * @property {String} attribute\n     */\n    this.attribute = attribute;\n\n    /**\n     * The builder that created this attrimator (if any).\n     *\n     * @property {Builder} builder\n     */\n    this.builder = builder;\n\n    /**\n     * The next attrimator to be played once this one has finished.\n     *\n     * @property {Attrimator} next\n     */\n    this.next = next;\n\n    /**\n     * The time the attrimator was started by the animator.\n     *\n     * @property {Number} startTime\n     */\n    this.startTime = 0;\n\n    /**\n     * The time the attrimator was last paused.\n     *\n     * @property {Number} pauseTime\n     */\n    this.pauseTime = 0;\n\n    /**\n     * The amount of time that has elapsed since the attrimator started.\n     *\n     * @property {Number} elapsed\n     */\n    this.elapsed = 0;\n\n    /**\n     * The time this attrimator should stop itself after it started in milliseconds.\n     *\n     * @property {Number} stopTime\n     */\n    this.stopTime = Number.POSITIVE_INFINITY;\n\n    /**\n     * Whether or not the attrimator is paused.\n     *\n     * @property {Boolean} paused\n     */\n    this.paused = false;\n\n    /**\n     * The cycle this attrimator belongs to.\n     *\n     * @type {Number} cycle\n     */\n    this.cycle = 0;\n\n    /**\n     * The amount of time in milliseconds this attrimator is delayed since start.\n     *\n     * @property {Number} delay\n     */\n    this.delay = 0;\n\n    /**\n     * The initial elapsed time in milliseconds when the attrimator is started.\n     *\n     * @property {Number} offset\n     */\n    this.offset = 0;\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject animator. This\n   * is called as early as possible to establish the start time of the\n   * attrimator so when the user isn't on the page time can be kept accurately.\n   *\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  prestart: function(now)\n  {\n    if ( this.startTime === 0 )\n    {\n      this.startTime = now - this.offset;\n      this.elapsed = this.offset;\n      this.finished = false;\n      this.prestartNext();\n    }\n  },\n\n  /**\n   * Calls {{#crossLink \"Attrimator/prestart:method\"}}{{/crossLink}} on the next\n   * attrimator if it can be called.\n   *\n   * @method prestartNext\n   */\n  prestartNext: function( overrideNext )\n  {\n    // If there is a next attrimator and this attrimator has been prestarted...\n    if ( this.next && this.startTime !== 0 )\n    {\n      // If override next is specified, clear next's startTime\n      if ( overrideNext )\n      {\n        this.next.startTime = 0;\n      }\n\n      // We can only prestart next if it has no startTime.\n      if ( this.next.startTime === 0 )\n      {\n        var totalTime = this.totalTime();\n\n        // If this attrimator has a finite total amount of time, it's end can be calculated.\n        if ( isFinite( totalTime ) )\n        {\n          this.next.prestart( this.startTime + totalTime );\n        }\n      }\n    }\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject\n   * animator. This is called once in anim8.Animator.preupdate before the first\n   * time this attrimator is updated.\n   *\n   * @method start\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  start: function(now, animator)\n  {\n    this.prestart( now );\n  },\n\n  /**\n   * Invoked once when a new animation cycle is started on an Animator. If this\n   * attrimator updated the frame true must be returned.\n   *\n   * @method startCycle\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  startCycle: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Updates this attrimator given a time to animate to and the frame to\n   * provide with a new value. This method will return true if the attribute\n   * this is animating has been updated and needs to be applied to the subject.\n   *\n   * @method setTime\n   * @param {Number} now\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  setTime: function(now, frame)\n  {\n    if ( this.paused )\n    {\n      return false;\n    }\n\n    var updated = false;\n    var elapsed = now - this.startTime;\n\n    if ( elapsed > this.stopTime )\n    {\n      updated = this.finish( frame );\n    }\n    else if ( elapsed >= this.delay )\n    {\n      updated = this.update( elapsed, frame );\n    }\n\n    this.elapsed = elapsed;\n\n    return updated;\n  },\n\n  /**\n   * Updates the attrimator given elapsed time in milliseconds, the frame to\n   * apply a value to, and returns whether the frame was updated or not.\n   *\n   * @method update\n   * @param {Number} elapsed\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  update: function(elapsed, frame)\n  {\n    throw 'Attrimator.update not implemented';\n  },\n\n  /**\n   * Returns the amount of time that has elapsed in milliseconds.\n   *\n   * @method getElapsed\n   * @return {Number}\n   */\n  getElapsed: function()\n  {\n    return this.elapsed;\n  },\n\n  /**\n   * Stops this attrimator in the given number of milliseconds.\n   *\n   * @method stopIn\n   * @param {Number} milliseconds\n   * @chainable\n   */\n  stopIn: function(milliseconds)\n  {\n    this.stopTime = this.getElapsed() + milliseconds;\n\n    return this;\n  },\n\n  /**\n   * Stops this attrimator at the given time. If the given time is outside this\n   * attrimator and has a next attrimator that stopAt will be called.\n   *\n   * @method stopAt\n   * @param {Number} time\n   * @chainable\n   */\n  stopAt: function(time)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time > totalTime )\n    {\n      if ( this.next )\n      {\n        this.next.stopAt( time - totalTime );\n      }\n    }\n    else\n    {\n      this.stopTime = time;\n    }\n\n    return this;\n  },\n\n  /**\n   * If this attrimator repeats its animation this method will stop repitition\n   * after the next animation cycle.\n   *\n   * @chainable\n   */\n  nopeat: function()\n  {\n    return this;\n  },\n\n  /**\n   * Returns the value at the given time or returns false if it can't be\n   * calculated.\n   *\n   * @method valueAt\n   * @param {Number} time\n   * @param {Any} out\n   * @return {Any|False}\n   */\n  valueAt: function(time, out)\n  {\n    return false;\n  },\n\n  /**\n   * Returns the value at the given time or returns false if it can't be\n   * calculated. If the time is outside this attrimator, the next attrimator\n   * is checked.\n   *\n   * @method valueAt\n   * @param {Number} time\n   * @param {Any} out\n   * @return {Any|False}\n   */\n  valueAtSearch: function(time, out)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time > totalTime )\n    {\n      return this.next ? this.next.valueAtSearch( time - totalTime, out ) : false;\n    }\n\n    return this.valueAt( time, out );\n  },\n\n  /**\n   * Returns the attrimator at the given time.\n   *\n   * @method attrimatorAt\n   * @param {Number} time\n   * @return {Attrimator}\n   */\n  attrimatorAt: function(time)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time > totalTime )\n    {\n      return this.next ? this.next.attrimatorAt( time - totalTime ) : null;\n    }\n\n    return this;\n  },\n\n  /**\n   * The total amount of time this attrimator will take in milliseconds. This\n   * may be an infinite number.\n   *\n   * @method totalTime\n   * @return {Number}\n   */\n  totalTime: function()\n  {\n    return this.stopTime;\n  },\n\n  /**\n   * The time remaining before this attrimator and any following will be\n   * finished.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.totalTime() - this.elapsed + ( this.next ? this.next.timeRemaining() : 0 );\n  },\n\n  /**\n   * Clones this attrimator.\n   *\n   * @method clone\n   * @return {Attrimator}\n   */\n  clone: function()\n  {\n    throw 'AttributeAnimator.clone not implemented';\n  },\n\n  /**\n   * Returns whether this attrimator has computed values which need to be\n   * resolved by the subject animator calling prepare on this attrimator.\n   *\n   * @method hasComputed\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    return false;\n  },\n\n  /**\n   * Determines whether this attrimator will run infinitely.\n   *\n   * @method isInfinite\n   * @return {Boolean}\n   */\n  isInfinite: function()\n  {\n    return !isFinite( this.stopTime );\n  },\n\n  /**\n   * Pauses this attrimator if it isn't already paused.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause: function()\n  {\n    if ( !this.paused )\n    {\n      this.pauseTime = now();\n      this.paused = true;\n    }\n\n    return this;\n  },\n\n  /**\n   * Resumes this attrimator if it's paused. This involves resetting the start\n   * time of the attrimator.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume: function()\n  {\n    if ( this.paused )\n    {\n      var totalPausedTime = now() - this.pauseTime;\n      var delay = this;\n\n      while ( delay && delay.startTime !== 0 )\n      {\n        delay.startTime += totalPausedTime;\n        delay = delay.next;\n      }\n\n      this.paused = false;\n    }\n\n    return this;\n  },\n\n  /**\n   * Whether this attrimator is paused.\n   *\n   * @method isPaused\n   * @return {Boolean}\n   */\n  isPaused: function()\n  {\n    return this.paused;\n  },\n\n  /**\n   * Sets the final state of the attrimator to the frame if one exists and\n   * returns true, otherwise false is returned and frame remains unchanged.\n   *\n   * @method finish\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  finish: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Whether this attrimator is finished.\n   *\n   * @method isFinished\n   * @return {Boolean}\n   */\n  isFinished: function()\n  {\n    return false;\n  },\n\n  /**\n   * Returns the builder that created this attrimator (if any).\n   *\n   * @method getBuilder\n   * @return {Builder}\n   */\n  getBuilder: function()\n  {\n    return this.builder;\n  },\n\n  /**\n   * Places the given attrimator on the end of the chain of attrimators starting\n   * with this attrimator.\n   *\n   * @method queue\n   * @param {Attrimator} next\n   * @chainable\n   */\n  queue: function(next)\n  {\n    if ( this.next )\n    {\n      this.next.queue( next );\n    }\n    else\n    {\n      this.next = next;\n      this.prestartNext();\n    }\n\n    return this;\n  },\n\n  /**\n   * Places the given attrimator at the given time.\n   */\n  nextAt: function(next, time)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time < totalTime )\n    {\n      this.stopTime = time;\n      this.next = next;\n    }\n    else if ( this.next )\n    {\n      this.next.nextAt( next, time - totalTime );\n    }\n    else\n    {\n      next.delay += time - totalTime;\n      this.next = next;\n    }\n\n    return this;\n  },\n\n  /**\n   * Parses a value with the calculator given a default value to fallback on.\n   *\n   * @method parseValue\n   * @param {Animator} animator\n   * @param {T|Function|True} value\n   * @param {T} defaultValue\n   * @return {T|Function}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  }\n\n});\n\n\n/**\n * A map of attrimators by their attribute name.\n *\n * @class AttrimatorMap\n * @constructor\n * @extends FastMap\n */\nfunction AttrimatorMap()\n{\n  this.reset();\n}\n\nClass.extend( AttrimatorMap, FastMap,\n{\n\n  /**\n   * Sets the group identifier for attrimators in this map. If force is\n   * specified it will overwrite any existing group identifier on attrimators.\n   * If deep is true, then all next attrimators also could have their group\n   * identifiers set.\n   *\n   * @method setGroup\n   * @param {Number} groupId\n   * @param {Boolean} [force=false]\n   * @param {Boolean} [deep=false]\n   */\n  setGroup: function(groupId, force, deep)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[ i ];\n\n      do\n      {\n        if ( !attrimator.groupId || force )\n        {\n          attrimator.groupId = groupId;\n        }\n\n        attrimator = attrimator.next;\n\n      } while ( deep && attrimator );\n    }\n  },\n\n  /**\n   * Adds a delay to all attrimators in this map.\n   *\n   * @method delay\n   * @param {Number} time\n   * @return {AttrimatorMap}\n   */\n  delay: function(time)\n  {\n    var attrimators = this.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      attrimators[ i ].delay += time;\n    }\n\n    return this;\n  },\n\n  /**\n   * Queues the attrimator on this map. If the attribute is already on this map\n   * this is placed on the end of the Attrimator chain, otherwise the attrimator\n   * is added to the map. If there is an attrimator already on the map it's\n   * returned.\n   *\n   * @method queue\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  queue: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var current = this.get( attr );\n\n    if ( current )\n    {\n      current.queue( attrimator );\n    }\n    else\n    {\n      this.put( attr, attrimator );\n    }\n\n    return current;\n  },\n\n  /**\n   * Queues the given map to this map. The attrimators placed on this map are\n   * queued and delayed in a way that they all start at the same time. If a\n   * function is provided as the second argument it is invoked whenever an\n   * attrimator in the given map is new & added to this map.\n   *\n   * @method queueMap\n   * @param {AttrimatorMap} map\n   * @param {Function} [onNewAttribute]\n   * @param {Object} [context]\n   * @chainable   188703090\n   */\n  queueMap: function(map, offset, onNewAttribute, context)\n  {\n    var maxRemaining = this.timeRemaining();\n    var attrimators = map.values;\n    var hasCallback = isFunction( onNewAttribute );\n    var mapOffset = coalesce( offset, 0 );\n    var timeOffset = maxRemaining + mapOffset;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = this.get( attr );\n\n      if ( existing )\n      {\n        if ( existing.isInfinite() )\n        {\n          existing.stopIn( attrimator.delay + timeOffset );\n        }\n        else\n        {\n          attrimator.delay += (timeOffset - existing.timeRemaining());\n        }\n\n        existing.queue( attrimator );\n      }\n      else\n      {\n        attrimator.delay += timeOffset;\n\n        this.put( attr, attrimator );\n\n        if ( hasCallback )\n        {\n          onNewAttribute.call( context || this, attrimator );\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the attrimator at the given index replacing it with the next\n   * attrimator if one exists.\n   *\n   * @method unqueueAt\n   * @param {Number} index\n   * @chainable\n   */\n  unqueueAt: function(index)\n  {\n    var current = this.values[ index ];\n\n    if ( current.next )\n    {\n      this.values[ index ] = current.next;\n    }\n    else\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Plays the given attrimators at the given time. This performs the necessary\n   * stopping, queueing, and delaying of attrimators that may need to be done.\n   *\n   * @method playMapAt\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Boolean} all\n   * @param {Number} time\n   * @chainable\n   */\n  playMapAt: function(attrimatorMap, all, time)\n  {\n    if ( all )\n    {\n      this.stopNotPresentAt( attrimatorMap, time );\n    }\n\n    var attrimators = attrimatorMap.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      this.playAttrimatorAt( attrimators[ i ], time );\n    }\n\n    return this;\n  },\n\n  playAttrimatorAt: function(attrimator, time)\n  {\n    var attr = attrimator.attribute;\n    var existing = this.get( attr );\n\n    if ( existing )\n    {\n      existing.nextAt( attrimator, time );\n    }\n    else\n    {\n      attrimator.delay += time;\n\n      this.put( attr, attrimator );\n    }\n  },\n\n  transitionMap: function(transition, attrimatorMap, getValue, getAttribute, placeAttrimator, getValueAt, stopAttrimator, context)\n  {\n    // TRANSITIONING:\n    // If the animator doesn't have an attrimator for the given attribute just add the attrimator adding the total delay\n    // If the animator has an attrimator currently...\n    //   If the current attrimator or new attrimator don't have values at the desired times...\n    //      Stop the current attrimator after the total delay (adding the delay of the new attrimator as well)\n    //      Queue the new attrimator\n    //   Else\n    //      Create a path using the methods detailed above\n    // If all is true and there's an attrimator left on the animator that isn't being transitioned, stop it after the total delay.\n\n    // CREATING A TRANSITION PATH:\n    // If intro & outro are 0, use Tween\n    // If intro is 0, use Quadratic Path between current value, outro point, and first point on new path.\n    // If outro is 0, use Quadratic Path between current value, first point on new path, and intro point.\n    // If intro & outro are not 0, use Cubic Path between current value, outro point, first point on new path, and intro point.\n    // If granularity is given > 1 then compile the path, compute intro & outro velocities, and compute deltas for new\n    //    compiled path based on interpolated velocity over the path (knowing it's length and transition time)\n\n    var attrimators = attrimatorMap.values;\n\n    if ( this.hasOverlap( attrimatorMap ) )\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        var next = attrimators[ i ];\n        var attr = next.attribute;\n        var curr = this.get( attr );\n        var currValue = getValue.call( context, attr );\n\n        if ( curr && isDefined( currValue ) )\n        {\n          var attribute = getAttribute.call( context, attr );\n          var calc = attribute.calculator;\n\n          var p2 = next.valueAt( 0, calc.create() );\n\n          if ( p2 !== false )\n          {\n            var transitionTime = transition.time;\n            var p0 = calc.clone( currValue );\n            var p1 = transition.outro ? getValueAt.call( context, curr, transition.outro, calc.create() ) : false;\n            var p3 = transition.intro ? next.valueAt( transition.intro, calc.create() ) : false;\n            var path = null;\n\n            // If the intro is negative we can look into the past by looking a little bit into\n            // the future and assume the past is going in the same direction (only the opposite).\n            if ( p3 !== false && transition.intro < 0 && transition.lookup > 0 )\n            {\n              var pastLookahead = next.valueAt( transition.lookup, calc.create() );\n              var pastVelocity = calc.sub( pastLookahead, p2 );\n\n              if ( pastVelocity !== false )\n              {\n                var pastNegativeVelocity = calc.scale( pastVelocity, transition.intro / transition.lookup );\n                var past = calc.add( pastNegativeVelocity, p2 );\n\n                p3 = p2;\n                p2 = past;\n              }\n            }\n\n            // Build a path with as many of the points as possible.\n            if ( p1 === false && p3 === false )\n            {\n              path = new Tween( attr, calc, p0, p2 );\n            }\n            else if ( p1 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p2, p3 );\n            }\n            else if ( p3 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p1, p2 );\n            }\n            else\n            {\n              path = new PathCubic( attr, calc, p0, p1, p2, p3 );\n            }\n\n            // If granularity is specified we will try to make the transition\n            // smooth by maintaining exit (outro) velocity from the current attrimator\n            // and interpolating it to the entrance (intro) velocity for the\n            // attrimator we're transitioning into.\n            if ( transition.granularity > 2 && transition.lookup > 0 )\n            {\n              var outTime  = p1 === false ? 0 : transition.outro;\n              var outPoint = p1 === false ? p0 : p1;\n              var outNext  = getValueAt.call( context, curr, outTime + transition.lookup, calc.create() );\n\n              var inTime   = p3 === false ? 0 : transition.intro;\n              var inPoint  = p3 === false ? p2 : p3;\n              var inNext   = next.valueAt( inTime + transition.lookup, calc.create() );\n\n              // We can only proceed if we have reference points to calculate\n              // exit & entrance velocity.\n              if ( outNext !== false && inNext !== false )\n              {\n                var outVelocity  = calc.sub( calc.clone( outNext ), outPoint );\n                var outPerMillis = calc.length( outVelocity ) / transition.lookup;\n\n                var inVelocity   = calc.sub( calc.clone( inNext ), inPoint );\n                var inPerMillis  = calc.length( inVelocity ) / transition.lookup;\n\n                var compiled = new PathCompiled( attr, path, transition.granularity );\n                var points = compiled.points;\n                var lastPoint = points.length - 1;\n                var totalDistance = 0;\n                var distances = [];\n\n                for (var k = 0; k < lastPoint; k++)\n                {\n                  distances[ k ] = totalDistance;\n                  totalDistance += calc.distance( points[ k ], points[ k + 1 ] );\n                }\n                distances[ lastPoint ] = totalDistance;\n\n                if ( !isNaN( totalDistance ) )\n                {\n                  var requiredTime = 2.0 * totalDistance / (outPerMillis + inPerMillis);\n                  var acceleration = 0.5 * (inPerMillis - outPerMillis) / requiredTime;\n                  var timeDelta = requiredTime / lastPoint;\n                  var deltas = [];\n\n                  for (var k = 0; k < lastPoint; k++)\n                  {\n                    var time = k * timeDelta;\n                    var position = outPerMillis * time + acceleration * time * time;\n\n                    deltas[ k ] = position / totalDistance;\n                  }\n                  deltas[ lastPoint ] = 1.0;\n\n                  path = new PathDelta( attr, calc, points, deltas );\n                  transitionTime = requiredTime;\n                }\n              }\n            }\n\n            var transitionEvent = new Event( attr, path, transitionTime, transition.easing, 0, 0, 0, 1 );\n\n            transitionEvent.next = next;\n            transitionEvent.cycle = next.cycle;\n\n            next.offset = transition.intro;\n\n            placeAttrimator.call( context, transitionEvent );\n          }\n          else\n          {\n            stopAttrimator.call( context, curr, transition.time + next.delay );\n\n            curr.queue( next );\n            next.delay = 0;\n          }\n        }\n        else\n        {\n          next.delay += transition.time;\n\n          placeAttrimator.call( context, next );\n        }\n      }\n    }\n    // We don't need to transition, just play the events\n    else\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        placeAttrimator.call( context, attrimators[ i ] );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Finishes any attrimators on this animator that are not present in the given\n   * map of attrimators. Optionally a delay in stopping them can be given.\n   *\n   * @method finishNotPresent\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Number} [delay=0]\n   * @chainable\n   * @protected\n   */\n  finishNotPresent: function(attrimatorMap, delay)\n  {\n    var attrimators = this.values;\n    var stopIn = delay || 0;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( !attrimatorMap.has( attrimator.attribute ) )\n      {\n        attrimator.stopIn( stopIn );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Finishes any attrimators on this animator that are not present in the given\n   * map of attrimators. Optionally a delay in stopping them can be given.\n   *\n   * @method stopNotPresentAt\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Number} time\n   * @chainable\n   * @protected\n   */\n  stopNotPresentAt: function(attrimatorMap, time)\n  {\n    var attrimators = this.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( !attrimatorMap.has( attrimator.attribute ) )\n      {\n        attrimator.stopAt( time );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Clones this map returning a deep clone where all attrimators are cloned.\n   *\n   * @method clone\n   * @return {AttrimatorMap}\n   */\n  clone: function()\n  {\n    var values = this.values;\n    var keys = this.keys;\n    var clone = new AttrimatorMap();\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      clone.values[i] = values[i].clone();\n      clone.keys[i] = keys[i];\n      clone.indices[ keys[i] ] = i;\n    }\n\n    return clone;\n  },\n\n  /**\n   * Returns the time remaining for all finite attrimators in this map. The time\n   * remaining includes queued attrimators.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function(returnInfinity)\n  {\n    var maxRemaining = 0;\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n\n      if ( !attrimator.isInfinite() )\n      {\n        maxRemaining = Math.max( maxRemaining, attrimator.timeRemaining() );\n      }\n      else if ( returnInfinity )\n      {\n        return Number.Infinity;\n      }\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Sets the cycle of the attrimators in this map. If there are attrimators\n   * queued the are given the next cycle number. The final cycle number is\n   * returned.\n   *\n   * @method applyCycle\n   * @param {Number} nextCycle\n   * @return {Number}\n   */\n  applyCycle: function(nextCycle)\n  {\n    var currentDepth = this.values;\n    var nextDepth = null;\n\n    while ( currentDepth.length )\n    {\n      nextDepth = [];\n\n      for (var i = currentDepth.length - 1; i >= 0; i--)\n      {\n        var attrimator = currentDepth[ i ];\n\n        attrimator.cycle = nextCycle;\n\n        if ( attrimator.next )\n        {\n          nextDepth.push( attrimator.next );\n        }\n      }\n\n      if ( nextDepth.length )\n      {\n        nextCycle++;\n      }\n\n      currentDepth = nextDepth;\n    }\n\n    return nextCycle;\n  },\n\n  /**\n   * Iterates through all attrimators in this map, at any depth.\n   *\n   * @method iterate\n   * @param  {Function} callback\n   * @param  {Object} [context]\n   * @chainable\n   */\n  iterate: function(callback, context)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n      var previous = null;\n      var depth = 0;\n\n      while ( attrimator )\n      {\n        callback.call( context || this, attrimator, depth++, previous );\n\n        attrimator = (previous = attrimator).next;\n      }\n    }\n\n    return this;\n  }\n\n});\n\n\n/**\n * Instantiates a new Builder. Builders are responsible for taking animation\n * definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generating & placing {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}\n * onto an {{#crossLink \"AttrimatorMap\"}}{{/crossLink}}.\n *\n * Builders are added to the {{#crossLink \"anim8.builder\"}}{{/crossLink}} object\n * by a key and when that key exists in an animation definition, the animation\n * definition is passed to the {{#crossLink \"Builder/parse:method\"}}{{/crossLink}}\n * to generate {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class Builder\n * @constructor\n */\nfunction Builder()\n{\n\n}\n\n/**\n * Returns the next merge ID. Merge IDs are used when merging options into\n * attrimators to perform an optimal merge.\n *\n * @method nextMergeId\n * @static\n */\nBuilder.nextMergeId = (function()\n{\n  var id = 0;\n  return function() {\n    return id++;\n  };\n})();\n\nClass.define( Builder,\n{\n\n  /**\n   * Parses the animation object (and optionally an option object) and pushes\n   * all generated attrimatorMap to the given array.\n   *\n   * @method parse\n   * @param {Object} animation\n   * @param {Object} options\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    throw 'Builder.parse not implemented';\n  },\n\n  /**\n   * Merges the options with the given event instances. This is when an existing\n   * animation is provided but the user wants to override the animation's options.\n   *\n   * Because event properties can be specified in several places there's a priority\n   * to which one takes precedence. The properties specified in the animation object\n   * itself are highest priority, followed by the new options, then by the old\n   * options, and finally by the existing property on the event instance.\n   *\n   * @method merge\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  merge: function( animation, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    var builder = this;\n    var factory = $factory( animation.factory );\n\n    attrimatorMap.iterate(function(e)\n    {\n      if ( e.getBuilder() === builder )\n      {\n        builder.mergeAttrimator( e, e.attribute, helper, factory );\n      }\n    });\n  },\n\n  /**\n   * Merges new options contained in the helper into the given attrimator.\n   *\n   * @method mergeAttrimator\n   * @param {Attrimator} e\n   * @param {String} attr\n   * @param {BuilderHelper} helper\n   * @param {Factory} factory\n   */\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.easing      = helper.mergeEasing( attr, e.easing );\n    e.repeat      = helper.mergeRepeat( attr, e.repeat );\n    e.delay       = helper.mergeDelay( attr, e.delay );\n    e.sleep       = helper.mergeSleep( attr, e.sleep );\n    e.duration    = helper.mergeDuration( attr, e.duration );\n    e.offset      = helper.mergeOffset( attr, e.offset );\n    e.scale       = helper.mergeScale( attr, e.scale );\n    e.scaleBase   = helper.mergeScaleBase( attr, e.scaleBase, factory );\n    e.parameters  = helper.mergeParameters( e.parameters );\n  },\n\n  /**\n   * Calls merge on all builders specified in the given animation definition.\n   *\n   * @method submerge\n   * @protected\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   */\n  submerge: function( animation, newOptions, oldOptions, attrimatorMap )\n  {\n    var helper = new BuilderHelper( animation, oldOptions, newOptions );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( animation, newOptions, oldOptions, attrimatorMap, helper );\n      }\n    }\n  }\n});\n\n\n/**\n * Instantiates a new instance of Builder Helper.\n *\n * @param {Object} input\n * @param {Object} oldOptions\n * @param {Object} newOptions\n * @class BuilderHelper\n * @constructor\n */\nfunction BuilderHelper( input, oldOptions, newOptions )\n{\n  this.input = input;\n  this.oldOptions = oldOptions || {};\n  this.newOptions = newOptions || {};\n\n  this.prepareSpecifics( 'easings' );\n  this.prepareSpecifics( 'repeats' );\n  this.prepareSpecifics( 'delays' );\n  this.prepareSpecifics( 'sleeps' );\n  this.prepareSpecifics( 'durations' );\n  this.prepareSpecifics( 'offsets' );\n  this.prepareSpecifics( 'scales' );\n  this.prepareSpecifics( 'scaleBases' );\n  this.prepareSpecifics( 'parameters' );\n}\n\nClass.define( BuilderHelper,\n{\n\n  /**\n   * If an object with the given name doesn't exist on the input it's created.\n   *\n   * @method prepareSpecifics\n   * @param {String} specifics\n   */\n  prepareSpecifics: function(specifics)\n  {\n    if ( !isObject( this.input[ specifics ] ) )\n    {\n      this.input[ specifics ] = {};\n    }\n  },\n\n  /* PARSING */\n\n  /**\n   * Parses an easing from the input.\n   *\n   * @method parseEasing\n   * @param  {String} attr\n   * @return {String|Function|Array}\n   */\n  parseEasing: function(attr)\n  {\n    return this.parseFirst( attr, 'easing', 'easings' );\n  },\n\n  /**\n   * Parses repeats from the input.\n   *\n   * @method parseRepeat\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseRepeat: function(attr)\n  {\n    return this.parseNumber( attr, $repeat, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Parses delay from the input.\n   *\n   * @method parseDelay\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDelay: function(attr)\n  {\n    return this.parseNumber( attr, $delay, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Parses sleep from the input.\n   *\n   * @method parseSleep\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseSleep: function(attr)\n  {\n    return this.parseNumber( attr, $sleep, $time, 'sleep', 'sleepAdd', 'sleepScale', 'sleeps' );\n  },\n\n  /**\n   * Parses duration from the input.\n   *\n   * @method parseDuration\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDuration: function(attr)\n  {\n    return this.parseNumber( attr, $duration, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Parses offset from the input.\n   *\n   * @method parseOffset\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseOffset: function(attr)\n  {\n    return this.parseNumber( attr, $offset, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Parses scale from the input.\n   *\n   * @method parseScale\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseScale: function(attr)\n  {\n    return this.parseNumber( attr, $scale, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Parses scale base from the input.\n   *\n   * @method parseScaleBase\n   * @param  {String} attr\n   * @return {Any}\n   */\n  parseScaleBase: function(attr)\n  {\n    return this.parseFirst( attr, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Parses a value from the input given the attribute, option, and specific.\n   *\n   * @method parseFirst\n   * @param {String} attr\n   * @param {String} option\n   * @param {String} specifics\n   * @return {Any}\n   */\n  parseFirst: function(attr, option, specifics)\n  {\n    return coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n  },\n\n  /**\n   * Parses an event from the input given a path & builder for the event.\n   *\n   * @method parseEvent\n   * @param {String} attr\n   * @param {Path} path\n   * @param {Builder} builder\n   * @param {Boolean} hasInitialState\n   * @return {Event}\n   */\n  parseEvent: function(attr, path, builder, hasInitialState, mergeId)\n  {\n    var duration   = this.parseDuration( attr );\n    var easing     = this.parseEasing( attr );\n    var delay      = this.parseDelay( attr );\n    var sleep      = this.parseSleep( attr );\n    var repeat     = this.parseRepeat( attr );\n    var offset     = this.parseOffset( attr );\n    var scale      = this.parseScale( attr );\n    var scaleBase  = this.parseScaleBase( attr );\n    var parameters = this.parseParameters();\n    var event      = new Event( attr, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, parameters, hasInitialState, builder, null, this.input );\n\n    return event;\n  },\n\n  /**\n   * Parses a number from the input given parse functions.\n   *\n   * @method parseNumber\n   * @param {String} attr\n   * @param {Function} parseFunction\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  parseNumber: function(attr, parseFunction, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n    var base = parseFunction( baseRaw );\n    var add = parseOptionFunction( this.oldOptions[ optionAdd ], 0 );\n    var scale = coalesce( this.oldOptions[ optionScale ], 1 );\n\n    return (add === 0 && scale === 1) ? baseRaw : (base + add) * scale;\n  },\n\n  /**\n   * Parses parameters from input and the given options.\n   *\n   * @method parseParameters\n   * @return {Object}\n   */\n  parseParameters: function()\n  {\n    return extend( {}, this.input.parameters, this.oldOptions );\n  },\n\n  /* MERGING */\n\n  /**\n   * Merges easing based on the input, new options, and the current easing.\n   *\n   * @method mergeEasing\n   * @param {String} attr\n   * @param {Function} current\n   * @return {Function}\n   */\n  mergeEasing: function(attr, current)\n  {\n    return this.mergeFirst( attr, current, $easing, 'easing', 'easings' );\n  },\n\n  /**\n   * Merges repeats based on the input, new options, and the current repeat.\n   *\n   * @method mergeRepeat\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeRepeat: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Merges delay based on the input, new options, and the current delay.\n   *\n   * @method mergeDelay\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDelay: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Merges sleep based on the input, new options, and the current sleep.\n   *\n   * @method mergeSleep\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeSleep: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'sleep', 'sleepAdd', 'sleepScale', 'scales' );\n  },\n\n  /**\n   * Merges duration based on the input, new options, and the current duration.\n   *\n   * @method mergeDuration\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDuration: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Merges offset based on the input, new options, and the current offset.\n   *\n   * @method mergeOffset\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeOffset: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Merges scale based on the input, new options, and the current scale.\n   *\n   * @method mergeScale\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeScale: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Merges scale base based on the input, new options, and the current scale\n   * base.\n   *\n   * @method mergeScaleBase\n   * @param {String} attr\n   * @param {T} current\n   * @param {Factory} factory\n   * @return {T}\n   */\n  mergeScaleBase: function(attr, current, factory)\n  {\n    var calc = factory.attribute( attr ).calculator;\n\n    var parseFunction = function(value, defaultValue) {\n      return calc.parse( value, defaultValue );\n    };\n\n    return this.mergeFirst( attr, current, parseFunction, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Merges parameters from across the input and options.\n   *\n   * @method mergeParameters\n   * @param {Object} current\n   * @return {Object}\n   */\n  mergeParameters: function(current)\n  {\n    return extend( {}, this.newOptions.parameters, current );\n  },\n\n  /**\n   * Returns the first available option from input, new options, old options,\n   * and the current value.\n   *\n   * @method mergeFirst\n   * @param {String} attr\n   * @param {T} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} specifics\n   * @return {T}\n   */\n  mergeFirst: function(attr, current, parseOptionFunction, option, specifics)\n  {\n    var specific = this.input[ specifics ][ attr ];\n    var value = coalesce( specific, this.newOptions[ option ], this.oldOptions[ option ] );\n\n    return parseOptionFunction( value, current );\n  },\n\n  /**\n   * Merges a number by returning the first occurrence from input, new options,\n   * old options, and the current value.\n   *\n   * @method mergeNumber\n   * @param {String} attr\n   * @param {Number} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  mergeNumber: function(attr, current, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.newOptions[ option ], this.oldOptions[ option ] );\n    var base = parseOptionFunction( baseRaw, current );\n    var add = parseOptionFunction( coalesce( this.newOptions[ optionAdd ], this.oldOptions[ optionAdd ] ), 0 );\n    var scale = coalesce( this.newOptions[ optionScale ], this.oldOptions[ optionScale ], 1 );\n\n    return (base + add) * scale;\n  }\n\n});\n\n\n\n\n/**\n * Instantiates a new Calculator instance.\n *\n * @class Calculator\n * @constructor\n */\nfunction Calculator()\n{\n\n}\n\nClass.define( Calculator,\n{\n\n  /**\n   * Creates the constants for this calculator.\n   *\n   * @method createConstants\n   */\n  createConstants: function()\n  {\n    this.ZERO = this.create();\n    this.ONE = this.parse( 1.0, this.ZERO );\n    this.INFINITY = this.parse( Number.POSITIVE_INFINITY, this.ZERO );\n  },\n\n  /**\n   * Parses the given input for a value this calculator understands.\n   *\n   * @method parse\n   * @param  {T} x\n   * @param  {T} defaultValue\n   * @return {T|Function|False}\n   */\n  parse: function(x, defaultValue)\n  {\n    throw 'Calculator.parse not implemented';\n  },\n\n  /**\n   * Parses the given input for a value this calculator understands.\n   *\n   * @method parse\n   * @param  {T} x\n   * @param  {T} defaultValue\n   * @return {T|Function|False}\n   */\n  parseArray: function(input, output, defaultValue)\n  {\n    if (input.length !== output.length)\n    {\n      output.length = input.length;\n    }\n\n    var parsedDefault = this.parse( defaultValue, this.ZERO );\n\n    for (var i = 0; i < input.length; i++)\n    {\n      output[ i ] = this.parse( input[ i ], parsedDefault );\n    }\n\n    return output;\n  },\n\n  /**\n   * Copies a value and places it in out and returns out.\n   *\n   * @method copy\n   * @param {T} out\n   * @param {T} copy\n   * @return {T}\n   */\n  copy: function(out, copy)\n  {\n    throw 'Calculator.copy not implemented';\n  },\n\n  /**\n   * Zeros out and returns it.\n   *\n   * @method zero\n   * @param {T} out\n   * @return {T}\n   */\n  zero: function(out)\n  {\n    throw 'Calculator.zero not implemented';\n  },\n\n  /**\n   * Modifies out into the absolute value of it self.\n   *\n   * @method abs\n   * @param {T} out\n   * @return {T}\n   */\n  abs: function(out)\n  {\n    throw 'Calculator.abs not implemented';\n  },\n\n  /**\n   * Clones the value and returns the clone.\n   *\n   * @method clone\n   * @param {T} clone\n   * @return {T}\n   */\n  clone: function(clone)\n  {\n    return this.copy( this.create(), clone );\n  },\n\n  /**\n   * Creates an empty value equivalent to zero.\n   *\n   * @method create\n   * @return {T}\n   */\n  create: function()\n  {\n    throw 'Calculator.create not implemented';\n  },\n\n  /**\n   * Scales out by the given scalar value and returns out.\n   *\n   * @method scale\n   * @param {T} out\n   * @param {Number} scale\n   * @return {T}\n   */\n  scale: function(out, scale)\n  {\n    return this.adds( out, out, scale - 1 );\n  },\n\n  /**\n   * Adds an amount to out and returns out.\n   *\n   * @method add\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  add: function(out, amount)\n  {\n    return this.adds( out, amount, 1 );\n  },\n\n  /**\n   * Adds an amount scaled by a scalar value to out and returns out.\n   *\n   * @method adds\n   * @param {T} out\n   * @param {T} amount\n   * @param {Number} amountScale\n   * @return {T}\n   */\n  adds: function(out, amount, amountScale)\n  {\n    throw 'Calculator.adds not implemented';\n  },\n\n  /**\n   * Subtracts an amount from out and returns out.\n   *\n   * @method sub\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  sub: function(out, amount)\n  {\n    return this.adds( out, amount, -1 );\n  },\n\n  /**\n   * Multiplies out by some amount and returns out.\n   *\n   * @method mul\n   * @param {T} out\n   * @param {T} scale\n   * @return {T}\n   */\n  mul: function(out, scale)\n  {\n    throw 'Calculator.mul not implemented';\n  },\n\n  /**\n   * Divides out by some amount and returns out.\n   *\n   * @method div\n   * @param {T} out\n   * @param {T} denominator\n   * @return {T}\n   */\n  div: function(out, denominator)\n  {\n    throw 'Calculator.div not implemented';\n  },\n\n  /**\n   * Interpolates out between start & end given a delta value and returns out.\n   * A delta value typically lies between 0 and 1 inclusively.\n   *\n   * @method interpolate\n   * @param {T} out\n   * @param {T} start\n   * @param {T} end\n   * @param {Number} delta\n   * @return {T}\n   */\n  interpolate: function(out, start, end, delta)\n  {\n    out = this.zero( out );\n    out = this.adds( out, start, 1 - delta );\n    out = this.adds( out, end, delta );\n\n    return out;\n  },\n\n  /**\n   * Returns a random value between the given min and max.\n   *\n   * @method random\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  random: function(out, min, max)\n  {\n    return this.interpolate( out, min, max, Math.random() );\n  },\n\n  /**\n   * Calculates the distance between the two values.\n   *\n   * @method distance\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distance: function(a, b)\n  {\n    return Math.sqrt( this.distanceSq( a, b ) );\n  },\n\n  /**\n   * Calculates the squared distance between the two values.\n   *\n   * @method distanceSq\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distanceSq: function(a, b)\n  {\n    throw 'Calculator.distanceSq not implemented';\n  },\n\n  /**\n   * Returns the distance the given value is from zero.\n   *\n   * @method length\n   * @param {T} a\n   * @return {Number}\n   */\n  length: function(a)\n  {\n    return this.distance( a, this.ZERO );\n  },\n\n  /**\n   * Returns the squared distance the given value is from zero.\n   *\n   * @method lengthSq\n   * @param {T} a\n   * @return {Number}\n   */\n  lengthSq: function(a)\n  {\n    return this.distanceSq( a, this.ZERO );\n  },\n\n  /**\n   * Determines whether the given value is valid for this calculator.\n   *\n   * @method isValid\n   * @param {any} a\n   * @return {Boolean}\n   */\n  isValid: function(a)\n  {\n    throw 'Calculator.isValid not implemented';\n  },\n\n  /**\n   * Returns whether the given value is not a number or has a component which is\n   * not a number.\n   *\n   * @method isNaN\n   * @param {T} a\n   * @return {Boolean}\n   */\n  isNaN: function(a)\n  {\n    throw 'Calculator.isNaN not implemented';\n  },\n\n  /**\n   * Determines whether the given value is equivalent to zero given an\n   * acceptable distance from zero (epsilon).\n   *\n   * @method isZero\n   * @param {T} a\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isZero: function(a, epsilon)\n  {\n    throw 'Calculator.isZero not implemented';\n  },\n\n  /**\n   * Determines whether the given values are equivalent up to an acceptable\n   * distance apart.\n   *\n   * @method isEqual\n   * @param {T} a\n   * @param {T} b\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isEqual: function(a, b, epsilon)\n  {\n    throw 'Calculator.isEqual not implemented';\n  },\n\n  /**\n   * Sets out to the minimum value between the two values and returns out.\n   *\n   * @method min\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  min: function(out, a, b)\n  {\n    throw 'Calculator.min not implemented';\n  },\n\n  /**\n   * Sets out to the maximum value between two values and returns out.\n   *\n   * @method max\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  max: function(out, a, b)\n  {\n    throw 'Calculator.max not implemented';\n  },\n\n  /**\n   * Performs the dot product between two values.\n   *\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  dot: function(a, b)\n  {\n    throw 'Calculator.dot not implemented';\n  },\n\n  /**\n   * Clamps out between the given minimum and maximum values and returns out.\n   *\n   * @method clamp\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  clamp: function(out, min, max)\n  {\n    var distSq = this.distanceSq( out, this.ZERO );\n\n    if ( distSq < min * min )\n    {\n      return this.scale( out, min / Math.sqrt( distSq ) );\n    }\n    else if ( distSq > max * max )\n    {\n      return this.scale( out, max / Math.sqrt( distSq ) );\n    }\n\n    return out;\n  },\n\n  /**\n   * Sets the length of the given value and returns the new value.\n   *\n   * @param {T} out\n   * @param {Number} length\n   * @return {T}\n   */\n  setLength: function(out, length)\n  {\n    var lengthSq = this.lengthSq( out );\n\n    if ( lengthSq !== 0 )\n    {\n      return this.scale( out, length / Math.sqrt( lengthSq ) );\n    }\n\n    return out;\n  },\n\n  /**\n   * Determines whether the given value appears to be a relative value. Relative\n   * values are stored as strings starting with a plus or minus for positive or\n   * negative respectively.\n   *\n   * @method isRelative\n   * @param {Any} x\n   * @return {Boolean}\n   * @protected\n   */\n  isRelative: function(x)\n  {\n    return isString( x ) && /^[+-]\\d*\\.?\\d+$/.test( x );\n  },\n\n  /**\n   * Returns the relative amount of the given relative value. If the value is\n   * not a valid relative value false is returned.\n   *\n   * @method getRelativeAmount\n   * @param {String} x\n   * @return {Number}\n   * @protected\n   */\n  getRelativeAmount: function(x)\n  {\n    var z = parseFloat( x );\n\n    return isNaN(z) ? false : z;\n  }\n\n});\n\n\n/**\n * Instantiates a Defer instance. Defer instances keep track of method calls\n * to call at a later time - after an event occurs. The first argument needs\n * to be a function which returns an instance of anim8.Defer when it's invoked.\n * The second argument is an array of methods that can be deferred.\n *\n * @param {Function} factory\n * @param {Array} methods\n * @class Defer\n * @constructor\n */\nfunction Defer(factory, methods)\n{\n  this.$factory = factory;\n\n  for (var i = 0; i < methods.length; i++)\n  {\n    this[ methods[i] ] = this.$push( methods[i] );\n  }\n}\n\nClass.define( Defer,\n{\n  /**\n   * Resets the defer instance.\n   *\n   * @method $reset\n   * @param {Object} eventable\n   * @param {Any} previous\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   */\n  $reset: function(eventable, previous, eventType, event, callback)\n  {\n    this.$eventable = eventable;\n    this.$previous = previous;\n    this.$eventType = eventType;\n    this.$event = event;\n    this.$callback = callback;\n    this.$calls = [];\n    this.$next = [];\n\n    if ( this.$isRoot() )\n    {\n      this.$register();\n    }\n  },\n\n  /**\n   * Determines whether this Defer instance is at the root.\n   *\n   * @method $isRoot\n   * @return {Boolean}\n   */\n  $isRoot: function()\n  {\n    return this.$eventable === this.$previous;\n  },\n\n  /**\n   * Registers this Defer instance with the eventable.\n   *\n   * @method $register\n   */\n  $register: function()\n  {\n    this.$eventable[ this.$eventType ]( this.$event, this.$run, this );\n  },\n\n  /**\n   * Creates a defered function which passes the method and arguments for\n   * any method call into an array of calls on this Defer instance.\n   *\n   * @method $push\n   * @param {String} methodName\n   * @return {Function}\n   */\n  $push: function(methodName)\n  {\n    return function()\n    {\n      this.$calls.push( [methodName, arguments] );\n\n      return this;\n    };\n  },\n\n  /**\n   * Executes all defered method calls and starts any child Defer instances.\n   *\n   * @method $run\n   */\n  $run: function()\n  {\n    // Invoke the callback if one was given.\n    if ( isFunction( this.$callback ) )\n    {\n      this.$callback.call( this.$eventable, this );\n    }\n\n    for (var i = 0; i < this.$calls.length; i++)\n    {\n      var call = this.$calls[ i ];\n\n      this.$eventable[ call[0] ].apply( this.$eventable, call[1] );\n    }\n\n    for (var k = 0; k < this.$next.length; k++)\n    {\n      this.$next[ k ].$register();\n    }\n  },\n\n  /**\n   * Returns the object before the defer statement.\n   *\n   * @method undefer\n   * @return {Any}\n   */\n  undefer: function()\n  {\n    return this.$previous;\n  },\n\n  /**\n   * Defers any following method calls to after the given event is triggered. A\n   * callback can be specified which is a function invoked after the event is\n   * triggered.\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   * @return {Defer}\n   */\n  defer: function(eventType, event, callback)\n  {\n    var next = new this.$factory( this.$eventable, this, eventType, event, callback );\n\n    this.$next.push( next );\n\n    return next;\n  }\n\n});\n\n\n/**\n * Provides the ability to defer method calls until certain events are triggered.\n *\n * @class DeferAnimator\n * @constructor\n * @extends Defer\n */\nfunction DeferAnimator(animator, previous, eventType, event)\n{\n  this.$reset( animator, previous, eventType, event );\n}\n\n/**\n * Creates the Defer prototype for the following Animator methods.\n */\nDeferAnimator.prototype = new Defer( DeferAnimator,\n[\n  /**\n   * Defers the {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'restore',\n\n  /**\n   * Defers the {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method placeAttrimator\n   */\n  'placeAttrimator',\n\n  /**\n   * Defers the {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method applyInitialState\n   */\n  'applyInitialState',\n\n  /**\n   * Defers the {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method preupdate\n   */\n  'preupdate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/update:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method update\n   */\n  'update',\n\n  /**\n   * Defers the {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method apply\n   */\n  'apply',\n\n  /**\n   * Defers the {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'trimAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/activate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'activate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'deactivate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'destroy',\n\n  /**\n   * Defers the {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'spring',\n\n  /**\n   * Defers the {{#crossLink \"Animator/play:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'play',\n\n  /**\n   * Defers the {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'playAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queue\n   */\n  'queue',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queueAttrimators\n   * @protected\n   */\n  'queueAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transition\n   */\n  'transition',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transitionAttrimators\n   * @protected\n   */\n  'transitionAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tween\n   */\n  'tween',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenTo\n   */\n  'tweenTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenMany\n   */\n  'tweenMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyTo\n   */\n  'tweenManyTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenFrom\n   */\n  'tweenFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyFrom\n   */\n  'tweenManyFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/move:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method move\n   */\n  'move',\n\n  /**\n   * Defers the {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method moveMany\n   */\n  'moveMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method follow\n   */\n  'follow',\n\n  /**\n   * Defers the {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method stop\n   */\n  'stop',\n\n  /**\n   * Defers the {{#crossLink \"Animator/end:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method end\n   */\n  'end',\n\n  /**\n   * Defers the {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method finish\n   */\n  'finish',\n\n  /**\n   * Defers the {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method nopeat\n   */\n  'nopeat',\n\n  /**\n   * Defers the {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method pause\n   */\n  'pause',\n\n  /**\n   * Defers the {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method resume\n   */\n  'resume',\n\n  /**\n   * Defers the {{#crossLink \"Animator/set:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method set\n   */\n  'set',\n\n  /**\n   * Defers the {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method unset\n   */\n  'unset',\n\n  /**\n   * Defers the {{#crossLink \"Animator/get:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method get\n   */\n  'get',\n\n  /**\n   * Defers the {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method invoke\n   */\n  'invoke',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleStart\n   */\n  'onCycleStart',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleEnd\n   */\n  'onCycleEnd'\n]);\n\n\nvar EasingTypes = {};\n\n/**\n * A collection of easing type functions. An easing type functions takes an\n * easing function as an argument and modifies it's input and output values.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.easingType\n */\n\n/**\n * Plays the animation forward normally.\n *\n * @method in\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['in'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum.\n *\n * @method out\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['out'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum halfway.\n *\n * @method inout\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['inout'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x ) * 0.5;\n    }\n    else\n    {\n      return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n    }\n  };\n};\n\n/**\n * Plays the aninmation forwards with the given easing, and backwards with the same easing momentum.\n *\n * @method yoyo\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['yoyo'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation forwards with the given easing, and backwards reflecting the easing's momentum.\n *\n * @method mirror\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['mirror'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return 1.0 - easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation backwards with using the same easing momentum.\n *\n * @method reverse\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['reverse'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation backwards by flipping the easing's momentum.\n *\n * @method flip\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['flip'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( x );\n  };\n};\n\n\n/**\n * A collection of easing functions. An easing functions takes a single number\n * as input that's between 0 and 1 inclusively and returns a number that\n * progresses from 0 to 1 but in-between values may return a number that's less\n * than 0 or greater than 1.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.Easings\n */\nvar Easings = {};\n\n\n/**\n * Returns true if the given string would result in returning an easing.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @method anim8.isEasingName\n * @for Core\n * @param {String} easing\n * @return {Boolean}\n */\nfunction isEasingName(easing)\n{\n  if ( easing in Easings )\n  {\n    return true;\n  }\n\n  var pair = easing.split('-');\n  var e = pair[0];\n  var t = pair[1];\n\n  if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n  {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method linear\n * @for anim8.easing\n */\nEasings['linear'] = function(x)\n{\n  return x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['quad'] = function(x)\n{\n  return x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDAuMyooMS14KSooMS14KSp4KSsoMy4wKigxLXgpKngqeCkrKHgqeCp4KSkqKDEteCkreCooMS0oMS14KSooMS14KSooMS14KSooMS14KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['ease'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n\n  return eq1 * i + eq2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method cubic\n * @for anim8.easing\n */\nEasings['cubic'] = function(x)\n{\n  return x * x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method quartic\n * @for anim8.easing\n */\nEasings['quartic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quintic\n * @for anim8.easing\n */\nEasings['quintic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KngpKyh4KngpLXgiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method back\n * @for anim8.easing\n */\nEasings['back'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  return x3 + x2 - x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzaW4oeCoxLjU3MDc5NjMyNjc5KSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method sine\n * @for anim8.easing\n */\nEasings['sine'] = function(x)\n{\n  return Math.sin( x * 1.57079632679 );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLXgqKDcuMC8xMCkpKngqKDEwLjAvMy4wKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method overshot\n * @for anim8.easing\n */\nEasings['overshot'] = function(x)\n{\n  return (1.0 - x * (7.0 / 10)) * x * (10.0 / 3.0);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KigoMi4wKngqeCp4KSt4KngtKDQuMCp4KSsyLjApKSotc2luKHgqMTAuOTk1NTc0Mjg3NikiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method elastic\n * @for anim8.easing\n */\nEasings['elastic'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n  var wave = -Math.sin(x * 10.9955742876);\n  return scale * wave;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJhYnMoeC1zaW4oeCozLjE0MTU5MjY1MzU5KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method revisit\n * @for anim8.easing\n */\nEasings['revisit'] = function(x)\n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWNvcyh4KngqeCozNi4wKSooMS4wLXgpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method lasso\n * @for anim8.easing\n */\nEasings['lasso'] = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgqeCkqY29zKHgqeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slowbounce\n * @for anim8.easing\n */\nEasings['slowbounce'] = function(x)\n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgpKmNvcyh4KngqMTQuODA0NDA2NjAxNikpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method bounce\n * @for anim8.easing\n */\nEasings['bounce'] = function(x)\n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method smallbounce\n * @for anim8.easing\n */\nEasings['smallbounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjcpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method tinybounce\n * @for anim8.easing\n */\nEasings['tinybounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoY29zKHgqeCoxMi4wKSp4KigxLjAteCkreCkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method hesitant\n * @for anim8.easing\n */\nEasings['hesitant'] = function(x)\n{\n  return (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzcXJ0KHgpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrt\n * @for anim8.easing\n */\nEasings['sqrt'] = function(x)\n{\n  return Math.sqrt( x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDEuMC0oMS14KSooMS14KSooMS14KSooMS14KSkreCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrtf\n * @for anim8.easing\n */\nEasings['sqrtf'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIobG9nKHgpKzIuMCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method log10\n * @for anim8.easing\n */\nEasings['log10'] = function(x)\n{\n  return (Math.log10(x + 0.01) + 2.0) * 0.5 / 1.0021606868913213;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeDwwLjc_KHgqLTAuMzU3KTooKCh4LTAuNykqKHgtMC43KSoyNy41LTAuNSkqMC41KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slingshot\n * @for anim8.easing\n */\nEasings['slingshot'] = function(x)\n{\n  if (x < 0.7) {\n    return (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIxLXNxcnQoMS14KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method circular\n * @for anim8.easing\n */\nEasings['circular'] = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMy4wKigxLjAteCkqeCp4KSsoeCp4KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method gentle\n * @for anim8.easing\n */\nEasings['gentle'] = function(x)\n{\n  return (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\n/**\n * Generates a bezier easing function given the two middle control points. The\n * first point is {0,0} and the last point is {1, 1}.\n *\n * @method bezier\n * @for anim8.easing\n * @param {Number} mX1\n * @param {Number} mY1\n * @param {Number} mX2\n * @param {Number} mY2\n * @return {Function}\n */\nEasings['bezier'] = function(mX1, mY1, mX2, mY2)\n{\n  // https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\n\n/**\n * Possible states an event can be in.\n *\n * @type {Object}\n */\nvar EventState =\n{\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  FINISHED: 8\n};\n\n/**\n * Instantiates a new Event which extends Attrimator.\n *\n * @param {String} attribute\n * @param {Path} path\n * @param {String|Number} duration\n * @param {String|Function|Array} easing\n * @param {String|Number} delay\n * @param {String|Number} sleep\n * @param {String|Number} offset\n * @param {String|Number} repeat\n * @param {Number} scale\n * @param {T|Number} scaleBase\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @param {Object} input\n * @param {Number} mergeId\n * @class Event\n * @constructor\n * @extends Attrimator\n */\nfunction Event(attribute, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, parameters, hasInitialState, builder, next, input, mergeId)\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The path the attribute will be animated along.\n   *\n   * @property {Path} path\n   */\n  this.path             = path;\n\n  /**\n   * The easing used to modify the delta value passed to the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n   *\n   * @property {Function} easing\n   */\n  this.easing           = $easing( easing );\n\n  /**\n   * The amount of time in milliseconds to animate an attribute over the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}}\n   *\n   * @property {Number} duration\n   */\n  this.duration         = $duration( duration );\n\n  /**\n   * If this event repeats more than once, this is a pause between animations.\n   *\n   * **See:** {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}}\n   *\n   * @property {Number} sleep\n   */\n  this.sleep            = $sleep( sleep );\n\n  /**\n   * The number of times to repeat the animation.\n   *\n   * **See:** {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}}\n   *\n   * @property {Number} repeat\n   */\n  this.repeat           = $repeat( repeat );\n\n  /**\n   * The amount to scale the value computed from the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}\n   *\n   * @property {T} scale\n   */\n  this.scale            = $scale( scale );\n\n  /**\n   * The base value from which to scale from. This is essentially this data\n   * types default value.\n   *\n   * @property {T} scaleBase\n   */\n  this.scaleBase        = path.calculator.parse( scaleBase, path.calculator.ZERO );\n\n  /**\n   * The properties on the attrimator.\n   *\n   * @property {Object} parameters\n   */\n  this.parameters       = parameters;\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.offset           = $offset( offset );\n\n  this.input            = input;\n  this.mergeId          = mergeId;\n}\n\nClass.extend( Event, Attrimator,\n{\n  /**\n   * Returns the computed value given a base value and a delta along the path.\n   *\n   * @method computeValue\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  computeValue: function(baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n\n    if ( value !== false && this.scale !== 1.0 )\n    {\n      var calc = this.path.calculator;\n      var baseValue = calc.clone( this.scaleBase );\n      var distance = calc.sub( baseValue, value );\n\n      value = calc.adds( value, distance, -this.scale );\n    }\n\n    return value;\n  },\n\n  /**\n   * Applies the value to the frame and returns true, otherwise returns false.\n   *\n   * @method applyValue\n   * @param {Object} frame\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = baseValue;\n\n    // TODO pull defaultValue from attribute\n    if (!this.path.calculator.isValid( baseValue ))\n    {\n      value = this.path.calculator.create();\n    }\n\n    value = this.computeValue( value, delta );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = value;\n    }\n\n    return value;\n  },\n\n  nopeat: function()\n  {\n    var newRepeat = clamp( Math.ceil( ( this.elapsed - this.delay ) / ( this.duration + this.sleep ) ), 0, this.repeat );\n\n    if ( newRepeat !== this.repeat )\n    {\n      this.repeat = newRepeat;\n      this.prestartNext( true );\n    }\n\n    return this;\n  },\n  finish: function(frame)\n  {\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = EventState.FINISHED;\n  },\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.state = this.delay ? EventState.DELAYED : EventState.ANIMATING;\n\n    if ( this.hasComputed() )\n    {\n      this.path = this.path.replaceComputed( this, animator );\n    }\n  },\n  startCycle: function(frame)\n  {\n    if ( this.hasInitialState )\n    {\n      this.applyValue( frame, frame[ this.attribute ], 0 );\n\n      return true;\n    }\n\n    return false;\n  },\n  update: function(elapsed, frame)\n  {\n    var updated = false;\n    var delay = this.delay;\n    var duration = this.duration;\n    var sleep = this.sleep;\n    var repeat = this.repeat;\n    var oldState = this.state;\n    var newState = this.state;\n    var delta = 0;\n\n    elapsed -= delay;\n\n    var cycle = duration + sleep;\n    var iteration = Math.floor( elapsed / cycle );\n\n    if ( iteration >= repeat )\n    {\n      newState = EventState.FINISHED;\n      delta = 1;\n    }\n    else\n    {\n      elapsed -= iteration * cycle;\n\n      if ( elapsed > duration )\n      {\n        newState = EventState.SLEEPING;\n        delta = 1;\n      }\n      else\n      {\n        newState = EventState.ANIMATING;\n        delta = elapsed / duration;\n      }\n    }\n\n    if ( newState === EventState.ANIMATING ||\n       ( newState !== EventState.ANIMATING && oldState === EventState.ANIMATING ) )\n    {\n      this.applyValue( frame, frame[ this.attribute ], delta );\n      updated = true;\n    }\n\n    this.state = newState;\n\n    return updated;\n  },\n  valueAt: function(time, out)\n  {\n    time += this.offset;\n\n    if ( time < this.delay && !this.hasInitialState )\n    {\n      return false;\n    }\n\n    var delta = 0;\n\n    if ( time >= this.delay )\n    {\n      var cycle = (this.duration + this.sleep);\n      var elapsed = (time - this.delay);\n      var iteration = Math.floor( elapsed / cycle );\n\n      if ( iteration >= this.repeat )\n      {\n        delta = 1.0;\n      }\n      else\n      {\n        delta = Math.min( 1.0, (elapsed % cycle) / this.duration );\n      }\n    }\n\n    return this.computeValue( out, delta );\n  },\n  totalTime: function()\n  {\n    var sleepTime = this.sleep ? ((this.repeat - 1) * this.sleep) : 0;\n    var animateTime = (this.repeat * this.duration);\n\n    return Math.min( this.stopTime, this.delay + animateTime + sleepTime - this.offset );\n  },\n  clone: function()\n  {\n    return new Event( this.attribute, this.path, this.duration, this.easing, this.delay, this.sleep, this.offset, this.repeat, this.scale, this.scaleBase, this.parameters, this.hasInitialState, this.builder, this.next ? this.next.clone() : null, this.input );\n  },\n  hasComputed: function()\n  {\n    return this.path.computed;\n  },\n  isInfinite: function()\n  {\n    return !isFinite( this.repeat ) && !isFinite( this.stopTime );\n  },\n  isFinished: function()\n  {\n    return (this.state === EventState.FINISHED);\n  }\n\n});\n\n/**\n * Returns an Event given the attribute, the path, and a parsed options object.\n *\n * **See:** {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method fromOptions\n * @for Event\n * @param  {String} attr\n * @param  {Path} path\n * @param  {Object} options\n * @return {Event}\n */\nEvent.fromOptions = function(attr, path, options)\n{\n  return new Event( attr, path, options.duration, options.easing, options.delay, options.sleep, options.offset, options.repeat, options.scale, options.scaleBase, options.parameters );\n};\n\n\n/**\n * A factory creates Animator instances for subjects.\n *\n * @class Factory\n * @constructor\n */\nfunction Factory()\n{\n  this.priority = 0;\n}\n\nClass.define( Factory,\n{\n\n  /**\n   * Determines whether the given subject is valid for this factory to create Animators for.\n   *\n   * @method is\n   * @param  {Any} subject\n   * @return {Boolean}\n   */\n  is: function(subject)\n  {\n    throw 'Factory.is not implemented';\n  },\n\n  /**\n   * Returns an animator given a subject.\n   *\n   * @method animatorFor\n   * @param  {Any} subject\n   * @return {Animator}\n   */\n  animatorFor: function(subject)\n  {\n    throw 'Factory.animatorFor not implemented';\n  },\n\n  /**\n   * Explodes the given subject to an array of Animators and adds them to the given array.\n   *\n   * @method animatorsFor\n   * @param {Any} subject\n   * @param {Array} animators\n   */\n  animatorsFor: function(subject, animators)\n  {\n    animators.push( this.animatorFor( subject ) );\n  },\n\n  /**\n   * Destroys the animator by unlinking the animator from the subject.\n   *\n   * @method destroy\n   * @param {Animator} animator\n   */\n  destroy: function(animator)\n  {\n\n  },\n\n  /**\n   * Returns the attribute descriptor for the given attribute. An attribute\n   * descriptor is an object with at least the following properties:\n   *\n   * - `name` = the name of the attribute (same as `attr`)\n   * - `calculatorName` = the name of the calculator for the attribute\n   * - `calculator` = the calculator for the attribute\n   * - `defaultValue` = the default value for the attribute\n   * - `parse` = a method to pass a value and have the calculator parse it and\n   *             return the defaultValue if it was invalid\n   * - `cloneDefault` = a method which returns a clone of the default value\n   *\n   * @method attribute\n   * @param {String} attr\n   * @return {Object}\n   */\n  attribute: function(attr)\n  {\n    throw 'Factory.attribute not implemented';\n  }\n\n});\n\n\n/**\n * A FastMap has the key-to-value benefits of a map and iteration benefits of an\n * array. This is especially beneficial when most of the time the contents of\n * the structure need to be iterated and order doesn't matter (since removal\n * performs a swap which breaks insertion order).\n *\n * @param {FastMap|Object} map\n * @class FastMap\n * @constructor\n */\nfunction FastMap(map)\n{\n  this.reset();\n\n  if ( map instanceof FastMap )\n  {\n    this.putMap( map );\n  }\n  else if ( isObject( map ) )\n  {\n    for (var prop in map)\n    {\n      this.put( prop, map[ prop ] );\n    }\n  }\n}\n\nClass.define( FastMap,\n{\n\n  /**\n   * Resets the map by initializing the values, keys, and indexes.\n   *\n   * @method reset\n   * @chainable\n   */\n  reset: function()\n  {\n    /**\n     * An array of the values in this map.\n     *\n     * @property {Array} values\n     */\n    this.values = [];\n\n    /**\n     * An array of the keys in this map.\n     *\n     * @property {Array} keys\n     */\n    this.keys = [];\n\n    /**\n     * An object of key to index mappings.\n     *\n     * @property {Object} indices\n     */\n    this.indices = {};\n\n    return this;\n  },\n\n  /**\n   * Puts the value in the map by the given key.\n   *\n   * @method put\n   * @param {String} key\n   * @param {V} value\n   * @chainable\n   */\n  put: function(key, value)\n  {\n    if ( key in this.indices )\n    {\n      this.values[ this.indices[ key ] ] = value;\n    }\n    else\n    {\n      this.indices[ key ] = this.values.length;\n      this.values.push( value );\n      this.keys.push( key );\n    }\n\n    return this;\n  },\n\n  /**\n   * Changes the given key to another.\n   *\n   * @method rekey\n   * @param {String} fromKey\n   * @param {String} toKey\n   * @chainable\n   */\n  rekey: function(fromKey, toKey)\n  {\n    if ( fromKey in this.indices )\n    {\n      var index = this.indices[ fromKey ];\n      this.keys[ index ] = toKey;\n      this.indices[ toKey ] = index;\n      delete this.indices[ fromKey ];\n    }\n\n    return this;\n  },\n\n  /**\n   * Puts all keys & values on the given map into this map overwriting any existing values mapped by similar keys.\n   *\n   * @method putMap\n   * @param {FastMap} map\n   * @chainable\n   */\n  putMap: function(map)\n  {\n    var keys = map.keys;\n    var values = map.values;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      this.put( keys[ i ], values[ i ] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the value mapped by the given key.\n   *\n   * @method get\n   * @param {String} key\n   * @return {V}\n   */\n  get: function(key)\n  {\n    return this.values[ this.indices[ key ] ];\n  },\n\n  /**\n   * Removes the value by a given key\n   *\n   * @method remove\n   * @param {String} key\n   * @chainable\n   */\n  remove: function(key)\n  {\n    var index = this.indices[ key ];\n\n    if ( isNumber( index ) )\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the value & key at the given index.\n   *\n   * @method removeAt\n   * @param {Number} index\n   * @chainable\n   */\n  removeAt: function(index)\n  {\n    var key = this.keys[ index ];\n    var lastValue = this.values.pop();\n    var lastKey = this.keys.pop();\n\n    if ( index < this.values.length )\n    {\n      this.values[ index ] = lastValue;\n      this.keys[ index ] = lastKey;\n      this.indices[ lastKey ] = index;\n    }\n\n    delete this.indices[ key ];\n\n    return this;\n  },\n\n  /**\n   * Returns the index of the value in the array given a key.\n   *\n   * @method indexOf\n   * @param {String} key\n   * @return {Number}\n   */\n  indexOf: function(key)\n  {\n    return coalesce( this.indices[ key ], -1 );\n  },\n\n  /**\n   * Returns whether this map has a value for the given key.\n   *\n   * @method has\n   * @param {String} key\n   * @return {Boolean}\n   */\n  has: function(key)\n  {\n    return key in this.indices;\n  },\n\n  /**\n   * Returns whether the given input has overlap with keys in this map.\n   *\n   * @method hasOverlap\n   * @param {FastMap|Object} map\n   * @return {Boolean}\n   */\n  hasOverlap: function(map)\n  {\n    var keys = this.keys;\n    var indices = map.indices;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      if ( keys[i] in indices )\n      {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Returns the number of elements in the map.\n   *\n   * @method size\n   * @return {Number}\n   */\n  size: function()\n  {\n    return this.values.length;\n  },\n\n  /**\n   * Clears all keys & values from the map.\n   *\n   * @method clear\n   * @chainable\n   */\n  clear: function()\n  {\n    this.values.length = 0;\n    this.keys.length = 0;\n    this.indices = {};\n\n    return this;\n  }\n\n});\n\n\n/**\n * Instantiates a new Oncer which extends Attrimator.\n *\n * @param {String} attribute\n * @param {T} value\n * @param {String|Number} delay\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @class Oncer\n * @constructor\n * @extends Attrimator\n */\nfunction Oncer( attribute, value, delay, hasInitialState, builder, next, input )\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The value that's set to the animator once.\n   *\n   * @property {T} value\n   */\n  this.value = value;\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.applied          = false;\n  this.input            = input;\n}\n\nClass.extend( Oncer, Attrimator,\n{\n  /**\n   * Computes the value of this Oncer.\n   *\n   * @method getValue\n   * @return {T}\n   */\n  getValue: function()\n  {\n    return isFunction( this.value ) ? this.value() : this.value;\n  },\n\n  finish: function(frame)\n  {\n    var update = !this.applied;\n\n    if ( update )\n    {\n      frame[ this.attribute ] = this.getValue();\n\n      this.applied = true;\n    }\n\n    return update;\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.value = animator.getAttribute( this.attribute ).parse( this.value );\n\n    if ( isComputed( this.value ) )\n    {\n      this.value = this.value( this, animator );\n    }\n\n    this.applied = false;\n  },\n\n  startCycle: function(frame)\n  {\n    return this.hasInitialState && this.finish( frame );\n  },\n\n  update: function(elapsed, frame)\n  {\n    return elapsed >= this.delay && this.finish( frame );\n  },\n\n  valueAt: function(time, out)\n  {\n    if ( time < this.delay )\n    {\n      return false;\n    }\n\n    return this.getValue();\n  },\n\n  totalTime: function()\n  {\n    return Math.min( this.stopTime, this.delay );\n  },\n\n  clone: function()\n  {\n    return new Oncer( this.attribute, this.value, this.delay, this.hasInitialState, this.builder, this.next ? this.next.clone() : null );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.value );\n  },\n\n  isInfinite: function()\n  {\n    return false;\n  },\n\n  isFinished: function()\n  {\n    return this.applied;\n  }\n  \n});\n\n\n/**\n * Path class computes a value given a delta value [0, 1].\n *\n * @class Path\n * @constructor\n */\nfunction Path()\n{\n}\n\nClass.define( Path,\n{\n\n  /**\n   * Resets the path with the given name, calculator, and points.\n   *\n   * @method reset\n   * @param {String|false} name\n   * @param {anim8.Calculator} calculator\n   * @param {Array} points\n   */\n  reset: function(calculator, points)\n  {\n    this.calculator = $calculator( calculator );\n    this.points = points;\n    this.computed = this.hasComputed();\n    this.deterministic = this.isDeterministic();\n  },\n\n  /**\n   * Computes a value at the given delta setting and returning out.\n   *\n   * @method compute\n   * @param {T} out\n   * @param {Number} delta\n   * @return {T}\n   */\n  compute: function(out, delta)\n  {\n    throw 'Path.compute not implemented';\n  },\n\n  /**\n   * Determines if this path has at least one computed value.\n   *\n   * **See:** {{#crossLink \"anim8.computed\"}}{{/crossLink}}\n   *\n   * @method hasComputed\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    return this.examinePoints( isComputed, true, false );\n  },\n\n  /**\n   * Determines if this path has at least one computed value.\n   *\n   * **See:** {{#crossLink \"anim8.computed\"}}{{/crossLink}}\n   *\n   * @method isDeterministic\n   * @return {Boolean}\n   */\n  isDeterministic: function()\n  {\n    return this.examinePoints( isFunction, false, true );\n  },\n\n  /**\n   * Examines the points in the path by passing each point to the examiner\n   * function. If the examiner function returns true then `returnOnTrue` true\n   * is returned immediately, otherwise `returnOnFalse` is returned.\n   *\n   * @method examinePoints\n   * @param {Function} examiner\n   * @param {Any} returnOnTrue\n   * @param {Any} returnOnFalse\n   * @return {Any}\n   */\n  examinePoints: function(examiner, returnOnTrue, returnOnFalse)\n  {\n    var ps = this.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( examiner( ps[ i ] ) )\n      {\n        return returnOnTrue;\n      }\n    }\n\n    return returnOnFalse;\n  },\n\n  /**\n   * Replaces any computed values in this path with the result from invoking\n   * the function and returns a clone of this path.\n   *\n   * @method replaceComputed\n   * @return {anim8.Path}\n   */\n  replaceComputed: function(event, animator)\n  {\n    var clone = this.copy();\n    var ps = clone.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( isComputed( ps[i] ) )\n      {\n        ps[i] = ps[i]( event, animator );\n      }\n    }\n\n    return clone;\n  },\n\n  /**\n   * Resolves and returns the point at the given index.\n   *\n   * @method resolvePoint\n   * @param {Number} i\n   * @return {T}\n   */\n  resolvePoint: function(i)\n  {\n    return resolve( this.points[ i ] );\n  },\n\n  /**\n   * Returns whether the path is linear. Linear paths go directly from point to\n   * point where curved paths do not. Linear paths can have their length\n   * calculated fairly easily however curves you must compute length with a\n   * given granularity.\n   *\n   * @method isLinear\n   * @return {Boolean}\n   */\n  isLinear: function()\n  {\n    return true;\n  },\n\n  /**\n   * Computes the length of the Path with a given granularity. Granularity is\n   * used for non-linear paths - it's the number of segments are calculated on\n   * the path where the length of the segments are summed and returned as the\n   * length.\n   *\n   * @method length\n   * @param {Number} granularity\n   * @return {Number}\n   */\n  length: function(granularity)\n  {\n    var distance = 0;\n    var calc = this.calculator;\n\n    if ( this.isLinear() )\n    {\n      var prev = this.resolvePoint( 0 );\n\n      for (var i = 1; i < this.points.length; i++)\n      {\n        var next = this.resolvePoint( i );\n\n        distance += calc.distance( prev, next );\n\n        prev = next;\n      }\n    }\n    else\n    {\n      var deltadelta = 1.0 / granularity;\n      var delta = deltadelta;\n      var prev = calc.clone( this.resolvePoint( 0 ) );\n      var temp = calc.create();\n\n      for (var i = 1; i <= granularity; i++)\n      {\n        var next = this.compute( temp, delta );\n\n        distance += calc.distance( prev, next );\n        delta += deltadelta;\n\n        temp = prev;\n        prev = next;\n      }\n    }\n\n    return distance;\n  }\n\n});\n\n\n/**\n * Animates a single attribute with a velocity and acceleration.\n *\n * @param {String} attribute\n * @param {Builder} builder\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} velocity\n * @param {T} acceleration\n * @param {Number} terminal\n * @param {Number} stopTime\n * @class Physics\n * @constructor\n * @extends Attrimator\n */\nfunction Physics( attribute, builder, calculator, position, velocity, acceleration, terminal, stopTime )\n{\n  this.reset( attribute, builder, null );\n\n  this.calculator   = calculator;\n  this.position     = position;\n  this.velocity     = velocity;\n  this.acceleration = acceleration;\n  this.terminal     = $number( terminal, Number.POSITIVE_INFINITY );\n  this.stopTime     = $time( stopTime, Number.POSITIVE_INFINITY );\n  this.finished     = false;\n}\n\nClass.extend( Physics, Attrimator,\n{\n  /**\n   * Parses a value for the animator given a default value.\n   *\n   * @method parseValue\n   * @param {anim8.Animator} animator.\n   * @param {T} value\n   * @param {T} defaultValue\n   * @return {T}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  },\n\n  /**\n   * Resolves the velocity to a value.\n   *\n   * @method resolveVelocity\n   * @return {T}\n   */\n  resolveVelocity: function()\n  {\n    return resolve( this.velocity );\n  },\n\n  /**\n   * Resolves the acceleration to a value.\n   *\n   * @method resolveAcceleration\n   * @return {T}\n   */\n  resolveAcceleration: function()\n  {\n    return resolve( this.acceleration );\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator     = calc;\n    this.position       = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.initalPosition = calc.clone( this.position );\n    this.velocity       = this.parseValue( animator, this.velocity, calc.ZERO );\n    this.acceleration   = this.parseValue( animator, this.acceleration, calc.ZERO );\n    this.temp           = calc.create();\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.position ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.acceleration );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var value = this.valueAt( elapsed, this.temp, true );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = this.position = value;\n\n      return true;\n    }\n\n    var calc = this.calculator;\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Physics.MAX_DT );\n    var vel = calc.copy( this.temp, this.resolveVelocity() );\n    var acc = this.resolveAcceleration();\n    var pos = this.position;\n\n    vel = calc.adds( vel, acc, dt );\n\n    if ( isFinite( this.terminal ) )\n    {\n      vel = calc.clamp( vel, 0, this.terminal );\n    }\n\n    pos = calc.adds( pos, vel, dt );\n\n    this.position = pos;\n\n    if ( !isFunction( this.velocity ) )\n    {\n      this.velocity = calc.copy( this.velocity, vel );\n    }\n\n    frame[ this.attribute ] = pos;\n\n    return true;\n  },\n\n  valueAt: function(time, out, usePosition)\n  {\n    if ( isFunction( this.velocity ) || isFunction( this.acceleration ) || this.terminal !== Number.POSITIVE_INFINITY )\n    {\n      return false;\n    }\n\n    time -= this.delay;\n    time *= 0.001;\n\n    var calc = this.calculator;\n    var value = usePosition ? calc.copy( this.position, this.initalPosition ) : calc.copy( out, this.initalPosition );\n    value = calc.adds( value, this.velocity, time );\n    value = calc.adds( value, this.acceleration, time * time );\n\n    return value;\n  },\n\n  clone: function()\n  {\n    return new Physics( this.attribute, this.builder, this.calculator, this.position, this.velocity, this.acceleration, this.terminal, this.stopTime );\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nPhysics.MAX_DT = 0.1;\n\n\n/**\n * Creates a seqeuence for the given animators offseting animations be the given\n * delay and easing.\n *\n * @param {Animators} animators\n * @param {String|Number} delay\n * @param {String|Array|Function} easing\n * @class Sequence\n * @constructor\n */\nfunction Sequence(animators, delay, easing)\n{\n  /**\n   * The animators to play a sequence of animations against.\n   *\n   * @property {Animators} animators\n   */\n  this.animators = animators;\n\n  /**\n   * The delay in milliseconds between animations.\n   *\n   * @property {Number} delay\n   */\n  this.delay = $delay( delay );\n\n  /**\n   * The easing function to use to calculate the delay offset for an animation.\n   *\n   * @property {Function} easing\n   */\n  this.easing = $easing( easing );\n}\n\nClass.define( Sequence,\n{\n  /**\n   * Returns the maximum delay for delaying generated attrimators.\n   *\n   * @method maxDelay\n   * @return {Number}\n   */\n  maxDelay: function()\n  {\n    return this.delay * (this.animators.length() - 1);\n  },\n\n  /**\n   * Creates an AttrimatorMap with the given options for the animator at the\n   * given index.\n   *\n   * @method createAttrimators\n   * @param {Animation} animation\n   * @param {Object} options\n   * @param {Number} i\n   * @return {AttrimatorMap}\n   */\n  createAttrimators: function(template, i)\n  {\n    var attrimatorMap = template.clone();\n    var attrimators = attrimatorMap.values;\n    var delta = i / (this.animators.length() - 1);\n    var delayOffset = this.easing( delta ) * this.maxDelay();\n\n    for (var k = attrimators.length - 1; k >= 0; k--)\n    {\n      attrimators[ k ].delay += delayOffset;\n    }\n\n    return attrimatorMap;\n  },\n\n  /**\n   * Reverses the sequence by reversing the underlying array of animators.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    this.animators.reverse();\n\n    return this;\n  },\n\n  /**\n   * Plays the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/play:method\"}}Animator.play{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.playAttrimators( attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Queues the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/queue:method\"}}Animator.queue{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n    var maxRemaining = 0;\n    var remaining = [];\n\n    this.animators.each(function(animator, i)\n    {\n      remaining[i] = animator.timeRemaining();\n      maxRemaining = Math.max( maxRemaining, remaining[i] );\n    });\n\n    this.animators.each(function(animator, i)\n    {\n      var delayOffset = maxRemaining - remaining[i];\n      var attrimatorMap = sequence.createAttrimators( template, i );\n      var attrimators = attrimatorMap.values;\n\n      for (var k = attrimators.length - 1; k >= 0; k--)\n      {\n        attrimators[ k ].delay += delayOffset;\n      }\n\n      animator.newCycle( attrimatorMap );\n      animator.queueAttrimators( attrimatorMap );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Transitions into the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/transition:method\"}}Animator.transition{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.transitionAttrimators( transition, attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Activates all animators in this sequence and returns this.\n   *\n   * **See:** {{#crossLink \"Animator/activate:method\"}}Animator.activate{{/crossLink}}\n   *\n   * @method add\n   * @chainable\n   */\n  add: function()\n  {\n    this.animators.activate();\n\n    return this;\n  }\n\n});\n\n\n/**\n * A spring has a resting point, a current position, and the velocity currently\n * enacting on the position based on the implementing classes logic.\n *\n * @class Spring\n * @constructor\n * @extends Attrimator\n */\nfunction Spring()\n{\n}\n\nClass.extend( Spring, Attrimator,\n{\n\n  /**\n   * Resets the spring's properties.\n   *\n   * @method set\n   * @param {String} attribute\n   * @param {Calculator|String} calculator\n   * @param {T|Function|true} rest\n   * @param {T|Function|true} position\n   * @param {T|Function|true} velocity\n   * @param {T|Function|true} gravity\n   * @param {Boolean} finishOnRest\n   */\n  set: function(attribute, calculator, rest, position, velocity, gravity, finishOnRest)\n  {\n    this.reset( attribute, null, null );\n\n    this.calculator   = calculator;\n    this.rest         = rest;\n    this.position     = position;\n    this.gravity      = gravity;\n    this.velocity     = velocity;\n    this.finishOnRest = finishOnRest;\n  },\n\n  /**\n   * Resolves the rest to the expected format.\n   *\n   * @method resolveRest\n   * @return {T}\n   */\n  resolveRest: function()\n  {\n    return resolve( this.rest );\n  },\n\n  /**\n   * Method that's invoked on each spring update.\n   *\n   * @method updateVelocity\n   * @param {Number} dt\n   */\n  updateVelocity: function(dt)\n  {\n    throw 'Spring.updateVelocity not implemented';\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator = calc;\n    this.rest       = this.parseValue( animator, this.rest, attribute.defaultValue );\n    this.position   = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.gravity    = this.parseValue( animator, this.gravity, calc.ZERO );\n    this.velocity   = this.parseValue( animator, this.velocity, calc.ZERO );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var calc = this.calculator;\n\n    // the number of elapsed seconds (maxed to avoid crazy behavior with low FPS)\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Spring.MAX_DT );\n\n    // keep track of the starting position to determine whether the position has updated.\n    var starting = calc.clone( this.position );\n\n    // call the update method which should update the position\n    this.updateVelocity( dt );\n    this.velocity = calc.adds( this.velocity, this.gravity, dt );\n    this.position = calc.adds( this.position, this.velocity, dt );\n\n    // track whether the attribute has updated so the animator knows if it needs to apply the attribute to the subject.\n    var updated = !calc.isEqual( starting, this.position, Spring.EPSILON );\n\n    if ( updated )\n    {\n      frame[ this.attribute ] = this.position;\n    }\n    else if ( this.finishOnRest && calc.isZero( this.velocity ) )\n    {\n      this.finished = true;\n    }\n\n    return updated;\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nSpring.MAX_DT = 0.1;\n\n/**\n * The value used to determine whether two positions in a spring are different.\n */\nSpring.EPSILON = 0.0001;\n\n\n/**\n * @module anim8\n * @class Core\n */\n\n/**\n * Converts a subject into an animator and returns it. If the subject\n * is already an animator it's returned immediately. If the subject can't be\n * animated then false is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.factoryFor:method\"}}{{/crossLink}}\n *\n * @param {Any} subject\n * @return {Animator|false}\n * @method anim8\n */\nfunction anim8(subject)\n{\n  if ( subject instanceof Animator )\n  {\n    return subject;\n  }\n\n  var factory = $factoryFor( subject, true );\n\n  if ( factory === false )\n  {\n    return false;\n  }\n\n  return factory.animatorFor( subject );\n}\n\n/**\n * Add events to the animation cycle: begin, end, finished, starting\n */\neventize( anim8 );\n\n/**\n * Converts an array of subjects into an array of Animators.\n *\n * @param {Array} subject\n * @return {Animators}\n * @method anim8s\n */\nfunction anim8s(subjects)\n{\n  var factory = $factoryFor( subjects, true );\n  var animators = [];\n\n  if ( factory !== false )\n  {\n    factory.animatorsFor( subjects, animators );\n\n    return new Animators( animators );\n  }\n\n  if ( !isArray( subjects ) )\n  {\n    subjects = [ subjects ];\n  }\n\n  var animators = [];\n\n  for (var i = 0; i < subjects.length; i++)\n  {\n    var animator = anim8( subjects[i] );\n\n    if ( animator !== false )\n    {\n      animators.push( animator );\n    }\n  }\n\n  return new Animators( animators );\n}\n\n/**\n * Whether the animation cycle is currently running. This is true\n * when where are active animators and anim8.run is being called\n * and false otherwise.\n *\n * @property {Boolean} anim8.running\n * @readOnly\n */\nvar running = false;\n\n/**\n * Live Mode keeps the animation cycles running even when there aren't\n * Animators. For highly interactive applications enabling this may\n * take up more resources but it will result in smoother animations. When\n * the animation cycle goes from stopped to running it takes a few frames\n * to smooth out when this is false.\n *\n * @property {Boolean} anim8.live\n */\nvar live = false;\n\n/**\n * The anim8 instance for all active animators.\n *\n * @property {Animators} anim8.animating\n * @readOnly\n */\nvar animating = new Animators();\n\n\nfunction isRunning()\n{\n  return running;\n}\n\nfunction isLive()\n{\n  return live;\n}\n\nfunction setLive(newLive)\n{\n  live = newLive;\n}\n\n/**\n * Adds an animator to the list of animating if it isn't there already. If the\n * animation loop isn't currently running it's started.\n *\n * @method anim8.add\n * @param {Animator} animator\n */\nfunction activateAnimator(animator)\n{\n  pushAnimator( animator );\n\n  activate();\n}\n\nfunction pushAnimator(animator)\n{\n  if ( !animator.active )\n  {\n    animator.active = true;\n    animating.push( animator );\n  }\n}\n\nfunction activate()\n{\n  if ( !running )\n  {\n    running = true;\n\n    anim8.trigger('starting');\n\n    requestRun( run );\n  }\n}\n\n/**\n * The function to call if animations need to be done.\n *\n * @method anim8.requestRun\n * @param {Function} callback\n */\nvar requestRun = (function()\n{\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n  var requestor = global.requestAnimationFrame;\n\n  for (var x = 0; x < vendors.length && !requestor; ++x)\n  {\n    requestor = global[ vendors[x] + 'RequestAnimationFrame' ];\n  }\n\n  if (!requestor)\n  {\n    var lastTime = 0;\n\n    return function(callback)\n    {\n      var currentTime = now();\n      var timeToCall = Math.max( Defaults.pauseTime, Defaults.frameRate - (currentTime - lastTime) );\n      var id = global.setTimeout( function() { callback( currentTime + timeToCall ); }, timeToCall );\n      lastTime = currentTime + timeToCall;\n      return id;\n    };\n  }\n\n  return function(callback)\n  {\n    requestor( callback );\n  };\n\n})();\n\n/**\n * Executes an animation loop cycle which consists of four operations:\n *\n * 1. Call preupdate on all Animators\n * 2. Call update on all Animators\n * 3. Call apply on all Animators\n * 4. Remove finished Animators\n *\n * When there are no more animating the loop cycle is stopped.\n *\n * @method anim8.run\n */\nfunction run()\n{\n  anim8.trigger('begin');\n\n  var currentTime = now();\n  var active = animating.length();\n\n  // notify animators that we're about to update\n  animating.preupdate( currentTime, active );\n\n  // update animating based on the current time\n  animating.update( currentTime, active );\n\n  // apply the attributes calculated\n  animating.apply( active );\n\n  // if the animator is done remove it\n  animating.filter( animating.handleFinished );\n\n  // The loop has ended!\n  anim8.trigger('end');\n\n  // if there are animators still remaining call me again!\n  if ( animating.length() || live )\n  {\n    requestRun( run );\n  }\n  else\n  {\n    running = false;\n\n    anim8.trigger('finished');\n  }\n}\n\n/**\n * Pauses all animators.\n *\n * **See:** {{#crossLink \"Animator/pause:method\"}}{{/crossLink}}\n *\n * @method anim8.pause\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction pause(attributes)\n{\n  animating.pause( attributes );\n\n  return anim8;\n}\n\n/**\n * Resumes all animators.\n *\n * **See:** {{#crossLink \"Animator/resume:method\"}}{{/crossLink}}\n *\n * @method anim8.resume\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction resume(attributes)\n{\n  animating.resume( attributes );\n\n  return anim8;\n}\n\n/**\n * Stops all animators.\n *\n * **See:** {{#crossLink \"Animator/stop:method\"}}{{/crossLink}}\n *\n * @method anim8.stop\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction stop(attributes)\n{\n  animating.stop( attributes );\n\n  return anim8;\n}\n\n/**\n * Ends all animators.\n *\n * **See:** {{#crossLink \"Animator/end:method\"}}{{/crossLink}}\n *\n * @method anim8.end\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction end(attributes)\n{\n  animating.end( attributes );\n\n  return anim8;\n}\n\n/**\n * Finishes all animators.\n *\n * **See:** {{#crossLink \"Animator/finish:method\"}}{{/crossLink}}\n *\n * @method anim8.finish\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction finish(attributes)\n{\n  animating.finish( attributes );\n\n  return anim8;\n}\n\n/**\n * Interrupts all animators from repeating currently running animations.\n *\n * **See:** {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}}\n *\n * @method anim8.nopeat\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction nopeat(attributes)\n{\n  animating.nopeat( attributes );\n\n  return anim8;\n}\n\n\n/**\n * Instantiates a new color given red, green, blue, and white components.\n * If a component is missed it's default value is either 255 (white) or\n * 1.0 (opaque).\n *\n * @method anim8.color\n * @for Core\n * @param {Number} [r=255]\n * @param {Number} [g=255]\n * @param {Number} [b=255]\n * @param {Number} [a=1]\n * @return {Object}\n */\nfunction Color(r, g, b, a)\n{\n  return {\n    r: coalesce( r, 255 ),\n    g: coalesce( g, 255 ),\n    b: coalesce( b, 255 ),\n    a: coalesce( a, 1.0 )\n  };\n}\n\n/**\n * The array of parsing methods to execute sequentally until a color is returned.\n */\nColor.parsers =\n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, parseInt, 255),\n          g: this.parseComponent(input.g, parseInt, 255),\n          b: this.parseComponent(input.b, parseInt, 255),\n          a: this.parseComponent(input.a, parseFloat, 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = parseFunction(t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  },\n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n/**\n * Parses a color from a string.\n *\n * @method anim8.color.parse\n * @for Core\n * @param {String} input\n * @return {Object|False}\n */\nColor.parse = function(input)\n{\n  var cp = Color.parsers;\n\n  for (var i = 0; i < cp.length; i++)\n  {\n    var parsed = cp[ i ].parse( input );\n\n    if (parsed !== false)\n    {\n      return parsed;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Formats a color to a string.\n *\n * @method anim8.color.format\n * @for Core\n * @param {Object} color\n * @return {String}\n */\nColor.format = function(color)\n{\n  var ca = clamp( coalesce( color.a, 1.0 ), 0, 1 );\n  var cr = Math.floor( clamp( coalesce( color.r, 255 ), 0, 255 ) );\n  var cg = Math.floor( clamp( coalesce( color.g, 255 ), 0, 255 ) );\n  var cb = Math.floor( clamp( coalesce( color.b, 255 ), 0, 255 ) );\n\n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n\n    if (r.length === 1) {\n      r = '0' + r;\n    }\n    if (g.length === 1) {\n      g = '0' + g;\n    }\n    if (b.length === 1) {\n      b = '0' + b;\n    }\n\n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n\n\n/**\n * A collection of computed functions. Computed functions are functions that\n * are invoked once at the start of an animation given the\n * {{#crossLink \"Attrimator\"}}{{/crossLink}} and\n * {{#crossLink \"Animator\"}}{{/crossLink}} and the result replaces the function.\n *\n * **See:** {{#crossLink \"anim8.computed/current:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/relative:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/random:method\"}}{{/crossLink}}\n *\n * @class anim8.computed\n */\nfunction computed(funcOrName, func)\n{\n  if ( isString( funcOrName ) && isFunction( func ) )\n  {\n    func.computed = true;\n\n    computed[ funcOrName ] = func;\n\n    return func;\n  }\n  else if ( isFunction( funcOrName ) )\n  {\n    funcOrName.computed = true;\n\n    return funcOrName;\n  }\n\n  throw funcOrName + ' and ' + func + ' are not valid parameters for creating a computed function.';\n}\n\n/**\n * Calculates and returns the current value for an\n * {{#crossLink \"Animator\"}}{{/crossLink}}. If the animator doesn't have a\n * current value the default value for the attribute is returned.\n *\n * @method current\n * @param {Attrimator} attrimator\n * @param {Animator} animator\n * @return {T}\n */\ncomputed('current', function(attrimator, animator)\n{\n  var attr = attrimator.attribute;\n  var attribute = animator.getAttribute( attr );\n\n  if ( attr in animator.frame )\n  {\n    return attribute.calculator.clone( animator.frame[ attr ] );\n  }\n  else\n  {\n    return attribute.cloneDefault();\n  }\n});\n\n/**\n * Calculates a value relative to the attribute value currently in the animator.\n * A mask can be used for mixed relative & absolute values in a single value\n * where 1 makes it relative and 0 makes it absolute.\n *\n * **Examples:**\n *\n *     anim8.computed.relative( 40 ); // returns function which adds 40 to current value\n *     anim8.computed.relative( 40, 0.5 ); // returns function which adds 40 to half of the current value\n *     anim8.computed.relative( {x: 20, y: 10}, {x: 1, y: 0} ); // returns function which adds 20 to the x of the current value and sets the y of the current value to 10\n *\n * @method relative\n * @param {T} relativeAmount\n * @param {T} mask\n * @return {Function}\n */\ncomputed('relative', function(relativeAmount, mask)\n{\n  // If the relativeAmount is already a computed value, return it.\n  if ( isComputed( relativeAmount ) )\n  {\n    return relativeAmount;\n  }\n\n  var relativeFunction = function(attrimator, animator)\n  {\n    var attr = attrimator.attribute;\n    var attribute = animator.getAttribute( attr );\n    var calc = attribute.calculator;\n    var current = null;\n\n    if ( attr in animator.frame )\n    {\n      current = calc.clone( animator.frame[ attr ] );\n    }\n    else\n    {\n      current = attribute.cloneDefault();\n    }\n\n    if ( mask )\n    {\n      current = calc.mul( current, mask );\n    }\n\n    return calc.add( current, relativeAmount );\n  };\n\n  // Marks the function as computed which is a signal to paths & events.\n  relativeFunction.computed = true;\n\n  // Place the input on the function if the user wants to modify it live\n  relativeFunction.relativeAmount = relativeAmount;\n  relativeFunction.mask = mask;\n\n  return relativeFunction;\n});\n\n/**\n * Returns a random value based on the given random selection.\n *\n * 1. If an array is given an item is randomly chosen from that array.\n * 2. If an instance of {{#crossLink \"Path\"}}{{/crossLink}} is given a point is randomly computed and returned.\n * 3. If an object with min & max values is given a random value between them is returned.\n *\n * **Examples:**\n *\n *     anim8.computed.random( [1, 2, 3] ); // returns function which returns a 1, 2, or 3\n *     anim8.computed.random( {min: 1, max: 5} ); // returns function which returns a value between 1 and 5\n *     anim8.computed.random( {min: {x: 0, y: 0}, max: {x: 100, y: 200}} ); // returns function which returns a point in the rectangle {0,0,100,200}\n *     anim8.computed.random( path ); // returns function which returns a value anywhere along the given path\n *\n * @method random\n * @param  {Array|Object|Path} randomSelection\n * @return {Function}\n */\ncomputed('random', function(randomSelection)\n{\n  var randomFunction = null;\n\n  if ( isArray( randomSelection ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var selected = randomSelection[ Math.floor( Math.random() * randomSelection.length ) ];\n\n      return calc.parse( selected, calc.ZERO );\n    };\n  }\n  else if ( randomSelection instanceof Path )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n\n      return randomSelection.compute( calc.create(), Math.random() );\n    };\n  }\n  else if ( isObject( randomSelection ) && isDefined( randomSelection.min ) && isDefined( randomSelection.max ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var resolvedMin = resolve( randomSelection.min );\n      var resolvedMax = resolve( randomSelection.max );\n      var min = calc.parse( resolvedMin, calc.ZERO );\n      var max = calc.parse( resolvedMax, calc.ZERO );\n\n      return calc.random( calc.create(), min, max );\n    };\n  }\n  else\n  {\n    throw 'Invalid random input: ' + randomSelection;\n  }\n\n  // Place the input on the function if the user wants to modify it live\n  randomFunction.randomSelection = randomSelection;\n\n  return computed( randomFunction );\n});\n\n/**\n * Determines whether the given value is a computed value. A computed value is\n * function with a variable 'computed' set to a true value.\n *\n * @param  {any} x\n * @return {Boolean}\n */\nfunction isComputed(x)\n{\n  return isFunction( x ) && x.computed;\n}\n\n\n/**\n * Creates a function which calls a method on all elements in the array or on\n * the first element.\n *\n * @method delegate\n * @param {String} functionName\n * @param {String} returning\n */\nfunction delegate(functionName, returning)\n{\n  switch (returning)\n  {\n  case DelegateTypes.THIS:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        array[i][functionName].apply( array[i], arguments );\n      }\n\n      return this;\n    };\n\n  case DelegateTypes.RESULTS:\n    return function()\n    {\n      var array = this.$ || this;\n      var results = [];\n\n      for (var i = 0; i < array.length; i++)\n      {\n        results.push( array[i][functionName].apply( array[i], arguments ) );\n      }\n\n      return results;\n    };\n\n  case DelegateTypes.FIRST:\n    return function()\n    {\n      var array = this.$ || this;\n\n      return array.length === 0 ? undefined : array[0][functionName].apply( array[0], arguments );\n    };\n\n  case DelegateTypes.TRUE:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        if ( array[i][functionName].apply( array[i], arguments ) )\n        {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n  }\n\n  return noop;\n}\n\n\n/**\n * Creates a composite dyanmic attribute which is an object of existing\n * attributes which takes advantage of an object based calculator.\n *\n * **Example:**\n *\n *     anim8.object.attribute.topLeft = {\n *       dynamic: anim8.composite({x:'left', y:'top'}),\n *       calculator:'2d',\n *       defaultValue: {x: 0, y: 0},\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'topLeft' being placed in left and top.\n *\n * @method anim8.composite\n * @param  {Object} map\n * @for Core\n * @return {Function}\n */\nfunction composite( map )\n{\n  return function( value, frame )\n  {\n    for ( var prop in map )\n    {\n      frame[ map[ prop ] ] = value[ prop ];\n    }\n  };\n}\n\n/**\n * Creates a partial dynamic attribute which is a value that's placed in a\n * sub-property of an attribute.\n *\n * **Example:**\n *\n *     anim8.object.attribute.x = {\n *       dynamic: anim8.partial( 'position', 'x' ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'x' being placed in position.x\n *\n * @method anim8.partial\n * @param {String} attribute\n * @param {String} subattribute\n * @for Core\n * @return {Function}\n */\nfunction partial( attribute, subattribute )\n{\n  return function( value, frame )\n  {\n    if ( !isObject( frame[ attribute ] ) )\n    {\n      frame[ attribute ] = {};\n    }\n\n    frame[ attribute ][ subattribute ] = value;\n  };\n}\n\n/**\n * Creates a dynamic attribute which spreads its value over several attributes.\n *\n * **Example:**\n *\n *     anim8.dom.attribute.padding = {\n *       dynamic: anim8.spread( ['paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom' ] ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the value in 'padding' being placed in paddingLeft, paddingTop,\n * paddingRight, and paddingBottom.\n *\n * @param  {Array} attributes\n * @return {Function}\n */\nfunction spread( attributes )\n{\n  return function( value, frame )\n  {\n    for ( var i = 0; i < attributes.length; i++ )\n    {\n      frame[ attributes[ i ] ] = value;\n    }\n  };\n}\n\n\n\n\n/**\n * Adds functions to the given object (or prototype) so you can listen for any\n * number of events on the given object, optionally once. Listeners can be\n * removed later.\n *\n * The following methods will be added to the given target:\n *\n *     target.on( events, callback, [context] )\n *     target.once( events, callback, [context] )\n *     target.off( events, callback )\n *     target.trigger( event, [argument] )\n *\n * Where...\n * - `events` is a string of space delimited events.\n * - `callback` is a function to invoke when the event is triggered.\n * - `context` is an object that should be the `this` when the callback is\n *   invoked. If no context is given the default value is the object which has\n *   the trigger function that was invoked.\n *\n * @method eventize\n * @for Core\n * @param {Object} target The object to add `on`, `once`, `off`, and `trigger`\n *    functions to.\n */\nfunction eventize(target)\n{\n  Class.defineProperty( target, 'on', on );\n  Class.defineProperty( target, 'once', once );\n  Class.defineProperty( target, 'off', off );\n  Class.defineProperty( target, 'trigger', trigger );\n}\n\n  // Adds a listener to $this\nfunction addListener($this, property, events, callback, context)\n{\n  var events = toArray( events, ' ' );\n\n  if ( !isDefined( $this[ property ] ) )\n  {\n    Class.defineProperty( $this, property, {} );\n  }\n\n  for (var i = 0; i < events.length; i++)\n  {\n    if ( !isDefined( $this[ property ][ events[i] ] ) )\n    {\n      $this[ property ][ events[i] ] = [];\n    }\n\n    $this[ property ][ events[i] ].push( [ callback, context || $this ] );\n  }\n}\n\n// Removes a listener from an array of listeners.\nfunction removeListeners(listeners, event, callback)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n\n    for (var k = eventListeners.length - 1; k >= 0; k--)\n    {\n      if (eventListeners[ k ][0] === callback)\n      {\n        eventListeners.splice( k, 1 );\n      }\n    }\n  }\n}\n\n// Deletes a property from the given object if it exists\nfunction deleteProperty(obj, prop)\n{\n  if ( obj && prop in obj )\n  {\n    delete obj[ prop ];\n  }\n}\n\n// Triggers listeneers for the given event\nfunction triggerListeners(listeners, event, argument, clear)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n    var max = eventListeners.length;\n\n    for (var i = 0; i < max; i++)\n    {\n      var callback = eventListeners[ i ];\n\n      callback[0].call( callback[1], argument );\n    }\n\n    if ( clear )\n    {\n      if ( eventListeners.length !== max )\n      {\n        listeners[ event ] = eventListeners.slice( max );\n      }\n      else\n      {\n        delete listeners[ event ];\n      }\n    }\n  }\n}\n\n/**\n * Listens for every occurrence of the given events and invokes the callback\n * each time any of them are triggered.\n *\n * @method on\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction on(events, callback, context)\n{\n  addListener( this, '$on', events, callback, context );\n\n  return this;\n}\n\n/**\n * Listens for the next occurrence for each of the given events and invokes\n * the callback when any of the events are triggered.\n *\n * @method once\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction once(events, callback, context)\n{\n  addListener( this, '$once', events, callback, context );\n\n  return this;\n}\n\n/**\n * Stops listening for a given callback for a given set of events.\n *\n * **Examples:**\n *\n *     target.off();           // remove all listeners\n *     target.off('a b');      // remove all listeners on events a & b\n *     target.off(['a', 'b']); // remove all listeners on events a & b\n *     target.off('a', x);     // remove listener x from event a\n *\n * @method off\n * @for eventize\n * @param {String|Array|Object} [events]\n * @param {Function} [callback]\n * @chainable\n */\nfunction off(events, callback)\n{\n  // Remove ALL listeners\n  if ( !isDefined( events ) )\n  {\n    delete this.$on;\n    delete this.$once;\n  }\n  else\n  {\n    var events = toArray( events, ' ' );\n\n    // Remove listeners for given events\n    if ( !isFunction( callback ) )\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        deleteProperty( this.$on, events[i] );\n        deleteProperty( this.$once, events[i] );\n      }\n    }\n    // Remove specific listener\n    else\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        removeListeners( this.$on, events[i], callback );\n        removeListeners( this.$once, events[i], callback );\n      }\n    }\n  }\n\n  return this;\n}\n\n/**\n * Triggers a single event optionally passing an argument to any listeners.\n *\n * @method trigger\n * @for eventize\n * @param {String} event\n * @param {Any} argument\n * @chainable\n */\nfunction trigger(event, argument)\n{\n  triggerListeners( this.$on, event, argument, false );\n  triggerListeners( this.$once, event, argument, true );\n\n  return this;\n}\n\n\nfunction gcd(a,b)\n{\n  if (a < 0)\n  {\n    a = -a;\n  }\n  if (b < 0)\n  {\n    b = -b;\n  }\n  if (b > a)\n  {\n    var temp = a;\n    a = b;\n    b = temp;\n  }\n\n  while (true)\n  {\n    if (b === 0)\n    {\n      return a;\n    }\n\n    a %= b;\n\n    if (a === 0)\n    {\n      return b;\n    }\n\n    b %= a;\n  }\n}\n\nfunction choose(n, m)\n{\n  var num = 1, den = 1, g;\n\n  if ( m > (n / 2) )\n  {\n    m = n - m;\n  }\n\n  while ( m >= 1 )\n  {\n    num *= n--;\n    den *= m--;\n    g = gcd( num, den );\n    num /= g;\n    den /= g;\n  }\n\n  return num;\n}\n\n/**\n * Returns a value between the given minimum and maximum.\n *\n * **Examples:**\n *\n *     anim8.clamp( 5, 1, 6 );   // 5\n *     anim8.clamp( 0, 1, 6 );   // 1\n *     anim8.clamp( 7, 1, 6 );   // 6\n *\n * @method anim8.clamp\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nfunction clamp(v, min, max)\n{\n  return (v < min) ? min : (v > max ? max : v);\n}\n\n\nfunction param(paramName, paramCalculator, paramDefaultValue)\n{\n  var getCalculator, parseValue;\n\n  if ( paramCalculator )\n  {\n    var calculator = $calculator( paramCalculator );\n    var defaultValue = calculator.parse( paramDefaultValue );\n\n    getCalculator = function(attrimator, animator)\n    {\n      return calculator;\n    };\n    parseValue = function(attrimator, animator, value)\n    {\n      return calculator.parse( value, defaultValue );\n    };\n  }\n  else\n  {\n    getCalculator = function(attrimator, animator)\n    {\n      return animator.getAttribute( attrimator.attribute ).calculator;\n    };\n    parseValue = function(attrimator, animator, value)\n    {\n      return animator.getAttribute( attrimator.attribute ).parse( value );\n    };\n  }\n\n  return paramFactory(getCalculator, parseValue, function(attrimator, animator)\n  {\n    return paramResolve( attrimator, animator, attrimator.parameters[ paramName ], parseValue );\n  });\n}\n\nfunction paramFactory(getCalculator, parseValue, computer)\n{\n  extend( computer, Parameters );\n\n  computer.getCalculator = getCalculator;\n  computer.parseValue = parseValue;\n\n  return computed( computer );\n}\n\nfunction paramCalculator(parent, handleCalculation)\n{\n  return paramFactory(parent.getCalculator, parent.parseValue, function(attrimator, animator)\n  {\n    var calc = parent.getCalculator( attrimator, animator );\n\n    return handleCalculation( attrimator, animator, parent, calc );\n  });\n}\n\nfunction paramResolve(attrimator, animator, value, parser)\n{\n  if ( parser instanceof Calculator )\n  {\n    value = parser.parse( value );\n  }\n  else if ( isFunction( parser ) )\n  {\n    value = parser( attrimator, animator, value );\n  }\n\n  if ( isComputed( value ) )\n  {\n    return value( attrimator, animator );\n  }\n\n  return resolve( value );\n}\n\nvar Parameters =\n{\n  add: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = paramResolve( attrimator, animator, value, parent.parseValue );\n\n      return calc.add( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  sub: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = paramResolve( attrimator, animator, value, parent.parseValue );\n\n      return calc.sub( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  mul: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = paramResolve( attrimator, animator, value, parent.parseValue );\n\n      return calc.mul( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  div: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = paramResolve( attrimator, animator, value, parent.parseValue );\n\n      return calc.div( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  scale: function(scalar)\n  {\n    var calcScalar = $calculator('number');\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var scalarResolve = paramResolve( attrimator, animator, scalar, calcScalar );\n\n      return calc.scale( out, scalarResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  adds: function(value, scalar)\n  {\n    var calcScalar = $calculator('number');\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = paramResolve( attrimator, animator, value, parent.parseValue );\n      var scalarResolve = paramResolve( attrimator, animator, scalar, calcScalar );\n\n      return calc.adds( out, valueResolve, scalarResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  abs: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return calc.abs( out );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  neg: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return calc.scale( out, -1 );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  sqrt: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.sqrt( out );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  min: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = paramResolve( attrimator, animator, value, parent.parseValue );\n\n      return calc.min( out, out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  max: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = paramResolve( attrimator, animator, value, parent.parseValue );\n\n      return calc.max( out, out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  floor: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.floor( out );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  ceil: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.ceil( out );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  round: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.round( out );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  truncate: function(denominator)\n  {\n    var calcDenominator = $calculator('number');\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var denominatorResolve = paramResolve( attrimator, animator, denominator, calcDenominator );\n\n      return Math.floor( out * denominatorResolve ) / denominatorResolve;\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  mod: function(divisor)\n  {\n    var calcDivisor = $calculator('number');\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var divisorResolve = paramResolve( attrimator, animator, divisor, calcDivisor );\n\n      return out % divisorResolve;\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  toDegrees: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return out * 180 / Math.PI;\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  toRadians: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return out / 180 * Math.PI;\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  cos: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.cos( out );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  sin: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.sin( out );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  tan: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.tan( out );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  cosDegrees: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.cos( out / 180 * Math.PI );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  sinDegrees: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.sin( out / 180 * Math.PI );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  tanDegrees: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return Math.tan( out / 180 * Math.PI );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  distance: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = paramResolve( attrimator, animator, value, parent.parseValue );\n\n      return calc.distance( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  property: function(propertyName, defaultValue)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return isObject( out ) ? out[ propertyName ] : defaultValue;\n    };\n\n    return paramCalculator( this, handleCalculation );\n  }\n\n};\n\n\nvar Animations = {};\n\n/**\n * Options to modify the properties of the animations being saved.\n */\nvar SaveOptions =\n{\n  prefix: '',\n  options: {},\n  cache: false\n};\n\n/**\n * Saves an animation under the given name. It can be played, queued, and\n * transitioned into at a later time providing the name and optionally options\n * to override with.\n *\n * **See:** {{#crossLink \"Core/anim8.animation:method\"}}anim8.animation{{/crossLink}},\n *          {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method anim8.save\n * @for Core\n * @param {String} name\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n */\nfunction save( name, animation, options )\n{\n  var animation = $animation( animation, coalesce( options, SaveOptions.options ), SaveOptions.cache );\n  var qualifiedName = SaveOptions.prefix + name;\n  var key = qualifiedName.toLowerCase();\n\n  animation.name = qualifiedName;\n\n  Animations[ key ] = animation;\n}\n\n/**\n * Starts a save group with a prefix or an object containing a prefix and/or\n * default options to pass to the animations. The animations passed can be\n * an object or a function to call which contains save calls.\n *\n * @method anim8.saveGroup\n * @param {String|Object} prefixOrOptions\n * @param {Function|Object} animations\n */\nfunction saveGroup( prefixOrOptions, animations )\n{\n  var previousOptions = copy( SaveOptions );\n\n  if ( isString( prefixOrOptions ) )\n  {\n    SaveOptions.prefix += prefixOrOptions;\n  }\n  else if ( isObject( prefixOrOptions ) )\n  {\n    if ( isString( prefixOrOptions.prefix ) )\n    {\n      SaveOptions.prefix += prefixOrOptions.prefix;\n    }\n    if ( isDefined( prefixOrOptions.cache ) )\n    {\n      SaveOptions.cache = prefixOrOptions.cache;\n    }\n    if ( isDefined( prefixOrOptions.options ) )\n    {\n      var parsedOptions = $options( prefixOrOptions.options, SaveOptions.cache );\n\n      if ( parsedOptions !== Defaults.noOptions )\n      {\n        extend( SaveOptions.options, parsedOptions );\n      }\n    }\n  }\n\n  if ( isObject( animations ) )\n  {\n    for (var animationName in animations)\n    {\n      save( animationName, animations[ animationName ] );\n    }\n  }\n  else if ( isFunction( animations ) )\n  {\n    animations();\n  }\n\n  SaveOptions = previousOptions;\n}\n\n\nfunction translate(animation, mappings, saveAs, options, cache)\n{\n  var parsed = $animation(animation, options, cache);\n  var attrimators = parsed.newAttrimators();\n\n  for (var fromAttribute in mappings)\n  {\n    var toAttribute = mappings[ fromAttribute ];\n\n    attrimators.get( fromAttribute ).attribute = toAttribute;\n    attrimators.rekey( fromAttribute, toAttribute );\n  }\n\n  var translated = new Animation( saveAs, parsed.input, parsed.options, attrimators );\n\n  if ( isString( saveAs ) )\n  {\n    save( saveAs, translated );\n  }\n\n  return translated;\n}\n\n\n/*\n * A calculator for objects with an x and y component (number)\n *\n * @class Calculator2d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator2d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator2d, Calculator,\n{\n  aliases: {\n    'left':   0,\n    'right':  100,\n    'middle': 50,\n    'center': 50,\n    'top':    0,\n    'bottom': 100\n  },\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x\n      };\n    }\n\n    // When an array is given, assume [x, y]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculator2d );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, def.x );\n      var cy = coalesce( x.y, def.y );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n\n      if ( rx !== false && ry !== false )\n      {\n        var parsed = { x: rx, y: ry };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n\n        if ( ix || iy )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n\n    // Relative values & left/right/middle/center/top/bottom aliases.\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the X & Y components evenly.\n      if ( this.isRelative( x ) )\n      {\n        var rx = this.getRelativeAmount( x );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { x: rx, y: rx } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        x: this.parseString( pair[0], def.x ),\n        y: this.parseString( coalesce(pair[1], pair[0]), def.y )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  parseString: function(x, defaultValue)\n  {\n    return x in this.aliases ? this.aliases[ x ] : $number( x, defaultValue );\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y: 0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  abs: function(out)\n  {\n    out.x = Math.abs( out.x );\n    out.y = Math.abs( out.y );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.x = denominator.x ? out.x / denominator.x : 0;\n    out.y = denominator.y ? out.y / denominator.y : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    return dx * dx + dy * dy;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, and z component (number)\n *\n * @class Calculator3d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator3d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator3d, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x,\n        z: x\n      };\n    }\n\n    // When an array is given, assume [x, y, z]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculator3d );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, def.x );\n      var cy = coalesce( x.y, def.y );\n      var cz = coalesce( x.z, def.z );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n      var rz = this.getRelativeAmount( cz );\n\n      if ( rx !== false && ry !== false && rz !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n        var iz = this.isRelative( cz );\n\n        if ( ix || iy || iz )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the X, Y, & Z components evenly.\n      if ( this.isRelative( x ) )\n      {\n        var rx = this.getRelativeAmount( x );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { x: rx, y: rx, z: rx } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        x: $number( pair[0], def.x ),\n        y: $number( pair[1], def.y ),\n        z: $number( pair[2], def.z )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    return out;\n  },\n  abs: function(out)\n  {\n    out.x = Math.abs( out.x );\n    out.y = Math.abs( out.y );\n    out.z = Math.abs( out.z );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.x = denominator.x ? out.x / denominator.x : 0;\n    out.y = denominator.y ? out.y / denominator.y : 0;\n    out.z = denominator.z ? out.z / denominator.z : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for number primitives.\n *\n * @class CalculatorNumber\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorNumber()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorNumber, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // A raw number\n    if ( isNumber( x ) )\n    {\n      return x;\n    }\n\n    // A number in a string or a relative number.\n    if ( isString( x ) )\n    {\n      var amount = this.getRelativeAmount( x );\n\n      if ( amount !== false )\n      {\n        if ( this.isRelative( x ) )\n        {\n          return computed.relative( amount );\n        }\n        else\n        {\n          return amount;\n        }\n      }\n    }\n\n    return $number( defaultValue, Defaults.calculatorNumber );\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return 0.0;\n  },\n  zero: function(out)\n  {\n    return 0.0;\n  },\n  abs: function(out)\n  {\n    return Math.abs( out );\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale)\n  {\n    return out *= scale;\n  },\n  div: function(out, denominator)\n  {\n    return denominator ? out / denominator : 0;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return (end - start) * delta + start;\n  },\n  distanceSq: function(a, b)\n  {\n    var ab = a - b;\n    return ab * ab;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a - b );\n  },\n  length: function(a)\n  {\n    return Math.abs( a );\n  },\n  lengthSq: function(a)\n  {\n    return a * a;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'number';\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a - b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    return Math.min( a, b );\n  },\n  max: function(out, a, b)\n  {\n    return Math.max( a, b );\n  },\n  dot: function(a, b)\n  {\n    return a * b;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, z, and angle components.\n *\n * @class CalculatorQuaternion\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorQuaternion()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorQuaternion, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When only a number is given assume it's an angle around the Z-axis.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: 0,\n        y: 0,\n        z: 1,\n        angle: x\n      };\n    }\n\n    // When an array is given, assume [x, y, z, angle]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2], angle: x[3] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculatorQuaternion );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, def.x );\n      var cy = coalesce( x.y, def.y );\n      var cz = coalesce( x.z, def.z );\n      var ca = coalesce( x.angle, def.angle );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n      var rz = this.getRelativeAmount( cz );\n      var ra = this.getRelativeAmount( ca );\n\n      if ( rx !== false && ry !== false && rz !== false && ra !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz, angle: ra };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n        var iz = this.isRelative( cz );\n        var ia = this.isRelative( ca );\n\n        if ( ix || iy || iz || ia )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0,\n            angle: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed );\n        }\n\n        return parsed;\n      }\n    }\n\n    // When a relative value is given, assume it's for an angle around the Z-axis.\n    if ( isString( x ) )\n    {\n      if ( this.isRelative( x ) )\n      {\n        var rx = this.getRelativeAmount( x );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { x:0, y:0, z:1, angle: rx }, { x:0, y:0, z:0, angle:1 } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        x:      $number( pair[0], def.x ),\n        y:      $number( pair[1], def.y ),\n        z:      $number( pair[2], def.z ),\n        angle:  $number( pair[3], def.angle )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    out.angle = copy.angle;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    out.angle = 0.0;\n    return out;\n  },\n  abs: function(out)\n  {\n    out.x = Math.abs( out.x );\n    out.y = Math.abs( out.y );\n    out.z = Math.abs( out.z );\n    out.angle = Math.abs( out.angle );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    out.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    out.angle *= scale.angle;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.x = denominator.x ? out.x / denominator.x : 0;\n    out.y = denominator.y ? out.y / denominator.y : 0;\n    out.z = denominator.z ? out.z / denominator.z : 0;\n    out.angle = denominator.angle ? out.angle / denominator.angle : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    out.angle = (end.angle - start.angle) * delta + start.angle;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    var da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon &&\n           Math.abs(a.z) < epsilon &&\n           Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon &&\n           Math.abs(a.angle - b.angle) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    out.angle = Math.min(a.angle, b.angle);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    out.angle = Math.max(a.angle, b.angle);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z + a.angle * b.angle;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    out.angle = (max.angle - min.angle) * Math.random() + min.angle;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n *\n * @class CalculatorRGB\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGB()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGB, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When a number is given a grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x\n      };\n    }\n\n    // When an array is given, assume [r, g, b]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculatorRGB );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, def.r );\n      var cg = coalesce( x.g, def.g );\n      var cb = coalesce( x.b, def.b );\n      var rr = this.getRelativeAmount( cr );\n      var rg = this.getRelativeAmount( cg );\n      var rb = this.getRelativeAmount( cb );\n\n      if ( rr !== false && rg !== false && rb !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb };\n        var ir = this.isRelative( cr );\n        var ig = this.isRelative( cg );\n        var ib = this.isRelative( cb );\n\n        if ( ir || ig || ib )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the R, G, & B components.\n      if ( this.isRelative( x ) )\n      {\n        var rx = this.getRelativeAmount( x );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { r: rx, g: rx, b: rx } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        r: $number( pair[0], def.r ),\n        g: $number( pair[1], def.g ),\n        b: $number( pair[2], def.b )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  abs: function(out)\n  {\n    out.r = Math.abs( out.r );\n    out.g = Math.abs( out.g );\n    out.b = Math.abs( out.b );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.r = denominator.r ? out.r / denominator.r : 0;\n    out.g = denominator.g ? out.g / denominator.g : 0;\n    out.b = denominator.b ? out.b / denominator.b : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with r, g, & b components\n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n *\n * @class CalculatorRGBA\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGBA()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGBA, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When a number is given an opaque grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x,\n        a: 1.0\n      };\n    }\n\n    // When an array is given, assume [r, g, b, a]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2], a: x[3] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculatorRGBA );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, def.r );\n      var cg = coalesce( x.g, def.g );\n      var cb = coalesce( x.b, def.b );\n      var ca = coalesce( x.a, def.a );\n      var rr = this.getRelativeAmount( cr );\n      var rg = this.getRelativeAmount( cg );\n      var rb = this.getRelativeAmount( cb );\n      var ra = this.getRelativeAmount( ca );\n\n      if ( rr !== false && rg !== false && rb !== false && ra !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb, a: ra };\n        var ir = this.isRelative( cr );\n        var ig = this.isRelative( cg );\n        var ib = this.isRelative( cb );\n        var ia = this.isRelative( ca );\n\n        if ( ir || ig || ib || ia )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0,\n            a: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the R, G, & B components.\n      if ( this.isRelative( x ) )\n      {\n        var rx = this.getRelativeAmount( x );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { r: rx, g: rx, b: rx, a: 0 } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        r: $number( pair[0], def.r ),\n        g: $number( pair[1], def.g ),\n        b: $number( pair[2], def.b ),\n        a: $number( pair[3], def.a )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  abs: function(out)\n  {\n    out.r = Math.abs( out.r );\n    out.g = Math.abs( out.g );\n    out.b = Math.abs( out.b );\n    out.a = Math.abs( out.a );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.r = denominator.r ? out.r / denominator.r : 0;\n    out.g = denominator.g ? out.g / denominator.g : 0;\n    out.b = denominator.b ? out.b / denominator.b : 0;\n    out.a = denominator.a ? out.a / denominator.a : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    out.a = (end.a - start.a) * delta + start.a;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    var da = a.a - b.a;\n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon &&\n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon &&\n           Math.abs(a.a - b.a) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    out.a = Math.min(a.a, b.a);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    out.a = Math.max(a.a, b.a);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b + a.a * b.a;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    out.a = (max.a - min.a) * Math.random() + min.a;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for strings.\n *\n * @class CalculatorString\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorString()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorString, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // A raw string\n    if ( isString( x ) )\n    {\n      return x;\n    }\n\n    return coalesce( defaultValue, Defaults.calculatorString );\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return '';\n  },\n  zero: function(out)\n  {\n    return '';\n  },\n  abs: function(out)\n  {\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return amount;\n  },\n  mul: function(out, scale)\n  {\n    return scale;\n  },\n  div: function(out, denominator)\n  {\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return delta < 0.5 ? start : end;\n  },\n  distanceSq: function(a, b)\n  {\n    var d = Math.abs( a.length - b.length );\n    return d * d;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a.length - b.length );\n  },\n  length: function(a)\n  {\n    return a.length;\n  },\n  lengthSq: function(a)\n  {\n    return a.length * a.length;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'string';\n  },\n  isNaN: function(a)\n  {\n    return false;\n  },\n  isZero: function(a, epsilon)\n  {\n    return a.length <= epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return a === b;\n  },\n  min: function(out, a, b)\n  {\n    return a < b ? a : b;\n  },\n  max: function(out, a, b)\n  {\n    return a > b ? a : b;\n  },\n  dot: function(a, b)\n  {\n    return a.length * b.length;\n  }\n});\n\n\n/**\n * A factory for plain objects.\n *\n * @class FactoryObject\n * @constructor\n * @extends Factory\n */\nfunction FactoryObject()\n{\n  this.priority = 0;\n  this.attributes = {};\n}\n\nClass.extend( FactoryObject, Factory,\n{\n  is: function(subject)\n  {\n    return isObject( subject ) && !isArray( subject ); /* !isElement( subject ) && */\n  },\n  animatorFor: function(subject)\n  {\n    var animator = subject.$animator;\n\n    if ( !animator )\n    {\n      animator = new Animator( subject );\n      animator.factory = this;\n\n      subject.$animator = animator;\n    }\n\n    return animator;\n  },\n  destroy: function(animator)\n  {\n    delete animator.subject.$animator;\n  },\n  attribute: function(attr)\n  {\n    var attribute = this.attributes[ attr ];\n\n    if ( !attribute )\n    {\n      attribute = this.attributes[ attr ] = object.attribute( attr );\n\n      var calculatorName = attribute.calculator;\n      var calculator = $calculator( calculatorName );\n      var defaultValue = calculator.parse( attribute.defaultValue, calculator.ZERO );\n\n      attribute.calculatorName = calculatorName;\n      attribute.calculator = calculator;\n      attribute.defaultValue = defaultValue;\n      attribute.name = attr;\n      attribute.parse = function(value) {\n        return this.calculator.parse( value, this.defaultValue );\n      };\n      attribute.cloneDefault = function() {\n        return this.calculator.clone( this.defaultValue );\n      };\n    }\n\n    return attribute;\n  }\n});\n\n/**\n * The Object namespace.\n *\n * @type {Object}\n */\nvar object = {};\n\n/**\n * Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\n * returned immediately. If the input is a string the attribute with the given name is returned. Otherwise\n * the default attribute is returned.\n *\n * @param {Object|String} attr\n * @return {Object}\n */\nobject.attribute = function(attr)\n{\n  if ( isObject( attr ) && isDefined( attr.defaultValue ) )\n  {\n    return attr;\n  }\n  if ( isString( attr ) && attr in object.attribute )\n  {\n    return object.attribute[ attr ];\n  }\n\n  return object.attribute['default'];\n};\n\n/**\n * The default attribute.\n */\nobject.attribute['default']                 = {defaultValue: 0};\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderAnd\n * @constructor\n * @extends Builder\n */\nfunction BuilderAnd()\n{\n\n}\n\nClass.extend( BuilderAnd, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var and = animation.and;\n\n    and.factory = coalesce( and.factory, animation.factory );\n\n    attrimatorMap.putMap( $attrimatorsFor( and, options ) );\n  },\n  \n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.and, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'deltas' & 'values' animation type.\n *\n * @class BuilderDeltas\n * @constructor\n * @extends Builder\n */\nfunction BuilderDeltas()\n{\n\n}\n\nClass.extend( BuilderDeltas, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. If deltas wasn't specified, assume a uniform distribution of points\n    // 2. If deltas was an array, expand out into an object where the keys are attributes and the value is the delta array\n    // 3. Generate the attrimators\n\n    var mergeId = Builder.nextMergeId();\n    var factory = $factory( animation.factory );\n    var deltas = animation.deltas;\n    var values = animation.values;\n\n    if ( !isDefined( deltas ) )\n    {\n      deltas = {};\n    }\n    else if ( isArray( deltas ) )\n    {\n      var deltaObject = {};\n\n      for (var attr in values)\n      {\n        deltaObject[attr] = deltas;\n      }\n\n      deltas = deltaObject;\n    }\n\n    for (var attr in values)\n    {\n      var value = values[ attr ];\n      var valueMax = value.length - 1;\n      var delta = deltas[ attr ];\n      var attribute = factory.attribute( attr );\n\n      for (var k = 0; k <= valueMax; k++)\n      {\n        value[k] = attribute.parse( value[k] );\n      }\n\n      if ( !isArray( delta ) )\n      {\n        delta = [];\n\n        for (var i = 0; i <= valueMax; i++)\n        {\n          delta[i] = i / valueMax;\n        }\n      }\n\n      var path      = new PathDelta( attr, attribute.calculator, value, delta );\n      var event     = helper.parseEvent( attr, path, this, true );\n\n      event.mergeId = mergeId;\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'final' animation type.\n *\n * @class BuilderFinal\n * @constructor\n * @extends Builder\n */\nfunction BuilderFinal()\n{\n\n}\n\nClass.extend( BuilderFinal, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays and durations\n\n    var factory = $factory( animation.factory );\n    var values = animation.final;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = $delay( helper.parseDelay( attr ) );\n      var duration   = $duration( helper.parseDuration( attr ) );\n      var event      = new Oncer( attr, value, delay + duration, false, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay ) +\n              helper.mergeDuration( attr, e.duration );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'initial' animation type.\n *\n * @class BuilderInitial\n * @constructor\n * @extends Builder\n */\nfunction BuilderInitial()\n{\n\n}\n\nClass.extend( BuilderInitial, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays & scales\n\n    var factory    = $factory( animation.factory );\n    var values     = animation.initial;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = helper.parseDelay( attr );\n      var oncer      = new Oncer( attr, value, delay, true, this, null, animation );\n\n      attrimatorMap.put( attr, oncer );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'keyframe' animation type.\n *\n * @class BuilderKeyframe\n * @constructor\n * @extends Builder\n */\nfunction BuilderKeyframe()\n{\n\n}\n\nClass.extend( BuilderKeyframe, Builder,\n{\n  aliases: {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  },\n\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Normalize keys by converting aliases to the actual value\n    // 2. Split up keys that have commas into multiple entries\n    // 3. Validate keys and remove invalid ones - also calculate max key value\n    // 4. Sort frames by the key\n    // 5. Expand frames to generate delta arrays, value arrays, and easing arrays\n    // 6. Generate the attrimators\n\n    var factory = $factory( animation.factory );\n    var kframes = animation.keyframe;\n    var easings = animation.easings || {};\n    var teasing = $easing( coalesce( options.teasing, Defaults.teasing ) );\n\n    var sort = false;\n\n    // split up comma delimited times\n    for (var time in kframes)\n    {\n      if ( time in this.aliases )\n      {\n        kframes[ this.aliases[time] ] = kframes[ time ];\n\n        delete kframes[ time ];\n      }\n      else if ( time.indexOf(',') !== -1 )\n      {\n        var times = time.split(',');\n\n        for (var i = 0; i < times.length; i++)\n        {\n          kframes[times[i]] = kframes[time];\n        }\n\n        delete kframes[time];\n\n        sort = true;\n      }\n    }\n\n    var times = [];\n\n    // validate times\n    var lastTime = 0.0;\n    var maxTime = 0.0;\n\n    for (var time in kframes)\n    {\n      var t = parseFloat(time);\n\n      if (isNaN(t))\n      {\n        delete kframes[time];\n      }\n      else\n      {\n        if (t < lastTime)\n        {\n          sort = true;\n        }\n\n        times.push({\n          order: t,\n          key: time,\n          value: kframes[time]\n        });\n\n        lastTime = t;\n\n        maxTime = Math.max( maxTime, t );\n      }\n    }\n\n    // sort if necessary\n    if (sort)\n    {\n      times.sort(function(a, b)\n      {\n        return a.order - b.order;\n      });\n\n      kframes = {};\n\n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i].key] = times[i].value;\n      }\n    }\n\n    // split up into deltas and values\n    var deltas = {};\n    var values = {};\n    var pathEasings = {};\n    var attributes = {};\n\n    for (var i = 0; i < times.length; i++)\n    {\n      var frame = times[i];\n      var easing = coalesce( frame.value.easing, options.easing );\n\n      delete frame.value.easing;\n\n      for (var attr in frame.value)\n      {\n        if ( !(attr in deltas) )\n        {\n          deltas[attr] = [];\n          values[attr] = [];\n          pathEasings[attr] = [];\n          attributes[attr] = factory.attribute( attr );\n        }\n\n        deltas[attr].push( frame.order / maxTime );\n        values[attr].push( attributes[ attr ].parse( frame.value[ attr ] ) );\n        pathEasings[attr].push( $easing( coalesce( easings[ attr ], easing ) ) );\n      }\n    }\n\n    // create events & paths\n    for (var attr in deltas)\n    {\n      var duration    = helper.parseDuration( attr );\n      var delay       = helper.parseDelay( attr );\n      var sleep       = helper.parseSleep( attr );\n      var offset      = helper.parseOffset( attr );\n      var repeat      = helper.parseRepeat( attr );\n      var scale       = helper.parseScale( attr );\n      var scaleBase   = helper.parseScaleBase( attr );\n      var parameters  = helper.parseParameters();\n      var path        = new PathKeyframe( attr, attributes[attr].calculator, values[attr], deltas[attr], pathEasings[attr] );\n      var event       = new Event( attr, path, duration, teasing, delay, sleep, offset, repeat, scale, scaleBase, parameters, true, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'move' animation type.\n *\n * @class BuilderMove\n * @constructor\n * @extends Builder\n */\nfunction BuilderMove()\n{\n\n}\n\nClass.extend( BuilderMove, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var move       = animation.move;\n\n    for (var attr in move)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( move[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, computed.relative( value ) );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'path' animation type.\n *\n * @class BuilderPath\n * @constructor\n * @extends Builder\n */\nfunction BuilderPath()\n{\n\n}\n\nClass.extend( BuilderPath, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory = $factory( animation.factory );\n    var path    = animation.path;\n\n    for (var attr in path)\n    {\n      var attribute  = factory.attribute( attr );\n      var pathDefinition = path[ attr ];\n\n      if ( !( pathDefinition instanceof Path ) )\n      {\n        pathDefinition.name = attr;\n        pathDefinition.calculator = attribute.calculator;\n      }\n\n      var parsedPath = $path( pathDefinition );\n      var event      = helper.parseEvent( attr, parsedPath, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'physics' animation type.\n *\n * @class BuilderPhysics\n * @constructor\n * @extends Builder\n */\nfunction BuilderPhysics()\n{\n\n}\n\nClass.extend( BuilderPhysics, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory );\n    var physics    = animation.physics;\n\n    for (var attr in physics)\n    {\n      var physic    = physics[ attr ];\n\n      var attrimator = new Physics(\n        attr,\n        this,\n        physic.calculator,\n        coalesce( physic.position, true ),\n        physic.velocity,\n        physic.acceleration,\n        physic.terminal,\n        physic.stopAt\n      );\n\n      attrimatorMap.put( attr, attrimator );\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderQueue\n * @constructor\n * @extends Builder\n */\nfunction BuilderQueue()\n{\n\n}\n\nClass.extend( BuilderQueue, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var queue = animation.queue;\n\n    queue.factory = coalesce( queue.factory, animation.factory );\n\n    attrimatorMap.queueMap( $attrimatorsFor( queue, options ) );\n  },\n\n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.queue, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'springs' animation type.\n *\n * @class BuilderSpring\n * @constructor\n * @extends Builder\n */\nfunction BuilderSpring()\n{\n\n}\n\nClass.extend( BuilderSpring, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory );\n    var springs    = animation.springs;\n\n    for (var attr in springs)\n    {\n      var spring     = springs[ attr ];\n\n      if ( !isDefined( spring.attribute ) )\n      {\n        spring.attribute = attr;\n      }\n\n      var parsed = $spring( spring );\n\n      if ( parsed !== false )\n      {\n        parsed.parser = this;\n\n        attrimatorMap.put( attr, parsed );\n      }\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'travel' animation type.\n *\n * @class BuilderTravel\n * @constructor\n * @extends Builder\n */\nfunction BuilderTravel()\n{\n\n}\n\nClass.extend( BuilderTravel, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var travel     = animation.travel;\n\n    for (var attr in travel)\n    {\n      var traveling     = travel[ attr ];\n      var attribute     = factory.attribute( attr );\n      var fromParsed    = attribute.parse( coalesce( traveling.from, true ) );\n      var toParsed      = attribute.parse( coalesce( traveling.to, true ) );\n      var velocity      = $number( traveling.velocity, 0 );\n      var acceleration  = $number( traveling.acceleration, 0 );\n      var terminal      = $number( coalesce( traveling.terminal, traveling.velocity ), Number.POSITIVE_INFINITY );\n      var epsilon       = $number( traveling.epsilon, 0.001 );\n\n      if ( acceleration !== 0 )\n      {\n        acceleration = computed.pointing( acceleration, toParsed, epsilon, true );\n      }\n\n      if ( velocity !== 0 )\n      {\n        velocity = computed.pointing( velocity, toParsed, epsilon, false );\n      }\n\n      var traveler = new Physics(\n        attr,\n        this,\n        attribute.calculator,\n        fromParsed,\n        velocity,\n        acceleration,\n        terminal\n      );\n\n      attrimatorMap.put( attr, traveler );\n    }\n  },\n\n  merge: false\n});\n\n/**\n * The computed function which returns a function which returns a value pointing\n * to a given target given the current position of the animator.\n *\n * @param  {Number}\n * @param  {any}\n * @param  {Number}\n * @return {Function}\n */\ncomputed('pointing', function(amount, target, epsilon, subtractVelocity)\n{\n  function pointingFunction(attrimator, animator)\n  {\n    var attribute = animator.getAttribute( attrimator.attribute );\n    var calc = attribute.calculator;\n    var targetValue = isComputed( target ) ? target( attrimator, animator ) : target;\n    var temp = calc.create();\n\n    return function()\n    {\n      var position   = attrimator.position;\n      var current    = calc.copy( temp, resolve( targetValue ) );\n      var difference = calc.sub( current, position );\n      var distance   = calc.distance( difference, calc.ZERO );\n\n      if ( distance < epsilon )\n      {\n        attrimator.stopIn( 0 );\n      }\n      else\n      {\n        difference = calc.scale( difference, amount / distance );\n      }\n\n      if ( subtractVelocity )\n      {\n        difference = calc.sub( difference, attrimator.resolveVelocity() );\n      }\n\n      return difference;\n    };\n  }\n\n  return computed( pointingFunction );\n});\n\n\n/**\n * Instantiates a new builder for the 'tweenFrom' animation type.\n *\n * @class BuilderTweenFrom\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenFrom()\n{\n\n}\n\nClass.extend( BuilderTweenFrom, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var tweenFrom  = animation.tweenFrom;\n\n    for (var attr in tweenFrom)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenFrom[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, value, computed.current );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'tweenTo' animation type.\n *\n * @class BuilderTweenTo\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenTo()\n{\n\n}\n\nClass.extend( BuilderTweenTo, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var tweenTo    = animation.tweenTo;\n\n    for (var attr in tweenTo)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenTo[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, value );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new PathDelta.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @class PathDelta\n * @constructor\n * @extends Path\n */\nfunction PathDelta(name, calculator, points, deltas)\n{\n  this.name = name;\n  this.set( calculator, points, deltas );\n}\n\nClass.extend( PathDelta, Path,\n{\n  set: function(calculator, points, deltas)\n  {\n    this.reset( calculator, points );\n    this.deltas = deltas;\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n\n    return this.calculator.interpolate( out, p0, p1, pd );\n  },\n\n  copy: function()\n  {\n    return new PathDelta( this.name, this.calculator, copy(this.points), copy(this.deltas) );\n  }\n});\n\n\n/**\n * Instantiates a new PathParametric.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @param {Array} matrix\n * @param {Number} weight\n * @class PathParametric\n * @constructor\n * @extends Path\n */\nfunction PathParametric(name, calculator, points, loop, matrix, weight, invert)\n{\n  this.name = name;\n  this.set( calculator, points, loop, matrix, weight, invert );\n}\n\nClass.extend( PathParametric, Path,\n{\n  set: function(calculator, points, loop, matrix, weight, invert)\n  {\n    this.reset( calculator, points );\n    this.loop = loop;\n    this.matrix = matrix;\n    this.weight = weight;\n    this.invert = invert;\n    this.temp = calculator.create();\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var temp = this.temp;\n    var matrix = this.matrix;\n    var n = this.points.length - 1;\n    var a = delta * n;\n    var i = clamp( Math.floor( a ), 0, n - 1 );\n    var d = a - i;\n\n    var p0 = this.resolvePoint( i - 1 );\n    var p1 = this.resolvePoint( i );\n    var p2 = this.resolvePoint( i + 1 );\n    var p3 = this.resolvePoint( i + 2 );\n\n    var d0, d1, d2, d3;\n    if (this.invert) {\n      d3 = 1;\n      d2 = d;\n      d1 = d * d2;\n      d0 = d * d1;\n    } else {\n      d0 = 1;\n      d1 = d;\n      d2 = d * d1;\n      d3 = d * d2;\n    }\n\n    out = calc.zero( out );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[0][0] );\n    temp = calc.adds( temp, p1, matrix[0][1] );\n    temp = calc.adds( temp, p2, matrix[0][2] );\n    temp = calc.adds( temp, p3, matrix[0][3] );\n    out = calc.adds( out, temp, d0 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[1][0] );\n    temp = calc.adds( temp, p1, matrix[1][1] );\n    temp = calc.adds( temp, p2, matrix[1][2] );\n    temp = calc.adds( temp, p3, matrix[1][3] );\n    out = calc.adds( out, temp, d1 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[2][0] );\n    temp = calc.adds( temp, p1, matrix[2][1] );\n    temp = calc.adds( temp, p2, matrix[2][2] );\n    temp = calc.adds( temp, p3, matrix[2][3] );\n    out = calc.adds( out, temp, d2 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[3][0] );\n    temp = calc.adds( temp, p1, matrix[3][1] );\n    temp = calc.adds( temp, p2, matrix[3][2] );\n    temp = calc.adds( temp, p3, matrix[3][3] );\n    out = calc.adds( out, temp, d3 );\n\n    out = calc.scale( out, this.weight );\n\n    return out;\n  },\n\n  resolvePoint: function(i)\n  {\n    var points = this.points;\n    var n = points.length;\n    var k = (this.loops ? (i + n) % n : clamp( i, 0, n - 1 ));\n\n    return resolve( points[ k ] );\n  },\n\n  copy: function()\n  {\n    return new PathParametric( this.name, this.calculator, copy(this.points), this.loop, this.matrix, this.weight );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathBasisSpline.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathBasisSpline\n * @constructor\n * @extends PathParametric\n */\nfunction PathBasisSpline(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathBasisSpline, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathBasisSpline.MATRIX, PathBasisSpline.WEIGHT, true );\n  },\n\n  copy: function()\n  {\n    return new PathBasisSpline( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                                 [-1, 3,-3, 1]   [p-1]\n * f(t) = [t^3, t^2, t, 1] * 1/6 * [ 3,-6, 3, 0] * [ p ]\n *                                 [-3, 0, 3, 0]   [p+1]\n *                                 [ 1, 4, 1, 0]   [p+2]\n */\n\nPathBasisSpline.WEIGHT = 1.0 / 6.0;\nPathBasisSpline.MATRIX = [\n  [-1, 3,-3, 1],\n  [ 3,-6, 3, 0],\n  [-3, 0, 3, 0],\n  [ 1, 4, 1, 0]\n];\n\n\n/**\n * Instantiates a new PathBezier.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathBezier\n * @constructor\n * @extends Path\n */\nfunction PathBezier(name, calculator, points, weights)\n{\n  this.name = name;\n  this.set( calculator, points, weights );\n}\n\nClass.extend( PathBezier, Path,\n{\n  set: function(calculator, points, weights)\n  {\n    this.reset( calculator, points );\n    this.weights = weights || PathBezier.computeWeights( points.length );\n    this.inverses = new Array( points.length );\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var inverses = this.inverses;\n    var weights = this.weights;\n    var n = this.points.length;\n    var x = 1;\n\n    inverses[n - 1] = 1;\n\n    for (var i = n - 2; i >= 0; i--)\n    {\n      inverses[i] = inverses[i + 1] * (1 - delta);\n    }\n\n    out = calc.zero( out );\n\n    for (var i = 0; i < n; i++)\n    {\n      out = calc.adds( out, this.resolvePoint( i ), weights[ i ] * inverses[ i ] * x );\n\n      x *= delta;\n    }\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathBezier( this.name, this.calculator, copy(this.points), this.weights );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\nPathBezier.computeWeights = function(n)\n{\n  var w = new Array( n-- );\n\n  for (var i = 0; i <= n; i++)\n  {\n    w[ i ] = choose( n, i );\n  }\n\n  return w;\n};\n\n\n/**\n * Instantiates a new PathCatmullRom.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathCatmullRom\n * @constructor\n * @extends PathParametric\n */\nfunction PathCatmullRom(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathCatmullRom, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathCatmullRom.MATRIX, PathCatmullRom.WEIGHT, false );\n  },\n\n  copy: function()\n  {\n    return new PathCatmullRom( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                                 [-1, 3,-3, 1]   [p-1]\n * f(t) = [1, t, t^2, t^3] * 1/2 * [ 3,-6, 3, 0] * [ p ]\n *                                 [-3, 0, 3, 0]   [p+1]\n *                                 [ 1, 4, 1, 0]   [p+2]\n */\n\nPathCatmullRom.WEIGHT = 0.5;\nPathCatmullRom.MATRIX = [\n  [ 0, 2, 0, 0],\n\t[-1, 0, 1, 0],\n\t[ 2,-5, 4,-1],\n\t[-1, 3,-3, 1]\n];\n\n\n/**\n * Instantiates a new PathCombo.\n *\n * @param {String|false} name\n * @param {Path[]} paths\n * @param {Boolean} [uniform]\n * @param {Number} [granularity]\n * @class PathCombo\n * @constructor\n * @extends Path\n */\nfunction PathCombo(name, paths, uniform, granularity)\n{\n  this.name = name;\n  this.set( paths, uniform, granularity );\n}\n\nClass.extend( PathCombo, Path,\n{\n  set: function(paths, uniform, granularity)\n  {\n    var pathCount = paths.length;\n    var calc = paths[0].calculator;\n    var points = [];\n    var deltas = [];\n    var linear = true;\n    var length = false;\n\n    for (var i = 0; i < pathCount; i++)\n    {\n      points.push.apply( points, paths[ i ].points );\n\n      deltas[ i ] = ( i + 1 ) / pathCount;\n\n      if ( !paths[ i ].isLinear() )\n      {\n        linear = false;\n      }\n    }\n\n    if ( uniform )\n    {\n      var lengthGranularity = coalesce( granularity, Defaults.comboPathUniformGranularity );\n      var lengthTotal = 0;\n      var lengths = [];\n\n      for (var i = 0; i < pathCount; i++)\n      {\n        lengths[ i ] = paths[ i ].length( lengthGranularity );\n        lengthTotal += lengths[ i ];\n      }\n\n      var lengthCurrent = 0;\n\n      for (var i = 0; i < pathCount; i++)\n      {\n        lengthCurrent += lengths[ i ];\n        deltas[ i ] = lengthCurrent / lengthTotal;\n      }\n\n      length = lengthTotal;\n    }\n\n    this.reset( calc, points );\n    this.paths = paths;\n    this.deltas = deltas;\n    this.uniform = uniform;\n    this.granularity = granularity;\n    this.linear = linear;\n    this.cachedLength = length;\n  },\n\n  isLinear: function()\n  {\n    return this.linear;\n  },\n\n  length: function(granularity)\n  {\n    return this.cachedLength !== false ? this.cachedLength : this._length( granularity );\n  },\n\n  compute: function(out, delta)\n  {\n    var paths = this.paths;\n    var deltas = this.deltas;\n    var previousDelta = 0;\n    var i = 0;\n\n    while ( i < paths.length - 1 && deltas[ i ] < delta )\n    {\n      previousDelta = deltas[ i ];\n      i++;\n    }\n\n    var deltaDistance = delta - previousDelta;\n    var deltaGap = deltas[ i ] - previousDelta;\n    var pathDelta = deltaDistance / deltaGap;\n\n    return paths[ i ].compute( out, pathDelta );\n  },\n\n  copy: function()\n  {\n    return new PathCombo( this.name, this.paths, this.uniform, this.granularity );\n  }\n});\n\n\n/**\n * Instantiates a new PathCompiled.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} pointCount\n * @class PathCompiled\n * @constructor\n * @extends Path\n */\nfunction PathCompiled(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathCompiled, Path,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var compiled = PathCompiled.compile( calc, path, pointCount );\n\n    this.reset( calc, compiled );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  compute: function(out, delta)\n  {\n    var n = this.points.length;\n    var a = Math.floor( delta * n );\n    var index = clamp( a, 0, n - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathCompiled( this.name, this, this.points.length );\n  }\n});\n\nPathCompiled.compile = function(calc, path, pointCount)\n{\n  if (path.points.length === pointCount)\n  {\n    return copy( path.points );\n  }\n\n  var points = [];\n\n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n\n  return points;\n};\n\n\n/**\n * Instantiates a new PathCubic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @param {T} p3\n * @class PathCubic\n * @constructor\n * @extends Path\n */\nfunction PathCubic(name, calculator, p0, p1, p2, p3)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2, p3 );\n}\n\nClass.extend( PathCubic, Path,\n{\n  set: function(calculator, p0, p1, p2, p3)\n  {\n    this.reset( calculator, [p0, p1, p2, p3] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var d3 = d1 * d2;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n    var i3 = i1 * i2;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i3 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 3 * i2 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), 3 * i1 * d2 );\n    out = calc.adds( out, this.resolvePoint( 3 ), d3 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathCubic( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathHermite.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} startTangent\n * @param {T} end\n * @param {T} endTangent\n * @class PathHermite\n * @constructor\n * @extends Path\n */\nfunction PathHermite(name, calculator, start, startTangent, end, endTangent)\n{\n  this.name = name;\n  this.set( calculator, start, startTangent, end, endTangent );\n}\n\nClass.extend( PathHermite, Path,\n{\n  set: function(calculator, start, startTangent, end, endTangent)\n  {\n    this.reset( calculator, [start, end] );\n    this.startTangent = startTangent;\n    this.endTangent = endTangent;\n  },\n\n  compute: function(out, d)\n  {\n    var calc = this.calculator;\n    var d2 = d * d;\n    var d3 = d2 * d;\n\n    out = calc.zero( out );\n    out = calc.adds( out, this.resolvePoint( 0 ), 2 * d3 - 3 * d2 + 1 );\n    out = calc.adds( out, this.resolvePoint( 1 ), -2 * d3 + 3 * d2 );\n    out = calc.adds( out, resolve( this.startTangent ), d3 - 2 * d2 + d );\n    out = calc.adds( out, resolve( this.endTangent ), d3 - d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathHermite( this.name, this.calculator, this.points[0], this.startTangent, this.points[1], this.endTangent );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathJump.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathJump\n * @constructor\n * @extends Path\n */\nfunction PathJump(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathJump, Path,\n{\n  set: function(calculator, points)\n  {\n    this.reset( calculator, points );\n  },\n\n  compute: function(out, delta)\n  {\n    var a = Math.floor( delta * this.points.length );\n    var index = Math.min( a, this.points.length - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathJump( this.name, this.calculator, copy(this.points) );\n  }\n});\n\n\n/**\n * Instantiates a new PathKeyframe.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @param {Array} easings\n * @class PathKeyframe\n * @constructor\n * @extends Path\n */\nfunction PathKeyframe(name, calculator, points, deltas, easings)\n{\n  this.name = name;\n  this.set( calculator, points, deltas, easings );\n}\n\nClass.extend( PathKeyframe, Path,\n{\n  set: function(calculator, points, deltas, easings)\n  {\n    this.reset( calculator, points );\n    this.deltas = deltas;\n    this.easings = easings;\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n\n    if ( delta < ds[0] ) {\n      return false;\n    }\n\n    if ( delta > ds[ds.length - 1] ) {\n      return this.points[ds.length - 1];\n    }\n\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n    var ea = this.easings[i];\n\n    return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n  },\n  copy: function()\n  {\n    return new PathKeyframe( this.name, this.calculator, copy(this.points), copy(this.deltas), copy(this.easings) );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathLinear(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathLinear, PathDelta,\n{\n  set: function(calculator, points)\n  {\n    var deltas = PathLinear.getTimes( calculator, points );\n\n    this._set( calculator, points, deltas );\n  },\n\n  copy: function()\n  {\n    return new PathLinear( this.name, this.calculator, copy(this.points) );\n  }\n});\n\nPathLinear.getTimes = function(calc, points)\n{\n  var n = points.length - 1;\n\tvar distances = [];\n\n\tdistances[ 0 ] = 0;\n\n\tfor (var i = 1; i <= n; i++)\n\t{\n\t\tdistances[ i ] = distances[ i - 1 ] + calc.distance( points[ i - 1 ], points[ i ] );\n\t}\n\n\tvar invlength = 1.0 / distances[ n ];\n\n\tfor (var i = 1; i < n; i++)\n\t{\n\t\tdistances[ i ] *= invlength;\n\t}\n\n  distances[ n ] = 1;\n\n\treturn distances;\n};\n\n\n/**\n * Instantiates a new PathQuadratic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @class PathQuadratic\n * @constructor\n * @extends Path\n */\nfunction PathQuadratic(name, calculator, p0, p1, p2)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2 );\n}\n\nClass.extend( PathQuadratic, Path,\n{\n  set: function(calculator, p0, p1, p2)\n  {\n    this.reset( calculator, [p0, p1, p2] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i2 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 2 * i1 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathQuadratic( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathQuadraticCorner.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Number} midpoint\n * @param {Boolean} loop\n * @class PathQuadraticCorner\n * @constructor\n * @extends Path\n */\nfunction PathQuadraticCorner(name, calculator, points, midpoint, loop)\n{\n  this.name = name;\n  this.set( calculator, points, midpoint, loop );\n}\n\nClass.extend( PathQuadraticCorner, Path,\n{\n  set: function(calculator, points, midpoint, loop)\n  {\n    this.reset( calculator, points );\n    this.midpoint = midpoint;\n    this.loop = loop;\n    this.temp0 = calculator.create();\n    this.temp1 = calculator.create();\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var temp0 = this.temp0;\n    var temp1 = this.temp1;\n    var midpoint = this.midpoint;\n    var negmidpoint = 1.0 - midpoint;\n    var halfmidpoint = midpoint * 0.5;\n    var n = this.points.length - (this.loops ? 0 : 1);\n    var a = delta * n;\n    var i = clamp( Math.floor( a ), 0, n - 1 );\n    var d = a - i;\n\n    var p0 = this.resolvePoint( i - 1 );\n    var p1 = this.resolvePoint( i );\n    var p2 = this.resolvePoint( i + 1 );\n    var p3 = this.resolvePoint( i + 2 );\n\n    if ( d < midpoint )\n    {\n      d = (d / midpoint);\n      temp0 = calc.interpolate( temp0, p0, p1, d * halfmidpoint + negmidpoint + halfmidpoint );\n      temp1 = calc.interpolate( temp1, p1, p2, d * halfmidpoint + halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5 + 0.5;\n    }\n    else if ( d > negmidpoint )\n    {\n      d = (d - negmidpoint) / midpoint;\n      temp0 = calc.interpolate( temp0, p1, p2, d * halfmidpoint + negmidpoint );\n      temp1 = calc.interpolate( temp1, p2, p3, d * halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5;\n    }\n\n    out = calc.interpolate( out, p1, p2, d );\n\n    return out;\n  },\n\n  resolvePoint: function(i)\n  {\n    var points = this.points;\n    var n = points.length;\n    var k = (this.loops ? (i + n) % n : clamp( i, 0, n - 1 ));\n\n    return resolve( points[ k ] );\n  },\n\n  copy: function()\n  {\n    return new PathQuadraticCorner( this.name, this.calculator, copy(this.points), this.midpoint, this.loop );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathSub.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} start\n * @param {Number} end\n * @class PathSub\n * @constructor\n * @extends Path\n */\nfunction PathSub(name, path, start, end)\n{\n  this.name = name;\n  this.set( path, start, end );\n}\n\nClass.extend( PathSub, Path,\n{\n  set: function(path, start, end)\n  {\n    this.reset( path.calculator, path.points );\n    this.path = path;\n    this.start = start;\n    this.end = end;\n  },\n\n  compute: function(out, delta)\n  {\n    return this.path.compute( out, (this.end - this.start) * delta + this.start );\n  },\n\n  copy: function()\n  {\n    return new PathSub( this.name, this.path, this.start, this.end );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathUniform(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathUniform, PathDelta,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var points = PathCompiled.compile( calc, path, pointCount );\n    var deltas = PathLinear.getTimes( calc, points );\n\n    this._set( calc, points, deltas );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  copy: function()\n  {\n    return new PathUniform( this.name, this.path, this.pointCount );\n  }\n});\n\n\n/**\n * Instantiates a new Tween.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} end\n * @class Tween\n * @constructor\n * @extends Path\n */\nfunction Tween(name, calculator, start, end)\n{\n  this.name = name;\n  this.set( calculator, start, end );\n}\n\nClass.extend( Tween, Path,\n{\n  set: function(calculator, start, end)\n  {\n    this.reset( calculator, [ start, end ] );\n  },\n\n  compute: function(out, delta)\n  {\n    return this.calculator.interpolate( out, this.resolvePoint( 0 ), this.resolvePoint( 1 ), delta );\n  },\n\n  copy: function()\n  {\n    return new Tween( this.name, this.calculator, this.points[0], this.points[1] );\n  }\n});\n\n\n/**\n * Instantiates a new SpringDistance.\n *\n * @param {String|false} attribute\n * @param {anim8.Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {Number} distance\n * @param {Number} damping\n * @param {Number} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringDistance\n * @constructor\n * @extends Spring\n */\nfunction SpringDistance(attribute, calculator, position, rest, distance, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.distance   = distance;\n  this.damping    = damping;\n  this.stiffness  = stiffness;\n  this.temp       = null;\n}\n\nClass.extend( SpringDistance, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    this.temp = this.calculator.create();\n  },\n\n  clone: function()\n  {\n    return new SpringDistance( this.attribute, this.calculator, this.position, this.rest, this.distance, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // d = DISTANCE( position, rest )\n    // velocity += ((position - rest) / d * stiffness * |distance - d| - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n    var rest = this.resolveRest();\n\n    var d = calc.distance( this.position, rest );\n\n    this.temp = calc.copy( this.temp, this.position );\n    this.temp = calc.sub( this.temp, rest );\n\n    if ( d !== 0 )\n    {\n      this.temp = calc.scale( this.temp, 1.0 / d );\n      this.temp = calc.scale( this.temp, (d - this.distance) * this.stiffness );\n    }\n\n    this.temp = calc.adds( this.temp, this.velocity, -this.damping );\n\n    this.velocity = calc.adds( this.velocity, this.temp, dt );\n  }\n\n});\n\n\n/**\n * Instantiates a new SpringLinear.\n *\n * @param {String|false} attribute\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {T} damping\n * @param {T} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringLinear\n * @constructor\n * @extends Spring\n */\nfunction SpringLinear(attribute, calculator, position, rest, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.damping      = damping;\n  this.stiffness    = stiffness;\n  this.temp0        = null;\n  this.temp1        = null;\n}\n\nClass.extend( SpringLinear, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = this.calculator;\n\n    this.damping      = this.parseValue( animator, this.damping, attribute.defaultValue );\n    this.stiffness    = this.parseValue( animator, this.stiffness, attribute.defaultValue );\n    this.temp0        = calc.create();\n    this.temp1        = calc.create();\n  },\n\n  clone: function()\n  {\n    return new SpringLinear( this.attribute, this.calculator, this.position, this.rest, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.damping ) ||\n           isComputed( this.stiffness );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // velocity += ((stiffness * (position - rest)) - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n\n    this.temp1 = calc.copy( this.temp1, this.damping );\n    this.temp1 = calc.mul( this.temp1, this.velocity );\n\n    this.temp0 = calc.copy( this.temp0, this.position );\n    this.temp0 = calc.sub( this.temp0, this.resolveRest() );\n    this.temp0 = calc.mul( this.temp0, this.stiffness );\n    this.temp0 = calc.sub( this.temp0, this.temp1 );\n\n    this.velocity = calc.adds( this.velocity, this.temp0, dt );\n  }\n\n});\n\n\nvar nextTimeline = (function()\n{\n  var id = 0;\n\n  return function() {\n    return ++id;\n  };\n\n})();\n\nfunction Movie(name)\n{\n  this.name = name;\n  this.currentTime = 0;\n  this.currentTimelines = [];\n  this.sequenceDelay = 0;\n  this.sequenceEasing = Easings.linear;\n  this.introduce = false;\n  this.timelines = new FastMap();\n  this.autoEnd = false;\n}\n\nClass.define( Movie,\n{\n\n  setAutoEnd: function(autoEnd)\n  {\n    this.autoEnd = autoEnd;\n\n    return this;\n  },\n\n  sequence: function(delay, easing)\n  {\n    this.sequenceDelay = $time( delay );\n    this.sequenceEasing = $easing( easing, Easings.linear );\n\n    return this;\n  },\n\n  intro: function(subjects)\n  {\n    this.currentTimelines = this.getTimelines( subjects );\n    this.introduce = true;\n\n    return this;\n  },\n\n  with: function(subjects)\n  {\n    this.currentTimelines = this.getTimelines( subjects );\n\n    return this;\n  },\n\n  add: function(subjects)\n  {\n    var additional = this.getTimelines( subjects );\n\n    this.currentTimelines.push.apply( this.currentTimelines, additional );\n\n    return this;\n  },\n\n  getTimeline: function(animator)\n  {\n    var timelineId = animator.$timelineId;\n    var timeline = this.timelines.get( timelineId );\n\n    if ( !isDefined( timeline ) )\n    {\n      timelineId = nextTimeline();\n      timeline = new MovieTimeline( animator );\n      animator.$timelineId = timelineId;\n\n      this.timelines.put( timelineId, timeline );\n    }\n\n    return timeline;\n  },\n\n  getTimelines: function(subjects)\n  {\n    var animators = [];\n\n    if ( isArray( subjects ) )\n    {\n      for (var i = 0; i < subjects.length; i++)\n      {\n        var animator = anim8( subjects[ i ] );\n\n        if ( animator !== false )\n        {\n          animators.push( this.getTimeline( animator ) );\n        }\n      }\n    }\n    else\n    {\n      var animator = anim8( subjects );\n\n      if ( animator !== false )\n      {\n        animators.push( this.getTimeline( animator ) );\n      }\n    }\n\n    return animators;\n  },\n\n  at: function(time)\n  {\n    var at = $time( time, false );\n\n    if ( at === false )\n    {\n      throw 'Invalid time in Movie.at: ' + time;\n    }\n\n    this.currentTime = at;\n\n    return this;\n  },\n\n  seek: function(time)\n  {\n    var by = $time( time, false );\n\n    if ( by === false )\n    {\n      throw 'Invalid time in Movie.seek: ' + time;\n    }\n\n    return this.at( this.currentTime + by );\n  },\n\n  end: function()\n  {\n    return this.at( this.duration() );\n  },\n\n  play: function(animation, options, all)\n  {\n    var parsed = $animation( animation, options );\n    var intro = this.introduce;\n\n    return this.eachCurrentTimeline(function(timeline, time)\n    {\n      timeline.playAttrimators( parsed.newAttrimators(), all, time, intro );\n    });\n  },\n\n  queue: function(animation, options, all)\n  {\n    var parsed = $animation( animation, options );\n\n    return this.eachCurrentTimeline(function(timeline, time)\n    {\n      timeline.queueAttrimators( parsed.newAttrimators(), all, time );\n    });\n  },\n\n  transition: function(transition, animation, options, all)\n  {\n    var transition = $transition( transition );\n    var parsed = $animation( animation, options );\n\n    return this.eachCurrentTimeline(function(timeline, time)\n    {\n      timeline.transitionAttrimators( parsed.newAttrimators(), all, time, transition );\n    });\n  },\n\n  eachCurrentTimeline: function(onTimeline)\n  {\n    var timelines = this.currentTimelines;\n    var n = timelines.length - 1;\n    var time = this.currentTime;\n\n    if ( this.sequenceDelay > 0 )\n    {\n      var timeGap = n * this.sequenceDelay;\n      var easing = this.sequenceEasing;\n\n      for (var i = 0; i <= n; i++)\n      {\n        onTimeline( timelines[ i ], time + easing( i / n ) * timeGap );\n      }\n    }\n    else\n    {\n      for (var i = 0; i <= n; i++)\n      {\n        onTimeline( timelines[ i ], time );\n      }\n    }\n\n    this.sequenceDelay = 0;\n    this.introduce = false;\n\n    if ( this.autoEnd )\n    {\n      this.end();\n    }\n\n    return this;\n  },\n\n  duration: function()\n  {\n    var timelines = this.timelines.values;\n    var maxTime = 0;\n\n    for (var i = 0; i < timelines.length; i++)\n    {\n      maxTime = Math.max( maxTime, timelines[ i ].attrimators.timeRemaining() );\n    }\n\n    return maxTime;\n  }\n});\n\neventize( Movie.prototype );\n\n\nfunction MoviePlayer(movie)\n{\n  this.speed = 1.0;\n  this.time = 0;\n  this.currentTime = 0;\n  this.playing = false;\n  this.movie = movie;\n  this.duration = movie.duration();\n  this.run = this.runner( movie, this );\n}\n\nClass.define( MoviePlayer,\n{\n  reverse: function()\n  {\n    this.speed = -this.speed;\n\n    return this;\n  },\n  backward: function()\n  {\n    this.speed = -Math.abs( this.speed );\n\n    return this;\n  },\n  forward: function()\n  {\n    this.speed = Math.abs( this.speed );\n\n    return this;\n  },\n  start: function(applyNow, avoidApplyTrigger)\n  {\n    this.time = 0;\n\n    if ( applyNow )\n    {\n      this.apply( this.time, avoidApplyTrigger );\n    }\n\n    return this;\n  },\n  end: function(applyNow, avoidApplyTrigger)\n  {\n    this.time = this.duration;\n\n    if ( applyNow )\n    {\n      this.apply( this.time, avoidApplyTrigger );\n    }\n\n    return this;\n  },\n  play: function()\n  {\n    if ( !this.playing )\n    {\n      this.currentTime = now();\n      this.playing = true;\n\n      requestRun( this.run );\n    }\n\n    return this;\n  },\n  pause: function()\n  {\n    this.playing = false;\n\n    return this;\n  },\n  goto: function(time, applyNow, avoidApplyTrigger)\n  {\n    this.time = $time( time );\n\n    if ( applyNow )\n    {\n      this.apply( this.time, avoidApplyTrigger );\n    }\n\n    return this;\n  },\n  apply: function(applyTime, avoidApplyTrigger)\n  {\n    var time = coalesce( applyTime, this.time );\n    var timelines = this.movie.timelines.values;\n    var active = [];\n\n    for (var i = 0; i < timelines.length; i++)\n    {\n      var timeline = timelines[ i ];\n\n      if ( time >= timeline.start )\n      {\n        active.push( timeline );\n      }\n    }\n\n    for (var i = 0; i < active.length; i++)\n    {\n      active[ i ].preupdate( time );\n    }\n\n    for (var i = 0; i < active.length; i++)\n    {\n      active[ i ].update( time );\n    }\n\n    for (var i = 0; i < active.length; i++)\n    {\n      active[ i ].apply();\n    }\n\n    if ( !avoidApplyTrigger )\n    {\n      this.trigger( 'apply', [this, time] );\n    }\n\n    return this;\n  },\n  evaluatePlaying: function()\n  {\n    if ( this.playing )\n    {\n      if ( this.time < 0 )\n      {\n        this.time = 0;\n        this.playing = false;\n        this.trigger( 'start', [this] );\n      }\n      else if ( this.time > this.duration )\n      {\n        this.time = this.duration;\n        this.playing = false;\n        this.trigger( 'end', [this] );\n      }\n    }\n\n    return this;\n  },\n  runner: function(movie, player)\n  {\n    return function run()\n    {\n      var currentTime = now();\n      var elapsed = currentTime - player.currentTime;\n\n      player.time += elapsed * player.speed;\n      player.currentTime = currentTime;\n      player.apply();\n      player.evaluatePlaying();\n\n      if ( player.playing )\n      {\n        requestRun( player.run );\n      }\n    };\n  }\n});\n\neventize( MoviePlayer.prototype );\n\n\nfunction MovieTimeline(animator)\n{\n  this.animator = animator;\n  this.attrimators = new AttrimatorMap();\n  this.start = 0;\n}\n\nClass.define( MovieTimeline,\n{\n\n  playAttrimators: function(attrimatorMap, all, time, intro)\n  {\n    if ( this.attrimators.size() )\n    {\n      this.attrimators.playMapAt( attrimatorMap, all, time );\n    }\n    else\n    {\n      this.attrimators.putMap( attrimatorMap );\n      this.attrimators.delay( time );\n\n      if ( !intro )\n      {\n        this.start = time;\n      }\n    }\n  },\n\n  queueAttrimators: function(attrimatorMap, all, time)\n  {\n    if ( all )\n    {\n      this.attrimators.stopNotPresentAt( attrimatorMap, time );\n    }\n\n    this.attrimators.queueMap( attrimatorMap );\n  },\n\n  transitionAttrimators: function(attrimatorMap, all, time, transition)\n  {\n    if ( all )\n    {\n      this.attrimators.stopNotPresentAt( attrimatorMap, time + transition.time );\n    }\n\n    this.attrimators.transitionMap(\n      transition,\n      attrimatorMap,\n      function getValue(attr) {\n        var attrimator = this.attrimators.get( attr );\n        var attribute = this.animator.getAttribute( attr );\n\n        return attrimator ? attrimator.valueAtSearch( time, attribute.cloneDefault() ) : undefined;\n      },\n      function getAttribute(attr) {\n        return this.animator.getAttribute( attr );\n      },\n      function placeAttrimator(attrimator) {\n        this.attrimators.playAttrimatorAt( attrimator, time );\n      },\n      function getValueAt(attrimator, relativeTime, out) {\n        return attrimator.valueAtSearch( time + relativeTime, out );\n      },\n      function stopAttrimator(attrimator, relativeTime) {\n        attrimator.stopAt( time + relativeTime );\n      },\n      this\n    );\n  },\n\n  preupdate: function(time)\n  {\n    var animator = this.animator;\n    var attrimators = this.attrimators.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = animator.attrimators.get( attr );\n      var attrimatorAt = attrimator.attrimatorAt( time );\n\n      if ( existing !== attrimatorAt )\n      {\n        if ( attrimatorAt )\n        {\n          animator.placeAttrimator( attrimatorAt );\n        }\n        else\n        {\n          animator.attrimators.remove( attr );\n        }\n      }\n    }\n\n    this.animator.preupdate( time );\n  },\n\n  update: function(time)\n  {\n    var animator = this.animator;\n    var attrimators = this.attrimators.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calculator = attribute.calculator;\n      var currentValue = animator.frame[ attr ];\n\n      if ( calculator.isValid( currentValue ) )\n      {\n        var valueAt = attrimator.valueAtSearch( time, currentValue );\n\n        if ( valueAt !== false )\n        {\n          animator.frame[ attr ] = valueAt;\n          animator.updated[ attr ] = true;\n        }\n      }\n    }\n  },\n\n  apply: function()\n  {\n    this.animator.apply();\n  }\n\n});\n\n\nvar Builders = {};\n\n/**\n * Register the builder.\n */\nBuilders['values'] = new BuilderDeltas();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      and: {\n *       ... more builders ...\n *      }\n *     });\n *\n *\n * @property {BuilderAnd} and\n * @for anim8.builder\n */\nBuilders['and'] = new BuilderAnd();\n\n/**\n * Register the builder.\n */\nBuilders['final'] = new BuilderFinal();\n\n\n/**\n * Register the builder.\n */\nBuilders['initial'] = new BuilderInitial();\n\n/**\n * Registers the builder.\n */\nBuilders['keyframe'] = new BuilderKeyframe();\n\n/**\n * Register the builder.\n */\nBuilders['move'] = new BuilderMove();\n\n/**\n * A builder which generates attrimators which follow a given path.\n *\n * **Examples:**\n *\n *     animator.play({\n *      path: {\n *       opacity: {\n *        type: 'quadratic',\n *        p0: 0,\n *        p1: 0.4,\n *        p2: 1.0\n *       }\n *      }\n *     });\n *\n *\n * @property {BuilderPath} path\n * @for anim8.builder\n */\nBuilders['path'] = new BuilderPath();\n\n/**\n * Register the builder.\n */\nBuilders['physics'] = new BuilderPhysics();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      queue: {\n *       ... more builders to play after the others ...\n *      }\n *     });\n *\n *\n * @property {BuilderQueue} queue\n * @for anim8.builder\n */\nBuilders['queue'] = new BuilderQueue();\n\n/**\n * Register the builder.\n */\nBuilders['springs'] = new BuilderSpring();\n\n/**\n * Register the builder.\n */\nBuilders['travel'] = new BuilderTravel();\n\n/**\n * Register the builder.\n */\nBuilders['tweenFrom'] = new BuilderTweenFrom();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      tweenTo: {\n *       opacity: 1.0,       // absolute value\n *       left: '+40'         // 40 more units from current value\n *      }\n *     });\n *\n *\n * @property {BuilderTweenTo} tweenTo\n * @for anim8.builder\n */\nBuilders['tweenTo'] = new BuilderTweenTo();\n\n\n/**\n * A collection of calculators. A calculator is responsible for performing\n * mathematical operations for a specific animatable data type.\n *\n * @class anim8.calculator\n */\nvar Calculators = {};\n\n/**\n * A calculator for numbers.\n *\n * @property {CalculatorNumber} number\n * @for anim8.Calculators\n */\nCalculators['number'] = new CalculatorNumber();\n\n/**\n * A calculator for 2d points; objects with x & y Number components.\n *\n * @property {Calculator2d} 2d\n * @for anim8.Calculators\n */\nCalculators['2d'] = new Calculator2d();\n\n/**\n * A calculator for 3d points; objects with x, y, & z Number components.\n *\n * @property {Calculator3d} 3d\n * @for anim8.Calculators\n */\nCalculators['3d'] = new Calculator3d();\n\n/**\n * A calculator for quaternions; objects with x, y, z, & angle Number components.\n *\n * @property {CalculatorQuaternion} quaternion\n * @for anim8.Calculators\n */\nCalculators['quaternion'] = new CalculatorQuaternion();\n\n/**\n * A calculator for opaque colors; objects with r, g, & b Number components.\n *\n * @property {CalculatorRGB} rgb\n * @for anim8.Calculators\n */\nCalculators['rgb'] = new CalculatorRGB();\n\n/**\n * A calculator for colors; objects with r, g, b, & a Number components.\n *\n * @property {CalculatorRGBA} rgba\n * @for anim8.Calculators\n */\nCalculators['rgba'] = new CalculatorRGBA();\n\n/**\n * A calculator for strings.\n *\n * @property {CalculatorString} string\n * @for anim8.Calculators\n */\nCalculators['string'] = new CalculatorString();\n\n/**\n * The default calculator.\n *\n * @property {CalculatorNumber} default\n * @for anim8.Calculators\n */\nCalculators['default'] = Calculators['number'];\n\n\nvar Factories = {};\n\n/**\n * Registers the object factory.\n */\nFactories['object'] = new FactoryObject();\n\n/**\n * Registers the default factory.\n */\nFactories['default'] = Factories['object'];\n\n\nvar Paths = {};\n\n/**\n * Parses an object for a combo path.\n *\n * @param {Object} path\n * @return {PathCombo}\n */\nPaths['combo'] = function(path)\n{\n  var paths = path.paths;\n\n  for (var i = 0; i < paths.length; i++)\n  {\n    paths[ i ] = $path( paths[ i ] );\n  }\n\n  return new PathCombo(\n    path.name,\n    paths,\n    path.uniform,\n    path.granularity\n  );\n};\n\n\n/**\n * Parses an object for a compiled path.\n *\n * @param {Object} path\n * @return {PathCompiled}\n */\nPaths['compiled'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathCompiled(\n    path.name,\n    parent,\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a cubic path.\n *\n * @param {Object} path\n * @return {PathCubic}\n */\nPaths['cubic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathCubic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue ),\n    calc.parse( path.p3, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a delta path.\n *\n * @param {Object} path\n * @return {PathDelta}\n */\nPaths['delta'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  return new PathDelta(\n    path.name,\n    calc,\n    calc.parseArry( path.points, path.points, path.defaultValue ),\n    path.deltas\n  );\n};\n\n/**\n * Parses an object for a jump path.\n *\n * @param {Object} path\n * @return {PathJump}\n */\nPaths['jump'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathJump(\n    path.name,\n    calc,\n    calc.parseArry( path.points, path.points, path.defaultValue )\n  );\n};\n\n/**\n * Parses an object for a keyframe path.\n *\n * @param {Object} path\n * @return {PathKeyframe}\n */\nPaths['keyframe'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  var defaultEasing = $easing( path.easings, null );\n\n  if ( !isDefined( path.easings ) || !isArray( path.easings ) || defaultEasing !== null )\n  {\n    path.easings = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.easings[ i ] = defaultEasing;\n    }\n  }\n\n  for (var i = 0; i < path.easings.length; i++)\n  {\n    path.easings[ i ] = $easing( path.easings[ i ] );\n  }\n\n  return new PathKeyframe(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.deltas,\n    path.easings\n  );\n};\n\n\n/**\n * Parses an object for a quadratic path.\n *\n * @param {Object} path\n * @return {PathQuadratic}\n */\nPaths['quadratic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathQuadratic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a tween path.\n *\n * @param {Object} path\n * @return {Tween}\n */\nPaths['tween'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new Tween(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.end, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a sub path.\n *\n * @param {Object} path\n * @return {PathSub}\n */\nPaths['sub'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathSub(\n    path.name,\n    parent,\n    coalesce( path.start, 0 ),\n    coalesce( path.end, 1 )\n  );\n};\n\n/**\n * Parses an object for a quadratic corner path.\n *\n * @param {Object} path\n * @return {PathQuadraticCorner}\n */\nPaths['quadratic-corner'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathQuadraticCorner(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.midpoint,\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a linear path.\n *\n * @param {Object} path\n * @return {PathLinear}\n */\nPaths['linear'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathLinear(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue )\n  );\n};\n\n\n/**\n * Parses an object for a uniform path.\n *\n * @param {Object} path\n * @return {PathUniform}\n */\nPaths['uniform'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathUniform(\n    path.name,\n    parent,\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a hermite path.\n *\n * @param {Object} path\n * @return {PathHermite}\n */\nPaths['hermite'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathHermite(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.startTangent, defaultValue ),\n    calc.parse( path.end, defaultValue ),\n    calc.parse( path.endTangent, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a bezier path.\n *\n * @param {Object} path\n * @return {PathBezier}\n */\nPaths['bezier'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathBezier(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.weights\n  );\n};\n\n/**\n * Parses an object for a parametric cubic curve path.\n *\n * @param {Object} path\n * @return {PathParametric}\n */\nPaths['parametric'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathParametric(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop,\n    path.matrix,\n    path.weight\n  );\n};\n\n/**\n * Parses an object for a parametric cubic curve path.\n *\n * @param {Object} path\n * @return {PathParametric}\n */\nPaths['catmull-rom'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathCatmullRom(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a basis spline path.\n *\n * @param {Object} path\n * @return {PathBasisSpline}\n */\nPaths['basis-spline'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathBasisSpline(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n\nvar Springs = {};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringDistance}\n */\nSprings['distance'] = function(spring)\n{\n  return new SpringDistance(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.distance,\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringLinear}\n */\nSprings['linear'] = function(spring)\n{\n  return new SpringLinear(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n\n/**\n * Returns an instance of {{#crossLink \"Animation\"}}{{/crossLink}} based on the\n * given input & options. If the input is a string the animation with that name\n * is returned. If the input is a string with an animation name and an option\n * string the animation with the given name modified by any additional options\n * is returned. Commas can be used to queue animation & option pairs one after\n * another. Ampersands can be used to play animations at the same time. If the\n * input is an object an anonymous animation is created. If no animation could\n * be determined then false is returned.\n *\n * **Examples:**\n *\n *     animation('wiggle');\n *     animation('wiggle ~1s 4s z40ms x5 !1.2');\n *     animation('wiggle', {...options...});\n *     animation('wiggle, tada ~50ms, fadeOut 2s');\n *     animation('wiggle & tada !3, fadeOut');\n *     animation({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method animation\n * @for Core\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n * @param {Boolean} [cache=false]\n * @return {Animation|False}\n * @throws {String} The animation string has an invalid animation name or the\n *    animation fails to create attrimators from the animation definition.\n */\nfunction $animation(animation, options, cache)\n{\n  var options = $options( options, cache );\n  var hasOptions = !isEmpty( options );\n\n  if ( animation instanceof Animation )\n  {\n    if ( hasOptions )\n    {\n      var attrimators = animation.newAttrimators();\n\n      animation.merge( options, attrimators );\n\n      return new Animation( false, animation.input, options, attrimators);\n    }\n\n    return animation;\n  }\n  if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    var attrimators = $attrimatorsFor( animation, options, cache );\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    return new Animation( false, {}, options, attrimators );\n  }\n  if ( isObject( animation ) )\n  {\n    var attrimators = $attrimatorsFor( animation, options, cache );\n\n    return new Animation( false, animation, options, attrimators );\n  }\n\n  return false;\n}\n\n\n\n/**\n * Generates an AttrimatorMap for the given animation and options. If the\n * animation given is an instance of {{#crossLink \"Animation\"}}{{/crossLink}}\n * then a copy of that animations attrimators is returned, and if options are\n * specified then they are merged into the generated attrimators. If the\n * animation given is an object it's properties are iterated and for each builder\n * with a matching name attrimators are generated. If the animation given is a\n * string of a cached or saved animation then it's handled as if an instance of\n * {{#crossLink \"Animation\"}}{{/crossLink}} was given. If the animation given\n * is a string which isn't saved or cached it goes through the following parsing\n * logic.\n *\n * - Split up the string into sections with `,` which queues animations.\n * - Split up each of the sections with `&` which enables animations to play\n *   simultaneously.\n * - For each of those sections, take the first word as the name of the\n *   animation and any remaining text as the options for that animation.\n *\n * If no attrimators could be parsed, an empty attrimator map is returned. If\n * the animation given is a string that specifies animations that don't exist\n * an error is thrown.\n *\n * **Examples:**\n *\n *     anim8.attrimatorsFor('wiggle');\n *     anim8.attrimatorsFor('wiggle ~1s 4s z40ms x5 !1.2');\n *     anim8.attrimatorsFor('wiggle', {...options...});\n *     anim8.attrimatorsFor('wiggle, tada ~50ms, fadeOut 2s');\n *     anim8.attrimatorsFor('wiggle & tada !3, fadeOut');\n *     anim8.attrimatorsFor({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method anim8.attrimatorsFor\n * @for Core\n * @param {Object|String} animation\n * @param {Object|String} [options]\n * @param {Boolean} [cache=false]\n * @return {AttrimatorMap}\n */\nfunction $attrimatorsFor( animation, options, cache )\n{\n  var parsedOptions = $options( options, cache );\n  var hasOptions = !isEmpty( parsedOptions );\n  var attrimators = new AttrimatorMap();\n\n  if ( animation instanceof Animation )\n  {\n    attrimators.putMap( animation.newAttrimators() );\n\n    if ( hasOptions )\n    {\n      animation.merge( parsedOptions, attrimators );\n    }\n  }\n  else if ( isObject( animation ) )\n  {\n    var helper = new BuilderHelper( animation, parsedOptions );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false )\n      {\n        builder.parse( animation, parsedOptions, attrimators, helper );\n      }\n    }\n  }\n  else if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n    var saved = Animations[ key ];\n    var cacheIt = coalesce( cache, Defaults.cache );\n\n    if ( saved )\n    {\n      attrimators.putMap( saved.newAttrimators() );\n\n      if ( hasOptions )\n      {\n        saved.merge( parsedOptions, attrimators );\n      }\n    }\n    else\n    {\n      var animationsQueued = animation.split( ',' );\n\n      for (var k = 0; k < animationsQueued.length; k++)\n      {\n        var animationsMerged = animationsQueued[ k ].split( '&' );\n        var base = new AttrimatorMap();\n\n        for (var j = 0; j < animationsMerged.length; j++)\n        {\n          var animationString = trim( animationsMerged[ j ].toLowerCase() );\n          var animationSplit = animationString.split( ' ' );\n          var parsedAnimation = Animations[ animationSplit[ 0 ] ];\n\n          if ( parsedAnimation )\n          {\n            var additionalOptions = $options( animationSplit.slice( 1 ), cache );\n            var hasAdditionalOptions = !isEmpty( additionalOptions );\n            var parsedAttrimators = parsedAnimation.newAttrimators();\n\n            if ( hasOptions && hasAdditionalOptions )\n            {\n              parsedAnimation.merge( extend( {}, parsedOptions, additionalOptions ), parsedAttrimators );\n            }\n            else if ( hasAdditionalOptions )\n            {\n              parsedAnimation.merge( additionalOptions, parsedAttrimators );\n            }\n            else if ( hasOptions )\n            {\n              parsedAnimation.merge( parsedOptions, parsedAttrimators );\n            }\n\n            base.putMap( parsedAttrimators );\n          }\n          else\n          {\n            throw animationString + ' is not a valid animation in \"' + animationsQueued[ k ] + '\"';\n          }\n        }\n\n        attrimators.queueMap( base );\n      }\n\n      if ( cacheIt && !hasOptions )\n      {\n        Animations[ key ] = new Animation( animation, {}, {}, attrimators );\n      }\n    }\n  }\n\n  return attrimators;\n}\n\n\n/**\n * A collection of {{#crossLink \"Builder\"}}builders{{/crossLink}} which takes\n * animation definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generates {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class anim8.builder\n */\n\n/**\n * Returns a builder based on the input. If the input is an instance of Builder\n * it's returned immediately. If the input is a string the builder with that name\n * is returned. If no builder could be determined then false is returned.\n *\n * **See:** {{#crossLink \"anim8.builder\"}}{{/crossLink}}\n *\n * @method anim8.builder\n * @for Core\n * @param {Builder|String} builderInput\n * @return {Builder|false}\n */\nfunction $builder(builderInput)\n{\n  if ( builderInput instanceof Builder )\n  {\n    return builderInput;\n  }\n  if ( isString( builderInput ) && builderInput in Builders )\n  {\n    return Builders[ builderInput ];\n  }\n\n  return false;\n}\n\n\n/**\n* Returns a calculator based on the input. If the input is an instance of\n* {{#crossLink \"Calculator\"}}{{/crossLink}} it is immediately returned. If the\n* input is a string the calculator with that name is returned. If no calculator\n* could be determined the default calculator is returned.\n*\n* @method anim8.calculator\n* @for Core\n* @param {Calculator|String} calculatorInput\n* @return {Calculator}\n*/\nfunction $calculator(calculatorInput)\n{\n if ( calculatorInput instanceof Calculator )\n {\n   return calculatorInput;\n }\n if ( isString( calculatorInput ) && calculatorInput in Calculators )\n {\n   return Calculators[ calculatorInput ];\n }\n\n return Calculators['default'];\n}\n\n\n\n/**\n * Parses delay from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/delay:property\"}}anim8.defaults.delay{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.delay\n * @param {String|Number} time\n */\nfunction $delay(time)\n{\n  return $time( time, Defaults.delay );\n}\n\n\n/**\n * Parses duration from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/duration:property\"}}anim8.defaults.duration{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.duration\n * @param {String|Number} time\n */\nfunction $duration(time)\n{\n  return $time( time, Defaults.duration );\n}\n\n\n/**\n * Returns an easing based on the given input. If the input is a function it's\n * assumed to be an easing function and is returned immediately. If the input is\n * a string the easing with that name is returned. If the input is a string in\n * the format 'easing-easingType' then an easing is returned that is a\n * combination of the easing with the given name and the easingType with the\n * given name. If the given input is an array with 4 elements it's assumed to be\n * a bezier path and one is created and returned. If no input is given the\n * default easing is returned. If an easing cannot be determined then an error\n * is thrown.\n *\n * **Examples:**\n *\n *     anim8.easing();               // anim8.defaults.easing\n *     anim8.easing( 'linear' );     // anim8.easing.linear\n *     anim8.easing( 'reverse' );    // anim8.easingType.reverse( anim8.defaults.easing )\n *     anim8.easing( 'ease-yoyo' );  // anim8.easingType.yoyo( anim8.easing.ease )\n *     anim8.easing( [0,0,1,1] );    // anim8.easing.bezier( 0, 0, 1, 1 )\n *     anim8.easing( 5, false );     // false\n *     anim8.easing( 'invalid', 1 ); // 1\n *     anim8.easing( [0,0,1], 1 );   // 1\n *\n * @method anim8.easing\n * @for Core\n * @param {Function|String|Array} easing\n * @param {E} [returnOnInvalid]\n * @return {Function|E}\n */\nfunction $easing(easing, returnOnInvalid)\n{\n  if ( isFunction( easing ) )\n  {\n    return easing;\n  }\n  if ( isString( easing ) )\n  {\n    if ( easing in Easings )\n    {\n      return Easings[ easing ];\n    }\n    if ( easing in EasingTypes )\n    {\n      return EasingTypes[ easing ]( $easing( Defaults.easing ) );\n    }\n\n    if ( easing.indexOf('-') !== -1 )\n    {\n      var pair = easing.split('-');\n      var e = pair[0];\n      var t = pair[1];\n\n      if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n      {\n        return EasingTypes[ t ]( Easings[ e ] );\n      }\n    }\n  }\n  if ( isArray( easing ) && easing.length === 4 && isNumber( easing[0] ) && isNumber( easing[1] ) && isNumber( easing[2] ) && isNumber( easing[3] ) )\n  {\n    return Easings.bezier.apply( null, easing );\n  }\n  if ( !isDefined( easing ) )\n  {\n    return $easing( Defaults.easing );\n  }\n\n  if ( isDefined( returnOnInvalid ) )\n  {\n    return returnOnInvalid;\n  }\n\n  throw easing + ' is not a valid easing';\n}\n\n\n/**\n * Returns an easing type based on the input. If the input is a function that\n * function is immediately returned. If the input is a string the easing type\n * with that name is returned. If no easing type could be determined an error is\n * thrown.\n *\n * @param {Function|String} easingType\n * @param [Boolean] optional\n * @return {Function|false}\n */\nfunction $easingType(easingType, optional)\n{\n  if ( isFunction( easingType ) )\n  {\n    return easingType;\n  }\n  if ( isString( easingType ) && easingType in EasingTypes )\n  {\n    return EasingTypes[ easingType ];\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw easingType + ' is not a valid easing type';\n}\n\n\n/**\n * Returns a factory given the input and returns the default if none is found.\n *\n * @method factory\n * @for Core\n * @param {String|Factory} [factory]\n * @return {Factory}\n */\nfunction $factory(factoryInput)\n{\n  if ( factoryInput instanceof Factory )\n  {\n    return factoryInput;\n  }\n  if ( isString( factoryInput ) && factoryInput in Factories )\n  {\n    return Factories[ factoryInput ];\n  }\n\n  return Factories['default'];\n}\n\n\n/**\n * Returns a factory for the given subject and optionally throws an error if no\n * factory exists.\n *\n * @method factoryFor\n * @for Core\n * @param {Any} subject\n * @param {Boolean} [optional]\n * @return {Factory}\n */\nfunction $factoryFor(subject, optional)\n{\n  var highestPriorityFactory = false;\n\n  for (var factoryName in Factories)\n  {\n    var factory = Factories[ factoryName ];\n\n    if ( factory.is( subject ) && (highestPriorityFactory === false || highestPriorityFactory.priority < factory.priority) )\n    {\n      highestPriorityFactory = factory;\n    }\n  }\n\n  if ( highestPriorityFactory )\n  {\n    return highestPriorityFactory;\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw 'No factory exists for subject ' + subject;\n}\n\n\n/**\n * Parses a number from the given input and if the input isn't a valid number\n * then returnOnInvalid is returned.\n *\n * **Examples:**\n *\n *     anim8.number( 5 );       // 5\n *     anim8.number( '5' );     // 5\n *     anim8.number( '5e4' );   // 50000\n *     anim8.number( 'x' );     // undefined\n *     anim8.number( 'x', 23 ); // 23\n *\n * @method anim8.number\n * @param {String|Number} value\n * @param {E} returnOnInvalid\n * @return {Number|E}\n */\nfunction $number(value, returnOnInvalid)\n{\n  var parsed = parseFloat( value );\n\n  return isNaN( parsed ) ? returnOnInvalid : parsed;\n}\n\n\n\n/**\n * Parses offset from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/offset:property\"}}anim8.defaults.offset{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.offset\n * @param {String|Number} time\n */\nfunction $offset(time)\n{\n  return $time( time, Defaults.offset );\n}\n\n\nvar Options = {};\n\n/**\n * Parses a value into an options object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [duration] x[repeat] z[sleep] ~[delay] @[offset] ![scale] [[easing][-easingType]]\n *\n * This is also a registry of options, you can add your own options that\n * can be used later with syntax like:\n *\n *     anim8.options['myOptions'] = anim8.options('1.5s x2 !2');\n *\n * So you can use 'myOptions' as the options input.\n *\n * You can also specify relative values & scaling values. If you have the\n * following options:\n *\n *     +2s x*2 ~-1s\n *\n * It will result in adding 2 seconds to the duration, repeating it twice as\n * much, and subtracting one second from the delay.\n *\n * For more information on acceptable values in options:\n *\n * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.delay:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}, and\n *          {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n *\n * @method anim8.options\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $options(options, cache)\n{\n  var originalInput = options;\n  var cacheIt = coalesce( cache, Defaults.cacheOptions );\n\n  if ( isString( options ) )\n  {\n    if ( options in Options )\n    {\n      return Options[ options ];\n    }\n\n    options = options.toLowerCase().split(/\\s+/);\n  }\n\n  if ( isArray( options ) )\n  {\n    var parsed = {};\n\n    for (var i = 0; i < options.length; i++)\n    {\n      var part = options[i];\n      var first = part.charAt( 0 );\n      var paramSplit = part.indexOf( '=' );\n\n      // Parameters\n      if ( paramSplit !== -1 )\n      {\n        var paramName = part.substring( 0, paramSplit );\n        var paramValue = part.substring( paramSplit + 1 );\n\n        if ( !parsed.parameters )\n        {\n          parsed.parameters = {};\n        }\n\n        parsed.parameters[ paramName ] = paramValue;\n      }\n      // Repeats\n      else if ( first === 'x' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n      }\n      // Sleeping\n      else if ( first === 'z' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'sleep', 'sleepAdd', 'sleepScale' );\n      }\n      // Delay\n      else if ( first === '~' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'delay', 'delayAdd', 'delayScale' );\n      }\n      // Scaling\n      else if ( first === '!' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $number, 'scale', 'scaleAdd', 'scaleScale' );\n      }\n      // Offset\n      else if ( first === '@' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'offset', 'offsetAdd', 'offsetScale' );\n      }\n      else\n      {\n        // Easing?\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          parsed.easing = easing;\n        }\n\n        // Duration?\n        var duration = parseOptionProperty( part, parsed, $time, 'duration', 'durationAdd', 'durationScale' );\n\n        if ( duration === false )\n        {\n          // If not a duration, might be an alternative repeat? (doesn't start with x)\n          parseOptionProperty( part, parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n        }\n      }\n    }\n\n    if ( isString( originalInput ) && cacheIt )\n    {\n      Options[ originalInput ] = parsed;\n    }\n\n    return parsed;\n  }\n\n  if ( isObject( options ) )\n  {\n    return options;\n  }\n\n  return Defaults.noOptions;\n}\n\nfunction parseOptionProperty(input, out, parseFunction, property, propertyAdd, propertyScale)\n{\n  var first = input.charAt( 0 );\n\n  if ( first === '*' )\n  {\n    parsed = $number( input.substring( 1 ), false );\n\n    if ( parsed !== false )\n    {\n      out[ propertyScale ] = parsed;\n    }\n  }\n  else\n  {\n    if ( first === '+' || first === '-' )\n    {\n      property = propertyAdd;\n      input = input.substring( 1 );\n    }\n\n    var parsed = parseFunction( input, false );\n\n    if ( parsed !== false )\n    {\n      out[ property ] = parsed;\n    }\n  }\n\n  return parsed;\n}\n\n\n/**\n * Parses a path given the input and returns an instance of anim8.Path or throws\n * an error if the path could not be parsed. If the input is an object and has\n * a type property with a value that maps to a path type the path's parsing\n * function is invoked with the object.\n *\n * @method anim8.path\n * @for Core\n * @param  {anim8.Path|String|Object} pathInput\n * @return {anim8.Path}\n * @throws {String} If the input is not a valid path.\n */\nfunction $path(pathInput)\n{\n  if ( pathInput instanceof Path )\n  {\n    return pathInput;\n  }\n  if ( isString( pathInput ) && pathInput in Paths )\n  {\n    return Paths[ pathInput ];\n  }\n  if ( isObject( pathInput ) && pathInput.type in Paths )\n  {\n    return Paths[ pathInput.type ]( pathInput );\n  }\n\n  throw pathInput + ' is not a valid path';\n}\n\n\n\n/**\n * Parses repeats from a string or number. If a valid repeat is not given then\n * `returnOnInvalid` is returned, if that is not given then\n * {{#crossLink \"anim8.defaults/repeat:property\"}}anim8.defaults.repeat{{/crossLink}}\n * is returned.\n *\n * **Examples:**\n *\n *     anim8.repeat( 5 );            // 5\n *     anim8.repeat( 'inf' );        // Infinity\n *     anim8.repeat( 'infinity' );   // Infinity\n *     anim8.repeat( 'infinite' );   // Infinity\n *     anim8.repeat( 'once' );       // 1\n *     anim8.repeat( 'twice' );      // 2\n *     anim8.repeat( 'thrice' );     // 3\n *     anim8.repeat( 'dozen' );      // 12\n *     anim8.repeat( 'random' );     // 4\n *     anim8.repeat( 'invalid', 6 ); // 6\n *     anim8.repeat( false, 7 );     // 7\n *     anim8.repeat();               // anim8.defaults.repeat\n *\n * @method anim8.repeat\n * @param {String|Number} time\n * @param {E} [returnOnInvalid]\n * @return {Number|E}\n */\nvar $repeat = (function()\n{\n  var conversions = {\n    inf:        Number.POSITIVE_INFINITY,\n    infinity:   Number.POSITIVE_INFINITY,\n    infinite:   Number.POSITIVE_INFINITY,\n    once:       1,\n    twice:      2,\n    thrice:     3,\n    dozen:      12,\n    random:     4 // chosen by fair dice roll. guaranteed to be random.\n  };\n\n  return function(repeat, returnOnInvalid)\n  {\n    if ( isNumber( repeat ) )\n    {\n      return repeat;\n    }\n    if ( isString( repeat ) )\n    {\n      repeat = repeat.toLowerCase();\n\n      if ( repeat in conversions )\n      {\n        return conversions[ repeat ];\n      }\n      else\n      {\n        var parsed = parseInt( repeat );\n\n        if ( !isNaN(parsed) )\n        {\n          return parsed;\n        }\n      }\n    }\n\n    return coalesce( returnOnInvalid, Defaults.repeat );\n  };\n\n})();\n\n\n/**\n * Parses scale from a string or number.\n *\n * **See:** {{#crossLink \"Core/anim8.number:method\"}}anim8.number{{/crossLink}}\n *\n * @method anim8.scale\n * @param {String|Number} scale\n * @return {Number}\n */\nfunction $scale(scale)\n{\n  return $number( scale, Defaults.scale );\n}\n\n\n\n/**\n * Parses sleep from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/sleep:property\"}}anim8.defaults.sleep{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.sleep\n * @param {String|Number} time\n */\nfunction $sleep(time)\n{\n  return $time( time, Defaults.sleep );\n}\n\n/**\n * Returns a spring if the provided argument is a spring, the name of a spring,\n * or an object with a spring type to be created. If none of these conditions\n * are true then an error is thrown.\n *\n * @method anim8.spring\n * @for Core\n * @param {Spring|String|Object} springInput\n * @return {Spring}\n */\nfunction $spring(springInput)\n{\n  if ( springInput instanceof Spring )\n  {\n    return springInput;\n  }\n  if ( isString( springInput ) && springInput in Springs )\n  {\n    return Springs[ springInput ];\n  }\n  if ( isObject( springInput ) && springInput.type in Springs )\n  {\n    return Springs[ springInput.type ]( springInput );\n  }\n\n  throw springInput + ' is not a valid spring';\n}\n\n\n/**\n * Parses milliseconds from a string or number. If a number is given it's\n * assumed to be milliseconds and is returned immediately. If a string is given\n * a unit is looked for to determine how to scale the number into milliseconds.\n * If the given time is invalid and returnOnInvalid is not given then zero is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.time( 45 );       // 45\n *     anim8.time( 45.9 );     // 45\n *     anim8.time( -4.1 );     // -5\n *     anim8.time( '5ms' );    // 5\n *     anim8.time( '23' );     // 23\n *     anim8.time( '5c' );     // 500\n *     anim8.time( '5cs' );    // 500\n *     anim8.time( '5jiffy' ); // 833\n *     anim8.time( '5third' ); // 833\n *     anim8.time( '10s' );    // 10000\n *     anim8.time( '10sec' );  // 10000\n *     anim8.time( '1.5m' );   // 90000\n *     anim8.time( '1.5min' ); // 90000\n *     anim8.time( '0.4h' );   // 144000\n *     anim8.time( '0.4hr' );  // 144000\n *\n * @method anim8.time\n * @param {String|Number} time\n * @param {Any} [returnOnInvalid]\n */\nvar $time = (function()\n{\n  var regex = /^(-?\\d*(\\.\\d+)|-?\\d+)(ms|s|c|cs|third|jiffy|sec|m|min|h|hr)?$/;\n\n  var conversions = {\n    ms:     1,\n    c:      100,\n    cs:     100,\n    jiffy:  1000 / 60,\n    third:  1000 / 60,\n    s:      1000,\n    sec:    1000,\n    m:      1000 * 60,\n    min:    1000 * 60,\n    h:      1000 * 60 * 60,\n    hr:     1000 * 60 * 60\n  };\n\n  return function(time, returnOnInvalid)\n  {\n    if ( isNumber( time ) )\n    {\n      // raw numbers are considered milliseconds\n      return Math.floor( time );\n    }\n    if ( isString( time ) )\n    {\n      var parsed = regex.exec( time );\n\n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n\n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n\n        return Math.floor( time );\n      }\n    }\n\n    return coalesce( returnOnInvalid, 0 );\n  };\n\n})();\n\n\nvar Transitions = {};\n\n/**\n * Parses a value into a transition object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [time] [easing[-easingType]] >[outro] <[intro] /[granularity] ^[lookup]\n *\n * This is also a registry of transitions, you can add your own transitions that\n * can be used later with syntax like:\n *\n *     anim8.transition['myTransition'] = anim8.transition('50ms 0.05 linear');\n *\n * So you can use 'myTransition' as the transition input.\n *\n *     animator.transition('myTransition', 'myAnimation');\n *\n * @method anim8.transition\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $transition(transition, cache)\n{\n  // 1. If it's a string, convert it into an array.\n  // 2. If it's an array, parse it and convert it into an object.\n  // 3. If it's an object, fill in any missing values with the defaults.\n\n  var originalInput = transition;\n\n  if ( isString( transition ) )\n  {\n    if ( transition in Transitions )\n    {\n      return Transitions[ transition ];\n    }\n\n    transition = transition.toLowerCase().split(/\\s+/);\n  }\n\n  if ( isArray( transition ) )\n  {\n    var transitionArray = transition;\n\n    transition = {};\n\n    for (var i = 0; i < transitionArray.length; i++)\n    {\n      var part = transitionArray[i];\n      var first = part.charAt( 0 );\n\n      // Introduction Time (into next event)\n      if ( first === '<' )\n      {\n        var intro = $time( part.substring(1), false );\n\n        if ( !isNaN( intro ) )\n        {\n          transition.intro = intro;\n        }\n      }\n      // Outroduction Time (out of current event)\n      else if ( first === '>' )\n      {\n        var outro = $time( part.substring(1), false );\n\n        if ( !isNaN( outro ) )\n        {\n          transition.outro = outro;\n        }\n      }\n      // Granularity (for velocity conscious transitions)\n      else if ( first === '/' )\n      {\n        var granularity = $number( part.substring(1), false );\n\n        if ( granularity !== false )\n        {\n          transition.granularity = granularity;\n        }\n      }\n      // Lookup (for velocity conscious transitions)\n      else if ( first === '^' )\n      {\n        var lookup = $time( part.substring(1), false );\n\n        if ( lookup !== false )\n        {\n          transition.lookup = lookup;\n        }\n      }\n      else\n      {\n        // Easing\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          transition.easing = easing;\n        }\n\n        // Time\n        var time = $time( part, false );\n\n        if ( time !== false )\n        {\n          transition.time = time;\n        }\n      }\n    }\n  }\n\n  if ( isObject( transition ) )\n  {\n    transition.time        = $time( transition.time, Defaults.transitionTime );\n    transition.outro       = $time( transition.outro, Defaults.transitionOutro );\n    transition.intro       = $time( transition.intro, Defaults.transitionIntro );\n    transition.easing      = $easing( coalesce( transition.easing, Defaults.transitionEasing ) );\n    transition.granularity = $number( transition.granularity, Defaults.transitionGranularity );\n    transition.lookup      = $time( transition.lookup, Defaults.transitionLookup );\n\n    if ( isString( originalInput ) && coalesce( cache, Defaults.cacheTransitions ) )\n    {\n      Transitions[ originalInput ] = transition;\n    }\n\n    return transition;\n  }\n\n  return Defaults.noTransition;\n}\n\n\n  // Add events to the animation cycle: begin, end, finished, starting\n  eventize( anim8 );\n\n  // anim8.js\n  anim8.anim8s = anim8s;\n  anim8.fn = Animator.prototype;\n  anim8s.fn = Animators.prototype;\n  anim8.isRunning = isRunning;\n  anim8.isLive = isLive;\n  anim8.setLive = setLive;\n  anim8.animating = animating;\n  anim8.requestRun = requestRun;\n  anim8.activateAnimator = activateAnimator;\n  anim8.pushAnimator = pushAnimator;\n  anim8.activate = activate;\n  anim8.run = run;\n  anim8.pause = pause;\n  anim8.resume = resume;\n  anim8.stop = stop;\n  anim8.end = end;\n  anim8.finish = finish;\n  anim8.nopeat = nopeat;\n\n  // Core\n  anim8.noop = noop;\n  anim8.isDefined = isDefined;\n  anim8.isFunction = isFunction;\n  anim8.isNumber = isNumber;\n  anim8.isBoolean = isBoolean;\n  anim8.isString = isString;\n  anim8.isArray = isArray;\n  anim8.isObject = isObject;\n  anim8.isEmpty = isEmpty;\n  anim8.now = now;\n  anim8.trim = trim;\n  anim8.toArray = toArray;\n  anim8.copy = copy;\n  anim8.extend = extend;\n  anim8.coalesce = coalesce;\n  anim8.constant = constant;\n  anim8.resolve = resolve;\n  anim8.id = id;\n  anim8.Class = Class;\n  anim8.Defaults = Defaults;\n\n  // Math\n  anim8.clamp = clamp;\n  anim8.gcd = gcd;\n  anim8.choose = choose;\n\n  // Registries\n  anim8.Animations = Animations;\n  anim8.Calculators = Calculators;\n  anim8.Factories = Factories;\n  anim8.Builders = Builder;\n  anim8.Paths = Paths;\n  anim8.Springs = Springs;\n  anim8.Easings = Easings;\n  anim8.EasingTypes = EasingTypes;\n  anim8.Options = Options;\n  anim8.Transitions = Transitions;\n\n  // Parsing\n  anim8.animation = $animation;\n  anim8.attrimatorsFor = $attrimatorsFor;\n  anim8.calculator = $calculator;\n  anim8.delay = $delay;\n  anim8.duration = $duration;\n  anim8.easing = $easing;\n  anim8.easingType = $easingType;\n  anim8.factory = $factory;\n  anim8.factoryFor = $factoryFor;\n  anim8.number = $number;\n  anim8.offset = $offset;\n  anim8.options = $options;\n  anim8.builder = $builder;\n  anim8.path = $path;\n  anim8.repeat = $repeat;\n  anim8.scale = $scale;\n  anim8.sleep = $sleep;\n  anim8.spring = $spring;\n  anim8.time = $time;\n  anim8.transition = $transition;\n\n  // Modules\n  // - color.js\n  anim8.Color = Color;\n  // - computed.js\n  anim8.computed = computed;\n  anim8.isComputed = isComputed;\n  // - dynamic.js\n  anim8.composite = composite;\n  anim8.partial = partial;\n  anim8.spread = spread;\n  // - eventize.js\n  anim8.eventize = eventize;\n  // - save.js\n  anim8.save = save;\n  anim8.saveGroup = saveGroup;\n  anim8.SaveOptions = SaveOptions;\n  // - translate.js\n  anim8.translate = translate;\n  // - param.js\n  anim8.param = param;\n  anim8.paramFactory = paramFactory;\n  anim8.paramCalculator = paramCalculator;\n  anim8.paramResolve = paramResolve;\n  anim8.Parameters = Parameters;\n\n  // Classes\n  anim8.Aninmation = Animation;\n  anim8.Animator = Animator;\n  anim8.Animators = Animators;\n  anim8.Attrimator = Attrimator;\n  anim8.AttrimatorMap = AttrimatorMap;\n  anim8.Calculator = Calculator;\n  anim8.Defer = Defer;\n  anim8.DeferAnimator = DeferAnimator;\n  anim8.Event = Event;\n  anim8.EventState = EventState;\n  anim8.Factory = Factory;\n  anim8.FastMap = FastMap;\n  anim8.Oncer = Oncer;\n  anim8.Builder = Builder;\n  anim8.Path = Path;\n  anim8.Physics = Physics;\n  anim8.Sequence = Sequence;\n  anim8.Spring = Spring;\n\n  // Movie\n  anim8.Movie = Movie;\n  anim8.MoviePlayer = MoviePlayer;\n  anim8.MovieTimeline = MovieTimeline;\n\n  // Calculators\n  anim8.Calculator2d = Calculator2d;\n  anim8.Calculator3d = Calculator3d;\n  anim8.CalculatorNumber = CalculatorNumber;\n  anim8.CalculatorQuaternion = CalculatorQuaternion;\n  anim8.CalculatorRGB = CalculatorRGB;\n  anim8.CalculatorRGBA = CalculatorRGBA;\n  anim8.CalculatorString = CalculatorString;\n\n  // Factories\n  anim8.object = object;\n  anim8.FactoryObject = FactoryObject;\n\n  // Builders\n  anim8.BuilderAnd = BuilderAnd;\n  anim8.BuilderDeltas = BuilderDeltas;\n  anim8.BuilderFinal = BuilderFinal;\n  anim8.BuilderInitial = BuilderInitial;\n  anim8.BuilderKeyframe = BuilderKeyframe;\n  anim8.BuilderMove = BuilderMove;\n  anim8.BuilderPath = BuilderPath;\n  anim8.BuilderPhysics = BuilderPhysics;\n  anim8.BuilderQueue = BuilderQueue;\n  anim8.BuilderSpring = BuilderSpring;\n  anim8.BuilderTravel = BuilderTravel;\n  anim8.BuilderTweenFrom = BuilderTweenFrom;\n  anim8.BuilderTweenTo = BuilderTweenTo;\n\n  // Paths\n  anim8.PathBasisSpline = PathBasisSpline;\n  anim8.PathBezier = PathBezier;\n  anim8.PathCatmullRom = PathCatmullRom;\n  anim8.PathCombo = PathCombo;\n  anim8.PathCompiled = PathCompiled;\n  anim8.PathCubic = PathCubic;\n  anim8.PathDelta = PathDelta;\n  anim8.PathHermite = PathHermite;\n  anim8.PathJump = PathJump;\n  anim8.PathKeyframe = PathKeyframe;\n  anim8.PathLinear = PathLinear;\n  anim8.PathParametric = PathParametric;\n  anim8.PathQuadratic = PathQuadratic;\n  anim8.PathQuadraticCorner = PathQuadraticCorner;\n  anim8.PathSub = PathSub;\n  anim8.PathUniform = PathUniform;\n  anim8.PathTween = Tween;\n\n  // Springs\n  anim8.SpringDistance = SpringDistance;\n  anim8.SpringLinear = SpringLinear;\n\n  return anim8;\n\n}));\n"],"sourceRoot":"/source/"}