{"version":3,"sources":["anim8js.min.js"],"names":["root","factory","define","amd","module","exports","global","m8","anim8","m8s","anim8s","this","noop","isDefined","x","isFunction","constructor","call","apply","isNumber","isBoolean","isString","isArray","Array","isObject","isEmpty","length","prop","toArray","split","props","push","copy","copied","i","p","extend","out","arguments","o","coalesce","a","b","c","d","constant","variable","resolve","clamp","v","min","max","Animation","name","input","options","attrimators","Animator","e","reset","Animators","$","fill","Attrimator","AttrimatorMap","Builder","BuilderHelper","oldOptions","newOptions","prepareSpecifics","Calculator","Defer","methods","$factory","$push","DeferAnimator","animator","previous","eventType","event","$reset","Event","attribute","path","duration","easing","delay","sleep","offset","repeat","scale","scaleBase","hasInitialState","builder","next","mergeId","$easing","$duration","$sleep","$repeat","$scale","calculator","parse","ZERO","$delay","$offset","Factory","priority","FastMap","map","putMap","put","Movie","events","currentTime","subjects","index","Oncer","value","applied","Path","Physics","position","velocity","acceleration","terminal","stopTime","$number","Number","POSITIVE_INFINITY","$time","finished","Sequence","animators","Spring","subject","$factoryFor","animatorFor","animatorsFor","isRunning","running","isLive","live","setLive","newLive","activateAnimator","pushAnimator","activate","active","animating","trigger","requestRun","run","now","preupdate","update","filter","handleFinished","pause","attributes","resume","stop","end","finish","nopeat","Color","r","g","computed","funcOrName","func","isComputed","delegate","functionName","returning","DelegateTypes","THIS","array","RESULTS","results","FIRST","undefined","TRUE","composite","frame","partial","subattribute","spread","eventize","target","Class","defineProperty","on","once","off","addListener","$this","property","callback","context","removeListeners","listeners","eventListeners","k","splice","deleteProperty","obj","triggerListeners","argument","clear","slice","$on","$once","save","animation","$animation","key","toLowerCase","Animations","Calculator2d","createConstants","Calculator3d","CalculatorNumber","CalculatorQuaternion","CalculatorRGB","CalculatorRGBA","CalculatorString","FactoryObject","BuilderAnd","BuilderDeltas","BuilderFinal","BuilderInitial","BuilderKeyframe","BuilderMove","BuilderPath","BuilderPhysics","BuilderQueue","BuilderSpring","BuilderTravel","BuilderTweenFrom","BuilderTweenTo","PathCombo","paths","uniform","granularity","set","PathCompiled","pointCount","PathCubic","p0","p1","p2","p3","PathDelta","points","deltas","PathHermite","start","startTangent","endTangent","PathJump","PathKeyframe","easings","PathLinear","PathQuadratic","PathQuadraticCorner","midpoint","loop","PathSub","PathUniform","Tween","SpringDistance","rest","distance","damping","stiffness","gravity","finishOnRest","temp","SpringLinear","temp0","temp1","cache","$options","hasOptions","newAttrimators","merge","$attrimatorsFor","parsedOptions","helper","builderName","$builder","saved","cacheIt","Defaults","animationsQueued","animationsMerged","base","j","animationString","trim","animationSplit","parsedAnimation","additionalOptions","hasAdditionalOptions","parsedAttrimators","queueMap","builderInput","Builders","$calculator","calculatorInput","Calculators","time","returnOnInvalid","Easings","EasingTypes","indexOf","pair","t","bezier","$easingType","easingType","optional","factoryInput","Factories","highestPriorityFactory","factoryName","is","parsed","parseFloat","isNaN","originalInput","cacheOptions","Options","part","first","charAt","parseOptionProperty","substring","noOptions","parseFunction","propertyAdd","propertyScale","$path","pathInput","Paths","type","$spring","springInput","Springs","$transition","transition","Transitions","transitionArray","intro","outro","lookup","transitionTime","transitionOutro","transitionIntro","transitionEasing","transitionGranularity","transitionLookup","cacheTransitions","noTransition","superPrefix","construct","parentConstructor","properties","F","prototype","Object","enumerable","configurable","writable","teasing","frameRate","pauseTime","Date","getTime","String","replace","id","_id","clone","attrimatorMap","attrimatorsAdded","updated","cycleCurrent","cycleNext","cycleEnded","newCycle","applyCycle","cycle","applyCurrentCycle","values","attrimator","attr","startCycle","endCurrentCycle","getAttribute","restore","applyInitialState","aa","setDefault","cloneDefault","wasFinished","minCycle","setTime","isFinished","Math","placeAttrimator","existing","get","trimAttrimators","removeAt","deactivate","destroy","spring","play","all","playAttrimators","finishNotPresent","queue","queueAttrimators","transitionAttrimators","current","hasOverlap","curr","calc","valueAt","create","getElapsed","pastLookahead","pastVelocity","sub","pastNegativeVelocity","past","add","outTime","outPoint","outNext","inTime","inPoint","inNext","outVelocity","outPerMillis","inVelocity","inPerMillis","compiled","lastPoint","totalDistance","distances","requiredTime","timeDelta","transitionEvent","stopIn","has","tweenTo","fromOptions","tweenManyTo","targets","tweenFrom","starting","tweenManyFrom","startings","tween","starts","ends","tweenMany","move","amount","relative","moveMany","amounts","ref","request","defaultValue","follow","attrimatorsFor","keys","resulting","remove","unset","timeRemaining","hasAttrimators","size","getSubject","wrapper","invoke","args","defer","onCycleStart","onCycleEnd","at","each","iterator","filterer","alive","getSubjects","reverse","last","mid","floor","e0","e1","sequence","maxRemaining","startTime","elapsed","paused","prestart","prestartNext","overrideNext","totalTime","milliseconds","hasComputed","isInfinite","totalPausedTime","isPaused","getBuilder","parseValue","setGroup","groupId","force","deep","onNewAttribute","hasCallback","unqueueAt","indices","nextCycle","currentDepth","nextDepth","iterate","depth","nextMergeId","mergeAttrimator","mergeEasing","mergeRepeat","mergeDelay","mergeSleep","mergeDuration","mergeOffset","mergeScale","mergeScaleBase","submerge","specifics","parseEasing","parseFirst","parseRepeat","parseNumber","parseDelay","parseSleep","parseDuration","parseOffset","parseScale","parseScaleBase","option","parseEvent","parseOptionFunction","optionAdd","optionScale","baseRaw","mergeFirst","mergeNumber","specific","ONE","INFINITY","adds","mul","interpolate","delta","zero","random","sqrt","distanceSq","lengthSq","isValid","isZero","isEqual","dot","distSq","setLength","isRelative","getRelativeAmount","z","eventable","$eventable","$previous","$eventType","$event","$callback","$calls","$next","$isRoot","$register","$run","methodName","undefer","i2","x2","eq1","eq2","x3","sin","wave","abs","cos","inv","log10","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","EventState","DELAYED","ANIMATING","SLEEPING","FINISHED","computeValue","baseValue","compute","applyValue","newRepeat","ceil","state","replaceComputed","oldState","newState","iteration","lastValue","pop","lastKey","select","by","wait","after","getAttrimators","_add","getValue","ps","resolvePoint","isLinear","prev","deltadelta","resolveVelocity","resolveAcceleration","initalPosition","dt","MAX_DT","vel","acc","pos","usePosition","maxDelay","createAttrimators","template","delayOffset","remaining","resolveRest","updateVelocity","EPSILON","vendors","requestor","requestAnimationFrame","lastTime","timeToCall","setTimeout","parsers","color","parseComponent","parseInt","vparsed","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","named","regex","matches","exec","cp","format","ca","cr","cg","cb","toString","relativeAmount","mask","relativeFunction","randomSelection","randomFunction","selected","resolvedMin","resolvedMax","y","cx","cy","rx","ry","ix","iy","aliases","left","right","middle","center","top","bottom","_x","_y","amountScale","dx","dy","epsilon","cz","rz","iz","dz","ab","angle","ra","ia","da","rr","rg","rb","ir","ig","ib","dr","dg","db","$animator","object","calculatorName","and","deltaObject","valueMax","initial","oncer","from","half","to","kframes","keyframe","sort","times","maxTime","order","pathEasings","pathDefinition","parsedPath","physics","physic","stopAt","springs","parser","travel","pointing","subtractVelocity","targetValue","difference","traveling","fromParsed","toParsed","traveler","linear","lengthGranularity","lengthTotal","lengths","lengthCurrent","cachedLength","_length","previousDelta","compile","n","d1","d2","d3","i1","i3","ds","d0","pd","ea","getTimes","_set","invlength","negmidpoint","halfmidpoint","loops","getActualIndex","_start","defaultEasing","parent","conversions","inf","infinity","infinite","twice","thrice","dozen","ms","cs","jiffy","third","s","sec","m","h","hr","unit","fn","factoryFor","number","Aninmation","PathTween"],"mappings":"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","file":"anim8js.min.js","sourcesContent":["/* anim8js 1.0.4 - anim8js - Anim8 Everything by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define('anim8', [], function() { // jshint ignore:line\n      return factory(root);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global);  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.m8 = root.anim8 = factory(root);\n    root.m8s = root.anim8s = root.anim8.anim8s;\n  }\n}(this, function(global)\n{\n\n\nvar Class =\n{\n  superPrefix: '_',\n\n  extend: function(construct, parentConstructor, properties)\n  {\n    function F() {}\n\n    F.prototype = parentConstructor.prototype;\n\n    construct.prototype = new F();\n\n    if ( isObject( properties ) )\n    {\n      this.define( construct, properties );\n    }\n  },\n\n  define: function(construct, properties)\n  {\n    var target = construct.prototype;\n\n    for (var prop in properties)\n    {\n      if ( prop in target )\n      {\n        this.defineProperty( target, this.superPrefix + prop, target[ prop ] );\n      }\n\n      this.defineProperty( target, prop, properties[ prop ] );\n    }\n  },\n\n  defineProperty: function(target, property, value)\n  {\n    if ( Object.defineProperty )\n    {\n      Object.defineProperty( target, property, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    }\n    else\n    {\n      target[ property ] = value;\n    }\n  }\n};\n\n\n\n/**\n * The default values for anim8js properties.\n *\n * @property {Object} anim8.defaults\n */\nvar Defaults =\n{\n\n  /**\n   * The default animation duration in milliseconds.\n   *\n   * @property {Number} duration\n   * @for anim8.defaults\n   * @default 1000\n   */\n  duration: 1000,\n\n  /**\n   * The default easing.\n   *\n   * @property {String|Function|Array} easing\n   * @for anim8.defaults\n   * @default 'ease'\n   */\n  easing: 'ease',\n\n  /**\n   * The default \"total easing\" which is the overall easing\n   * for an animation which actually has easing values per frame.\n   *\n   * @property {String|Function|Array} teasing\n   * @for anim8.defaults\n   * @default 'linear'\n   */\n  teasing: 'linear',\n\n  /**\n   * The default animation delay in milliseconds.\n   *\n   * @property {Number} delay\n   * @for anim8.defaults\n   * @default 0\n   */\n  delay: 0,\n\n  /**\n   * The default animation sleep in milliseconds.\n   *\n   * @property {Number} sleep\n   * @for anim8.defaults\n   * @default 0\n   */\n  sleep: 0,\n\n  /**\n   * The default number of repeats for an animation.\n   *\n   * @property {Number} repeat\n   * @for anim8.defaults\n   * @default 1\n   */\n  repeat: 1,\n\n  /**\n   * The default scale for an animation.\n   *\n   * @property scale\n   * @for anim8.defaults\n   * @default 1.0\n   * @type {Number}\n   */\n  scale: 1.0,\n\n  /**\n   * The default animation offset in milliseconds.\n   *\n   * @property {Number} offset\n   * @for anim8.defaults\n   * @default 0\n   */\n  offset: 0,\n\n  /**\n   * The default transition time in milliseconds.\n   *\n   * @property {Number} transitionTime\n   * @for anim8.defaults\n   * @default 500\n   */\n  transitionTime: 500,\n\n  /**\n   * The default transition outroduction time in milliseconds.\n   *\n   * @property {Number} transitionOutro\n   * @for anim8.defaults\n   * @default 100\n   */\n  transitionOutro: 100,\n\n  /**\n   * The default transition introduction time in milliseconds.\n   *\n   * @property {Number} transitionIntro\n   * @for anim8.defaults\n   * @default 100\n   */\n  transitionIntro: 100,\n\n  /**\n   * The default transition easing when none is specified.\n   *\n   * @property {String|Function|Array} transitionEasing\n   * @for anim8.defaults\n   * @default 'linear'\n   */\n  transitionEasing: 'linear',\n\n  /**\n   * The default transition granularity. This is used for smooth transitions to\n   * provide a smooth transition from the outro velocity to the intro velocity,\n   * the cubic or quadratic path between the two is a curve with unknown length\n   * so the length needs to be calculated using a maximum number of points to\n   * calculate along the path - summing the distances between the consecutive points.\n   *\n   * @property {Number} transitionGranularity\n   * @for anim8.defaults\n   * @default 0\n   */\n  transitionGranularity: 0,\n\n  /**\n   * TODO\n   *\n   * @property {Number} transitionLookup\n   * @for anim8.defaults\n   * @default 10\n   */\n  transitionLookup: 10,\n\n  /**\n   * Whether animtions are cached whenever possible. Animations that can be\n   * cached are strings with options specified in the string and without an\n   * option object given. For example 'tada ~1s 3s x3' is cacheable.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cache\n   * @for anim8.defaults\n   * @default false\n   */\n  cache: false,\n\n  /**\n   * Whether parsed options are cached whenever possible. Options that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheOptions\n   * @for anim8.defaults\n   * @default false\n   */\n  cacheOptions: false,\n\n  /**\n   * Whether parsed transitions are cached whenever possible. Transitions that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheTransitions\n   * @for anim8.defaults\n   * @default false\n   */\n  cacheTransitions: false,\n\n  /**\n   * The value to return when options could not be parsed from input.\n   *\n   * @property {Object} noOptions\n   * @for anim8.defaults\n   * @default {}\n   */\n  noOptions: {},\n\n  /**\n   * The value to return when a transition could not be parsed from input.\n   *\n   * @property {Object} noTransition\n   * @for anim8.defaults\n   * @default {}\n   */\n  noTransition: {},\n\n  /**\n   * The target number of milliseconds between frames. This only applies if the\n   * browser doesn't support any of the requestAnimationFrame variations.\n   *\n   * @property {Number} frameRate\n   * @for anim8.defaults\n   * @default 33\n   */\n  frameRate: 16,\n\n  /**\n   * The number of milliseconds to pause between looping to let the UI react\n   * to user events.\n   *\n   * @property {Number} pauseTime\n   * @for anim8.defaults\n   * @default 5\n   */\n  pauseTime: 5\n\n};\n\n\nvar DelegateTypes =\n{\n\n  /**\n   * this is returned at the end.\n   *\n   * @property THIS\n   * @for DelegateTypes\n   */\n  THIS: 'this',\n\n  /**\n   * An array of results for each method call is returned.\n   *\n   * @property RESULTS\n   * @for DelegateTypes\n   */\n  RESULTS: 'results',\n\n  /**\n   * The result of the first element.\n   *\n   * @property RETURN_FIRST\n   * @for delegate\n   */\n  FIRST: 'first',\n\n  /**\n   * True if any of the methods return true, otherwise false.\n   *\n   * @property RETURN_TRUE\n   * @for delegate\n   */\n  TRUE: 'true'\n\n};\n\n\n\n/**\n * @class Core\n */\n\n/**\n * A function that does nothing.\n *\n * @property anim8.noop\n */\nfunction noop() {}\n\n/**\n * Returns true if the given variable is defined.\n *\n * **Examples:**\n *\n *     anim8.isDefined( 0 );     // true\n *     anim8.isDefined( false ); // true\n *     anim8.isDefined();        // false\n *\n * @method anim8.isDefined\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isDefined(x)\n{\n  return typeof x !== 'undefined';\n}\n\n/**\n * Returns true if the given variable is a function.\n *\n * @method anim8.isFunction\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isFunction(x)\n{\n  return !!(x && x.constructor && x.call && x.apply);\n}\n\n/**\n * Returns true if the given variable is a number.\n *\n * **Examples:**\n *\n *     anim8.isNumber( 0 );     // true\n *     anim8.isNumber( -45.6 ); // true\n *     anim8.isNumber( true );  // false\n *     anim8.isNumber( '1' );   // false\n *     anim8.isNumber();        // false\n *\n * @method anim8.isNumber\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isNumber(x)\n{\n  return typeof x === 'number';\n}\n\n/**\n * Returns true if the given variable is a boolean variable.\n *\n * **Examples:**\n *\n *     anim8.isBoolean( 0 );     // false\n *     anim8.isBoolean( -45.6 ); // false\n *     anim8.isBoolean( true );  // true\n *     anim8.isBoolean( false ); // true\n *     anim8.isBoolean( '1' );   // false\n *     anim8.isBoolean();        // false\n *\n * @method anim8.isBoolean\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isBoolean(x)\n{\n  return typeof x === 'boolean';\n}\n\n/**\n * Returns true if the given variable is a string.\n *\n * **Examples:**\n *\n *     anim8.isString( '' );    // true\n *     anim8.isString( '1' );   // true\n *     anim8.isString( 4.5 );   // false\n *     anim8.isString();        // false\n *\n * @method anim8.isString\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isString(x)\n{\n  return typeof x === 'string';\n}\n\n/**\n * Returns true if the given variable is an array. This should be checked before\n * anim8.isObject since Arrays are objects.\n *\n * **Examples:**\n *\n *     anim8.isArray( [] );     // true\n *     anim8.isArray( [4, 5] ); // true\n *     anim8.isArray( 4.5 );    // false\n *     anim8.isArray();         // false\n *\n * @method anim8.isArray\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isArray(x)\n{\n  return x instanceof Array;\n}\n\n/**\n * Returns true if the given variable is an object. Arrays are considered\n * objects.\n *\n * **Examples:**\n *\n *     anim8.isObject( {} );     // true\n *     anim8.isObject( [] );     // true\n *     anim8.isObject( 4.5 );    // false\n *     anim8.isObject();         // false\n *     anim8.isObject( null );   // false\n *\n * @method anim8.isObject\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isObject(x)\n{\n  return typeof x === 'object' && x !== null;\n}\n\n/**\n * Returns the current time in milliseconds.\n *\n * @method anim8.now\n * @return {Number}\n */\nvar now = (function()\n{\n  return Date.now ? Date.now : function()\n  {\n    return new Date().getTime();\n  };\n\n})();\n\n/**\n * Returns the trimmed version of the given string. A trimmed string has no\n * whitespace in the beginning or end of it.\n *\n * **Examples:**\n *\n *     anim8.trim( 'x' );     // 'x'\n *     anim8.trim( '   x' );  // 'x'\n *     anim8.trim( 'x   ' );  // 'x'\n *     anim8.trim( '  x ' );  // 'x'\n *     anim8.trim( '    ' );  // ''\n *\n * @method anim8.trim\n * @param  {String} x\n * @return {String}\n */\nvar trim = (function()\n{\n  if (String.prototype.trim) {\n    return function(x) {\n      return x.trim();\n    };\n  }\n  return function(x) {\n    return x.replace(/^([\\s]*)|([\\s]*)$/g, '');\n  };\n})();\n\n/**\n * Determines whether the given variable is empty.\n *\n * **Examples:**\n *\n *     anim8.isEmpty( '' );        // true\n *     anim8.isEmpty( 0 );         // true\n *     anim8.isEmpty( [] );        // true\n *     anim8.isEmpty( {} );        // true\n *     anim8.isEmpty( null );      // true\n *     anim8.isEmpty( true );      // true\n *     anim8.isEmpty( false );     // true\n *     anim8.isEmpty( 'x' );       // false\n *     anim8.isEmpty( 0.3 );       // false\n *     anim8.isEmpty( [0] );       // false\n *     anim8.isEmpty( {x:3} );     // false\n *\n * @method anim8.isEmpty\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isEmpty(x)\n{\n  if ( isArray( x ) || isString( x ) )\n  {\n    return x.length > 0;\n  }\n  else if ( x === null )\n  {\n    return true;\n  }\n  else if ( isObject( x ) )\n  {\n    for (var prop in x)\n    {\n      return false;\n    }\n  }\n  else if ( isNumber( x ) )\n  {\n    return x !== 0.0;\n  }\n\n  return true;\n}\n\n/**\n * Parses the given input and returns an array.\n *\n * **Examples:**\n *\n *     anim8.toArray();            // []\n *     anim8.toArray('a b');       // ['a b']\n *     anim8.toArray('a b', ' ');  // ['a', 'b']\n *     anim8.toArray({a:0,b:0});   // ['a', 'b']\n *     anim8.toArray(['a', 'b']);  // ['a', 'b']\n *     anim8.toArray(3.2);         // [3.2]\n *     anim8.toArray(true);        // [true]\n *\n * @param  {Any} x\n * @param  {String} [split]\n * @return {Array}\n */\nfunction toArray( x, split )\n{\n  if ( isString( x ) )\n  {\n    return split ? x.split( split ) : [ x ];\n  }\n  else if ( isArray ( x ) )\n  {\n    return x;\n  }\n  else if ( isObject( x ) )\n  {\n    var props = [];\n\n    for ( var prop in x )\n    {\n      props.push( prop );\n    }\n\n    return props;\n  }\n  else if ( isDefined( x ) )\n  {\n    return [ x ];\n  }\n\n  return [];\n}\n\n/**\n * Performs a deep copy of the given variable. If the variable is an array or\n * object a new instance of that type is created where the values are copied as\n * well. All other types can't be copied (most likely because they're scalar) so\n * they are returned as-is.\n *\n * @method anim8.copy\n * @param {T} x\n * @return {T}\n */\nfunction copy(x)\n{\n  if ( isArray(x) )\n  {\n    var copied = [];\n\n    for (var i = 0; i < x.length; i++)\n    {\n      copied.push( copy( x[i] ) );\n    }\n\n    x = copied;\n  }\n  else if ( isObject(x) )\n  {\n    var copied = {};\n\n    for (var p in x)\n    {\n      copied[p] = copy( x[p] );\n    }\n\n    x = copied;\n  }\n\n  return x;\n}\n\n/**\n * Extends the given object by merging the following objects into it, avoiding\n * overriding any existing properties.\n *\n * @method anim8.extend\n * @param  {Object} out\n * @return {Object}\n */\nfunction extend(out)\n{\n  for (var i = 1; i < arguments.length; i++)\n  {\n    var o = arguments[ i ];\n\n    if ( isObject( o ) )\n    {\n      for (var prop in o)\n      {\n        if ( !(prop in out) )\n        {\n          out[prop] = o[prop];\n        }\n      }\n    }\n  }\n\n  return out;\n}\n\n/**\n * Returns the first defined variable of a possible 4 variables.\n *\n * **Examples:**\n *\n *     anim8.coalesce( 1, 2, 3 );           // 1\n *     anim8.coalesce( undefined, 2, 3 );   // 2\n *     anim8.coalesce();                    // undefined\n *\n * @method anim8.coalesce\n */\nfunction coalesce(a, b, c, d)\n{\n  if (isDefined(a)) {\n    return a;\n  }\n  if (isDefined(b)) {\n    return b;\n  }\n  if (isDefined(c)) {\n    return c;\n  }\n  return d;\n}\n\n/**\n * Provides a way to wrap a variable so calculators don't try copying it on parse.\n *\n * **Examples:**\n *\n *     anim8.constant( 5 );   // function() { return 5; }\n *\n * @method anim8.constant\n * @param {T} variable\n * @return {Function}\n */\nfunction constant(variable)\n{\n  return function()\n  {\n    return variable;\n  };\n}\n\n/**\n * Resolves the given variable. If the variable is a function the result is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.resolve( 5 );                     // 5\n *     anim8.resolve( true );                  // true\n *     anim8.resolve( function(){return 7;} ); // 7\n *\n * @method anim8.resolve\n * @param  {Function|E} variable\n * @return {E}\n */\nfunction resolve(variable)\n{\n  return isFunction( variable ) ? variable() : variable;\n}\n\n/**\n * Returns a value between the given minimum and maximum.\n *\n * **Examples:**\n *\n *     anim8.clamp( 5, 1, 6 );   // 5\n *     anim8.clamp( 0, 1, 6 );   // 1\n *     anim8.clamp( 7, 1, 6 );   // 6\n *\n * @method anim8.clamp\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nfunction clamp(v, min, max)\n{\n  return (v < min) ? min : (v > max ? max : v);\n}\n\n/**\n * Returns a \"unique\" identifier.\n *\n * @method id\n * @return {Number}\n */\nvar id = (function()\n{\n  var _id = 0;\n  return function() {\n    return ++_id;\n  };\n\n})();\n\n\n/**\n * Instantiates a new Animation given it's name, the input & options passed, and\n * the attrimators that were generated from the input & options. If the name is\n * false this is an anonymous animation. Input & Options are used by builders to\n * generate attrimators, options allow for an animations default properties to\n * be overriden.\n *\n * @param {String|Boolean} name\n * @param {Object} input\n * @param {Object} options\n * @param {AttrimatorMap} attrimators\n * @class Animation\n * @constructor\n */\nfunction Animation(name, input, options, attrimators)\n{\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {String|False} name\n   */\n  this.name = name;\n\n  /**\n   * The object which created the animation.\n   *\n   * @property {Object} input\n   */\n  this.input = input;\n\n  /**\n   * The options given when the animation was created.\n   *\n   * @property {Object} [options]\n   */\n  this.options = options;\n\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {AttrimatorMap} name\n   */\n  this.attrimators = attrimators;\n}\n\nClass.define( Animation,\n{\n\n  /**\n   * Generates an map of event instances from the attrimators in this animation.\n   *\n   * @method newAttrimators\n   * @return {AttrimatorMap}\n   */\n  newAttrimators: function()\n  {\n    return this.attrimators.clone();\n  },\n\n  /**\n   * Merges options with the options in this animation and places them in the\n   * events.\n   *\n   * @method merge\n   * @param {Object} [options]\n   * @param {AttrimatorMap} attrimatorMap\n   * @return {AttrimatorMap}\n   */\n  merge: function(options, attrimatorMap)\n  {\n    var helper = new BuilderHelper( this.input, this.options, options );\n\n    for (var builderName in this.input)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( this.input, options, this.options, attrimatorMap, helper );\n      }\n    }\n\n    return attrimatorMap;\n  }\n\n});\n\n\n/**\n * Instantiates a new Animator given a subject to animate.\n *\n * @param {Any} e\n * @class Animator\n * @constructor\n * @extends anim8.eventize\n */\nfunction Animator(e)\n{\n  this.reset( e );\n}\n\n/**\n * The event triggered after preupdate is called. Pre-update is used to run any\n * preparations on the subject before updates are made and attributes are\n * applied.\n *\n * @event preupdate\n */\n\n/**\n * The event triggered after all attrimators are updated and any new values\n * have been applied to the current values (frame) on the animator.\n *\n * @event update\n */\n\n/**\n * The event triggered after the current values (frame) on the animator are\n * applied to the subject.\n *\n * @event apply\n */\n\n/**\n * The event triggered when the given animation cycle starts (and initial\n * values are applied) for all attrimators in the cycle.\n *\n * @event cycleStart:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when the given animation cycle ends which occurs when the\n * last attrimator for an animation finishes or is interrupted by commands like\n * play, queue, transition, end, finish, & stop.\n *\n * @event cycleEnd:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when all animations on the animator have finished.\n *\n * @event finished\n * @param {Animator} animator\n */\n\n/**\n * The event triggered when an animator is deactivated which occurs when an\n * animator has finished animating and is being taken off the list of live\n * animators (anim8.animating).\n *\n * @event deactivate\n */\n\n/**\n * The event triggered after the user calls destroy on an animator.\n *\n * @event destroyed\n */\n\nClass.define( Animator,\n{\n\n  /**\n   * Resets the animator given a subject to animate.\n   *\n   * @method reset\n   * @param {Any} subject\n   * @chainable\n   * @protected\n   */\n  reset: function(subject)\n  {\n    /**\n     * The subject which is being animated.\n     *\n     * @property {Any} subject\n     */\n    this.subject = subject;\n\n    /**\n     * The map of attrimators animating the subject.\n     *\n     * @property {AttrimatorMap} attrimators\n     */\n    this.attrimators = new AttrimatorMap();\n\n    /**\n     * The array of attrimators recently added to the animator that\n     * are ready to be started.\n     *\n     * @property {Array} attrimatorsAdded\n     * @protected\n     */\n    this.attrimatorsAdded = [];\n\n    /**\n     * The object which stores the attribute values being animated.\n     *\n     * @property {Object} frame\n     */\n    this.frame = {};\n\n    /**\n     * The object which stores the attributes last updated.\n     *\n     * @property {Object} updated\n     */\n    this.updated = {};\n\n    /**\n     * Whether or not this animator has completely finished animating it's subject.\n     *\n     * @property {Boolean} finished\n     */\n    this.finished = false;\n\n    /**\n     * The factory which created this Animator given a subject.\n     *\n     * @property {Factory} factory\n     */\n    this.factory = null;\n\n    /**\n     * Whether or not this animator is actively being updated.\n     *\n     * @property {Boolean} active\n     */\n    this.active = false;\n\n    /**\n     * The current cycle being animated. Multiple cycles can be animated at once, this is the first one.\n     *\n     * @property {Number} cycleCurrent\n     * @protected\n     */\n    this.cycleCurrent = 0;\n\n    /**\n     * The ID of the next cycle of animations to be added to this Animator.\n     *\n     * @property {Number} cycleNext\n     * @protected\n     */\n    this.cycleNext = 0;\n\n    /**\n     * The last cycle that was ended.\n     *\n     * @property {Number} cycleEnded\n     * @protected\n     */\n    this.cycleEnded = 0;\n\n    return this;\n  },\n\n  /**\n   * Starts a new animation cycle. This is done before events & springs are\n   * placed to group them together so we know when to apply their initial value.\n   *\n   * @method newCycle\n   * @param {Attrimator|AttrimatorMap} attrimators\n   * @chainable\n   * @protected\n   */\n  newCycle: function(attrimators)\n  {\n    this.cycleNext++;\n\n    if ( attrimators instanceof AttrimatorMap )\n    {\n      this.cycleNext = attrimators.applyCycle( this.cycleNext );\n    }\n    else if ( attrimators instanceof Attrimator )\n    {\n      attrimators.cycle = this.cycleNext;\n    }\n\n    return this;\n  },\n\n  /**\n   * Applies the current cycle. This involves finding all attrimators with the\n   * same cycle identifier and applying their initial state.\n   *\n   * @method applyCurrentCycle\n   * @chainable\n   * @protected\n   */\n  applyCurrentCycle: function()\n  {\n    var cycle = this.cycleCurrent;\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      if ( attrimator.cycle === cycle )\n      {\n        this.updated[ attr ] = (attrimator.startCycle( this.frame ) !== false) || this.updated[ attr ];\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Ends the current cycle which calls any listening functions.\n   *\n   * @method endCurrentCycle\n   * @chainable\n   * @protected\n   */\n  endCurrentCycle: function()\n  {\n    if ( this.cycleCurrent > this.cycleEnded )\n    {\n      this.cycleEnded = this.cycleCurrent;\n      this.trigger( 'cycleEnd:' + this.cycleCurrent, this.cycleCurrent );\n    }\n  },\n\n  /**\n   * Returns the attribute descriptor given the name of the attribute.\n   *\n   * @method getAttribute\n   * @param  {String} attr\n   * @return {Object}\n   */\n  getAttribute: function(attr)\n  {\n    return this.factory.attribute( attr );\n  },\n\n  /**\n   * Restores any temporary state that may exist on this Animator that\n   * is a result from animations.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore: function()\n  {\n    return this;\n  },\n\n  /**\n   * Applies the initial state of recently added attrimators immediately.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState: function()\n  {\n    var currentTime = now();\n\n    this.preupdate( currentTime );\n    this.update( currentTime );\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * A method thats invoked along with all other animators before updates are\n   * called. This is used to make any necessary preparations before the animator\n   * is updated.\n   *\n   * @method preupdate\n   * @param {Number} now\n   * @chainable\n   */\n  preupdate: function(now)\n  {\n    // If there are attribute placed on the animator since the last preupdate\n    // that has computed values we need to replace the path on the event with\n    // a copy containing the computed values. This is where current value &\n    // relative values are injected from the animator into the attribute.\n    var aa = this.attrimatorsAdded;\n    if ( aa.length )\n    {\n      for (var i = 0; i < aa.length; i++)\n      {\n        var attrimator = aa[ i ];\n        var attr = attrimator.attribute;\n\n        if ( attr in this.subject )\n        {\n          this.frame[ attr ] = this.subject[ attr ];\n        }\n        else\n        {\n          this.setDefault( attr );\n        }\n\n        attrimator.start( now, this );\n      }\n\n      aa.length = 0;\n    }\n\n    this.trigger('preupdate');\n\n    return this;\n  },\n\n  /**\n   * Sets the default value for the given attribute in the frame of this\n   * Animator if there's no value there.\n   *\n   * @method setDefault\n   * @param {String} attr\n   * @protected\n   */\n  setDefault: function(attr)\n  {\n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = this.getAttribute( attr ).cloneDefault();\n    }\n  },\n\n  /**\n   * Updates all attrimators in this animator with the given time.\n   *\n   * @method update\n   * @param {Number} now\n   * @chainable\n   */\n  update: function(now)\n  {\n    this.wasFinished = this.finished;\n    this.finished = true;\n\n    var attrimators = this.attrimators.values;\n    var minCycle = this.cycleNext;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      this.updated[ attr ] = attrimator.setTime( now, this.frame );\n\n      this.finished = this.finished && attrimator.isFinished();\n\n      minCycle = Math.min( minCycle, attrimator.cycle );\n    }\n\n    if ( this.cycleCurrent < minCycle )\n    {\n      while ( this.cycleCurrent < minCycle )\n      {\n        this.endCurrentCycle();\n        this.cycleCurrent++;\n      }\n\n      this.cycleCurrent = minCycle;\n      this.applyCurrentCycle();\n      this.trigger( 'cycleStart:' + this.cycleCurrent, this.cycleCurrent );\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.endCurrentCycle();\n    }\n\n    this.trigger('update');\n\n    return this;\n  },\n\n  /**\n   * Places the attribute animator in this animator replacing any existing\n   * animator for the same attribute. The next time the animator is updated the\n   * attribute animator will be started. The previous (if any) attrimator is\n   * returned.\n   *\n   * @method placeAttrimator\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  placeAttrimator: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var existing = this.attrimators.get( attr );\n\n    this.attrimators.put( attr, attrimator );\n    this.attrimatorsAdded.push( attrimator );\n\n    this.finished = false;\n\n    return existing;\n  },\n\n  /**\n   * Applies all updated attributes to the subject. This method is invoked with\n   * all of the other animators at the end of the animation cycle.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function()\n  {\n    for (var attr in this.frame)\n    {\n      if ( this.updated[ attr ] )\n      {\n        this.subject[ attr ] = this.frame[ attr ];\n        this.updated[ attr ] = false;\n      }\n    }\n\n    this.trigger('apply');\n\n    this.trimAttrimators();\n\n    return this;\n  },\n\n  /**\n   * Removes any finished attrimators and places any queued attrimators. If the\n   * animator previously wasn't finished but now is the 'finished' event will\n   * be triggered.\n   *\n   * @method trimAttrimators\n   * @chainable\n   * @protected\n   */\n  trimAttrimators: function()\n  {\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( attrimator.isFinished() )\n      {\n        if ( attrimator.next )\n        {\n          this.placeAttrimator( attrimator.next );\n        }\n        else\n        {\n          this.attrimators.removeAt( i );\n        }\n      }\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the current value for the given attribute (or undefined if the\n   * attribute is not or has not animated).\n   *\n   * @method value\n   * @param {String} attr\n   * @return {Any}\n   */\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\n  /**\n   * Activates this Animator by adding it to the main loop if it isn't there\n   * already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    activateAnimator( this );\n\n    return this;\n  },\n\n  /**\n   * A method that is invoked when an animator is finished and is being removed\n   * from the list of currently animating Animators.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate: function()\n  {\n    this.trigger('deactivate', this);\n\n    return this;\n  },\n\n  /**\n   * A method that can be invoked to destroy an animator - removing any\n   * relationship between the subject and animator. The next time an animator is\n   * generated for the subject a new animator will be created.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy: function()\n  {\n    this.finished = true;\n\n    this.factory.destroy( this );\n\n    this.trigger('destroyed');\n\n    return this;\n  },\n\n  /**\n   * Adds a spring to this animator replacing any existing attrimator for the\n   * same attribute. A spring object can be given, an instance of anim8.Spring,\n   * or a name of a saved Spring. The spring added to the animator is returned.\n   *\n   * @method spring\n   * @param {Spring|String|Object} spring\n   * @return {Spring}\n   */\n  spring: function(spring)\n  {\n    var spring = $spring( spring );\n\n    if ( spring === false )\n    {\n      return false;\n    }\n\n    this.newCycle( spring );\n    this.placeAttrimator( spring );\n\n    this.activate();\n\n    return spring;\n  },\n\n  /**\n   * Plays an animation. Attributes in the animation that are currently being\n   * animated will be stopped and replaced with the new attrimators. If `all` is\n   * true then any attrimators animating not specified in the given animation\n   * will be stopped.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.playAttrimators( attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Plays a map of attrimators. Attributes in the attrimator map that are\n   * currently being animated will be stopped and replaced with the new\n   * attrimators. If \"all\" is true then any attrimators animating not specified\n   * in the given attrimator map will be stopped. This method will not activate\n   * the Animator, that has to be done manually.\n   *\n   * @method playAttrimators\n   * @param {AttrimatorMap} animatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  playAttrimators: function(attrimatorMap, all)\n  {\n    if ( all )\n    {\n      this.finishNotPresent( attrimatorMap, 0 );\n    }\n\n    var attrimators = attrimatorMap.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      this.placeAttrimator( attrimators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Queues an animation. The attrimators generated from the given animation\n   * will be started at the same time - as soon as all finite attrimators for\n   * the same attributes are finished. Any infinite attrimators will be\n   * automatically stopped when all queued attrimators are set to start.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.queueAttrimators( attrimatorMap );\n\n    return this.activate();\n  },\n\n  /**\n   * Queues a map of attrimators. The map of attrimators will be started at the\n   * same time - as soon as all finished attrimators for the same attribute are\n   * finished. Any infinite attrimators will be automatically stopped when all\n   * queued attrimators are set to start.\n   *\n   * @method queueAttrimators\n   * @param {AttrimatorMap} attrimatorMap\n   * @chainable\n   * @protected\n   */\n  queueAttrimators: function(attrimatorMap)\n  {\n    this.attrimators.queueMap( attrimatorMap, this.placeAttrimator, this );\n\n    return this;\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given animation will be stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {String|Object|Animation} animation\n   * @param {Object} [options]\n   * @param {Boolean} [all]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.transitionAttrimators( transition, attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given attrimator map will be\n   * stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * @method transitionAttrimators\n   * @param {Object} transition\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators: function(transition, attrimatorMap, all)\n  {\n    // TRANSITIONING:\n    // If the animator doesn't have an attrimator for the given attribute just add the attrimator adding the total delay\n    // If the animator has an attrimator currently...\n    //   If the current attrimator or new attrimator don't have values at the desired times...\n    //      Stop the current attrimator after the total delay (adding the delay of the new attrimator as well)\n    //      Queue the new attrimator\n    //   Else\n    //      Create a path using the methods detailed above\n    // If all is true and there's an attrimator left on the animator that isn't being transitioned, stop it after the total delay.\n\n    // CREATING A TRANSITION PATH:\n    // If intro & outro are 0, use Tween\n    // If intro is 0, use Quadratic Path between current value, outro point, and first point on new path.\n    // If outro is 0, use Quadratic Path between current value, first point on new path, and intro point.\n    // If intro & outro are not 0, use Cubic Path between current value, outro point, first point on new path, and intro point.\n    // If granularity is given > 1 then compile the path, compute intro & outro velocities, and compute deltas for new\n    //    compiled path based on interpolated velocity over the path (knowing it's length and transition time)\n\n    var current = this.attrimators;\n    var attrimators = attrimatorMap.values;\n\n    // If transition all attributes,\n    if ( all )\n    {\n      this.finishNotPresent( attrimatorMap, transition.time );\n    }\n\n    // Only transition if we need to\n    if ( current.hasOverlap( attrimatorMap ) )\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        var next = attrimators[ i ];\n        var attr = next.attribute;\n        var curr = current.get( attr );\n\n        if ( curr && isDefined( this.frame[ attr ] ) )\n        {\n          var attribute = this.getAttribute( attr );\n          var calc = attribute.calculator;\n\n          var p2 = next.valueAt( 0, calc.create() );\n\n          if ( p2 !== false )\n          {\n            var transitionTime = transition.time;\n            var p0 = calc.clone( this.frame[ attr ] );\n            var p1 = transition.outro ? curr.valueAt( curr.getElapsed() + transition.outro, calc.create() ) : false;\n            var p3 = transition.intro ? next.valueAt( transition.intro, calc.create() ) : false;\n            var path = null;\n\n            // If the intro is negative we can look into the past by looking a little bit into\n            // the future and assume the past is going in the same direction (only the opposite).\n            if ( p3 !== false && transition.intro < 0 && transition.lookup > 0 )\n            {\n              var pastLookahead = next.valueAt( transition.lookup, calc.create() );\n              var pastVelocity = calc.sub( pastLookahead, p2 );\n\n              if ( pastVelocity !== false )\n              {\n                var pastNegativeVelocity = calc.scale( pastVelocity, transition.intro / transition.lookup );\n                var past = calc.add( pastNegativeVelocity, p2 );\n\n                p3 = p2;\n                p2 = past;\n              }\n            }\n\n            // Build a path with as many of the points as possible.\n            if ( p1 === false && p3 === false )\n            {\n              path = new Tween( attr, calc, p0, p2 );\n            }\n            else if ( p1 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p2, p3 );\n            }\n            else if ( p3 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p1, p2 );\n            }\n            else\n            {\n              path = new PathCubic( attr, calc, p0, p1, p2, p3 );\n            }\n\n            // If granularity is specified we will try to make the transition\n            // smooth by maintaining exit (outro) velocity from the current attrimator\n            // and interpolating it to the entrance (intro) velocity for the\n            // attrimator we're transitioning into.\n            if ( transition.granularity > 2 && transition.lookup > 0 )\n            {\n              var outTime  = p1 === false ? curr.getElapsed() : curr.getElapsed() + transition.outro;\n              var outPoint = p1 === false ? p0 : p1;\n              var outNext  = curr.valueAt( outTime + transition.lookup, calc.create() );\n\n              var inTime   = p3 === false ? 0 : transition.intro;\n              var inPoint  = p3 === false ? p2 : p3;\n              var inNext   = next.valueAt( inTime + transition.lookup, calc.create() );\n\n              // We can only proceed if we have reference points to calculate\n              // exit & entrance velocity.\n              if ( outNext !== false && inNext !== false )\n              {\n                var outVelocity  = calc.sub( calc.clone( outNext ), outPoint );\n                var outPerMillis = calc.length( outVelocity ) / transition.lookup;\n\n                var inVelocity   = calc.sub( calc.clone( inNext ), inPoint );\n                var inPerMillis  = calc.length( inVelocity ) / transition.lookup;\n\n                var compiled = new PathCompiled( attr, path, transition.granularity );\n                var points = compiled.points;\n                var lastPoint = points.length - 1;\n                var totalDistance = 0;\n                var distances = [];\n\n                for (var k = 0; k < lastPoint; k++)\n                {\n                  distances[ k ] = totalDistance;\n                  totalDistance += calc.distance( points[ k ], points[ k + 1 ] );\n                }\n                distances[ lastPoint ] = totalDistance;\n\n                if ( !isNaN( totalDistance ) )\n                {\n                  var requiredTime = 2.0 * totalDistance / (outPerMillis + inPerMillis);\n                  var acceleration = 0.5 * (inPerMillis - outPerMillis) / requiredTime;\n                  var timeDelta = requiredTime / lastPoint;\n                  var deltas = [];\n\n                  for (var k = 0; k < lastPoint; k++)\n                  {\n                    var time = k * timeDelta;\n                    var position = outPerMillis * time + acceleration * time * time;\n\n                    deltas[ k ] = position / totalDistance;\n                  }\n                  deltas[ lastPoint ] = 1.0;\n\n                  path = new PathDelta( attr, calc, points, deltas );\n                  transitionTime = requiredTime;\n                }\n              }\n            }\n\n            var transitionEvent = new Event( attr, path, transitionTime, transition.easing, 0, 0, 0, 1 );\n\n            transitionEvent.next = next;\n            transitionEvent.cycle = next.cycle;\n\n            next.offset = transition.intro;\n\n            this.placeAttrimator( transitionEvent );\n          }\n          else\n          {\n            curr.stopIn( transition.time + next.delay );\n            curr.queue( next );\n            next.delay = 0;\n          }\n        }\n        else\n        {\n          next.delay += transition.time;\n\n          this.placeAttrimator( next );\n        }\n      }\n    }\n    // We don't need to transition, just play the events\n    else\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        this.placeAttrimator( attrimators[ i ] );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Finishes any attrimators on this animator that are not present in the given\n   * map of attrimators. Optionally a delay in stopping them can be given.\n   *\n   * @method finishNotPresent\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Number} [delay=0]\n   * @chainable\n   * @protected\n   */\n  finishNotPresent: function(attrimatorMap, delay)\n  {\n    var attrimators = this.attrimators.values;\n    var stopIn = delay || 0;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( !attrimatorMap.has( attrimator.attribute ) )\n      {\n        attrimator.stopIn( stopIn );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Tweens a single attribute to a target value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenTo\n   * @param {String} attr\n   * @param {T} target\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenTo: function(attr, target, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var end       = attribute.parse( target );\n    var path      = new Tween( attr, attribute.calculator, computed.current, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes to target values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyTo\n   * @param {Object} targets\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenManyTo: function(targets, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in targets )\n    {\n      var attribute = this.getAttribute( attr );\n      var end       = attribute.parse( targets[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, computed.current, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens a single attribute from a starting value to the current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenFrom\n   * @param {String} attr\n   * @param {T} starting\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenFrom: function(attr, starting, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starting );\n    var path      = new Tween( attr, attribute.calculator, start, computed.current );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to the current values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyFrom\n   * @param {Object} startings\n   * @param {String|Array|Object} [options]\n   * @chainable\n   */\n  tweenManyFrom: function(startings, options)\n  {\n    var options = $options( options );\n\n    this.newCycle();\n\n    for ( var attr in startings )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( startings[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, computed.current );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens an attribute from a starting value to an ending value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tween\n   * @param {String} attr\n   * @param {T} starts\n   * @param {T} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tween: function(attr, starts, ends, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starts );\n    var end       = attribute.parse( ends );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to ending values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenMany\n   * @param {Object} starts\n   * @param {Object} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenMany: function(starts, ends, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in starts )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( starts[ attr ] );\n      var end       = attribute.parse( ends[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Moves an attribute relative to its current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method move\n   * @param {String} attr\n   * @param {T} amount\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  move: function(attr, amount, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var relative  = attribute.parse( amount );\n    var start     = computed.current;\n    var end       = isComputed( relative ) ? relative : computed.relative( relative );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Moves multiple attribute relative to their current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method moveMany\n   * @param {Object} amounts\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  moveMany: function(amounts, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in amounts )\n    {\n      var attribute = this.getAttribute( attr );\n      var relative  = attribute.parse( amounts[ attr ] );\n      var start     = computed.current;\n      var end       = isComputed( relative ) ? relative : computed.relative( relative );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Returns a function that returns the current value for the given attribute\n   * when invoked. The returned function can be given as values for paths &\n   * springs that are evaluated every frame.\n   *\n   * @method ref\n   * @param {String} attr\n   * @return {Function}\n   */\n  ref: function(attr)\n  {\n    var animator = this;\n    var attribute = this.getAttribute( attr );\n    var request = {};\n\n    return function()\n    {\n      if ( attr in animator.frame )\n      {\n        return animator.frame[ attr ];\n      }\n\n      request[ attr ] = true;\n\n      var current = animator.get( request );\n\n      if ( isDefined( current[ attr ] ) )\n      {\n        return current[ attr ];\n      }\n\n      return attribute.defaultValue;\n    };\n  },\n\n  /**\n   * Follows the attribute along the given path definition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method follow\n   * @param {String} attr\n   * @param {Path|Object|String} path\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  follow: function(attr, path, options, cache)\n  {\n    var options = $options( options, cache );\n    var path    = $path( path );\n    var event   = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Helper method that iterates over given attributes. If callback is specified\n   * it is invoked for each attrimator in this animator for the given\n   * attributes. If no callback is given an array of anim8.Attrimators is\n   * returned for each attrimator in this animator for the given attributes.\n   *\n   * @method attrimatorsFor\n   * @param {String|Array|Object} attributes\n   * @param {Function} callback\n   * @return {this|Array}\n   */\n  attrimatorsFor: function(attributes, callback)\n  {\n    var attrimatorMap = this.attrimators;\n    var attributes = toArray( coalesce( attributes, attrimatorMap.keys ), ' ' );\n    var resulting = !isFunction( callback );\n    var results = [];\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n      var attrimator = attrimatorMap.get( attr );\n\n      if ( attrimator )\n      {\n        if ( resulting )\n        {\n          results.push( attrimator );\n        }\n        else\n        {\n          callback.call( this, attrimator, attr );\n        }\n      }\n    }\n\n    return resulting ? results : this;\n  },\n\n  /**\n   * Stops all attributes for the specified attributes. Attribute names can be\n   * given as an array or a space separated string. If no attributes are given\n   * all attributes are assumed.\n   *\n   * @method stop\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  stop: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator, attr)\n    {\n      this.attrimators.remove( attr );\n    });\n  },\n\n  /**\n   * Ends all attributes for the specified attributes. If attributes are queued\n   * the last value of the last attribute is applied to this Animator before\n   * being completely removed. Attribute names can be given as an array or a\n   * space separated string. If no attributes are given all attributes are\n   * assumed.\n   *\n   * @method end\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  end: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      while (attrimator.next)\n      {\n        attrimator = attrimator.next;\n      }\n\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Finishes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method finish\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  finish: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Calls nopeat on all current attrimators for the specified attributes.\n   * Attribute names can be given as an array or a space separated string. If\n   * no attributes are given all attributes are assumed.\n   *\n   * **See:** {{#crossLink \"Attrimator/nopeat:method\"}}Attrimator.nopeat{{/crossLink}}\n   *\n   * @method nopeat\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  nopeat: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.nopeat();\n    });\n  },\n\n  /**\n   * Pauses all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method pause\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  pause: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.pause();\n    });\n  },\n\n  /**\n   * Resumes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method resume\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  resume: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.resume();\n    });\n  },\n\n  /**\n   * Sets the given attributes to this Animator immediately.\n   *\n   * @method set\n   * @param {Object} attributes\n   * @chainable\n   */\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n      this.updated[ attr ] = true;\n    }\n\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * Unsets the attribute, array of attributes, or object of attributes.\n   * Unsetting involves removing all attrimators and the current value in the\n   * frame,\n   *\n   * @method unset\n   * @param {String|Array|Object} attributes\n   * @chainable\n   */\n  unset: function(attributes)\n  {\n    var attributes = toArray( coalesce( attributes, this.frame ), ' ' );\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n\n      this.attrimators.remove( attr );\n\n      delete this.frame[ attr ];\n    }\n\n    return this;\n  },\n\n  /**\n   * Gets the current attribute values for all attributes specified. The\n   * argument must be an object where the key is the name of an attribute.\n   *\n   * @method get\n   * @param {Object} attributes\n   * @return {Object}\n   */\n  get: function(attributes)\n  {\n    var out = {};\n\n    for (var attr in attributes)\n    {\n      out[ attr ] = this.frame[ attr ];\n    }\n\n    return out;\n  },\n\n  /**\n   * Returns the amount of finite time remaining before the animator is done\n   * animating. Attrimators that don't have a known end time are not included.\n   * If there are no attrimators with end times then zero is returned.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.attrimators.timeRemaining();\n  },\n\n  /**\n   * Returns true if there are any attrimators on this Animator.\n   *\n   * @method hasAttrimators\n   * @return {Boolean}\n   */\n  hasAttrimators: function()\n  {\n    return this.attrimators.size() > 0;\n  },\n\n  /**\n   * Returns the subject of the Animator optionally passing it through a wrapper\n   * function before it's returned.\n   *\n   * @method getSubject\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubject: function(wrapper)\n  {\n    var subject = this.subject;\n\n    if ( isFunction( wrapper ) )\n    {\n      subject = wrapper( subject );\n    }\n\n    return subject;\n  },\n\n  /**\n   * Invokes a function with the given context or the context of this Animator\n   * if none is given. This is particularly useful for having a function be\n   * called on deferred statements.\n   *\n   * @method invoke\n   * @param {Function} func\n   * @param {Object} [context]\n   * @param {Array} [args]\n   * @chainable\n   */\n  invoke: function(func, context, args)\n  {\n    if ( isFunction( func ) )\n    {\n      func.apply( context || this, args || [] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Defers the method calls following this one to when the given event type\n   * (on or once) and event. To return this animator you need to call undefer()\n   * as many times as you called defer().\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} [callback]\n   * @return {DeferAnimator}\n   */\n  defer: function(eventType, event, callback)\n  {\n    return new DeferAnimator( this, this, eventType, event, callback );\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned starts.\n   *\n   * @method onCycleStart\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleStart: function(callback, context)\n  {\n    this.once( 'cycleStart:' + this.cycleNext, callback, context );\n\n    return this;\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned ends.\n   *\n   * @method onCycleEnd\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleEnd: function(callback, context)\n  {\n    this.once( 'cycleEnd:' + this.cycleNext, callback, context );\n\n    return this;\n  }\n\n});\n\n/**\n * Adds the following event methods to Animators: on, once, off, trigger.\n */\neventize( Animator.prototype );\n\n\n/**\n * Instantiates an Array of {{#crossLink \"Animator\"}}{{/crossLink}} instances.\n *\n * @param {Array} [input]\n * @class Animators\n * @constructor\n * @extends {Array}\n */\nfunction Animators(input)\n{\n  this.$ = [];\n\n  if ( isArray( input ) )\n  {\n    this.fill( input );\n  }\n}\n\n/**\n * Animators is an instance of Array. All array methods are supported.\n */\nClass.define( Animators,\n{\n\n  /**\n   * Adds an animator to this set of animators.\n   *\n   * @param  {Animator} animator\n   * @chainable\n   */\n  push: function(animator)\n  {\n    this.$.push( animator );\n\n    return this;\n  },\n\n  /**\n   * Returns the number of animators in this set.\n   *\n   * @return {Number}\n   */\n  length: function()\n  {\n    return this.$.length;\n  },\n\n  /**\n   * Returns the animator at the given index.\n   *\n   * @param  {Number} index\n   * @return {Animator}\n   */\n  at: function(index)\n  {\n    return this.$[ index ];\n  },\n\n  /**\n   * Invokes a callback for each element in the array.\n   *\n   * @method each\n   * @param {Function} iterator\n   * @param {Object} context\n   * @chainable\n   */\n  each: function(iterator, context)\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      if ( iterator.call( context || array[i], array[i], i ) === false )\n      {\n        break;\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Appends the array of animators given to the end of this array.\n   *\n   * @method fill\n   * @param {Array} animators\n   * @chainable\n   */\n  fill: function(animators)\n  {\n    for (var i = 0; i < animators.length; i++)\n    {\n      this.push( animators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Invokes a callback for each element in the array and if a true value is\n   * returned  that element is removed from the array.\n   *\n   * @method filter\n   * @param {Function} filterer\n   * @chainable\n   */\n  filter: function(filterer)\n  {\n    var array = this.$;\n    var alive = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      var remove = filterer( array[i] );\n\n      if ( !remove )\n      {\n        array[alive++] = array[i];\n      }\n    }\n\n    array.length = alive;\n\n    return this;\n  },\n\n  /**\n   * Returns the subjects of the Animators optionally passing them through a\n   * wrapper function before it's returned.\n   *\n   * @method getSubjects\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubjects: function(wrapper)\n  {\n    var array = this.$;\n    var subjects = [];\n\n    for (var i = 0; i < array.length; i++)\n    {\n      subjects.push( array[i].subject );\n    }\n\n    if ( isFunction( wrapper ) )\n    {\n      subjects = wrapper( subjects );\n    }\n\n    return subjects;\n  },\n\n  /**\n   * Returns the first animator in the array.\n   *\n   * @method first\n   * @return {Animator}\n   */\n  first: function()\n  {\n    return this.$[0];\n  },\n\n  /**\n   * Reverses the order of animators in the array.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    var array = this.$;\n    var last = array.length - 1;\n    var mid = Math.floor( array.length / 2 );\n\n    for (var i = 0; i < mid; i++)\n    {\n      var e0 = array[ i ];\n      var e1 = array[ last - i ];\n\n      array[ i ] = e1;\n      array[ last - i ] = e0;\n    }\n\n    return this;\n  },\n\n  /**\n   * Activates all Animators in the array if they aren't active already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      pushAnimator( array[i] );\n    }\n\n    activate();\n\n    return this;\n  },\n\n  /**\n   * Creates a sequence of events separated by a delay.\n   *\n   * @method sequence\n   * @param {String|Number} delay\n   * @param {String|Array|Function} easing\n   * @return {Sequence}\n   */\n  sequence: function(delay, easing)\n  {\n    return new Sequence( this, delay, easing );\n  },\n\n  /**\n   * Returns the maximum time remaining out of all Animators in the array.\n   *\n   * **See:** {{#crossLink \"Animating/timeRemaining:method\"}}{{/crossLink}}\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    var array = this.$;\n    var maxRemaining = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      maxRemaining = Math.max( maxRemaining, array[ i ].timeRemaining() );\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method preupdate\n   * @chainable\n   */\n  preupdate: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].preupdate( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/update:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method update\n   * @chainable\n   */\n  update: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].update( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function(max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].apply();\n    }\n\n    return this;\n  },\n\n  /**\n   * Handles an animator if it's finished, and returns false if the animator can\n   * be removed from the set of animators.\n   *\n   * @method handleFinished\n   * @param {Animator} animator\n   * @return {Boolean}\n   */\n  handleFinished: function(animator)\n  {\n    if ( animator.finished )\n    {\n      animator.deactivate();\n      animator.active = false;\n    }\n\n    return animator.finished;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} on each\n   * animator in the array and returns this.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore               : delegate( 'restore', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method placeAttrimator\n   * @chainable\n   */\n  placeAttrimator       : delegate( 'placeAttrimator', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState     : delegate( 'applyInitialState', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trimAttrimators\n   * @chainable\n   */\n  trimAttrimators       : delegate( 'trimAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate            : delegate( 'deactivate', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy               : delegate( 'destroy', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method spring\n   * @chainable\n   */\n  spring                : delegate( 'spring', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/play:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method play\n   * @chainable\n   */\n  play                  : delegate( 'play', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method playAttrimators\n   * @chainable\n   * @protected\n   */\n  playAttrimators       : delegate( 'playAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queue\n   * @chainable\n   */\n  queue                 : delegate( 'queue', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queueAttrimators\n   * @chainable\n   * @protected\n   */\n  queueAttrimators      : delegate( 'queueAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method transition\n   * @chainable\n   */\n  transition            : delegate( 'transition', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}}\n   * on each animator in the array and returns this.\n   *\n   * @method transitionAttrimators\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators : delegate( 'transitionAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tween\n   * @chainable\n   */\n  tween                 : delegate( 'tween', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenTo\n   * @chainable\n   */\n  tweenTo               : delegate( 'tweenTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenFrom\n   * @chainable\n   */\n  tweenFrom             : delegate( 'tweenFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenMany\n   * @chainable\n   */\n  tweenMany             : delegate( 'tweenMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyTo\n   * @chainable\n   */\n  tweenManyTo           : delegate( 'tweenManyTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyFrom\n   * @chainable\n   */\n  tweenManyFrom         : delegate( 'tweenManyFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/move:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method move\n   * @chainable\n   */\n  move                  : delegate( 'move', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method moveMany\n   * @chainable\n   */\n  moveMany              : delegate( 'moveMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method follow\n   * @chainable\n   */\n  follow                : delegate( 'follow', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/attrimatorsFor:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method attrimatorsFor\n   * @chainable\n   */\n  attrimatorsFor        : delegate( 'attrimatorsFor', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method stop\n   * @chainable\n   */\n  stop                  : delegate( 'stop', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/end:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method end\n   * @chainable\n   */\n  end                   : delegate( 'end', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method finish\n   * @chainable\n   */\n  finish                : delegate( 'finish', DelegateTypes.THIS ),\n\n/**\n   * Calls {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method nopeat\n   * @chainable\n   */\n  nopeat                : delegate( 'nopeat', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause                 : delegate( 'pause', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume                : delegate( 'resume', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/set:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method set\n   * @chainable\n   */\n  set                   : delegate( 'set', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method unset\n   * @chainable\n   */\n  unset                 : delegate( 'unset', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/get:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method get\n   * @chainable\n   */\n  get                   : delegate( 'get', DelegateTypes.FIRST ),\n\n  /**\n   * Calls {{#crossLink \"Animator/hasAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method hasAttrimators\n   * @chainable\n   */\n  hasAttrimators        : delegate( 'hasAttrimators', DelegateTypes.TRUE ),\n\n  /**\n   * Calls {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method invoke\n   * @chainable\n   */\n  invoke                : delegate( 'invoke', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleStart\n   * @chainable\n   */\n  onCycleStart          : delegate( 'onCycleStart', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleEnd\n   * @chainable\n   */\n  onCycleEnd            : delegate( 'onCycleEnd', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/on:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method on\n   * @chainable\n   */\n  on                    : delegate( 'on', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/once:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method once\n   * @chainable\n   */\n  once                  : delegate( 'once', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/off:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method off\n   * @chainable\n   */\n  off                   : delegate( 'off', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trigger:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trigger\n   * @chainable\n   */\n  trigger               : delegate( 'trigger', DelegateTypes.THIS )\n\n});\n\n\n/**\n * Animates a single attribute over any period of time.\n *\n * @class Attrimator\n * @constructor\n */\nfunction Attrimator()\n{\n\n}\n\nClass.define( Attrimator,\n{\n\n  /**\n   * Resets this attrimator for the given attribute created by the given builder.\n   *\n   * @method reset\n   * @param {String} attribute\n   * @param {Builder} builder\n   * @param {Attrimator} [next]\n   */\n  reset: function(attribute, builder, next)\n  {\n    /**\n     * The name of the attribute this attrimator is animating.\n     *\n     * @property {String} attribute\n     */\n    this.attribute = attribute;\n\n    /**\n     * The builder that created this attrimator (if any).\n     *\n     * @property {Builder} builder\n     */\n    this.builder = builder;\n\n    /**\n     * The next attrimator to be played once this one has finished.\n     *\n     * @property {Attrimator} next\n     */\n    this.next = next;\n\n    /**\n     * The time the attrimator was started by the animator.\n     *\n     * @property {Number} startTime\n     */\n    this.startTime = 0;\n\n    /**\n     * The time the attrimator was last paused.\n     *\n     * @property {Number} pauseTime\n     */\n    this.pauseTime = 0;\n\n    /**\n     * The amount of time that has elapsed since the attrimator started.\n     *\n     * @property {Number} elapsed\n     */\n    this.elapsed = 0;\n\n    /**\n     * The time this attrimator should stop itself after it started in milliseconds.\n     *\n     * @property {Number} stopTime\n     */\n    this.stopTime = Number.POSITIVE_INFINITY;\n\n    /**\n     * Whether or not the attrimator is paused.\n     *\n     * @property {Boolean} paused\n     */\n    this.paused = false;\n\n    /**\n     * The cycle this attrimator belongs to.\n     *\n     * @type {Number} cycle\n     */\n    this.cycle = 0;\n\n    /**\n     * The amount of time in milliseconds this attrimator is delayed since start.\n     *\n     * @property {Number} delay\n     */\n    this.delay = 0;\n\n    /**\n     * The initial elapsed time in milliseconds when the attrimator is started.\n     *\n     * @property {Number} offset\n     */\n    this.offset = 0;\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject animator. This\n   * is called as early as possible to establish the start time of the\n   * attrimator so when the user isn't on the page time can be kept accurately.\n   *\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  prestart: function(now)\n  {\n    if ( this.startTime === 0 )\n    {\n      this.startTime = now - this.offset;\n      this.elapsed = this.offset;\n      this.finished = false;\n      this.prestartNext();\n    }\n  },\n\n  /**\n   * Calls {{#crossLink \"Attrimator/prestart:method\"}}{{/crossLink}} on the next\n   * attrimator if it can be called.\n   *\n   * @method prestartNext\n   */\n  prestartNext: function( overrideNext )\n  {\n    // If there is a next attrimator and this attrimator has been prestarted...\n    if ( this.next && this.startTime !== 0 )\n    {\n      // If override next is specified, clear next's startTime\n      if ( overrideNext )\n      {\n        this.next.startTime = 0;\n      }\n\n      // We can only prestart next if it has no startTime.\n      if ( this.next.startTime === 0 )\n      {\n        var totalTime = this.totalTime();\n\n        // If this attrimator has a finite total amount of time, it's end can be calculated.\n        if ( !isNaN( totalTime ) )\n        {\n          this.next.prestart( this.startTime + totalTime );\n        }\n      }\n    }\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject\n   * animator. This is called once in anim8.Animator.preupdate before the first\n   * time this attrimator is updated.\n   *\n   * @method start\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  start: function(now, animator)\n  {\n    this.prestart( now );\n  },\n\n  /**\n   * Invoked once when a new animation cycle is started on an Animator. If this\n   * attrimator updated the frame true must be returned.\n   *\n   * @method startCycle\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  startCycle: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Updates this attrimator given a time to animate to and the frame to\n   * provide with a new value. This method will return true if the attribute\n   * this is animating has been updated and needs to be applied to the subject.\n   *\n   * @method setTime\n   * @param {Number} now\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  setTime: function(now, frame)\n  {\n    if ( this.paused )\n    {\n      return false;\n    }\n\n    var updated = false;\n    var elapsed = now - this.startTime;\n    var updated = false;\n\n    if ( elapsed > this.stopTime )\n    {\n      updated = this.finish( frame );\n    }\n    else if ( elapsed >= this.delay )\n    {\n      updated = this.update( elapsed, frame );\n    }\n\n    this.elapsed = elapsed;\n\n    return updated;\n  },\n\n  /**\n   * Updates the attrimator given elapsed time in milliseconds, the frame to\n   * apply a value to, and returns whether the frame was updated or not.\n   *\n   * @method update\n   * @param {Number} elapsed\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  update: function(elapsed, frame)\n  {\n    throw 'Attrimator.update not implemented';\n  },\n\n  /**\n   * Returns the amount of time that has elapsed in milliseconds.\n   *\n   * @method getElapsed\n   * @return {Number}\n   */\n  getElapsed: function()\n  {\n    return this.elapsed;\n  },\n\n  /**\n   * Stops this attrimator in the given number of milliseconds.\n   *\n   * @method stopIn\n   * @param {Number} milliseconds\n   * @chainable\n   */\n  stopIn: function(milliseconds)\n  {\n    this.stopTime = this.getElapsed() + milliseconds;\n\n    return this;\n  },\n\n  /**\n   * If this attrimator repeats its animation this method will stop repitition\n   * after the next animation cycle.\n   *\n   * @chainable\n   */\n  nopeat: function()\n  {\n    return this;\n  },\n\n  /**\n   * Returns the value at the given time or returns false if it can't be\n   * calculated.\n   *\n   * @method valueAt\n   * @param {Number} time\n   * @param {Any} out\n   * @return {Any|False}\n   */\n  valueAt: function(time, out)\n  {\n    return false;\n  },\n\n  /**\n   * The total amount of time this attrimator will take in milliseconds. This\n   * may be an infinite number.\n   *\n   * @method totalTime\n   * @return {Number}\n   */\n  totalTime: function()\n  {\n    return this.stopTime;\n  },\n\n  /**\n   * The time remaining before this attrimator and any following will be\n   * finished.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.totalTime() - this.elapsed + ( this.next ? this.next.timeRemaining() : 0 );\n  },\n\n  /**\n   * Clones this attrimator.\n   *\n   * @method clone\n   * @return {Attrimator}\n   */\n  clone: function()\n  {\n    throw 'AttributeAnimator.clone not implemented';\n  },\n\n  /**\n   * Returns whether this attrimator has computed values which need to be\n   * resolved by the subject animator calling prepare on this attrimator.\n   *\n   * @method hasComputed\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    return false;\n  },\n\n  /**\n   * Determines whether this attrimator will run infinitely.\n   *\n   * @method isInfinite\n   * @return {Boolean}\n   */\n  isInfinite: function()\n  {\n    return (this.stopTime === Number.POSITIVE_INFINITY);\n  },\n\n  /**\n   * Pauses this attrimator if it isn't already paused.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause: function()\n  {\n    if ( !this.paused )\n    {\n      this.pauseTime = now();\n      this.paused = true;\n    }\n\n    return this;\n  },\n\n  /**\n   * Resumes this attrimator if it's paused. This involves resetting the start\n   * time of the attrimator.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume: function()\n  {\n    if ( this.paused )\n    {\n      var totalPausedTime = now() - this.pauseTime;\n      var delay = this;\n\n      while ( delay && delay.startTime !== 0 )\n      {\n        delay.startTime += totalPausedTime;\n        delay = delay.next;\n      }\n\n      this.paused = false;\n    }\n\n    return this;\n  },\n\n  /**\n   * Whether this attrimator is paused.\n   *\n   * @method isPaused\n   * @return {Boolean}\n   */\n  isPaused: function()\n  {\n    return this.paused;\n  },\n\n  /**\n   * Sets the final state of the attrimator to the frame if one exists and\n   * returns true, otherwise false is returned and frame remains unchanged.\n   *\n   * @method finish\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  finish: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Whether this attrimator is finished.\n   *\n   * @method isFinished\n   * @return {Boolean}\n   */\n  isFinished: function()\n  {\n    return false;\n  },\n\n  /**\n   * Returns the builder that created this attrimator (if any).\n   *\n   * @method getBuilder\n   * @return {Builder}\n   */\n  getBuilder: function()\n  {\n    return this.builder;\n  },\n\n  /**\n   * Places the given attrimator on the end of the chain of attrimators starting\n   * with this attrimator.\n   *\n   * @method queue\n   * @param {Attrimator} next\n   * @chainable\n   */\n  queue: function(next)\n  {\n    if ( this.next )\n    {\n      this.next.queue( next );\n    }\n    else\n    {\n      this.next = next;\n      this.prestartNext();\n    }\n\n    return this;\n  },\n\n  /**\n   * Parses a value with the calculator given a default value to fallback on.\n   *\n   * @method parseValue\n   * @param {Animator} animator\n   * @param {T|Function|True} value\n   * @param {T} defaultValue\n   * @return {T|Function}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  }\n\n});\n\n\n/**\n * A map of attrimators by their attribute name.\n *\n * @class AttrimatorMap\n * @constructor\n * @extends FastMap\n */\nfunction AttrimatorMap()\n{\n  this.reset();\n}\n\nClass.extend( AttrimatorMap, FastMap,\n{\n\n  /**\n   * Sets the group identifier for attrimators in this map. If force is\n   * specified it will overwrite any existing group identifier on attrimators.\n   * If deep is true, then all next attrimators also could have their group\n   * identifiers set.\n   *\n   * @method setGroup\n   * @param {Number} groupId\n   * @param {Boolean} [force=false]\n   * @param {Boolean} [deep=false]\n   */\n  setGroup: function(groupId, force, deep)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[ i ];\n\n      do\n      {\n        if ( !attrimator.groupId || force )\n        {\n          attrimator.groupId = groupId;\n        }\n\n        attrimator = attrimator.next;\n\n      } while ( deep && attrimator );\n    }\n  },\n\n  /**\n   * Queues the attrimator on this map. If the attribute is already on this map\n   * this is placed on the end of the Attrimator chain, otherwise the attrimator\n   * is added to the map. If there is an attrimator already on the map it's\n   * returned.\n   *\n   * @method queue\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  queue: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var current = this.get( attr );\n\n    if ( current )\n    {\n      current.queue( attrimator );\n    }\n    else\n    {\n      this.put( attr, attrimator );\n    }\n\n    return current;\n  },\n\n  /**\n   * Queues the given map to this map. The attrimators placed on this map are\n   * queued and delayed in a way that they all start at the same time. If a\n   * function is provided as the second argument it is invoked whenever an\n   * attrimator in the given map is new & added to this map.\n   *\n   * @method queueMap\n   * @param {AttrimatorMap} map\n   * @param {Function} [onNewAttribute]\n   * @param {Object} [context]\n   * @chainable   188703090\n   */\n  queueMap: function(map, onNewAttribute, context)\n  {\n    var maxRemaining = this.timeRemaining();\n    var attrimators = map.values;\n    var hasCallback = isFunction( onNewAttribute );\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = this.get( attr );\n\n      if ( existing )\n      {\n        if ( existing.isInfinite() )\n        {\n          existing.stopIn( attrimator.delay + maxRemaining );\n        }\n        else\n        {\n          attrimator.delay += (maxRemaining - existing.timeRemaining());\n        }\n\n        existing.queue( attrimator );\n      }\n      else\n      {\n        attrimator.delay += maxRemaining;\n\n        this.put( attr, attrimator );\n\n        if ( hasCallback )\n        {\n          onNewAttribute.call( context || this, attrimator );\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the attrimator at the given index replacing it with the next\n   * attrimator if one exists.\n   *\n   * @method unqueueAt\n   * @param {Number} index\n   * @chainable\n   */\n  unqueueAt: function(index)\n  {\n    var current = this.values[ index ];\n\n    if ( current.next )\n    {\n      this.values[ index ] = current.next;\n    }\n    else\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Clones this map returning a deep clone where all attrimators are cloned.\n   *\n   * @method clone\n   * @return {AttrimatorMap}\n   */\n  clone: function()\n  {\n    var values = this.values;\n    var keys = this.keys;\n    var clone = new AttrimatorMap();\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      clone.values[i] = values[i].clone();\n      clone.keys[i] = keys[i];\n      clone.indices[ keys[i] ] = i;\n    }\n\n    return clone;\n  },\n\n  /**\n   * Returns the time remaining for all finite attrimators in this map. The time\n   * remaining includes queued attrimators.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    var maxRemaining = 0;\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n\n      if ( !attrimator.isInfinite() )\n      {\n        maxRemaining = Math.max( maxRemaining, attrimator.timeRemaining() );\n      }\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Sets the cycle of the attrimators in this map. If there are attrimators\n   * queued the are given the next cycle number. The final cycle number is\n   * returned.\n   *\n   * @method applyCycle\n   * @param {Number} nextCycle\n   * @return {Number}\n   */\n  applyCycle: function(nextCycle)\n  {\n    var currentDepth = this.values;\n    var nextDepth = null;\n\n    while ( currentDepth.length )\n    {\n      nextDepth = [];\n\n      for (var i = currentDepth.length - 1; i >= 0; i--)\n      {\n        var attrimator = currentDepth[ i ];\n\n        attrimator.cycle = nextCycle;\n\n        if ( attrimator.next )\n        {\n          nextDepth.push( attrimator.next );\n        }\n      }\n\n      if ( nextDepth.length )\n      {\n        nextCycle++;\n      }\n\n      currentDepth = nextDepth;\n    }\n\n    return nextCycle;\n  },\n\n  /**\n   * Iterates through all attrimators in this map, at any depth.\n   *\n   * @method iterate\n   * @param  {Function} callback\n   * @param  {Object} [context]\n   * @chainable\n   */\n  iterate: function(callback, context)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n      var previous = null;\n      var depth = 0;\n\n      while ( attrimator )\n      {\n        callback.call( context || this, attrimator, depth++, previous );\n\n        attrimator = (previous = attrimator).next;\n      }\n    }\n\n    return this;\n  }\n\n});\n\n\n/**\n * Instantiates a new Builder. Builders are responsible for taking animation\n * definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generating & placing {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}\n * onto an {{#crossLink \"AttrimatorMap\"}}{{/crossLink}}.\n *\n * Builders are added to the {{#crossLink \"anim8.builder\"}}{{/crossLink}} object\n * by a key and when that key exists in an animation definition, the animation\n * definition is passed to the {{#crossLink \"Builder/parse:method\"}}{{/crossLink}}\n * to generate {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class Builder\n * @constructor\n */\nfunction Builder()\n{\n\n}\n\n/**\n * Returns the next merge ID. Merge IDs are used when merging options into\n * attrimators to perform an optimal merge.\n *\n * @method nextMergeId\n * @static\n */\nBuilder.nextMergeId = (function()\n{\n  var id = 0;\n  return function() {\n    return id++;\n  };\n})();\n\nClass.define( Builder,\n{\n\n  /**\n   * Parses the animation object (and optionally an option object) and pushes\n   * all generated attrimatorMap to the given array.\n   *\n   * @method parse\n   * @param {Object} animation\n   * @param {Object} options\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    throw 'Builder.parse not implemented';\n  },\n\n  /**\n   * Merges the options with the given event instances. This is when an existing\n   * animation is provided but the user wants to override the animation's options.\n   *\n   * Because event properties can be specified in several places there's a priority\n   * to which one takes precedence. The properties specified in the animation object\n   * itself are highest priority, followed by the new options, then by the old\n   * options, and finally by the existing property on the event instance.\n   *\n   * @method merge\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  merge: function( animation, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    var builder = this;\n    var factory = $factory( animation.factory );\n\n    attrimatorMap.iterate(function(e)\n    {\n      if ( e.getBuilder() === builder )\n      {\n        builder.mergeAttrimator( e, e.attribute, helper, factory );\n      }\n    });\n  },\n\n  /**\n   * Merges new options contained in the helper into the given attrimator.\n   *\n   * @method mergeAttrimator\n   * @param {Attrimator} e\n   * @param {String} attr\n   * @param {BuilderHelper} helper\n   * @param {Factory} factory\n   */\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.easing    = helper.mergeEasing( attr, e.easing );\n    e.repeat    = helper.mergeRepeat( attr, e.repeat );\n    e.delay     = helper.mergeDelay( attr, e.delay );\n    e.sleep     = helper.mergeSleep( attr, e.sleep );\n    e.duration  = helper.mergeDuration( attr, e.duration );\n    e.offset    = helper.mergeOffset( attr, e.offset );\n    e.scale     = helper.mergeScale( attr, e.scale );\n    e.scaleBase = helper.mergeScaleBase( attr, e.scaleBase, factory );\n  },\n\n  /**\n   * Calls merge on all builders specified in the given animation definition.\n   *\n   * @method submerge\n   * @protected\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   */\n  submerge: function( animation, newOptions, oldOptions, attrimatorMap )\n  {\n    var helper = new BuilderHelper( animation, oldOptions, newOptions );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( animation, newOptions, oldOptions, attrimatorMap, helper );\n      }\n    }\n  }\n});\n\n\n/**\n * Instantiates a new instance of Builder Helper.\n *\n * @param {Object} input\n * @param {Object} oldOptions\n * @param {Object} newOptions\n * @class BuilderHelper\n * @constructor\n */\nfunction BuilderHelper( input, oldOptions, newOptions )\n{\n  this.input = input;\n  this.oldOptions = oldOptions || {};\n  this.newOptions = newOptions || {};\n\n  this.prepareSpecifics( 'easings' );\n  this.prepareSpecifics( 'repeats' );\n  this.prepareSpecifics( 'delays' );\n  this.prepareSpecifics( 'sleeps' );\n  this.prepareSpecifics( 'durations' );\n  this.prepareSpecifics( 'offsets' );\n  this.prepareSpecifics( 'scales' );\n  this.prepareSpecifics( 'scaleBases' );\n}\n\nClass.define( BuilderHelper,\n{\n\n  /**\n   * If an object with the given name doesn't exist on the input it's created.\n   *\n   * @method prepareSpecifics\n   * @param {String} specifics\n   */\n  prepareSpecifics: function(specifics)\n  {\n    if ( !isObject( this.input[ specifics ] ) )\n    {\n      this.input[ specifics ] = {};\n    }\n  },\n\n  /* PARSING */\n\n  /**\n   * Parses an easing from the input.\n   *\n   * @method parseEasing\n   * @param  {String} attr\n   * @return {String|Function|Array}\n   */\n  parseEasing: function(attr)\n  {\n    return this.parseFirst( attr, 'easing', 'easings' );\n  },\n\n  /**\n   * Parses repeats from the input.\n   *\n   * @method parseRepeat\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseRepeat: function(attr)\n  {\n    return this.parseNumber( attr, $repeat, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Parses delay from the input.\n   *\n   * @method parseDelay\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDelay: function(attr)\n  {\n    return this.parseNumber( attr, $delay, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Parses sleep from the input.\n   *\n   * @method parseSleep\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseSleep: function(attr)\n  {\n    return this.parseNumber( attr, $sleep, $time, 'sleep', 'sleepAdd', 'sleepScale', 'sleeps' );\n  },\n\n  /**\n   * Parses duration from the input.\n   *\n   * @method parseDuration\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDuration: function(attr)\n  {\n    return this.parseNumber( attr, $duration, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Parses offset from the input.\n   *\n   * @method parseOffset\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseOffset: function(attr)\n  {\n    return this.parseNumber( attr, $offset, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Parses scale from the input.\n   *\n   * @method parseScale\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseScale: function(attr)\n  {\n    return this.parseNumber( attr, $scale, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Parses scale base from the input.\n   *\n   * @method parseScaleBase\n   * @param  {String} attr\n   * @return {Any}\n   */\n  parseScaleBase: function(attr)\n  {\n    return this.parseFirst( attr, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Parses a value from the input given the attribute, option, and specific.\n   *\n   * @method parseFirst\n   * @param {String} attr\n   * @param {String} option\n   * @param {String} specifics\n   * @return {Any}\n   */\n  parseFirst: function(attr, option, specifics)\n  {\n    return coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n  },\n\n  /**\n   * Parses an event from the input given a path & builder for the event.\n   *\n   * @method parseEvent\n   * @param {String} attr\n   * @param {Path} path\n   * @param {Builder} builder\n   * @param {Boolean} hasInitialState\n   * @return {Event}\n   */\n  parseEvent: function(attr, path, builder, hasInitialState, mergeId)\n  {\n    var duration   = this.parseDuration( attr );\n    var easing     = this.parseEasing( attr );\n    var delay      = this.parseDelay( attr );\n    var sleep      = this.parseSleep( attr );\n    var repeat     = this.parseRepeat( attr );\n    var offset     = this.parseOffset( attr );\n    var scale      = this.parseScale( attr );\n    var scaleBase  = this.parseScaleBase( attr );\n    var event      = new Event( attr, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, hasInitialState, builder, null, this.input );\n\n    return event;\n  },\n\n  /**\n   * Parses a number from the input given parse functions.\n   *\n   * @method parseNumber\n   * @param {String} attr\n   * @param {Function} parseFunction\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  parseNumber: function(attr, parseFunction, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n    var base = parseFunction( baseRaw );\n    var add = parseOptionFunction( this.oldOptions[ optionAdd ], 0 );\n    var scale = coalesce( this.oldOptions[ optionScale ], 1 );\n\n    return (add === 0 && scale === 1) ? baseRaw : (base + add) * scale;\n  },\n\n  /* MERGING */\n\n  /**\n   * Merges easing based on the input, new options, and the current easing.\n   *\n   * @method mergeEasing\n   * @param {String} attr\n   * @param {Function} current\n   * @return {Function}\n   */\n  mergeEasing: function(attr, current)\n  {\n    return this.mergeFirst( attr, current, $easing, 'easing', 'easings' );\n  },\n\n  /**\n   * Merges repeats based on the input, new options, and the current repeat.\n   *\n   * @method mergeRepeat\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeRepeat: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Merges delay based on the input, new options, and the current delay.\n   *\n   * @method mergeDelay\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDelay: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Merges sleep based on the input, new options, and the current sleep.\n   *\n   * @method mergeSleep\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeSleep: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'sleep', 'sleepAdd', 'sleepScale', 'scales' );\n  },\n\n  /**\n   * Merges duration based on the input, new options, and the current duration.\n   *\n   * @method mergeDuration\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDuration: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Merges offset based on the input, new options, and the current offset.\n   *\n   * @method mergeOffset\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeOffset: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Merges scale based on the input, new options, and the current scale.\n   *\n   * @method mergeScale\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeScale: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Merges scale base based on the input, new options, and the current scale\n   * base.\n   *\n   * @method mergeScaleBase\n   * @param {String} attr\n   * @param {T} current\n   * @param {Factory} factory\n   * @return {T}\n   */\n  mergeScaleBase: function(attr, current, factory)\n  {\n    var calc = factory.attribute( attr ).calculator;\n\n    var parseFunction = function(value, defaultValue) {\n      return calc.parse( value, defaultValue );\n    };\n\n    return this.mergeFirst( attr, current, parseFunction, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Returns the first available option from input, new options, old options,\n   * and the current value.\n   *\n   * @method mergeFirst\n   * @param {String} attr\n   * @param {T} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} specifics\n   * @return {T}\n   */\n  mergeFirst: function(attr, current, parseOptionFunction, option, specifics)\n  {\n    var specific = this.input[ specifics ][ attr ];\n    var value = coalesce( specific, this.newOptions[ option ], this.oldOptions[ option ] );\n\n    return parseOptionFunction( value, current );\n  },\n\n  /**\n   * Merges a number by returning the first occurrence from input, new options,\n   * old options, and the current value.\n   *\n   * @method mergeNumber\n   * @param {String} attr\n   * @param {Number} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  mergeNumber: function(attr, current, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.newOptions[ option ], this.oldOptions[ option ] );\n    var base = parseOptionFunction( baseRaw, current );\n    var add = parseOptionFunction( coalesce( this.newOptions[ optionAdd ], this.oldOptions[ optionAdd ] ), 0 );\n    var scale = coalesce( this.newOptions[ optionScale ], this.oldOptions[ optionScale ], 1 );\n\n    return (base + add) * scale;\n  }\n\n});\n\n\n\n\n/**\n * Instantiates a new Calculator instance.\n *\n * @class Calculator\n * @constructor\n */\nfunction Calculator()\n{\n\n}\n\nClass.define( Calculator,\n{\n\n  /**\n   * Creates the constants for this calculator.\n   *\n   * @method createConstants\n   */\n  createConstants: function()\n  {\n    this.ZERO = this.create();\n    this.ONE = this.parse( 1.0, this.ZERO );\n    this.INFINITY = this.parse( Number.POSITIVE_INFINITY, this.ZERO );\n  },\n\n  /**\n   * Parses the given input for a value this calculator understands.\n   *\n   * @method parse\n   * @param  {T} x\n   * @param  {T} defaultValue\n   * @return {T|Function|False}\n   */\n  parse: function(x, defaultValue)\n  {\n    throw 'Calculator.parse not implemented';\n  },\n\n  /**\n   * Copies a value and places it in out and returns out.\n   *\n   * @method copy\n   * @param {T} out\n   * @param {T} copy\n   * @return {T}\n   */\n  copy: function(out, copy)\n  {\n    throw 'Calculator.copy not implemented';\n  },\n\n  /**\n   * Clones the value and returns the clone.\n   *\n   * @method clone\n   * @param {T} clone\n   * @return {T}\n   */\n  clone: function(clone)\n  {\n    return this.copy( this.create(), clone );\n  },\n\n  /**\n   * Creates an empty value equivalent to zero.\n   *\n   * @method create\n   * @return {T}\n   */\n  create: function()\n  {\n    throw 'Calculator.create not implemented';\n  },\n\n  /**\n   * Scales out by the given scalar value and returns out.\n   *\n   * @method scale\n   * @param {T} out\n   * @param {Number} scale\n   * @return {T}\n   */\n  scale: function(out, scale)\n  {\n    return this.adds( out, out, scale - 1 );\n  },\n\n  /**\n   * Adds an amount to out and returns out.\n   *\n   * @method add\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  add: function(out, amount)\n  {\n    return this.adds( out, amount, 1 );\n  },\n\n  /**\n   * Adds an amount scaled by a scalar value to out and returns out.\n   *\n   * @method adds\n   * @param {T} out\n   * @param {T} amount\n   * @param {Number} amountScale\n   * @return {T}\n   */\n  adds: function(out, amount, amountScale)\n  {\n    throw 'Calculator.adds not implemented';\n  },\n\n  /**\n   * Subtracts an amount from out and returns out.\n   *\n   * @method sub\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  sub: function(out, amount)\n  {\n    return this.adds( out, amount, -1 );\n  },\n\n  /**\n   * Multiplies out by some amount and returns out.\n   *\n   * @method mul\n   * @param {T} out\n   * @param {T} scale\n   * @return {T}\n   */\n  mul: function(out, scale)\n  {\n    throw 'Calculator.mul not implemented';\n  },\n\n  /**\n   * Interpolates out between start & end given a delta value and returns out.\n   * A delta value typically lies between 0 and 1 inclusively.\n   *\n   * @method interpolate\n   * @param {T} out\n   * @param {T} start\n   * @param {T} end\n   * @param {Number} delta\n   * @return {T}\n   */\n  interpolate: function(out, start, end, delta)\n  {\n    out = this.zero( out );\n    out = this.adds( out, start, 1 - delta );\n    out = this.adds( out, end, delta );\n\n    return out;\n  },\n\n  /**\n   * Returns a random value between the given min and max.\n   *\n   * @method random\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  random: function(out, min, max)\n  {\n    return this.interpolate( out, min, max, Math.random() );\n  },\n\n  /**\n   * Calculates the distance between the two values.\n   *\n   * @method distance\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distance: function(a, b)\n  {\n    return Math.sqrt( this.distanceSq( a, b ) );\n  },\n\n  /**\n   * Calculates the squared distance between the two values.\n   *\n   * @method distanceSq\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distanceSq: function(a, b)\n  {\n    throw 'Calculator.distanceSq not implemented';\n  },\n\n  /**\n   * Returns the distance the given value is from zero.\n   *\n   * @method length\n   * @param {T} a\n   * @return {Number}\n   */\n  length: function(a)\n  {\n    return this.distance( a, this.ZERO );\n  },\n\n  /**\n   * Returns the squared distance the given value is from zero.\n   *\n   * @method lengthSq\n   * @param {T} a\n   * @return {Number}\n   */\n  lengthSq: function(a)\n  {\n    return this.distanceSq( a, this.ZERO );\n  },\n\n  /**\n   * Determines whether the given value is valid for this calculator.\n   *\n   * @method isValid\n   * @param {any} a\n   * @return {Boolean}\n   */\n  isValid: function(a)\n  {\n    throw 'Calculator.isValid not implemented';\n  },\n\n  /**\n   * Returns whether the given value is not a number or has a component which is\n   * not a number.\n   *\n   * @method isNaN\n   * @param {T} a\n   * @return {Boolean}\n   */\n  isNaN: function(a)\n  {\n    throw 'Calculator.isNaN not implemented';\n  },\n\n  /**\n   * Determines whether the given value is equivalent to zero given an\n   * acceptable distance from zero (epsilon).\n   *\n   * @method isZero\n   * @param {T} a\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isZero: function(a, epsilon)\n  {\n    throw 'Calculator.isZero not implemented';\n  },\n\n  /**\n   * Determines whether the given values are equivalent up to an acceptable\n   * distance apart.\n   *\n   * @method isEqual\n   * @param {T} a\n   * @param {T} b\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isEqual: function(a, b, epsilon)\n  {\n    throw 'Calculator.isEqual not implemented';\n  },\n\n  /**\n   * Sets out to the minimum value between the two values and returns out.\n   *\n   * @method min\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  min: function(out, a, b)\n  {\n    throw 'Calculator.min not implemented';\n  },\n\n  /**\n   * Sets out to the maximum value between two values and returns out.\n   *\n   * @method max\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  max: function(out, a, b)\n  {\n    throw 'Calculator.max not implemented';\n  },\n\n  /**\n   * Performs the dot product between two values.\n   *\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  dot: function(a, b)\n  {\n    throw 'Calculator.dot not implemented';\n  },\n\n  /**\n   * Clamps out between the given minimum and maximum values and returns out.\n   *\n   * @method clamp\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  clamp: function(out, min, max)\n  {\n    var distSq = this.distanceSq( out, this.ZERO );\n\n    if ( distSq < min * min )\n    {\n      return this.scale( out, min / Math.sqrt( distSq ) );\n    }\n    else if ( distSq > max * max )\n    {\n      return this.scale( out, max / Math.sqrt( distSq ) );\n    }\n\n    return out;\n  },\n\n  /**\n   * Sets the length of the given value and returns the new value.\n   *\n   * @param {T} out\n   * @param {Number} length\n   * @return {T}\n   */\n  setLength: function(out, length)\n  {\n    var lengthSq = this.lengthSq( out );\n\n    if ( lengthSq !== 0 )\n    {\n      return this.scale( out, length / Math.sqrt( lengthSq ) );\n    }\n\n    return out;\n  },\n\n  /**\n   * Determines whether the given value appears to be a relative value. Relative\n   * values are stored as strings starting with a plus or minus for positive or\n   * negative respectively.\n   *\n   * @method isRelative\n   * @param {Any} x\n   * @return {Boolean}\n   * @protected\n   */\n  isRelative: function(x)\n  {\n    return isString( x ) && ( x[0] === '-' || x[0] === '+' );\n  },\n\n  /**\n   * Returns the relative amount of the given relative value. If the value is\n   * not a valid relative value false is returned.\n   *\n   * @method getRelativeAmount\n   * @param {String} x\n   * @return {Number}\n   * @protected\n   */\n  getRelativeAmount: function(x)\n  {\n    var z = parseFloat( x );\n\n    return isNaN(z) ? false : z;\n  }\n\n});\n\n\n/**\n * Instantiates a Defer instance. Defer instances keep track of method calls\n * to call at a later time - after an event occurs. The first argument needs\n * to be a function which returns an instance of anim8.Defer when it's invoked.\n * The second argument is an array of methods that can be deferred.\n *\n * @param {Function} factory\n * @param {Array} methods\n * @class Defer\n * @constructor\n */\nfunction Defer(factory, methods)\n{\n  this.$factory = factory;\n\n  for (var i = 0; i < methods.length; i++)\n  {\n    this[ methods[i] ] = this.$push( methods[i] );\n  }\n}\n\nClass.define( Defer,\n{\n  /**\n   * Resets the defer instance.\n   *\n   * @method $reset\n   * @param {Object} eventable\n   * @param {Any} previous\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   */\n  $reset: function(eventable, previous, eventType, event, callback)\n  {\n    this.$eventable = eventable;\n    this.$previous = previous;\n    this.$eventType = eventType;\n    this.$event = event;\n    this.$callback = callback;\n    this.$calls = [];\n    this.$next = [];\n\n    if ( this.$isRoot() )\n    {\n      this.$register();\n    }\n  },\n\n  /**\n   * Determines whether this Defer instance is at the root.\n   *\n   * @method $isRoot\n   * @return {Boolean}\n   */\n  $isRoot: function()\n  {\n    return this.$eventable === this.$previous;\n  },\n\n  /**\n   * Registers this Defer instance with the eventable.\n   *\n   * @method $register\n   */\n  $register: function()\n  {\n    this.$eventable[ this.$eventType ]( this.$event, this.$run, this );\n  },\n\n  /**\n   * Creates a defered function which passes the method and arguments for\n   * any method call into an array of calls on this Defer instance.\n   *\n   * @method $push\n   * @param {String} methodName\n   * @return {Function}\n   */\n  $push: function(methodName)\n  {\n    return function()\n    {\n      this.$calls.push( [methodName, arguments] );\n\n      return this;\n    };\n  },\n\n  /**\n   * Executes all defered method calls and starts any child Defer instances.\n   *\n   * @method $run\n   */\n  $run: function()\n  {\n    // Invoke the callback if one was given.\n    if ( isFunction( this.$callback ) )\n    {\n      this.$callback.call( this.$eventable, this );\n    }\n\n    for (var i = 0; i < this.$calls.length; i++)\n    {\n      var call = this.$calls[ i ];\n\n      this.$eventable[ call[0] ].apply( this.$eventable, call[1] );\n    }\n\n    for (var k = 0; k < this.$next.length; k++)\n    {\n      this.$next[ k ].$register();\n    }\n  },\n\n  /**\n   * Returns the object before the defer statement.\n   *\n   * @method undefer\n   * @return {Any}\n   */\n  undefer: function()\n  {\n    return this.$previous;\n  },\n\n  /**\n   * Defers any following method calls to after the given event is triggered. A\n   * callback can be specified which is a function invoked after the event is\n   * triggered.\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   * @return {Defer}\n   */\n  defer: function(eventType, event, callback)\n  {\n    var next = new this.$factory( this.$eventable, this, eventType, event, callback );\n\n    this.$next.push( next );\n\n    return next;\n  }\n\n});\n\n\n/**\n * Provides the ability to defer method calls until certain events are triggered.\n *\n * @class DeferAnimator\n * @constructor\n * @extends Defer\n */\nfunction DeferAnimator(animator, previous, eventType, event)\n{\n  this.$reset( animator, previous, eventType, event );\n}\n\n/**\n * Creates the Defer prototype for the following Animator methods.\n */\nDeferAnimator.prototype = new Defer( DeferAnimator,\n[\n  /**\n   * Defers the {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'restore',\n\n  /**\n   * Defers the {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method placeAttrimator\n   */\n  'placeAttrimator',\n\n  /**\n   * Defers the {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method applyInitialState\n   */\n  'applyInitialState',\n\n  /**\n   * Defers the {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method preupdate\n   */\n  'preupdate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/update:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method update\n   */\n  'update',\n\n  /**\n   * Defers the {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method apply\n   */\n  'apply',\n\n  /**\n   * Defers the {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'trimAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/activate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'activate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'deactivate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'destroy',\n\n  /**\n   * Defers the {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'spring',\n\n  /**\n   * Defers the {{#crossLink \"Animator/play:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'play',\n\n  /**\n   * Defers the {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'playAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queue\n   */\n  'queue',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queueAttrimators\n   * @protected\n   */\n  'queueAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transition\n   */\n  'transition',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transitionAttrimators\n   * @protected\n   */\n  'transitionAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tween\n   */\n  'tween',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenTo\n   */\n  'tweenTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenMany\n   */\n  'tweenMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyTo\n   */\n  'tweenManyTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenFrom\n   */\n  'tweenFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyFrom\n   */\n  'tweenManyFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/move:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method move\n   */\n  'move',\n\n  /**\n   * Defers the {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method moveMany\n   */\n  'moveMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method follow\n   */\n  'follow',\n\n  /**\n   * Defers the {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method stop\n   */\n  'stop',\n\n  /**\n   * Defers the {{#crossLink \"Animator/end:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method end\n   */\n  'end',\n\n  /**\n   * Defers the {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method finish\n   */\n  'finish',\n\n  /**\n   * Defers the {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method nopeat\n   */\n  'nopeat',\n\n  /**\n   * Defers the {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method pause\n   */\n  'pause',\n\n  /**\n   * Defers the {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method resume\n   */\n  'resume',\n\n  /**\n   * Defers the {{#crossLink \"Animator/set:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method set\n   */\n  'set',\n\n  /**\n   * Defers the {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method unset\n   */\n  'unset',\n\n  /**\n   * Defers the {{#crossLink \"Animator/get:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method get\n   */\n  'get',\n\n  /**\n   * Defers the {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method invoke\n   */\n  'invoke',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleStart\n   */\n  'onCycleStart',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleEnd\n   */\n  'onCycleEnd'\n]);\n\n\nvar EasingTypes = {};\n\n/**\n * A collection of easing type functions. An easing type functions takes an\n * easing function as an argument and modifies it's input and output values.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.easingType\n */\n\n/**\n * Plays the animation forward normally.\n *\n * @method in\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['in'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum.\n *\n * @method out\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['out'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum halfway.\n *\n * @method inout\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['inout'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x ) * 0.5;\n    }\n    else\n    {\n      return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n    }\n  };\n};\n\n/**\n * Plays the aninmation forwards with the given easing, and backwards with the same easing momentum.\n *\n * @method yoyo\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['yoyo'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation forwards with the given easing, and backwards reflecting the easing's momentum.\n *\n * @method mirror\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['mirror'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return 1.0 - easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation backwards with using the same easing momentum.\n *\n * @method reverse\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['reverse'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation backwards by flipping the easing's momentum.\n *\n * @method flip\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['flip'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( x );\n  };\n};\n\n\n/**\n * A collection of easing functions. An easing functions takes a single number\n * as input that's between 0 and 1 inclusively and returns a number that\n * progresses from 0 to 1 but in-between values may return a number that's less\n * than 0 or greater than 1.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.Easings\n */\nvar Easings = {};\n\n\n/**\n * Returns true if the given string would result in returning an easing.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @method anim8.isEasingName\n * @for Core\n * @param {String} easing\n * @return {Boolean}\n */\nfunction isEasingName(easing)\n{\n  if ( easing in Easings )\n  {\n    return true;\n  }\n\n  var pair = easing.split('-');\n  var e = pair[0];\n  var t = pair[1];\n\n  if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n  {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method linear\n * @for anim8.easing\n */\nEasings['linear'] = function(x)\n{\n  return x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['quad'] = function(x)\n{\n  return x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDAuMyooMS14KSooMS14KSp4KSsoMy4wKigxLXgpKngqeCkrKHgqeCp4KSkqKDEteCkreCooMS0oMS14KSooMS14KSooMS14KSooMS14KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['ease'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n\n  return eq1 * i + eq2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method cubic\n * @for anim8.easing\n */\nEasings['cubic'] = function(x)\n{\n  return x * x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method quartic\n * @for anim8.easing\n */\nEasings['quartic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quintic\n * @for anim8.easing\n */\nEasings['quintic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KngpKyh4KngpLXgiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method back\n * @for anim8.easing\n */\nEasings['back'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  return x3 + x2 - x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzaW4oeCoxLjU3MDc5NjMyNjc5KSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method sine\n * @for anim8.easing\n */\nEasings['sine'] = function(x)\n{\n  return Math.sin( x * 1.57079632679 );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLXgqKDcuMC8xMCkpKngqKDEwLjAvMy4wKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method overshot\n * @for anim8.easing\n */\nEasings['overshot'] = function(x)\n{\n  return (1.0 - x * (7.0 / 10)) * x * (10.0 / 3.0);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KigoMi4wKngqeCp4KSt4KngtKDQuMCp4KSsyLjApKSotc2luKHgqMTAuOTk1NTc0Mjg3NikiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method elastic\n * @for anim8.easing\n */\nEasings['elastic'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n  var wave = -Math.sin(x * 10.9955742876);\n  return scale * wave;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJhYnMoeC1zaW4oeCozLjE0MTU5MjY1MzU5KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method revisit\n * @for anim8.easing\n */\nEasings['revisit'] = function(x)\n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWNvcyh4KngqeCozNi4wKSooMS4wLXgpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method lasso\n * @for anim8.easing\n */\nEasings['lasso'] = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgqeCkqY29zKHgqeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slowbounce\n * @for anim8.easing\n */\nEasings['slowbounce'] = function(x)\n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgpKmNvcyh4KngqMTQuODA0NDA2NjAxNikpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method bounce\n * @for anim8.easing\n */\nEasings['bounce'] = function(x)\n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method smallbounce\n * @for anim8.easing\n */\nEasings['smallbounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjcpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method tinybounce\n * @for anim8.easing\n */\nEasings['tinybounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoY29zKHgqeCoxMi4wKSp4KigxLjAteCkreCkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method hesitant\n * @for anim8.easing\n */\nEasings['hesitant'] = function(x)\n{\n  return (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzcXJ0KHgpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrt\n * @for anim8.easing\n */\nEasings['sqrt'] = function(x)\n{\n  return Math.sqrt( x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDEuMC0oMS14KSooMS14KSooMS14KSooMS14KSkreCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrtf\n * @for anim8.easing\n */\nEasings['sqrtf'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIobG9nKHgpKzIuMCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method log10\n * @for anim8.easing\n */\nEasings['log10'] = function(x)\n{\n  return (Math.log10(x + 0.01) + 2.0) * 0.5 / 1.0021606868913213;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeDwwLjc_KHgqLTAuMzU3KTooKCh4LTAuNykqKHgtMC43KSoyNy41LTAuNSkqMC41KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slingshot\n * @for anim8.easing\n */\nEasings['slingshot'] = function(x)\n{\n  if (x < 0.7) {\n    return (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIxLXNxcnQoMS14KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method circular\n * @for anim8.easing\n */\nEasings['circular'] = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMy4wKigxLjAteCkqeCp4KSsoeCp4KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method gentle\n * @for anim8.easing\n */\nEasings['gentle'] = function(x)\n{\n  return (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\n/**\n * Generates a bezier easing function given the two middle control points. The\n * first point is {0,0} and the last point is {1, 1}.\n *\n * @method bezier\n * @for anim8.easing\n * @param {Number} mX1\n * @param {Number} mY1\n * @param {Number} mX2\n * @param {Number} mY2\n * @return {Function}\n */\nEasings['bezier'] = function(mX1, mY1, mX2, mY2)\n{\n  // https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\n\n/**\n * Possible states an event can be in.\n *\n * @type {Object}\n */\nvar EventState =\n{\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  FINISHED: 8\n};\n\n/**\n * Instantiates a new Event which extends Attrimator.\n *\n * @param {String} attribute\n * @param {Path} path\n * @param {String|Number} duration\n * @param {String|Function|Array} easing\n * @param {String|Number} delay\n * @param {String|Number} sleep\n * @param {String|Number} offset\n * @param {String|Number} repeat\n * @param {Number} scale\n * @param {T|Number} scaleBase\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @param {Object} input\n * @param {Number} mergeId\n * @class Event\n * @constructor\n * @extends Attrimator\n */\nfunction Event(attribute, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, hasInitialState, builder, next, input, mergeId)\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The path the attribute will be animated along.\n   *\n   * @property {Path} path\n   */\n  this.path             = path;\n\n  /**\n   * The easing used to modify the delta value passed to the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n   *\n   * @property {Function} easing\n   */\n  this.easing           = $easing( easing );\n\n  /**\n   * The amount of time in milliseconds to animate an attribute over the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}}\n   *\n   * @property {Number} duration\n   */\n  this.duration         = $duration( duration );\n\n  /**\n   * If this event repeats more than once, this is a pause between animations.\n   *\n   * **See:** {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}}\n   *\n   * @property {Number} sleep\n   */\n  this.sleep            = $sleep( sleep );\n\n  /**\n   * The number of times to repeat the animation.\n   *\n   * **See:** {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}}\n   *\n   * @property {Number} repeat\n   */\n  this.repeat           = $repeat( repeat );\n\n  /**\n   * The amount to scale the value computed from the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}\n   *\n   * @property {T} scale\n   */\n  this.scale            = $scale( scale );\n\n  /**\n   * The base value from which to scale from. This is essentially this data\n   * types default value.\n   *\n   * @property {T} scaleBase\n   */\n  this.scaleBase        = path.calculator.parse( scaleBase, path.calculator.ZERO );\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.offset           = $offset( offset );\n\n  this.input            = input;\n  this.mergeId          = mergeId;\n}\n\nClass.extend( Event, Attrimator,\n{\n  /**\n   * Returns the computed value given a base value and a delta along the path.\n   *\n   * @method computeValue\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  computeValue: function(baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n\n    if ( value !== false && this.scale !== 1.0 )\n    {\n      var calc = this.path.calculator;\n      var baseValue = calc.clone( this.scaleBase );\n      var distance = calc.sub( baseValue, value );\n\n      value = calc.adds( value, distance, -this.scale );\n    }\n\n    return value;\n  },\n\n  /**\n   * Applies the value to the frame and returns true, otherwise returns false.\n   *\n   * @method applyValue\n   * @param {Object} frame\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = baseValue;\n\n    // TODO pull defaultValue from attribute\n    if (!this.path.calculator.isValid( baseValue ))\n    {\n      value = this.path.calculator.create();\n    }\n\n    value = this.computeValue( value, delta );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = value;\n    }\n\n    return value;\n  },\n\n  nopeat: function()\n  {\n    var newRepeat = clamp( Math.ceil( ( this.elapsed - this.delay ) / ( this.duration + this.sleep ) ), 0, this.repeat );\n\n    if ( newRepeat !== this.repeat )\n    {\n      this.repeat = newRepeat;\n      this.prestartNext( true );\n    }\n\n    return this;\n  },\n  finish: function(frame)\n  {\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = EventState.FINISHED;\n  },\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.state = this.delay ? EventState.DELAYED : EventState.ANIMATING;\n\n    if ( this.hasComputed() )\n    {\n      this.path = this.path.replaceComputed( this, animator );\n    }\n  },\n  startCycle: function(frame)\n  {\n    if ( this.hasInitialState )\n    {\n      return this.applyValue( frame, frame[ this.attribute ], 0 );\n    }\n\n    return false;\n  },\n  update: function(elapsed, frame)\n  {\n    var updated = false;\n    var delay = this.delay;\n    var duration = this.duration;\n    var sleep = this.sleep;\n    var repeat = this.repeat;\n    var oldState = this.state;\n    var newState = this.state;\n    var delta = 0;\n\n    elapsed -= delay;\n\n    var cycle = duration + sleep;\n    var iteration = Math.floor( elapsed / cycle );\n\n    if ( iteration >= repeat )\n    {\n      newState = EventState.FINISHED;\n      delta = 1;\n    }\n    else\n    {\n      elapsed -= iteration * cycle;\n\n      if ( elapsed > duration )\n      {\n        newState = EventState.SLEEPING;\n        delta = 1;\n      }\n      else\n      {\n        newState = EventState.ANIMATING;\n        delta = elapsed / duration;\n      }\n    }\n\n    if ( newState === EventState.ANIMATING ||\n       ( newState !== EventState.ANIMATING && oldState === EventState.ANIMATING ) )\n    {\n      this.applyValue( frame, frame[ this.attribute ], delta );\n      updated = true;\n    }\n\n    this.state = newState;\n\n    return updated;\n  },\n  valueAt: function(time, out)\n  {\n    if ( time < this.delay && !this.hasInitialState )\n    {\n      return false;\n    }\n\n    var delta = 0;\n\n    if ( time >= this.delay )\n    {\n      var cycle = (this.duration + this.sleep);\n      var elapsed = (time - this.delay);\n      var iteration = Math.floor( ( elapsed + this.sleep ) / cycle );\n\n      if ( iteration >= this.repeat )\n      {\n        delta = 1.0;\n      }\n      else\n      {\n        delta = Math.min( 1.0, (elapsed % cycle) / this.duration );\n      }\n    }\n\n    return this.computeValue( out, delta );\n  },\n  totalTime: function()\n  {\n    return Math.min( this.stopTime, this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep) );\n  },\n  clone: function()\n  {\n    return new Event( this.attribute, this.path, this.duration, this.easing, this.delay, this.sleep, this.offset, this.repeat, this.scale, this.scaleBase, this.hasInitialState, this.builder, this.next ? this.next.clone() : null, this.input );\n  },\n  hasComputed: function()\n  {\n    return this.path.computed;\n  },\n  isInfinite: function()\n  {\n    return (this.repeat === Number.POSITIVE_INFINITY) && (this.stopTime === Number.POSITIVE_INFINITY);\n  },\n  isFinished: function()\n  {\n    return (this.state === EventState.FINISHED);\n  }\n\n});\n\n/**\n * Returns an Event given the attribute, the path, and a parsed options object.\n *\n * **See:** {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method fromOptions\n * @for Event\n * @param  {String} attr\n * @param  {Path} path\n * @param  {Object} options\n * @return {Event}\n */\nEvent.fromOptions = function(attr, path, options)\n{\n  return new Event( attr, path, options.duration, options.easing, options.delay, options.sleep, options.offset, options.repeat, options.scale, options.scaleBase );\n};\n\n\n/**\n * A factory creates Animator instances for subjects.\n *\n * @class Factory\n * @constructor\n */\nfunction Factory()\n{\n  this.priority = 0;\n}\n\nClass.define( Factory,\n{\n\n  /**\n   * Determines whether the given subject is valid for this factory to create Animators for.\n   *\n   * @method is\n   * @param  {Any} subject\n   * @return {Boolean}\n   */\n  is: function(subject)\n  {\n    throw 'Factory.is not implemented';\n  },\n\n  /**\n   * Returns an animator given a subject.\n   *\n   * @method animatorFor\n   * @param  {Any} subject\n   * @return {Animator}\n   */\n  animatorFor: function(subject)\n  {\n    throw 'Factory.animatorFor not implemented';\n  },\n\n  /**\n   * Explodes the given subject to an array of Animators and adds them to the given array.\n   *\n   * @method animatorsFor\n   * @param {Any} subject\n   * @param {Array} animators\n   */\n  animatorsFor: function(subject, animators)\n  {\n    animators.push( this.animatorFor( subject ) );\n  },\n\n  /**\n   * Destroys the animator by unlinking the animator from the subject.\n   *\n   * @method destroy\n   * @param {Animator} animator\n   */\n  destroy: function(animator)\n  {\n\n  },\n\n  /**\n   * Returns the attribute descriptor for the given attribute. An attribute\n   * descriptor is an object with at least the following properties:\n   *\n   * - `name` = the name of the attribute (same as `attr`)\n   * - `calculatorName` = the name of the calculator for the attribute\n   * - `calculator` = the calculator for the attribute\n   * - `defaultValue` = the default value for the attribute\n   * - `parse` = a method to pass a value and have the calculator parse it and\n   *             return the defaultValue if it was invalid\n   * - `cloneDefault` = a method which returns a clone of the default value\n   *\n   * @method attribute\n   * @param {String} attr\n   * @return {Object}\n   */\n  attribute: function(attr)\n  {\n    throw 'Factory.attribute not implemented';\n  }\n\n});\n\n\n/**\n * A FastMap has the key-to-value benefits of a map and iteration benefits of an\n * array. This is especially beneficial when most of the time the contents of\n * the structure need to be iterated and order doesn't matter (since removal\n * performs a swap which breaks insertion order).\n *\n * @param {FastMap|Object} map\n * @class FastMap\n * @constructor\n */\nfunction FastMap(map)\n{\n  this.reset();\n\n  if ( map instanceof FastMap )\n  {\n    this.putMap( map );\n  }\n  else if ( isObject( map ) )\n  {\n    for (var prop in map)\n    {\n      this.put( prop, map[ prop ] );\n    }\n  }\n}\n\nClass.define( FastMap,\n{\n\n  /**\n   * Resets the map by initializing the values, keys, and indexes.\n   *\n   * @method reset\n   * @chainable\n   */\n  reset: function()\n  {\n    /**\n     * An array of the values in this map.\n     *\n     * @property {Array} values\n     */\n    this.values = [];\n\n    /**\n     * An array of the keys in this map.\n     *\n     * @property {Array} keys\n     */\n    this.keys = [];\n\n    /**\n     * An object of key to index mappings.\n     *\n     * @property {Object} indices\n     */\n    this.indices = {};\n\n    return this;\n  },\n\n  /**\n   * Puts the value in the map by the given key.\n   *\n   * @method put\n   * @param {String} key\n   * @param {V} value\n   * @chainable\n   */\n  put: function(key, value)\n  {\n    if ( key in this.indices )\n    {\n      this.values[ this.indices[ key ] ] = value;\n    }\n    else\n    {\n      this.indices[ key ] = this.values.length;\n      this.values.push( value );\n      this.keys.push( key );\n    }\n\n    return this;\n  },\n\n  /**\n   * Puts all keys & values on the given map into this map overwriting any existing values mapped by similar keys.\n   *\n   * @method putMap\n   * @param {FastMap} map\n   * @chainable\n   */\n  putMap: function(map)\n  {\n    var keys = map.keys;\n    var values = map.values;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      this.put( keys[ i ], values[ i ] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the value mapped by the given key.\n   *\n   * @method get\n   * @param {String} key\n   * @return {V}\n   */\n  get: function(key)\n  {\n    return this.values[ this.indices[ key ] ];\n  },\n\n  /**\n   * Removes the value by a given key\n   *\n   * @method remove\n   * @param {String} key\n   * @chainable\n   */\n  remove: function(key)\n  {\n    var index = this.indices[ key ];\n\n    if ( isNumber( index ) )\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the value & key at the given index.\n   *\n   * @method removeAt\n   * @param {Number} index\n   * @chainable\n   */\n  removeAt: function(index)\n  {\n    var key = this.keys[ index ];\n    var lastValue = this.values.pop();\n    var lastKey = this.keys.pop();\n\n    if ( index < this.values.length )\n    {\n      this.values[ index ] = lastValue;\n      this.keys[ index ] = lastKey;\n      this.indices[ lastKey ] = index;\n    }\n\n    delete this.indices[ key ];\n\n    return this;\n  },\n\n  /**\n   * Returns the index of the value in the array given a key.\n   *\n   * @method indexOf\n   * @param {String} key\n   * @return {Number}\n   */\n  indexOf: function(key)\n  {\n    return coalesce( this.indices[ key ], -1 );\n  },\n\n  /**\n   * Returns whether this map has a value for the given key.\n   *\n   * @method has\n   * @param {String} key\n   * @return {Boolean}\n   */\n  has: function(key)\n  {\n    return key in this.indices;\n  },\n\n  /**\n   * Returns whether the given input has overlap with keys in this map.\n   *\n   * @method hasOverlap\n   * @param {FastMap|Object} map\n   * @return {Boolean}\n   */\n  hasOverlap: function(map)\n  {\n    var keys = this.keys;\n    var indices = map.indices;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      if ( keys[i] in indices )\n      {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Returns the number of elements in the map.\n   *\n   * @method size\n   * @return {Number}\n   */\n  size: function()\n  {\n    return this.values.length;\n  },\n\n  /**\n   * Clears all keys & values from the map.\n   *\n   * @method clear\n   * @chainable\n   */\n  clear: function()\n  {\n    this.values.length = 0;\n    this.keys.length = 0;\n    this.indices = {};\n\n    return this;\n  }\n\n});\n\n\n// TODO\n\nfunction Movie()\n{\n  this.events = [];\n  this.currentTime = 0;\n  this.subjects = new Animators();\n  this.index = 0;\n}\n\nClass.define( Movie,\n{\n  select: function(subjects)\n  {\n\n  },\n  at: function(time)\n  {\n    var at = $time( time, false );\n\n    if ( at === false )\n    {\n      throw 'Invalid time in Movie.at: ' + time;\n    }\n\n    this.currentTime = at;\n  },\n  move: function(time)\n  {\n    var by = $time( time, false );\n\n    if ( by === false )\n    {\n      throw 'Invalid time in Movie.move: ' + time;\n    }\n\n    this.at( this.currentTime + by );\n  },\n  wait: function(time)\n  {\n\n  },\n  after: function(callback, context)\n  {\n\n  },\n  invoke: function(callback, context)\n  {\n\n  },\n  play: function(animation, options, all)\n  {\n    var attr = this.getAttrimators( animation, options );\n    var dura = attr.timeRemaining();\n\n  },\n  queue: function(animation, options)\n  {\n\n  },\n  transition: function(transition, animation, options, all)\n  {\n    var tran = $transition( transition );\n    var attr = this.getAttrimators( animation, options );\n\n  },\n  sequence: function(delay)\n  {\n\n  },\n  _add: function(event)\n  {\n\n  },\n  getAttrimators: function(animation, options)\n  {\n    return $attrimatorsFor( animation, options );\n  }\n});\n\neventize( Movie.prototype );\n\nfunction MovieEvent(time, type, parameters)\n{\n  this.time = time;\n  this.type = type;\n  this.parameters = parameters;\n}\n\nfunction MoviePlayer(movie)\n{\n  this.movie = movie;\n  this.startTime = 0;\n  this.referenceTime = 0;\n  this.direction = 1;\n  this.currentIndex = 0;\n}\n\n\n/**\n * Instantiates a new Oncer which extends Attrimator.\n *\n * @param {String} attribute\n * @param {T} value\n * @param {String|Number} delay\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @class Oncer\n * @constructor\n * @extends Attrimator\n */\nfunction Oncer( attribute, value, delay, hasInitialState, builder, next, input )\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The value that's set to the animator once.\n   *\n   * @property {T} value\n   */\n  this.value = value;\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.applied          = false;\n  this.input            = input;\n}\n\nClass.extend( Oncer, Attrimator,\n{\n  /**\n   * Computes the value of this Oncer.\n   *\n   * @method getValue\n   * @return {T}\n   */\n  getValue: function()\n  {\n    return isFunction( this.value ) ? this.value() : this.value;\n  },\n\n  finish: function(frame)\n  {\n    var update = !this.applied;\n\n    if ( update )\n    {\n      frame[ this.attribute ] = this.getValue();\n\n      this.applied = true;\n    }\n\n    return update;\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.value = animator.getAttribute( this.attribute ).parse( this.value );\n\n    if ( isComputed( this.value ) )\n    {\n      this.value = this.value( this, animator );\n    }\n\n    this.applied = false;\n  },\n\n  startCycle: function(frame)\n  {\n    return this.hasInitialState && this.finish( frame );\n  },\n\n  update: function(elapsed, frame)\n  {\n    return elapsed >= this.delay && this.finish( frame );\n  },\n\n  valueAt: function(time, out)\n  {\n    if ( time < this.delay )\n    {\n      return false;\n    }\n\n    return this.getValue();\n  },\n\n  totalTime: function()\n  {\n    return Math.min( this.stopTime, this.delay );\n  },\n\n  clone: function()\n  {\n    return new Oncer( this.attribute, this.value, this.delay, this.hasInitialState, this.builder, this.next ? this.next.clone() : null );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.value );\n  },\n\n  isInfinite: function()\n  {\n    return false;\n  },\n\n  isFinished: function()\n  {\n    return this.applied;\n  }\n  \n});\n\n\n/**\n * Path class computes a value given a delta value [0, 1].\n *\n * @class Path\n * @constructor\n */\nfunction Path()\n{\n}\n\nClass.define( Path,\n{\n\n  /**\n   * Resets the path with the given name, calculator, and points.\n   *\n   * @method reset\n   * @param {String|false} name\n   * @param {anim8.Calculator} calculator\n   * @param {Array} points\n   */\n  reset: function(calculator, points)\n  {\n    this.calculator = $calculator( calculator );\n    this.points = points;\n    this.computed = this.hasComputed();\n  },\n\n  /**\n   * Computes a value at the given delta setting and returning out.\n   *\n   * @method compute\n   * @param {T} out\n   * @param {Number} delta\n   * @return {T}\n   */\n  compute: function(out, delta)\n  {\n    throw 'Path.compute not implemented';\n  },\n\n  /**\n   * Determines if this path has at least one computed value.\n   *\n   * **See:** {{#crossLink \"anim8.computed\"}}{{/crossLink}}\n   *\n   * @method reset\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    var ps = this.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( isComputed( ps[i] ) )\n      {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Replaces any computed values in this path with the result from invoking\n   * the function and returns a clone of this path.\n   *\n   * @method replaceComputed\n   * @return {anim8.Path}\n   */\n  replaceComputed: function(event, animator)\n  {\n    var clone = this.copy();\n    var ps = clone.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( isComputed( ps[i] ) )\n      {\n        ps[i] = ps[i]( event, animator );\n      }\n    }\n\n    return clone;\n  },\n\n  /**\n   * Resolves and returns the point at the given index.\n   *\n   * @method resolvePoint\n   * @param {Number} i\n   * @return {T}\n   */\n  resolvePoint: function(i)\n  {\n    return resolve( this.points[ i ] );\n  },\n\n  /**\n   * Returns whether the path is linear. Linear paths go directly from point to\n   * point where curved paths do not. Linear paths can have their length\n   * calculated fairly easily however curves you must compute length with a\n   * given granularity.\n   *\n   * @method isLinear\n   * @return {Boolean}\n   */\n  isLinear: function()\n  {\n    return true;\n  },\n\n  /**\n   * Computes the length of the Path with a given granularity. Granularity is\n   * used for non-linear paths - it's the number of segments are calculated on\n   * the path where the length of the segments are summed and returned as the\n   * length.\n   *\n   * @method length\n   * @param {Number} granularity\n   * @return {Number}\n   */\n  length: function(granularity)\n  {\n    var distance = 0;\n    var calc = this.calculator;\n\n    if ( this.isLinear() )\n    {\n      var prev = this.resolvePoint( 0 );\n\n      for (var i = 1; i < this.points.length; i++)\n      {\n        var next = this.resolvePoint( i );\n\n        distance += calc.distance( prev, next );\n\n        prev = next;\n      }\n    }\n    else\n    {\n      var deltadelta = 1.0 / granularity;\n      var delta = deltadelta;\n      var prev = calc.clone( this.resolvePoint( 0 ) );\n      var temp = calc.create();\n\n      for (var i = 1; i <= granularity; i++)\n      {\n        var next = this.compute( temp, delta );\n\n        distance += calc.distance( prev, next );\n        delta += deltadelta;\n\n        temp = prev;\n        prev = next;\n      }\n    }\n\n    return distance;\n  }\n\n});\n\n\n/**\n * Animates a single attribute with a velocity and acceleration.\n *\n * @param {String} attribute\n * @param {Builder} builder\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} velocity\n * @param {T} acceleration\n * @param {Number} terminal\n * @param {Number} stopTime\n * @class Physics\n * @constructor\n * @extends Attrimator\n */\nfunction Physics( attribute, builder, calculator, position, velocity, acceleration, terminal, stopTime )\n{\n  this.reset( attribute, builder, null );\n\n  this.calculator   = calculator;\n  this.position     = position;\n  this.velocity     = velocity;\n  this.acceleration = acceleration;\n  this.terminal     = $number( terminal, Number.POSITIVE_INFINITY );\n  this.stopTime     = $time( stopTime, Number.POSITIVE_INFINITY );\n  this.finished     = false;\n}\n\nClass.extend( Physics, Attrimator,\n{\n  /**\n   * Parses a value for the animator given a default value.\n   *\n   * @method parseValue\n   * @param {anim8.Animator} animator.\n   * @param {T} value\n   * @param {T} defaultValue\n   * @return {T}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  },\n\n  /**\n   * Resolves the velocity to a value.\n   *\n   * @method resolveVelocity\n   * @return {T}\n   */\n  resolveVelocity: function()\n  {\n    return resolve( this.velocity );\n  },\n\n  /**\n   * Resolves the acceleration to a value.\n   *\n   * @method resolveAcceleration\n   * @return {T}\n   */\n  resolveAcceleration: function()\n  {\n    return resolve( this.acceleration );\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator     = calc;\n    this.position       = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.initalPosition = calc.clone( this.position );\n    this.velocity       = this.parseValue( animator, this.velocity, calc.ZERO );\n    this.acceleration   = this.parseValue( animator, this.acceleration, calc.ZERO );\n    this.temp           = calc.create();\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.position ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.acceleration );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var value = this.valueAt( elapsed, this.temp, true );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = this.position = value;\n\n      return true;\n    }\n\n    var calc = this.calculator;\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Physics.MAX_DT );\n    var vel = calc.copy( this.temp, this.resolveVelocity() );\n    var acc = this.resolveAcceleration();\n    var pos = this.position;\n\n    vel = calc.adds( vel, acc, dt );\n\n    if ( this.terminal !== Number.POSITIVE_INFINITY )\n    {\n      vel = calc.clamp( vel, 0, this.terminal );\n    }\n\n    pos = calc.adds( pos, vel, dt );\n\n    this.position = pos;\n\n    if ( !isFunction( this.velocity ) )\n    {\n      this.velocity = calc.copy( this.velocity, vel );\n    }\n\n    frame[ this.attribute ] = pos;\n\n    return true;\n  },\n\n  valueAt: function(time, out, usePosition)\n  {\n    if ( isFunction( this.velocity ) || isFunction( this.acceleration ) || this.terminal !== Number.POSITIVE_INFINITY )\n    {\n      return false;\n    }\n\n    time -= this.delay;\n    time *= 0.001;\n\n    var calc = this.calculator;\n    var value = usePosition ? calc.copy( this.position, this.initalPosition ) : calc.copy( out, this.initalPosition );\n    value = calc.adds( value, this.velocity, time );\n    value = calc.adds( value, this.acceleration, time * time );\n\n    return value;\n  },\n\n  clone: function()\n  {\n    return new Physics( this.attribute, this.builder, this.calculator, this.position, this.velocity, this.acceleration, this.terminal, this.stopTime );\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nPhysics.MAX_DT = 0.1;\n\n\n/**\n * Creates a seqeuence for the given animators offseting animations be the given\n * delay and easing.\n *\n * @param {Animators} animators\n * @param {String|Number} delay\n * @param {String|Array|Function} easing\n * @class Sequence\n * @constructor\n */\nfunction Sequence(animators, delay, easing)\n{\n  /**\n   * The animators to play a sequence of animations against.\n   *\n   * @property {Animators} animators\n   */\n  this.animators = animators;\n\n  /**\n   * The delay in milliseconds between animations.\n   *\n   * @property {Number} delay\n   */\n  this.delay = $delay( delay );\n\n  /**\n   * The easing function to use to calculate the delay offset for an animation.\n   *\n   * @property {Function} easing\n   */\n  this.easing = $easing( easing );\n}\n\nClass.define( Sequence,\n{\n  /**\n   * Returns the maximum delay for delaying generated attrimators.\n   *\n   * @method maxDelay\n   * @return {Number}\n   */\n  maxDelay: function()\n  {\n    return this.delay * (this.animators.length() - 1);\n  },\n\n  /**\n   * Creates an AttrimatorMap with the given options for the animator at the\n   * given index.\n   *\n   * @method createAttrimators\n   * @param {Animation} animation\n   * @param {Object} options\n   * @param {Number} i\n   * @return {AttrimatorMap}\n   */\n  createAttrimators: function(template, i)\n  {\n    var attrimatorMap = template.clone();\n    var attrimators = attrimatorMap.values;\n    var delta = i / (this.animators.length() - 1);\n    var delayOffset = this.easing( delta ) * this.maxDelay();\n\n    for (var k = attrimators.length - 1; k >= 0; k--)\n    {\n      attrimators[ k ].delay += delayOffset;\n    }\n\n    return attrimatorMap;\n  },\n\n  /**\n   * Reverses the sequence by reversing the underlying array of animators.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    this.animators.reverse();\n\n    return this;\n  },\n\n  /**\n   * Plays the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/play:method\"}}Animator.play{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.playAttrimators( attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Queues the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/queue:method\"}}Animator.queue{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n    var maxRemaining = 0;\n    var remaining = [];\n\n    this.animators.each(function(animator, i)\n    {\n      remaining[i] = animator.timeRemaining();\n      maxRemaining = Math.max( maxRemaining, remaining[i] );\n    });\n\n    this.animators.each(function(animator, i)\n    {\n      var delayOffset = maxRemaining - remaining[i];\n      var attrimatorMap = sequence.createAttrimators( template, i );\n      var attrimators = attrimatorMap.values;\n\n      for (var k = attrimators.length - 1; k >= 0; k--)\n      {\n        attrimators[ k ].delay += delayOffset;\n      }\n\n      animator.newCycle( attrimatorMap );\n      animator.queueAttrimators( attrimatorMap );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Transitions into the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/transition:method\"}}Animator.transition{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.transitionAttrimators( transition, attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Activates all animators in this sequence and returns this.\n   *\n   * **See:** {{#crossLink \"Animator/activate:method\"}}Animator.activate{{/crossLink}}\n   *\n   * @method add\n   * @chainable\n   */\n  add: function()\n  {\n    this.animators.activate();\n\n    return this;\n  }\n\n});\n\n\n/**\n * A spring has a resting point, a current position, and the velocity currently\n * enacting on the position based on the implementing classes logic.\n *\n * @class Spring\n * @constructor\n * @extends Attrimator\n */\nfunction Spring()\n{\n}\n\nClass.extend( Spring, Attrimator,\n{\n\n  /**\n   * Resets the spring's properties.\n   *\n   * @method set\n   * @param {String} attribute\n   * @param {Calculator|String} calculator\n   * @param {T|Function|true} rest\n   * @param {T|Function|true} position\n   * @param {T|Function|true} velocity\n   * @param {T|Function|true} gravity\n   * @param {Boolean} finishOnRest\n   */\n  set: function(attribute, calculator, rest, position, velocity, gravity, finishOnRest)\n  {\n    this.reset( attribute, null, null );\n\n    this.calculator   = calculator;\n    this.rest         = rest;\n    this.position     = position;\n    this.gravity      = gravity;\n    this.velocity     = velocity;\n    this.finishOnRest = finishOnRest;\n  },\n\n  /**\n   * Resolves the rest to the expected format.\n   *\n   * @method resolveRest\n   * @return {T}\n   */\n  resolveRest: function()\n  {\n    return resolve( this.rest );\n  },\n\n  /**\n   * Method that's invoked on each spring update.\n   *\n   * @method updateVelocity\n   * @param {Number} dt\n   */\n  updateVelocity: function(dt)\n  {\n    throw 'Spring.updateVelocity not implemented';\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator = calc;\n    this.rest       = this.parseValue( animator, this.rest, attribute.defaultValue );\n    this.position   = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.gravity    = this.parseValue( animator, this.gravity, calc.ZERO );\n    this.velocity   = this.parseValue( animator, this.velocity, calc.ZERO );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var calc = this.calculator;\n\n    // the number of elapsed seconds (maxed to avoid crazy behavior with low FPS)\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Spring.MAX_DT );\n\n    // keep track of the starting position to determine whether the position has updated.\n    var starting = calc.clone( this.position );\n\n    // call the update method which should update the position\n    this.updateVelocity( dt );\n    this.velocity = calc.adds( this.velocity, this.gravity, dt );\n    this.position = calc.adds( this.position, this.velocity, dt );\n\n    // track whether the attribute has updated so the animator knows if it needs to apply the attribute to the subject.\n    var updated = !calc.isEqual( starting, this.position, Spring.EPSILON );\n\n    if ( updated )\n    {\n      frame[ this.attribute ] = this.position;\n    }\n    else if ( this.finishOnRest && calc.isZero( this.velocity ) )\n    {\n      this.finished = true;\n    }\n\n    return updated;\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nSpring.MAX_DT = 0.1;\n\n/**\n * The value used to determine whether two positions in a spring are different.\n */\nSpring.EPSILON = 0.0001;\n\n\n/**\n * @module anim8\n * @class Core\n */\n\n/**\n * Converts a subject into an animator and returns it. If the subject\n * is already an animator it's returned immediately. If the subject can't be\n * animated then false is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.factoryFor:method\"}}{{/crossLink}}\n *\n * @param {Any} subject\n * @return {Animator|false}\n * @method anim8\n */\nfunction anim8(subject)\n{\n  if ( subject instanceof Animator )\n  {\n    return subject;\n  }\n\n  var factory = $factoryFor( subject, true );\n\n  if ( factory === false )\n  {\n    return false;\n  }\n\n  return factory.animatorFor( subject );\n}\n\n/**\n * Add events to the animation cycle: begin, end, finished, starting\n */\neventize( anim8 );\n\n/**\n * Converts an array of subjects into an array of Animators.\n *\n * @param {Array} subject\n * @return {Animators}\n * @method anim8s\n */\nfunction anim8s(subjects)\n{\n  var factory = $factoryFor( subjects, true );\n  var animators = [];\n\n  if ( factory !== false )\n  {\n    factory.animatorsFor( subjects, animators );\n\n    return new Animators( animators );\n  }\n\n  if ( !isArray( subjects ) )\n  {\n    subjects = [ subjects ];\n  }\n\n  var animators = [];\n\n  for (var i = 0; i < subjects.length; i++)\n  {\n    var animator = anim8( subjects[i] );\n\n    if ( animator !== false )\n    {\n      animators.push( animator );\n    }\n  }\n\n  return new Animators( animators );\n}\n\n/**\n * Whether the animation cycle is currently running. This is true\n * when where are active animators and anim8.run is being called\n * and false otherwise.\n *\n * @property {Boolean} anim8.running\n * @readOnly\n */\nvar running = false;\n\n/**\n * Live Mode keeps the animation cycles running even when there aren't\n * Animators. For highly interactive applications enabling this may\n * take up more resources but it will result in smoother animations. When\n * the animation cycle goes from stopped to running it takes a few frames\n * to smooth out when this is false.\n *\n * @property {Boolean} anim8.live\n */\nvar live = false;\n\n/**\n * The anim8 instance for all active animators.\n *\n * @property {Animators} anim8.animating\n * @readOnly\n */\nvar animating = new Animators();\n\n\nfunction isRunning()\n{\n  return running;\n}\n\nfunction isLive()\n{\n  return live;\n}\n\nfunction setLive(newLive)\n{\n  live = newLive;\n}\n\n/**\n * Adds an animator to the list of animating if it isn't there already. If the\n * animation loop isn't currently running it's started.\n *\n * @method anim8.add\n * @param {Animator} animator\n */\nfunction activateAnimator(animator)\n{\n  pushAnimator( animator );\n\n  activate();\n}\n\nfunction pushAnimator(animator)\n{\n  if ( !animator.active )\n  {\n    animator.active = true;\n    animating.push( animator );\n  }\n}\n\nfunction activate()\n{\n  if ( !running )\n  {\n    running = true;\n\n    anim8.trigger('starting');\n\n    requestRun( run );\n  }\n}\n\n/**\n * The function to call if animations need to be done.\n *\n * @method anim8.requestRun\n * @param {Function} callback\n */\nvar requestRun = (function()\n{\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n  var requestor = global.requestAnimationFrame;\n\n  for (var x = 0; x < vendors.length && !requestor; ++x)\n  {\n    requestor = global[ vendors[x] + 'RequestAnimationFrame' ];\n  }\n\n  if (!requestor)\n  {\n    var lastTime = 0;\n\n    return function(callback)\n    {\n      var currentTime = now();\n      var timeToCall = Math.max( Defaults.pauseTime, Defaults.frameRate - (currentTime - lastTime) );\n      var id = global.setTimeout( function() { callback( currentTime + timeToCall ); }, timeToCall );\n      lastTime = currentTime + timeToCall;\n      return id;\n    };\n  }\n\n  return function(callback)\n  {\n    requestor( callback );\n  };\n\n})();\n\n/**\n * Executes an animation loop cycle which consists of four operations:\n *\n * 1. Call preupdate on all Animators\n * 2. Call update on all Animators\n * 3. Call apply on all Animators\n * 4. Remove finished Animators\n *\n * When there are no more animating the loop cycle is stopped.\n *\n * @method anim8.run\n */\nfunction run()\n{\n  anim8.trigger('begin');\n\n  var currentTime = now();\n  var active = animating.length();\n\n  // notify animators that we're about to update\n  animating.preupdate( currentTime, active );\n\n  // update animating based on the current time\n  animating.update( currentTime, active );\n\n  // apply the attributes calculated\n  animating.apply( active );\n\n  // if the animator is done remove it\n  animating.filter( animating.handleFinished );\n\n  // The loop has ended!\n  anim8.trigger('end');\n\n  // if there are animators still remaining call me again!\n  if ( animating.length() || live )\n  {\n    requestRun( run );\n  }\n  else\n  {\n    running = false;\n\n    anim8.trigger('finished');\n  }\n}\n\n/**\n * Pauses all animators.\n *\n * **See:** {{#crossLink \"Animator/pause:method\"}}{{/crossLink}}\n *\n * @method anim8.pause\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction pause(attributes)\n{\n  animating.pause( attributes );\n\n  return anim8;\n}\n\n/**\n * Resumes all animators.\n *\n * **See:** {{#crossLink \"Animator/resume:method\"}}{{/crossLink}}\n *\n * @method anim8.resume\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction resume(attributes)\n{\n  animating.resume( attributes );\n\n  return anim8;\n}\n\n/**\n * Stops all animators.\n *\n * **See:** {{#crossLink \"Animator/stop:method\"}}{{/crossLink}}\n *\n * @method anim8.stop\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction stop(attributes)\n{\n  animating.stop( attributes );\n\n  return anim8;\n}\n\n/**\n * Ends all animators.\n *\n * **See:** {{#crossLink \"Animator/end:method\"}}{{/crossLink}}\n *\n * @method anim8.end\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction end(attributes)\n{\n  animating.end( attributes );\n\n  return anim8;\n}\n\n/**\n * Finishes all animators.\n *\n * **See:** {{#crossLink \"Animator/finish:method\"}}{{/crossLink}}\n *\n * @method anim8.finish\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction finish(attributes)\n{\n  animating.finish( attributes );\n\n  return anim8;\n}\n\n/**\n * Interrupts all animators from repeating currently running animations.\n *\n * **See:** {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}}\n *\n * @method anim8.nopeat\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction nopeat(attributes)\n{\n  animating.nopeat( attributes );\n\n  return anim8;\n}\n\n\n/**\n * Instantiates a new color given red, green, blue, and white components.\n * If a component is missed it's default value is either 255 (white) or\n * 1.0 (opaque).\n *\n * @method anim8.color\n * @for Core\n * @param {Number} [r=255]\n * @param {Number} [g=255]\n * @param {Number} [b=255]\n * @param {Number} [a=1]\n * @return {Object}\n */\nfunction Color(r, g, b, a)\n{\n  return {\n    r: coalesce( r, 255 ),\n    g: coalesce( g, 255 ),\n    b: coalesce( b, 255 ),\n    a: coalesce( a, 1.0 )\n  };\n}\n\n/**\n * The array of parsing methods to execute sequentally until a color is returned.\n */\nColor.parsers =\n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, parseInt, 255),\n          g: this.parseComponent(input.g, parseInt, 255),\n          b: this.parseComponent(input.b, parseInt, 255),\n          a: this.parseComponent(input.a, parseFloat, 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = parseFunction(t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  },\n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n/**\n * Parses a color from a string.\n *\n * @method anim8.color.parse\n * @for Core\n * @param {String} input\n * @return {Object|False}\n */\nColor.parse = function(input)\n{\n  var cp = Color.parsers;\n\n  for (var i = 0; i < cp.length; i++)\n  {\n    var parsed = cp[ i ].parse( input );\n\n    if (parsed !== false)\n    {\n      return parsed;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Formats a color to a string.\n *\n * @method anim8.color.format\n * @for Core\n * @param {Object} color\n * @return {String}\n */\nColor.format = function(color)\n{\n  var ca = clamp( coalesce( color.a, 1.0 ), 0, 1 );\n  var cr = Math.floor( clamp( coalesce( color.r, 255 ), 0, 255 ) );\n  var cg = Math.floor( clamp( coalesce( color.g, 255 ), 0, 255 ) );\n  var cb = Math.floor( clamp( coalesce( color.b, 255 ), 0, 255 ) );\n\n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n\n    if (r.length === 1) {\n      r = '0' + r;\n    }\n    if (g.length === 1) {\n      g = '0' + g;\n    }\n    if (b.length === 1) {\n      b = '0' + b;\n    }\n\n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n\n\n/**\n * A collection of computed functions. Computed functions are functions that\n * are invoked once at the start of an animation given the\n * {{#crossLink \"Attrimator\"}}{{/crossLink}} and\n * {{#crossLink \"Animator\"}}{{/crossLink}} and the result replaces the function.\n *\n * **See:** {{#crossLink \"anim8.computed/current:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/relative:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/random:method\"}}{{/crossLink}}\n *\n * @class anim8.computed\n */\nfunction computed(funcOrName, func)\n{\n  if ( isString( funcOrName ) && isFunction( func ) )\n  {\n    func.computed = true;\n\n    computed[ funcOrName ] = func;\n\n    return func;\n  }\n  else if ( isFunction( funcOrName ) )\n  {\n    funcOrName.computed = true;\n\n    return funcOrName;\n  }\n\n  throw funcOrName + ' and ' + func + ' are not valid parameters for creating a computed function.';\n}\n\n/**\n * Calculates and returns the current value for an\n * {{#crossLink \"Animator\"}}{{/crossLink}}. If the animator doesn't have a\n * current value the default value for the attribute is returned.\n *\n * @method current\n * @param {Attrimator} attrimator\n * @param {Animator} animator\n * @return {T}\n */\ncomputed('current', function(attrimator, animator)\n{\n  var attr = attrimator.attribute;\n  var attribute = animator.getAttribute( attr );\n\n  if ( attr in animator.frame )\n  {\n    return attribute.calculator.clone( animator.frame[ attr ] );\n  }\n  else\n  {\n    return attribute.cloneDefault();\n  }\n});\n\n/**\n * Calculates a value relative to the attribute value currently in the animator.\n * A mask can be used for mixed relative & absolute values in a single value\n * where 1 makes it relative and 0 makes it absolute.\n *\n * **Examples:**\n *\n *     anim8.computed.relative( 40 ); // returns function which adds 40 to current value\n *     anim8.computed.relative( 40, 0.5 ); // returns function which adds 40 to half of the current value\n *     anim8.computed.relative( {x: 20, y: 10}, {x: 1, y: 0} ); // returns function which adds 20 to the x of the current value and sets the y of the current value to 10\n *\n * @method relative\n * @param {T} relativeAmount\n * @param {T} mask\n * @return {Function}\n */\ncomputed('relative', function(relativeAmount, mask)\n{\n  // If the relativeAmount is already a computed value, return it.\n  if ( isComputed( relativeAmount ) )\n  {\n    return relativeAmount;\n  }\n\n  var relativeFunction = function(attrimator, animator)\n  {\n    var attr = attrimator.attribute;\n    var attribute = animator.getAttribute( attr );\n    var calc = attribute.calculator;\n    var current = null;\n\n    if ( attr in animator.frame )\n    {\n      current = calc.clone( animator.frame[ attr ] );\n    }\n    else\n    {\n      current = attribute.cloneDefault();\n    }\n\n    if ( mask )\n    {\n      current = calc.mul( current, mask );\n    }\n\n    return calc.add( current, relativeAmount );\n  };\n\n  // Marks the function as computed which is a signal to paths & events.\n  relativeFunction.computed = true;\n\n  // Place the input on the function if the user wants to modify it live\n  relativeFunction.relativeAmount = relativeAmount;\n  relativeFunction.mask = mask;\n\n  return relativeFunction;\n});\n\n/**\n * Returns a random value based on the given random selection.\n *\n * 1. If an array is given an item is randomly chosen from that array.\n * 2. If an instance of {{#crossLink \"Path\"}}{{/crossLink}} is given a point is randomly computed and returned.\n * 3. If an object with min & max values is given a random value between them is returned.\n *\n * **Examples:**\n *\n *     anim8.computed.random( [1, 2, 3] ); // returns function which returns a 1, 2, or 3\n *     anim8.computed.random( {min: 1, max: 5} ); // returns function which returns a value between 1 and 5\n *     anim8.computed.random( {min: {x: 0, y: 0}, max: {x: 100, y: 200}} ); // returns function which returns a point in the rectangle {0,0,100,200}\n *     anim8.computed.random( path ); // returns function which returns a value anywhere along the given path\n *\n * @method random\n * @param  {Array|Object|Path} randomSelection\n * @return {Function}\n */\ncomputed('random', function(randomSelection)\n{\n  var randomFunction = null;\n\n  if ( isArray( randomSelection ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var selected = randomSelection[ Math.floor( Math.random() * randomSelection.length ) ];\n\n      return calc.parse( selected, calc.ZERO );\n    };\n  }\n  else if ( randomSelection instanceof Path )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n\n      return randomSelection.compute( calc.create(), Math.random() );\n    };\n  }\n  else if ( isObject( randomSelection ) && isDefined( randomSelection.min ) && isDefined( randomSelection.max ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var resolvedMin = resolve( randomSelection.min );\n      var resolvedMax = resolve( randomSelection.max );\n      var min = calc.parse( resolvedMin, calc.ZERO );\n      var max = calc.parse( resolvedMax, calc.ZERO );\n\n      return calc.random( calc.create(), min, max );\n    };\n  }\n  else\n  {\n    throw 'Invalid random input: ' + randomSelection;\n  }\n\n  // Place the input on the function if the user wants to modify it live\n  randomFunction.randomSelection = randomSelection;\n\n  return computed( randomFunction );\n});\n\n/**\n * Determines whether the given value is a computed value. A computed value is\n * function with a variable 'computed' set to a true value.\n *\n * @param  {any} x\n * @return {Boolean}\n */\nfunction isComputed(x)\n{\n  return isFunction( x ) && x.computed;\n}\n\n\n/**\n * Creates a function which calls a method on all elements in the array or on\n * the first element.\n *\n * @method delegate\n * @param {String} functionName\n * @param {String} returning\n */\nfunction delegate(functionName, returning)\n{\n  switch (returning)\n  {\n  case DelegateTypes.THIS:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        array[i][functionName].apply( array[i], arguments );\n      }\n\n      return this;\n    };\n\n  case DelegateTypes.RESULTS:\n    return function()\n    {\n      var array = this.$ || this;\n      var results = [];\n\n      for (var i = 0; i < array.length; i++)\n      {\n        results.push( array[i][functionName].apply( array[i], arguments ) );\n      }\n\n      return results;\n    };\n\n  case DelegateTypes.FIRST:\n    return function()\n    {\n      var array = this.$ || this;\n\n      return array.length === 0 ? undefined : array[0][functionName].apply( array[0], arguments );\n    };\n\n  case DelegateTypes.TRUE:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        if ( array[i][functionName].apply( array[i], arguments ) )\n        {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n  }\n\n  return noop;\n}\n\n\n/**\n * Creates a composite dyanmic attribute which is an object of existing\n * attributes which takes advantage of an object based calculator.\n *\n * **Example:**\n *\n *     anim8.object.attribute.topLeft = {\n *       dynamic: anim8.composite({x:'left', y:'top'}),\n *       calculator:'2d',\n *       defaultValue: {x: 0, y: 0},\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'topLeft' being placed in left and top.\n *\n * @method anim8.composite\n * @param  {Object} map\n * @for Core\n * @return {Function}\n */\nfunction composite( map )\n{\n  return function( value, frame )\n  {\n    for ( var prop in map )\n    {\n      frame[ map[ prop ] ] = value[ prop ];\n    }\n  };\n}\n\n/**\n * Creates a partial dynamic attribute which is a value that's placed in a\n * sub-property of an attribute.\n *\n * **Example:**\n *\n *     anim8.object.attribute.x = {\n *       dynamic: anim8.partial( 'position', 'x' ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'x' being placed in position.x\n *\n * @method anim8.partial\n * @param {String} attribute\n * @param {String} subattribute\n * @for Core\n * @return {Function}\n */\nfunction partial( attribute, subattribute )\n{\n  return function( value, frame )\n  {\n    if ( !isObject( frame[ attribute ] ) )\n    {\n      frame[ attribute ] = {};\n    }\n\n    frame[ attribute ][ subattribute ] = value;\n  };\n}\n\n/**\n * Creates a dynamic attribute which spreads its value over several attributes.\n *\n * **Example:**\n *\n *     anim8.dom.attribute.padding = {\n *       dynamic: anim8.spread( ['paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom' ] ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the value in 'padding' being placed in paddingLeft, paddingTop,\n * paddingRight, and paddingBottom.\n *\n * @param  {Array} attributes\n * @return {Function}\n */\nfunction spread( attributes )\n{\n  return function( value, frame )\n  {\n    for ( var i = 0; i < attributes.length; i++ )\n    {\n      frame[ attributes[ i ] ] = value;\n    }\n  };\n}\n\n\n\n\n/**\n * Adds functions to the given object (or prototype) so you can listen for any\n * number of events on the given object, optionally once. Listeners can be\n * removed later.\n *\n * The following methods will be added to the given target:\n *\n *     target.on( events, callback, [context] )\n *     target.once( events, callback, [context] )\n *     target.off( events, callback )\n *     target.trigger( event, [argument] )\n *\n * Where...\n * - `events` is a string of space delimited events.\n * - `callback` is a function to invoke when the event is triggered.\n * - `context` is an object that should be the `this` when the callback is\n *   invoked. If no context is given the default value is the object which has\n *   the trigger function that was invoked.\n *\n * @method eventize\n * @for Core\n * @param {Object} target The object to add `on`, `once`, `off`, and `trigger`\n *    functions to.\n */\nfunction eventize(target)\n{\n  Class.defineProperty( target, 'on', on );\n  Class.defineProperty( target, 'once', once );\n  Class.defineProperty( target, 'off', off );\n  Class.defineProperty( target, 'trigger', trigger );\n}\n\n  // Adds a listener to $this\nfunction addListener($this, property, events, callback, context)\n{\n  var events = toArray( events, ' ' );\n\n  if ( !isDefined( $this[ property ] ) )\n  {\n    Class.defineProperty( $this, property, {} );\n  }\n\n  for (var i = 0; i < events.length; i++)\n  {\n    if ( !isDefined( $this[ property ][ events[i] ] ) )\n    {\n      $this[ property ][ events[i] ] = [];\n    }\n\n    $this[ property ][ events[i] ].push( [ callback, context || $this ] );\n  }\n}\n\n// Removes a listener from an array of listeners.\nfunction removeListeners(listeners, event, callback)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n\n    for (var k = eventListeners.length - 1; k >= 0; k--)\n    {\n      if (eventListeners[ k ][0] === callback)\n      {\n        eventListeners.splice( k, 1 );\n      }\n    }\n  }\n}\n\n// Deletes a property from the given object if it exists\nfunction deleteProperty(obj, prop)\n{\n  if ( obj && prop in obj )\n  {\n    delete obj[ prop ];\n  }\n}\n\n// Triggers listeneers for the given event\nfunction triggerListeners(listeners, event, argument, clear)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n    var max = eventListeners.length;\n\n    for (var i = 0; i < max; i++)\n    {\n      var callback = eventListeners[ i ];\n\n      callback[0].call( callback[1], argument );\n    }\n\n    if ( clear )\n    {\n      if ( eventListeners.length !== max )\n      {\n        listeners[ event ] = eventListeners.slice( max );\n      }\n      else\n      {\n        delete listeners[ event ];\n      }\n    }\n  }\n}\n\n/**\n * Listens for every occurrence of the given events and invokes the callback\n * each time any of them are triggered.\n *\n * @method on\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction on(events, callback, context)\n{\n  addListener( this, '$on', events, callback, context );\n\n  return this;\n}\n\n/**\n * Listens for the next occurrence for each of the given events and invokes\n * the callback when any of the events are triggered.\n *\n * @method once\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction once(events, callback, context)\n{\n  addListener( this, '$once', events, callback, context );\n\n  return this;\n}\n\n/**\n * Stops listening for a given callback for a given set of events.\n *\n * **Examples:**\n *\n *     target.off();           // remove all listeners\n *     target.off('a b');      // remove all listeners on events a & b\n *     target.off(['a', 'b']); // remove all listeners on events a & b\n *     target.off('a', x);     // remove listener x from event a\n *\n * @method off\n * @for eventize\n * @param {String|Array|Object} [events]\n * @param {Function} [callback]\n * @chainable\n */\nfunction off(events, callback)\n{\n  // Remove ALL listeners\n  if ( !isDefined( events ) )\n  {\n    delete this.$on;\n    delete this.$once;\n  }\n  else\n  {\n    var events = toArray( events, ' ' );\n\n    // Remove listeners for given events\n    if ( !isFunction( callback ) )\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        deleteProperty( this.$on, events[i] );\n        deleteProperty( this.$once, events[i] );\n      }\n    }\n    // Remove specific listener\n    else\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        removeListeners( this.$on, events[i], callback );\n        removeListeners( this.$once, events[i], callback );\n      }\n    }\n  }\n\n  return this;\n}\n\n/**\n * Triggers a single event optionally passing an argument to any listeners.\n *\n * @method trigger\n * @for eventize\n * @param {String} event\n * @param {Any} argument\n * @chainable\n */\nfunction trigger(event, argument)\n{\n  triggerListeners( this.$on, event, argument, false );\n  triggerListeners( this.$once, event, argument, true );\n\n  return this;\n}\n\n\nvar Animations = {};\n\n/**\n * Saves an animation under the given name. It can be played, queued, and\n * transitioned into at a later time providing the name and optionally options\n * to override with.\n *\n * **See:** {{#crossLink \"Core/anim8.animation:method\"}}anim8.animation{{/crossLink}},\n *          {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method anim8.save\n * @for Core\n * @param {String} name\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n */\nfunction save( name, animation, options )\n{\n  var animation = $animation( animation, options );\n  var key = name.toLowerCase();\n\n  animation.name = name;\n\n  Animations[ key ] = animation;\n}\n\n\n/*\n * A calculator for objects with an x and y component (number)\n *\n * @class Calculator2d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator2d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator2d, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x\n      };\n    }\n    // When an array is given, assume [x, y]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, defaultValue.x );\n      var cy = coalesce( x.y, defaultValue.y );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n\n      if ( rx !== false && ry !== false )\n      {\n        var parsed = { x: rx, y: ry };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n\n        if ( ix || iy )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // Relative values & left/right/middle/center/top/bottom aliases.\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the X & Y components evenly.\n      if ( this.isRelative( x ) )\n      {\n        var rx = this.getRelativeAmount( x );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { x: rx, y: rx } );\n        }\n      }\n\n      var aliases = {\n        'left':   0,\n        'right':  100,\n        'middle': 50,\n        'center': 50,\n        'top':    0,\n        'bottom': 100\n      };\n\n      if ( x.indexOf(' ') === -1 )\n      {\n        var _x = parseFloat( x );\n\n        if ( !isNaN(_x) || x in aliases )\n        {\n          return {\n            x: x in aliases ? aliases[x] : _x,\n            y: x in aliases ? aliases[x] : _x\n          };\n        }\n      }\n      else\n      {\n        var pair = x.split(' ');\n        var _x = parseFloat( pair[0] );\n        var _y = parseFloat( pair[1] );\n\n        if ((!isNaN(_x) || pair[0] in aliases) && (!isNaN(_y) || pair[1] in aliases))\n        {\n          return {\n            x: pair[0] in aliases ? aliases[pair[0]] : _x,\n            y: pair[1] in aliases ? aliases[pair[1]] : _y\n          };\n        }\n      }\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    return dx * dx + dy * dy;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, and z component (number)\n *\n * @class Calculator3d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator3d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator3d, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x,\n        z: x\n      };\n    }\n    // When an array is given, assume [x, y, z]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, defaultValue.x );\n      var cy = coalesce( x.y, defaultValue.y );\n      var cz = coalesce( x.z, defaultValue.z );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n      var rz = this.getRelativeAmount( cz );\n\n      if ( rx !== false && ry !== false && rz !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n        var iz = this.isRelative( cz );\n\n        if ( ix || iy || iz )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // If only a relative value is given it will modify the X, Y, & Z components evenly.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { x: rx, y: rx, z: rx } );\n      }\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for number primitives.\n *\n * @class CalculatorNumber\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorNumber()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorNumber, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // A raw number\n    if ( isNumber( x ) )\n    {\n      return x;\n    }\n    // A number in a string or a relative number.\n    if ( isString( x ) )\n    {\n      var amount = this.getRelativeAmount( x );\n\n      if ( amount !== false )\n      {\n        if ( this.isRelative( x ) )\n        {\n          return computed.relative( amount );\n        }\n        else\n        {\n          return amount;\n        }\n      }\n    }\n\n    return defaultValue;\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return 0.0;\n  },\n  zero: function(out)\n  {\n    return 0.0;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale)\n  {\n    return out *= scale;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return (end - start) * delta + start;\n  },\n  distanceSq: function(a, b)\n  {\n    var ab = a - b;\n    return ab * ab;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a - b );\n  },\n  length: function(a)\n  {\n    return Math.abs( a );\n  },\n  lengthSq: function(a)\n  {\n    return a * a;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'number';\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a - b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    return Math.min( a, b );\n  },\n  max: function(out, a, b)\n  {\n    return Math.max( a, b );\n  },\n  dot: function(a, b)\n  {\n    return a * b;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, z, and angle components.\n *\n * @class CalculatorQuaternion\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorQuaternion()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorQuaternion, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When only a number is given assume it's an angle around the Z-axis.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: 0,\n        y: 0,\n        z: 1,\n        angle: x\n      };\n    }\n    // When an array is given, assume [x, y, z, angle]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2], angle: x[3] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, defaultValue.x );\n      var cy = coalesce( x.y, defaultValue.y );\n      var cz = coalesce( x.z, defaultValue.z );\n      var ca = coalesce( x.angle, defaultValue.angle );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n      var rz = this.getRelativeAmount( cz );\n      var ra = this.getRelativeAmount( ca );\n\n      if ( rx !== false && ry !== false && rz !== false && ra !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz, angle: ra };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n        var iz = this.isRelative( cz );\n        var ia = this.isRelative( ca );\n\n        if ( ix || iy || iz || ia )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0,\n            angle: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed );\n        }\n\n        return parsed;\n      }\n    }\n    // When a relative value is given, assume it's for an angle around the Z-axis.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { x:0, y:0, z:1, angle: rx }, { x:0, y:0, z:0, angle:1 } );\n      }\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    out.angle = copy.angle;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    out.angle = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    out.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    out.angle *= scale.angle;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    out.angle = (end.angle - start.angle) * delta + start.angle;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    var da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon &&\n           Math.abs(a.z) < epsilon &&\n           Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon &&\n           Math.abs(a.angle - b.angle) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    out.angle = Math.min(a.angle, b.angle);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    out.angle = Math.max(a.angle, b.angle);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z + a.angle * b.angle;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    out.angle = (max.angle - min.angle) * Math.random() + min.angle;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n *\n * @class CalculatorRGB\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGB()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGB, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given a grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x\n      };\n    }\n    // When an array is given, assume [r, g, b]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, defaultValue.r );\n      var cg = coalesce( x.g, defaultValue.g );\n      var cb = coalesce( x.b, defaultValue.b );\n      var rr = this.getRelativeAmount( cr );\n      var rg = this.getRelativeAmount( cg );\n      var rb = this.getRelativeAmount( cb );\n\n      if ( rr !== false && rg !== false && rb !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb };\n        var ir = this.isRelative( cr );\n        var ig = this.isRelative( cg );\n        var ib = this.isRelative( cb );\n\n        if ( ir || ig || ib )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // If only a relative value is given it will modify the R, G, & B components.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { r: rx, g: rx, b: rx } );\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with r, g, & b components\n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n *\n * @class CalculatorRGBA\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGBA()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGBA, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given an opaque grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x,\n        a: 1.0\n      };\n    }\n    // When an array is given, assume [r, g, b, a]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2], a: x[3] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, defaultValue.r );\n      var cg = coalesce( x.g, defaultValue.g );\n      var cb = coalesce( x.b, defaultValue.b );\n      var ca = coalesce( x.a, defaultValue.a );\n      var rr = this.getRelativeAmount( cr );\n      var rg = this.getRelativeAmount( cg );\n      var rb = this.getRelativeAmount( cb );\n      var ra = this.getRelativeAmount( ca );\n\n      if ( rr !== false && rg !== false && rb !== false && ra !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb, a: ra };\n        var ir = this.isRelative( cr );\n        var ig = this.isRelative( cg );\n        var ib = this.isRelative( cb );\n        var ia = this.isRelative( ca );\n\n        if ( ir || ig || ib || ia )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0,\n            a: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // If only a relative value is given it will modify the R, G, & B components.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { r: rx, g: rx, b: rx, a: 0 } );\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    out.a = (end.a - start.a) * delta + start.a;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    var da = a.a - b.a;\n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon &&\n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon &&\n           Math.abs(a.a - b.a) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    out.a = Math.min(a.a, b.a);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    out.a = Math.max(a.a, b.a);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b + a.a * b.a;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    out.a = (max.a - min.a) * Math.random() + min.a;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for strings.\n *\n * @class CalculatorString\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorString()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorString, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // A raw string\n    if ( isString( x ) )\n    {\n      return x;\n    }\n\n    return defaultValue;\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return '';\n  },\n  zero: function(out)\n  {\n    return '';\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return amount;\n  },\n  mul: function(out, scale)\n  {\n    return scale;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return delta < 0.5 ? start : end;\n  },\n  distanceSq: function(a, b)\n  {\n    var d = Math.abs( a.length - b.length );\n    return d * d;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a.length - b.length );\n  },\n  length: function(a)\n  {\n    return a.length;\n  },\n  lengthSq: function(a)\n  {\n    return a.length * a.length;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'string';\n  },\n  isNaN: function(a)\n  {\n    return false;\n  },\n  isZero: function(a, epsilon)\n  {\n    return a.length <= epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return a === b;\n  },\n  min: function(out, a, b)\n  {\n    return a < b ? a : b;\n  },\n  max: function(out, a, b)\n  {\n    return a > b ? a : b;\n  },\n  dot: function(a, b)\n  {\n    return a.length * b.length;\n  }\n});\n\n\n/**\n * A factory for plain objects.\n *\n * @class FactoryObject\n * @constructor\n * @extends Factory\n */\nfunction FactoryObject()\n{\n  this.priority = 0;\n  this.attributes = {};\n}\n\nClass.extend( FactoryObject, Factory,\n{\n  is: function(subject)\n  {\n    return isObject( subject ) && !isArray( subject ); /* !isElement( subject ) && */\n  },\n  animatorFor: function(subject)\n  {\n    var animator = subject.$animator;\n\n    if ( !animator )\n    {\n      animator = new Animator( subject );\n      animator.factory = this;\n\n      subject.$animator = animator;\n    }\n\n    return animator;\n  },\n  destroy: function(animator)\n  {\n    delete animator.subject.$animator;\n  },\n  attribute: function(attr)\n  {\n    var attribute = this.attributes[ attr ];\n\n    if ( !attribute )\n    {\n      attribute = this.attributes[ attr ] = object.attribute( attr );\n\n      var calculatorName = attribute.calculator;\n      var calculator = $calculator( calculatorName );\n      var defaultValue = calculator.parse( attribute.defaultValue, calculator.ZERO );\n\n      attribute.calculatorName = calculatorName;\n      attribute.calculator = calculator;\n      attribute.defaultValue = defaultValue;\n      attribute.name = attr;\n      attribute.parse = function(value) {\n        return this.calculator.parse( value, this.defaultValue );\n      };\n      attribute.cloneDefault = function() {\n        return this.calculator.clone( this.defaultValue );\n      };\n    }\n\n    return attribute;\n  }\n});\n\n/**\n * The Object namespace.\n *\n * @type {Object}\n */\nvar object = {};\n\n/**\n * Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\n * returned immediately. If the input is a string the attribute with the given name is returned. Otherwise\n * the default attribute is returned.\n *\n * @param {Object|String} attr\n * @return {Object}\n */\nobject.attribute = function(attr)\n{\n  if ( isObject( attr ) && isDefined( attr.defaultValue ) )\n  {\n    return attr;\n  }\n  if ( isString( attr ) && attr in object.attribute )\n  {\n    return object.attribute[ attr ];\n  }\n\n  return object.attribute['default'];\n};\n\n/**\n * The default attribute.\n */\nobject.attribute['default']                 = {defaultValue: 0};\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderAnd\n * @constructor\n * @extends Builder\n */\nfunction BuilderAnd()\n{\n\n}\n\nClass.extend( BuilderAnd, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var and = animation.and;\n\n    and.factory = coalesce( and.factory, animation.factory );\n\n    attrimatorMap.putMap( $attrimatorsFor( and, options ) );\n  },\n  \n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.and, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'deltas' & 'values' animation type.\n *\n * @class BuilderDeltas\n * @constructor\n * @extends Builder\n */\nfunction BuilderDeltas()\n{\n\n}\n\nClass.extend( BuilderDeltas, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. If deltas wasn't specified, assume a uniform distribution of points\n    // 2. If deltas was an array, expand out into an object where the keys are attributes and the value is the delta array\n    // 3. Generate the attrimators\n\n    var mergeId = Builder.nextMergeId();\n    var factory = $factory( animation.factory );\n    var deltas = animation.deltas;\n    var values = animation.values;\n\n    if ( !isDefined( deltas ) )\n    {\n      deltas = {};\n    }\n    else if ( isArray( deltas ) )\n    {\n      var deltaObject = {};\n\n      for (var attr in values)\n      {\n        deltaObject[attr] = deltas;\n      }\n\n      deltas = deltaObject;\n    }\n\n    for (var attr in values)\n    {\n      var value = values[ attr ];\n      var valueMax = value.length - 1;\n      var delta = deltas[ attr ];\n      var attribute = factory.attribute( attr );\n\n      for (var k = 0; k <= valueMax; k++)\n      {\n        value[k] = attribute.parse( value[k] );\n      }\n\n      if ( !isArray( delta ) )\n      {\n        delta = [];\n\n        for (var i = 0; i <= valueMax; i++)\n        {\n          delta[i] = i / valueMax;\n        }\n      }\n\n      var path      = new PathDelta( attr, attribute.calculator, value, delta );\n      var event     = helper.parseEvent( attr, path, this, true );\n\n      event.mergeId = mergeId;\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'final' animation type.\n *\n * @class BuilderFinal\n * @constructor\n * @extends Builder\n */\nfunction BuilderFinal()\n{\n\n}\n\nClass.extend( BuilderFinal, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays and durations\n\n    var factory = $factory( animation.factory );\n    var values = animation.final;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = $delay( helper.parseDelay( attr ) );\n      var duration   = $duration( helper.parseDuration( attr ) );\n      var event      = new Oncer( attr, value, delay + duration, false, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay ) +\n              helper.mergeDuration( attr, e.duration );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'initial' animation type.\n *\n * @class BuilderInitial\n * @constructor\n * @extends Builder\n */\nfunction BuilderInitial()\n{\n\n}\n\nClass.extend( BuilderInitial, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays & scales\n\n    var factory    = $factory( animation.factory );\n    var values     = animation.initial;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = helper.parseDelay( attr );\n      var oncer      = new Oncer( attr, value, delay, true, this, null, animation );\n\n      attrimatorMap.put( attr, oncer );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'keyframe' animation type.\n *\n * @class BuilderKeyframe\n * @constructor\n * @extends Builder\n */\nfunction BuilderKeyframe()\n{\n\n}\n\nClass.extend( BuilderKeyframe, Builder,\n{\n  aliases: {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  },\n\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Normalize keys by converting aliases to the actual value\n    // 2. Split up keys that have commas into multiple entries\n    // 3. Validate keys and remove invalid ones - also calculate max key value\n    // 4. Sort frames by the key\n    // 5. Expand frames to generate delta arrays, value arrays, and easing arrays\n    // 6. Generate the attrimators\n\n    var factory = $factory( animation.factory );\n    var kframes = animation.keyframe;\n    var easings = animation.easings || {};\n    var teasing = $easing( coalesce( options.teasing, Defaults.teasing ) );\n\n    var sort = false;\n\n    // split up comma delimited times\n    for (var time in kframes)\n    {\n      if ( time in this.aliases )\n      {\n        kframes[ this.aliases[time] ] = kframes[ time ];\n\n        delete kframes[ time ];\n      }\n      else if ( time.indexOf(',') !== -1 )\n      {\n        var times = time.split(',');\n\n        for (var i = 0; i < times.length; i++)\n        {\n          kframes[times[i]] = kframes[time];\n        }\n\n        delete kframes[time];\n\n        sort = true;\n      }\n    }\n\n    var times = [];\n\n    // validate times\n    var lastTime = 0.0;\n    var maxTime = 0.0;\n\n    for (var time in kframes)\n    {\n      var t = parseFloat(time);\n\n      if (isNaN(t))\n      {\n        delete kframes[time];\n      }\n      else\n      {\n        if (t < lastTime)\n        {\n          sort = true;\n        }\n\n        times.push({\n          order: t,\n          key: time,\n          value: kframes[time]\n        });\n\n        lastTime = t;\n\n        maxTime = Math.max( maxTime, t );\n      }\n    }\n\n    // sort if necessary\n    if (sort)\n    {\n      times.sort(function(a, b)\n      {\n        return a.order - b.order;\n      });\n\n      kframes = {};\n\n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i].key] = times[i].value;\n      }\n    }\n\n    // split up into deltas and values\n    var deltas = {};\n    var values = {};\n    var pathEasings = {};\n    var attributes = {};\n\n    for (var i = 0; i < times.length; i++)\n    {\n      var frame = times[i];\n      var easing = coalesce( frame.value.easing, options.easing );\n\n      delete frame.value.easing;\n\n      for (var attr in frame.value)\n      {\n        if ( !(attr in deltas) )\n        {\n          deltas[attr] = [];\n          values[attr] = [];\n          pathEasings[attr] = [];\n          attributes[attr] = factory.attribute( attr );\n        }\n\n        deltas[attr].push( frame.order / maxTime );\n        values[attr].push( attributes[ attr ].parse( frame.value[ attr ] ) );\n        pathEasings[attr].push( $easing( coalesce( easings[ attr ], easing ) ) );\n      }\n    }\n\n    // create events & paths\n    for (var attr in deltas)\n    {\n      var duration  = helper.parseDuration( attr );\n      var delay     = helper.parseDelay( attr );\n      var sleep     = helper.parseSleep( attr );\n      var offset    = helper.parseOffset( attr );\n      var repeat    = helper.parseRepeat( attr );\n      var scale     = helper.parseScale( attr );\n      var scaleBase = helper.parseScaleBase( attr );\n      var path      = new PathKeyframe( attr, attributes[attr].calculator, values[attr], deltas[attr], pathEasings[attr] );\n      var event     = new Event( attr, path, duration, teasing, delay, sleep, offset, repeat, scale, scaleBase, true, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'move' animation type.\n *\n * @class BuilderMove\n * @constructor\n * @extends Builder\n */\nfunction BuilderMove()\n{\n\n}\n\nClass.extend( BuilderMove, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var move       = animation.move;\n\n    for (var attr in move)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( move[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, computed.relative( value ) );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'path' animation type.\n *\n * @class BuilderPath\n * @constructor\n * @extends Builder\n */\nfunction BuilderPath()\n{\n\n}\n\nClass.extend( BuilderPath, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory = $factory( animation.factory );\n    var path    = animation.path;\n\n    for (var attr in path)\n    {\n      var attribute  = factory.attribute( attr );\n      var pathDefinition = path[ attr ];\n\n      if ( !( pathDefinition instanceof Path ) )\n      {\n        pathDefinition.name = attr;\n        pathDefinition.calculator = attribute.calculator;\n      }\n\n      var parsedPath = $path( pathDefinition );\n      var event      = helper.parseEvent( attr, parsedPath, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'physics' animation type.\n *\n * @class BuilderPhysics\n * @constructor\n * @extends Builder\n */\nfunction BuilderPhysics()\n{\n\n}\n\nClass.extend( BuilderPhysics, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory );\n    var physics    = animation.physics;\n\n    for (var attr in physics)\n    {\n      var physic    = physics[ attr ];\n\n      var attrimator = new Physics(\n        attr,\n        this,\n        physic.calculator,\n        coalesce( physic.position, true ),\n        physic.velocity,\n        physic.acceleration,\n        physic.terminal,\n        physic.stopAt\n      );\n\n      attrimatorMap.put( attr, attrimator );\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderQueue\n * @constructor\n * @extends Builder\n */\nfunction BuilderQueue()\n{\n\n}\n\nClass.extend( BuilderQueue, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var queue = animation.queue;\n\n    queue.factory = coalesce( queue.factory, animation.factory );\n\n    attrimatorMap.queueMap( $attrimatorsFor( queue, options ) );\n  },\n\n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.queue, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'springs' animation type.\n *\n * @class BuilderSpring\n * @constructor\n * @extends Builder\n */\nfunction BuilderSpring()\n{\n\n}\n\nClass.extend( BuilderSpring, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory );\n    var springs    = animation.springs;\n\n    for (var attr in springs)\n    {\n      var spring     = springs[ attr ];\n\n      if ( !isDefined( spring.attribute ) )\n      {\n        spring.attribute = attr;\n      }\n\n      var parsed = $spring( spring );\n\n      if ( parsed !== false )\n      {\n        parsed.parser = this;\n\n        attrimatorMap.put( attr, parsed );\n      }\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'travel' animation type.\n *\n * @class BuilderTravel\n * @constructor\n * @extends Builder\n */\nfunction BuilderTravel()\n{\n\n}\n\nClass.extend( BuilderTravel, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var travel     = animation.travel;\n\n    /**\n     * The computed function which returns a function which returns a value pointing\n     * to a given target given the current position of the animator.\n     *\n     * @param  {Number}\n     * @param  {any}\n     * @param  {Number}\n     * @return {Function}\n     */\n    var pointing = function(amount, target, epsilon, subtractVelocity)\n    {\n      return computed(function pointingFunction(attrimator, animator)\n      {\n        var attribute = animator.getAttribute( attrimator.attribute );\n        var calc = attribute.calculator;\n        var targetValue = isComputed( target ) ? target( attrimator, animator ) : target;\n        var temp = calc.create();\n\n        return function()\n        {\n          var position   = attrimator.position;\n          var current    = calc.copy( temp, resolve( targetValue ) );\n          var difference = calc.sub( current, position );\n          var distance   = calc.distance( difference, calc.ZERO );\n\n          if ( distance < epsilon )\n          {\n            attrimator.stopIn( 0 );\n          }\n          else\n          {\n            difference = calc.scale( difference, amount / distance );\n          }\n\n          if ( subtractVelocity )\n          {\n            difference = calc.sub( difference, attrimator.resolveVelocity() );\n          }\n\n          return difference;\n        };\n      });\n    };\n\n    for (var attr in travel)\n    {\n      var traveling     = travel[ attr ];\n      var attribute     = factory.attribute( attr );\n      var fromParsed    = attribute.parse( coalesce( traveling.from, true ) );\n      var toParsed      = attribute.parse( coalesce( traveling.to, true ) );\n      var velocity      = $number( traveling.velocity, 0 );\n      var acceleration  = $number( traveling.acceleration, 0 );\n      var terminal      = $number( coalesce( traveling.terminal, traveling.velocity ), Number.POSITIVE_INFINITY );\n      var epsilon       = $number( traveling.epsilon, 0.001 );\n\n      if ( acceleration !== 0 )\n      {\n        acceleration = pointing( acceleration, toParsed, epsilon, true );\n      }\n\n      if ( velocity !== 0 )\n      {\n        velocity = pointing( velocity, toParsed, epsilon, false );\n      }\n\n      var traveler = new Physics(\n        attr,\n        this,\n        attribute.calculator,\n        fromParsed,\n        velocity,\n        acceleration,\n        terminal\n      );\n\n      attrimatorMap.put( attr, traveler );\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new builder for the 'tweenFrom' animation type.\n *\n * @class BuilderTweenFrom\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenFrom()\n{\n\n}\n\nClass.extend( BuilderTweenFrom, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var tweenFrom  = animation.tweenFrom;\n\n    for (var attr in tweenFrom)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenFrom[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, value, computed.current );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'tweenTo' animation type.\n *\n * @class BuilderTweenTo\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenTo()\n{\n\n}\n\nClass.extend( BuilderTweenTo, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var tweenTo    = animation.tweenTo;\n\n    for (var attr in tweenTo)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenTo[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, value );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new PathCombo.\n *\n * @param {String|false} name\n * @param {Path[]} paths\n * @param {Boolean} [uniform]\n * @param {Number} [granularity]\n * @class PathCombo\n * @constructor\n * @extends Path\n */\nfunction PathCombo(name, paths, uniform, granularity)\n{\n  this.name = name;\n  this.set( paths, uniform, granularity );\n}\n\nClass.extend( PathCombo, Path,\n{\n  set: function(paths, uniform, granularity)\n  {\n    var calc = paths[0].calculator;\n    var points = [];\n    var deltas = [];\n    var linear = true;\n    var length = false;\n\n    for (var i = 0; i < paths.length; i++)\n    {\n      points.push.apply( points, paths[ i ].points );\n\n      deltas[ i ] = ( i + 1 ) / paths.length;\n\n      if ( !paths[ i ].isLinear() )\n      {\n        linear = false;\n      }\n    }\n\n    if ( uniform )\n    {\n      var lengthGranularity = coalesce( granularity, 100 );\n      var lengthTotal = 0;\n      var lengths = [];\n\n      for (var i = 0; i < paths.length; i++)\n      {\n        lengths[ i ] = paths[ i ].length( lengthGranularity );\n        lengthTotal += lengths[ i ];\n      }\n\n      var lengthCurrent = 0;\n\n      for (var i = 0; i < paths.length; i++)\n      {\n        lengthCurrent += lengths[ i ];\n        deltas[ i ] = lengthCurrent / lengthTotal;\n      }\n\n      length = lengthTotal;\n    }\n\n    this.reset( calc, points );\n    this.paths = paths;\n    this.deltas = deltas;\n    this.uniform = uniform;\n    this.granularity = granularity;\n    this.linear = linear;\n    this.cachedLength = length;\n  },\n\n  isLinear: function()\n  {\n    return this.linear;\n  },\n\n  length: function(granularity)\n  {\n    return this.cachedLength !== false ? this.cachedLength : this._length( granularity );\n  },\n\n  compute: function(out, delta)\n  {\n    var paths = this.paths;\n    var deltas = this.deltas;\n    var previousDelta = 0;\n    var i = 0;\n\n    while ( i < paths.length - 1 && deltas[ i ] < delta )\n    {\n      previousDelta = deltas[ i ];\n      i++;\n    }\n\n    return paths[ i ].compute( out, ( delta - previousDelta ) / ( deltas[ i ] - previousDelta ) );\n  },\n\n  copy: function()\n  {\n    return new PathCombo( this.name, this.paths, this.uniform, this.granularity );\n  }\n});\n\n\n/**\n * Instantiates a new PathCompiled.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} pointCount\n * @class PathCompiled\n * @constructor\n * @extends Path\n */\nfunction PathCompiled(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathCompiled, Path,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var compiled = PathCompiled.compile( calc, path, pointCount );\n\n    this.reset( calc, compiled );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  compute: function(out, delta)\n  {\n    var n = this.points.length;\n    var a = Math.floor( delta * n );\n    var index = Math.min( a, n - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathCompiled( this.name, this, this.points.length );\n  }\n});\n\nPathCompiled.compile = function(calc, path, pointCount)\n{\n  if (path.points.length === pointCount)\n  {\n    return copy( path.points );\n  }\n\n  var points = [];\n\n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n\n  return points;\n};\n\n\n/**\n * Instantiates a new PathCubic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @param {T} p3\n * @class PathCubic\n * @constructor\n * @extends Path\n */\nfunction PathCubic(name, calculator, p0, p1, p2, p3)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2, p3 );\n}\n\nClass.extend( PathCubic, Path,\n{\n  set: function(calculator, p0, p1, p2, p3)\n  {\n    this.reset( calculator, [p0, p1, p2, p3] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var d3 = d1 * d2;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n    var i3 = i1 * i2;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i3 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 3 * i2 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), 3 * i1 * d2 );\n    out = calc.adds( out, this.resolvePoint( 3 ), d3 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathCubic( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathDelta.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @class PathDelta\n * @constructor\n * @extends Path\n */\nfunction PathDelta(name, calculator, points, deltas)\n{\n  this.name = name;\n  this.set( calculator, points, deltas );\n}\n\nClass.extend( PathDelta, Path,\n{\n  set: function(calculator, points, deltas)\n  {\n    this.reset( calculator, points );\n    this.deltas = deltas;\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n\n    return this.calculator.interpolate( out, p0, p1, pd );\n  },\n\n  copy: function()\n  {\n    return new PathDelta( this.name, this.calculator, copy(this.points), copy(this.deltas) );\n  }\n});\n\n\n/**\n * Instantiates a new PathHermite.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} startTangent\n * @param {T} end\n * @param {T} endTangent\n * @class PathHermite\n * @constructor\n * @extends Path\n */\nfunction PathHermite(name, calculator, start, startTangent, end, endTangent)\n{\n  this.name = name;\n  this.set( calculator, start, startTangent, end, endTangent );\n}\n\nClass.extend( PathHermite, Path,\n{\n  set: function(calculator, start, startTangent, end, endTangent)\n  {\n    this.reset( calculator, [start, end] );\n    this.startTangent = startTangent;\n    this.endTangent = endTangent;\n  },\n\n  compute: function(out, d)\n  {\n    var calc = this.calculator;\n    var d2 = d * d;\n    var d3 = d2 * d;\n\n    out = calc.copy( out, calc.ZERO );\n    out = calc.adds( out, this.resolvePoint( 0 ), 2 * d3 - 3 * d2 + 1 );\n    out = calc.adds( out, this.resolvePoint( 1 ), -2 * d3 + 3 * d2 );\n    out = calc.adds( out, resolve( this.startTangent ), d3 - 2 * d2 + d );\n    out = calc.adds( out, resolve( this.endTangent ), d3 - d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathHermite( this.name, this.calculator, this.points[0], this.startTangent, this.points[1], this.endTangent );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathJump.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathJump\n * @constructor\n * @extends Path\n */\nfunction PathJump(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathJump, Path,\n{\n  set: function(calculator, points)\n  {\n    this.reset( calculator, points );\n  },\n\n  compute: function(out, delta)\n  {\n    var a = Math.floor( delta * this.points.length );\n    var index = Math.min( a, this.points.length - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathJump( this.name, this.calculator, copy(this.points) );\n  }\n});\n\n\n/**\n * Instantiates a new PathKeyframe.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @param {Array} easings\n * @class PathKeyframe\n * @constructor\n * @extends Path\n */\nfunction PathKeyframe(name, calculator, points, deltas, easings)\n{\n  this.name = name;\n  this.set( calculator, points, deltas, easings );\n}\n\nClass.extend( PathKeyframe, Path,\n{\n  set: function(calculator, points, deltas, easings)\n  {\n    this.reset( calculator, points );\n    this.deltas = deltas;\n    this.easings = easings;\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n\n    if ( delta < ds[0] ) {\n      return false;\n    }\n\n    if ( delta > ds[ds.length - 1] ) {\n      return this.points[ds.length - 1];\n    }\n\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n    var ea = this.easings[i];\n\n    return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n  },\n  copy: function()\n  {\n    return new PathKeyframe( this.name, this.calculator, copy(this.points), copy(this.deltas), copy(this.easings) );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathLinear(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathLinear, PathDelta,\n{\n  set: function(calculator, points)\n  {\n    var deltas = PathLinear.getTimes( calculator, points );\n\n    this._set( calculator, points, deltas );\n  },\n\n  copy: function()\n  {\n    return new PathLinear( this.name, this.calculator, copy(this.points) );\n  }\n});\n\nPathLinear.getTimes = function(calc, points)\n{\n  var n = points.length;\n\tvar distances = [];\n\n\tdistances[ 0 ] = 0;\n\n\tfor (var i = 1; i <= n; i++)\n\t{\n\t\tdistances[ i ] = distances[ i - 1 ] + calc.distance( points[ i - 1 ], points[ i ] );\n\t}\n\n\tvar invlength = 1.0 / distances[ n ];\n\n\tfor (var i = 1; i < n; i++)\n\t{\n\t\tdistances[ i ] *= invlength;\n\t}\n\n\tdistances[ n ] = 1.0;\n\n\treturn distances;\n};\n\n\n/**\n * Instantiates a new PathQuadratic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @class PathQuadratic\n * @constructor\n * @extends Path\n */\nfunction PathQuadratic(name, calculator, p0, p1, p2)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2 );\n}\n\nClass.extend( PathQuadratic, Path,\n{\n  set: function(calculator, p0, p1, p2)\n  {\n    this.reset( calculator, [p0, p1, p2] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i2 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 2 * i1 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathQuadratic( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathQuadraticCorner.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Number} midpoint\n * @param {Boolean} loop\n * @class PathQuadraticCorner\n * @constructor\n * @extends Path\n */\nfunction PathQuadraticCorner(name, calculator, points, midpoint, loop)\n{\n  this.name = name;\n  this.set( calculator, points, midpoint, loop );\n}\n\nClass.extend( PathQuadraticCorner, Path,\n{\n  set: function(calculator, points, midpoint, loop)\n  {\n    this.reset( calculator, points );\n    this.midpoint = midpoint;\n    this.loop = loop;\n    this.temp0 = calculator.create();\n    this.temp1 = calculator.create();\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var temp0 = this.temp0;\n    var temp1 = this.temp1;\n    var midpoint = this.midpoint;\n    var negmidpoint = 1.0 - midpoint;\n    var halfmidpoint = midpoint * 0.5;\n    var n = this.points.length - (this.loops ? 0 : 1);\n    var a = delta * n;\n    var i = clamp( Math.floor( a ), 0, n - 1 );\n    var d = a - i;\n\n    var p0 = this.resolvePoint( this.getActualIndex( i - 1 ) );\n    var p1 = this.resolvePoint( this.getActualIndex( i ) );\n    var p2 = this.resolvePoint( this.getActualIndex( i + 1 ) );\n    var p3 = this.resolvePoint( this.getActualIndex( i + 2 ) );\n\n    if ( d < midpoint )\n    {\n      d = (d / midpoint);\n      temp0 = calc.interpolate( temp0, p0, p1, d * halfmidpoint + negmidpoint + halfmidpoint );\n      temp1 = calc.interpolate( temp1, p1, p2, d * halfmidpoint + halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5 + 0.5;\n    }\n    else if ( d > negmidpoint )\n    {\n      d = (d - negmidpoint) / midpoint;\n      temp0 = calc.interpolate( temp0, p1, p2, d * halfmidpoint + negmidpoint );\n      temp1 = calc.interpolate( temp1, p2, p3, d * halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5;\n    }\n\n    out = calc.interpolate( out, p1, p2, d );\n\n    return out;\n  },\n\n  getActualIndex: function(index)\n  {\n    var n = this.points.length;\n\n    return (this.loops ? (index + n) % n : clamp( index, 0, n - 1 ));\n  },\n\n  copy: function()\n  {\n    return new PathQuadraticCorner( this.name, this.calculator, copy(this.points), this.midpoint, this.loop );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathSub.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} start\n * @param {Number} end\n * @class PathSub\n * @constructor\n * @extends Path\n */\nfunction PathSub(name, path, start, end)\n{\n  this.name = name;\n  this.set( path, start, end );\n}\n\nClass.extend( PathSub, Path,\n{\n  set: function(path, start, end)\n  {\n    this.reset( path.calculator, path.points );\n    this.path = path;\n    this.start = start;\n    this.end = end;\n  },\n\n  compute: function(out, delta)\n  {\n    return this.path.compute( out, (this.end - this.start) * delta + this.start );\n  },\n\n  copy: function()\n  {\n    return new PathSub( this.name, this.path, this.start, this.end );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathUniform(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathUniform, PathDelta,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var points = PathCompiled.compile( calc, path, pointCount );\n    var deltas = PathLinear.getTimes( calc, points );\n\n    this._set( calc, points, deltas );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  copy: function()\n  {\n    return new PathUniform( this.name, this.path, this.pointCount );\n  }\n});\n\n\n/**\n * Instantiates a new Tween.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} end\n * @class Tween\n * @constructor\n * @extends Path\n */\nfunction Tween(name, calculator, start, end)\n{\n  this.name = name;\n  this.set( calculator, start, end );\n}\n\nClass.extend( Tween, Path,\n{\n  set: function(calculator, start, end)\n  {\n    this.reset( calculator, [ start, end ] );\n  },\n\n  compute: function(out, delta)\n  {\n    return this.calculator.interpolate( out, this.resolvePoint( 0 ), this.resolvePoint( 1 ), delta );\n  },\n\n  copy: function()\n  {\n    return new Tween( this.name, this.calculator, this.points[0], this.points[1] );\n  }\n});\n\n\n/**\n * Instantiates a new SpringDistance.\n *\n * @param {String|false} attribute\n * @param {anim8.Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {Number} distance\n * @param {Number} damping\n * @param {Number} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringDistance\n * @constructor\n * @extends Spring\n */\nfunction SpringDistance(attribute, calculator, position, rest, distance, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.distance   = distance;\n  this.damping    = damping;\n  this.stiffness  = stiffness;\n  this.temp       = null;\n}\n\nClass.extend( SpringDistance, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    this.temp = this.calculator.create();\n  },\n\n  clone: function()\n  {\n    return new SpringDistance( this.attribute, this.calculator, this.position, this.rest, this.distance, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // d = DISTANCE( position, rest )\n    // velocity += ((position - rest) / d * stiffness * |distance - d| - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n    var rest = this.resolveRest();\n\n    var d = calc.distance( this.position, rest );\n\n    this.temp = calc.copy( this.temp, this.position );\n    this.temp = calc.sub( this.temp, rest );\n\n    if ( d !== 0 )\n    {\n      this.temp = calc.scale( this.temp, 1.0 / d );\n      this.temp = calc.scale( this.temp, (d - this.distance) * this.stiffness );\n    }\n\n    this.temp = calc.adds( this.temp, this.velocity, -this.damping );\n\n    this.velocity = calc.adds( this.velocity, this.temp, dt );\n  }\n\n});\n\n\n/**\n * Instantiates a new SpringLinear.\n *\n * @param {String|false} attribute\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {T} damping\n * @param {T} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringLinear\n * @constructor\n * @extends Spring\n */\nfunction SpringLinear(attribute, calculator, position, rest, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.damping      = damping;\n  this.stiffness    = stiffness;\n  this.temp0        = null;\n  this.temp1        = null;\n}\n\nClass.extend( SpringLinear, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = this.calculator;\n\n    this.damping      = this.parseValue( animator, this.damping, attribute.defaultValue );\n    this.stiffness    = this.parseValue( animator, this.stiffness, attribute.defaultValue );\n    this.temp0        = calc.create();\n    this.temp1        = calc.create();\n  },\n\n  clone: function()\n  {\n    return new SpringLinear( this.attribute, this.calculator, this.position, this.rest, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.damping ) ||\n           isComputed( this.stiffness );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // velocity += ((stiffness * (position - rest)) - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n\n    this.temp1 = calc.copy( this.temp1, this.damping );\n    this.temp1 = calc.mul( this.temp1, this.velocity );\n\n    this.temp0 = calc.copy( this.temp0, this.position );\n    this.temp0 = calc.sub( this.temp0, this.resolveRest() );\n    this.temp0 = calc.mul( this.temp0, this.stiffness );\n    this.temp0 = calc.sub( this.temp0, this.temp1 );\n\n    this.velocity = calc.adds( this.velocity, this.temp0, dt );\n  }\n\n});\n\n\nvar Builders = {};\n\n/**\n * Register the builder.\n */\nBuilders['values'] = new BuilderDeltas();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      and: {\n *       ... more builders ...\n *      }\n *     });\n *\n *\n * @property {BuilderAnd} and\n * @for anim8.builder\n */\nBuilders['and'] = new BuilderAnd();\n\n/**\n * Register the builder.\n */\nBuilders['final'] = new BuilderFinal();\n\n\n/**\n * Register the builder.\n */\nBuilders['initial'] = new BuilderInitial();\n\n/**\n * Registers the builder.\n */\nBuilders['keyframe'] = new BuilderKeyframe();\n\n/**\n * Register the builder.\n */\nBuilders['move'] = new BuilderMove();\n\n/**\n * A builder which generates attrimators which follow a given path.\n *\n * **Examples:**\n *\n *     animator.play({\n *      path: {\n *       opacity: {\n *        type: 'quadratic',\n *        p0: 0,\n *        p1: 0.4,\n *        p2: 1.0\n *       }\n *      }\n *     });\n *\n *\n * @property {BuilderPath} path\n * @for anim8.builder\n */\nBuilders['path'] = new BuilderPath();\n\n/**\n * Register the builder.\n */\nBuilders['physics'] = new BuilderPhysics();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      queue: {\n *       ... more builders to play after the others ...\n *      }\n *     });\n *\n *\n * @property {BuilderQueue} queue\n * @for anim8.builder\n */\nBuilders['queue'] = new BuilderQueue();\n\n/**\n * Register the builder.\n */\nBuilders['springs'] = new BuilderSpring();\n\n/**\n * Register the builder.\n */\nBuilders['travel'] = new BuilderTravel();\n\n/**\n * Register the builder.\n */\nBuilders['tweenFrom'] = new BuilderTweenFrom();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      tweenTo: {\n *       opacity: 1.0,       // absolute value\n *       left: '+40'         // 40 more units from current value\n *      }\n *     });\n *\n *\n * @property {BuilderTweenTo} tweenTo\n * @for anim8.builder\n */\nBuilders['tweenTo'] = new BuilderTweenTo();\n\n\n/**\n * A collection of calculators. A calculator is responsible for performing\n * mathematical operations for a specific animatable data type.\n *\n * @class anim8.calculator\n */\nvar Calculators = {};\n\n/**\n * A calculator for numbers.\n *\n * @property {CalculatorNumber} number\n * @for anim8.Calculators\n */\nCalculators['number'] = new CalculatorNumber();\n\n/**\n * A calculator for 2d points; objects with x & y Number components.\n *\n * @property {Calculator2d} 2d\n * @for anim8.Calculators\n */\nCalculators['2d'] = new Calculator2d();\n\n/**\n * A calculator for 3d points; objects with x, y, & z Number components.\n *\n * @property {Calculator3d} 3d\n * @for anim8.Calculators\n */\nCalculators['3d'] = new Calculator3d();\n\n/**\n * A calculator for quaternions; objects with x, y, z, & angle Number components.\n *\n * @property {CalculatorQuaternion} quaternion\n * @for anim8.Calculators\n */\nCalculators['quaternion'] = new CalculatorQuaternion();\n\n/**\n * A calculator for opaque colors; objects with r, g, & b Number components.\n *\n * @property {CalculatorRGB} rgb\n * @for anim8.Calculators\n */\nCalculators['rgb'] = new CalculatorRGB();\n\n/**\n * A calculator for colors; objects with r, g, b, & a Number components.\n *\n * @property {CalculatorRGBA} rgba\n * @for anim8.Calculators\n */\nCalculators['rgba'] = new CalculatorRGBA();\n\n/**\n * A calculator for strings.\n *\n * @property {CalculatorString} string\n * @for anim8.Calculators\n */\nCalculators['string'] = new CalculatorString();\n\n/**\n * The default calculator.\n *\n * @property {CalculatorNumber} default\n * @for anim8.Calculators\n */\nCalculators['default'] = Calculators['number'];\n\n\nvar Factories = {};\n\n/**\n * Registers the object factory.\n */\nFactories['object'] = new FactoryObject();\n\n/**\n * Registers the default factory.\n */\nFactories['default'] = Factories['object'];\n\n\nvar Paths = {};\n\n/**\n * Parses an object for a combo path.\n *\n * @param {Object} path\n * @return {PathCombo}\n */\nPaths['combo'] = function(path)\n{\n  var paths = path.paths;\n\n  for (var i = 0; i < paths.length; i++)\n  {\n    paths[ i ] = $path( paths[ i ] );\n  }\n\n  return new PathCombo(\n    path.name,\n    paths,\n    path.uniform,\n    path.granularity\n  );\n};\n\n\n/**\n * Parses an object for a compiled path.\n *\n * @param {Object} path\n * @return {PathCompiled}\n */\nPaths['compiled'] = function(path)\n{\n  return new PathCompiled(\n    path.name,\n    $path( path.path ),\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a cubic path.\n *\n * @param {Object} path\n * @return {PathCubic}\n */\nPaths['cubic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathCubic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue ),\n    calc.parse( path.p3, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a delta path.\n *\n * @param {Object} path\n * @return {PathDelta}\n */\nPaths['delta'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  for (var i = 0; i < path.points.length; i++)\n  {\n    path.points[ i ] = calc.parse( path.points[ i ], defaultValue );\n  }\n\n  return new PathDelta(\n    path.name,\n    calc,\n    path.points,\n    path.deltas\n  );\n};\n\n/**\n * Parses an object for a jump path.\n *\n * @param {Object} path\n * @return {PathJump}\n */\nPaths['jump'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  for (var i = 0; i < path.points.length; i++)\n  {\n    path.points[ i ] = calc.parse( path.points[ i ], defaultValue );\n  }\n\n  return new PathJump(\n    path.name,\n    calc,\n    path.points\n  );\n};\n\n/**\n * Parses an object for a keyframe path.\n *\n * @param {Object} path\n * @return {PathKeyframe}\n */\nPaths['keyframe'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  var defaultEasing = $easing( path.easings, null );\n\n  if ( !isDefined( path.easings ) || !isArray( path.easings ) || defaultEasing !== null )\n  {\n    path.easings = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.easings[ i ] = defaultEasing;\n    }\n  }\n\n  for (var i = 0; i < path.easings.length; i++)\n  {\n    path.easings[ i ] = $easing( path.easings[ i ] );\n  }\n\n  for (var i = 0; i < path.points.length; i++)\n  {\n    path.points[ i ] = calc.parse( path.points[ i ], defaultValue );\n  }\n\n  return new PathKeyframe(\n    path.name,\n    calc,\n    path.points,\n    path.deltas,\n    path.easings\n  );\n};\n\n\n/**\n * Parses an object for a quadratic path.\n *\n * @param {Object} path\n * @return {PathQuadratic}\n */\nPaths['quadratic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathQuadratic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a tween path.\n *\n * @param {Object} path\n * @return {Tween}\n */\nPaths['tween'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new Tween(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.end, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a sub path.\n *\n * @param {Object} path\n * @return {PathSub}\n */\nPaths['sub'] = function(path)\n{\n  var parent = $path( path.path );\n  var calc = parent.calculator;\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathSub(\n    path.name,\n    parent,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.end, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a quadratic corner path.\n *\n * @param {Object} path\n * @return {PathQuadraticCorner}\n */\nPaths['quadratic-corner'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n  var points = [];\n\n  for (var i = 0; i < path.points.length; i++)\n  {\n    points.push( calc.parse( path.points[ i ], defaultValue ) );\n  }\n\n  return new PathQuadraticCorner(\n    path.name,\n    calc,\n    points,\n    path.midpoint,\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a linear path.\n *\n * @param {Object} path\n * @return {PathLinear}\n */\nPaths['linear'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n  var points = [];\n\n  for (var i = 0; i < path.points.length; i++)\n  {\n    points.push( calc.parse( path.points[ i ], defaultValue ) );\n  }\n\n  return new PathLinear(\n    path.name,\n    calc,\n    points\n  );\n};\n\n\n/**\n * Parses an object for a uniform path.\n *\n * @param {Object} path\n * @return {PathUniform}\n */\nPaths['uniform'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathUniform(\n    path.name,\n    parent,\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a hermite path.\n *\n * @param {Object} path\n * @return {PathHermite}\n */\nPaths['hermite'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathHermite(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.startTangent, defaultValue ),\n    calc.parse( path.end, defaultValue ),\n    calc.parse( path.endTangent, defaultValue )\n  );\n};\n\n\nvar Springs = {};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringDistance}\n */\nSprings['distance'] = function(spring)\n{\n  return new SpringDistance(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.distance,\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringLinear}\n */\nSprings['linear'] = function(spring)\n{\n  return new SpringLinear(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n\n/**\n * Returns an instance of {{#crossLink \"Animation\"}}{{/crossLink}} based on the\n * given input & options. If the input is a string the animation with that name\n * is returned. If the input is a string with an animation name and an option\n * string the animation with the given name modified by any additional options\n * is returned. Commas can be used to queue animation & option pairs one after\n * another. Ampersands can be used to play animations at the same time. If the\n * input is an object an anonymous animation is created. If no animation could\n * be determined then false is returned.\n *\n * **Examples:**\n *\n *     animation('wiggle');\n *     animation('wiggle ~1s 4s z40ms x5 !1.2');\n *     animation('wiggle', {...options...});\n *     animation('wiggle, tada ~50ms, fadeOut 2s');\n *     animation('wiggle & tada !3, fadeOut');\n *     animation({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method animation\n * @for Core\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n * @param {Boolean} [cache=false]\n * @return {Animation|False}\n * @throws {String} The animation string has an invalid animation name or the\n *    animation fails to create attrimators from the animation definition.\n */\nfunction $animation(animation, options, cache)\n{\n  var options = $options( options, cache );\n  var hasOptions = !isEmpty( options );\n\n  if ( animation instanceof Animation )\n  {\n    if ( hasOptions )\n    {\n      var attrimators = animation.newAttrimators();\n\n      animation.merge( options, attrimators );\n\n      return new Animation( false, animation.input, options, attrimators);\n    }\n\n    return animation;\n  }\n  if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    var attrimators = $attrimatorsFor( animation, options, cache );\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    return new Animation( false, {}, options, attrimators );\n  }\n  if ( isObject( animation ) )\n  {\n    var attrimators = $attrimatorsFor( animation, options, cache );\n\n    return new Animation( false, animation, options, attrimators );\n  }\n\n  return false;\n}\n\n\n\n/**\n * Generates an AttrimatorMap for the given animation and options. If the\n * animation given is an instance of {{#crossLink \"Animation\"}}{{/crossLink}}\n * then a copy of that animations attrimators is returned, and if options are\n * specified then they are merged into the generated attrimators. If the\n * animation given is an object it's properties are iterated and for each builder\n * with a matching name attrimators are generated. If the animation given is a\n * string of a cached or saved animation then it's handled as if an instance of\n * {{#crossLink \"Animation\"}}{{/crossLink}} was given. If the animation given\n * is a string which isn't saved or cached it goes through the following parsing\n * logic.\n *\n * - Split up the string into sections with `,` which queues animations.\n * - Split up each of the sections with `&` which enables animations to play\n *   simultaneously.\n * - For each of those sections, take the first word as the name of the\n *   animation and any remaining text as the options for that animation.\n *\n * If no attrimators could be parsed, an empty attrimator map is returned. If\n * the animation given is a string that specifies animations that don't exist\n * an error is thrown.\n *\n * **Examples:**\n *\n *     anim8.attrimatorsFor('wiggle');\n *     anim8.attrimatorsFor('wiggle ~1s 4s z40ms x5 !1.2');\n *     anim8.attrimatorsFor('wiggle', {...options...});\n *     anim8.attrimatorsFor('wiggle, tada ~50ms, fadeOut 2s');\n *     anim8.attrimatorsFor('wiggle & tada !3, fadeOut');\n *     anim8.attrimatorsFor({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method anim8.attrimatorsFor\n * @for Core\n * @param {Object|String} animation\n * @param {Object|String} [options]\n * @param {Boolean} [cache=false]\n * @return {AttrimatorMap}\n */\nfunction $attrimatorsFor( animation, options, cache )\n{\n  var parsedOptions = $options( options, cache );\n  var hasOptions = !isEmpty( parsedOptions );\n  var attrimators = new AttrimatorMap();\n\n  if ( animation instanceof Animation )\n  {\n    attrimators.putMap( animation.newAttrimators() );\n\n    if ( hasOptions )\n    {\n      animation.merge( parsedOptions, attrimators );\n    }\n  }\n  else if ( isObject( animation ) )\n  {\n    var helper = new BuilderHelper( animation, parsedOptions );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false )\n      {\n        builder.parse( animation, parsedOptions, attrimators, helper );\n      }\n    }\n  }\n  else if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n    var saved = Animations[ key ];\n    var cacheIt = coalesce( cache, Defaults.cache );\n\n    if ( saved )\n    {\n      attrimators.putMap( saved.newAttrimators() );\n\n      if ( hasOptions )\n      {\n        saved.merge( parsedOptions, attrimators );\n      }\n    }\n    else\n    {\n      var animationsQueued = animation.split( ',' );\n\n      for (var k = 0; k < animationsQueued.length; k++)\n      {\n        var animationsMerged = animationsQueued[ k ].split( '&' );\n        var base = new AttrimatorMap();\n\n        for (var j = 0; j < animationsMerged.length; j++)\n        {\n          var animationString = trim( animationsMerged[ j ].toLowerCase() );\n          var animationSplit = animationString.split( ' ' );\n          var parsedAnimation = Animations[ animationSplit[ 0 ] ];\n\n          if ( parsedAnimation )\n          {\n            var additionalOptions = $options( animationSplit.slice( 1 ), cache );\n            var hasAdditionalOptions = !isEmpty( additionalOptions );\n            var parsedAttrimators = parsedAnimation.newAttrimators();\n\n            if ( hasOptions && hasAdditionalOptions )\n            {\n              parsedAnimation.merge( extend( {}, parsedOptions, additionalOptions ), parsedAttrimators );\n            }\n            else if ( hasAdditionalOptions )\n            {\n              parsedAnimation.merge( additionalOptions, parsedAttrimators );\n            }\n            else if ( hasOptions )\n            {\n              parsedAnimation.merge( parsedOptions, parsedAttrimators );\n            }\n\n            base.putMap( parsedAttrimators );\n          }\n          else\n          {\n            throw animationString + ' is not a valid animation in \"' + animationsQueued[ k ] + '\"';\n          }\n        }\n\n        attrimators.queueMap( base );\n      }\n\n      if ( cacheIt && !hasOptions )\n      {\n        Animations[ key ] = new Animation( animation, {}, {}, attrimators );\n      }\n    }\n  }\n\n  return attrimators;\n}\n\n\n/**\n * A collection of {{#crossLink \"Builder\"}}builders{{/crossLink}} which takes\n * animation definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generates {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class anim8.builder\n */\n\n/**\n * Returns a builder based on the input. If the input is an instance of Builder\n * it's returned immediately. If the input is a string the builder with that name\n * is returned. If no builder could be determined then false is returned.\n *\n * **See:** {{#crossLink \"anim8.builder\"}}{{/crossLink}}\n *\n * @method anim8.builder\n * @for Core\n * @param {Builder|String} builderInput\n * @return {Builder|false}\n */\nfunction $builder(builderInput)\n{\n  if ( builderInput instanceof Builder )\n  {\n    return builderInput;\n  }\n  if ( isString( builderInput ) && builderInput in Builders )\n  {\n    return Builders[ builderInput ];\n  }\n\n  return false;\n}\n\n\n/**\n* Returns a calculator based on the input. If the input is an instance of\n* {{#crossLink \"Calculator\"}}{{/crossLink}} it is immediately returned. If the\n* input is a string the calculator with that name is returned. If no calculator\n* could be determined the default calculator is returned.\n*\n* @method anim8.calculator\n* @for Core\n* @param {Calculator|String} calculatorInput\n* @return {Calculator}\n*/\nfunction $calculator(calculatorInput)\n{\n if ( calculatorInput instanceof Calculator )\n {\n   return calculatorInput;\n }\n if ( isString( calculatorInput ) && calculatorInput in Calculators )\n {\n   return Calculators[ calculatorInput ];\n }\n\n return Calculators['default'];\n}\n\n\n\n/**\n * Parses delay from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/delay:property\"}}anim8.defaults.delay{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.delay\n * @param {String|Number} time\n */\nfunction $delay(time)\n{\n  return $time( time, Defaults.delay );\n}\n\n\n/**\n * Parses duration from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/duration:property\"}}anim8.defaults.duration{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.duration\n * @param {String|Number} time\n */\nfunction $duration(time)\n{\n  return $time( time, Defaults.duration );\n}\n\n\n/**\n * Returns an easing based on the given input. If the input is a function it's\n * assumed to be an easing function and is returned immediately. If the input is\n * a string the easing with that name is returned. If the input is a string in\n * the format 'easing-easingType' then an easing is returned that is a\n * combination of the easing with the given name and the easingType with the\n * given name. If the given input is an array with 4 elements it's assumed to be\n * a bezier path and one is created and returned. If no input is given the\n * default easing is returned. If an easing cannot be determined then an error\n * is thrown.\n *\n * **Examples:**\n *\n *     anim8.easing();               // anim8.defaults.easing\n *     anim8.easing( 'linear' );     // anim8.easing.linear\n *     anim8.easing( 'reverse' );    // anim8.easingType.reverse( anim8.defaults.easing )\n *     anim8.easing( 'ease-yoyo' );  // anim8.easingType.yoyo( anim8.easing.ease )\n *     anim8.easing( [0,0,1,1] );    // anim8.easing.bezier( 0, 0, 1, 1 )\n *     anim8.easing( 5, false );     // false\n *     anim8.easing( 'invalid', 1 ); // 1\n *     anim8.easing( [0,0,1], 1 );   // 1\n *\n * @method anim8.easing\n * @for Core\n * @param {Function|String|Array} easing\n * @param {E} [returnOnInvalid]\n * @return {Function|E}\n */\nfunction $easing(easing, returnOnInvalid)\n{\n  if ( isFunction( easing ) )\n  {\n    return easing;\n  }\n  if ( isString( easing ) )\n  {\n    if ( easing in Easings )\n    {\n      return Easings[ easing ];\n    }\n    if ( easing in EasingTypes )\n    {\n      return EasingTypes[ easing ]( $easing( Defaults.easing ) );\n    }\n\n    if ( easing.indexOf('-') !== -1 )\n    {\n      var pair = easing.split('-');\n      var e = pair[0];\n      var t = pair[1];\n\n      if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n      {\n        return EasingTypes[ t ]( Easings[ e ] );\n      }\n    }\n  }\n  if ( isArray( easing ) && easing.length === 4 && isNumber( easing[0] ) && isNumber( easing[1] ) && isNumber( easing[2] ) && isNumber( easing[3] ) )\n  {\n    return Easings.bezier.apply( null, easing );\n  }\n  if ( !isDefined( easing ) )\n  {\n    return $easing( Defaults.easing );\n  }\n\n  if ( isDefined( returnOnInvalid ) )\n  {\n    return returnOnInvalid;\n  }\n\n  throw easing + ' is not a valid easing';\n}\n\n\n/**\n * Returns an easing type based on the input. If the input is a function that\n * function is immediately returned. If the input is a string the easing type\n * with that name is returned. If no easing type could be determined an error is\n * thrown.\n *\n * @param {Function|String} easingType\n * @param [Boolean] optional\n * @return {Function|false}\n */\nfunction $easingType(easingType, optional)\n{\n  if ( isFunction( easingType ) )\n  {\n    return easingType;\n  }\n  if ( isString( easingType ) && easingType in EasingTypes )\n  {\n    return EasingTypes[ easingType ];\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw easingType + ' is not a valid easing type';\n}\n\n\n/**\n * Returns a factory given the input and returns the default if none is found.\n *\n * @method factory\n * @for Core\n * @param {String|Factory} [factory]\n * @return {Factory}\n */\nfunction $factory(factoryInput)\n{\n  if ( factoryInput instanceof Factory )\n  {\n    return factoryInput;\n  }\n  if ( isString( factoryInput ) && factoryInput in Factories )\n  {\n    return Factories[ factoryInput ];\n  }\n\n  return Factories['default'];\n}\n\n\n/**\n * Returns a factory for the given subject and optionally throws an error if no\n * factory exists.\n *\n * @method factoryFor\n * @for Core\n * @param {Any} subject\n * @param {Boolean} [optional]\n * @return {Factory}\n */\nfunction $factoryFor(subject, optional)\n{\n  var highestPriorityFactory = false;\n\n  for (var factoryName in Factories)\n  {\n    var factory = Factories[ factoryName ];\n\n    if ( factory.is( subject ) && (highestPriorityFactory === false || highestPriorityFactory.priority < factory.priority) )\n    {\n      highestPriorityFactory = factory;\n    }\n  }\n\n  if ( highestPriorityFactory )\n  {\n    return highestPriorityFactory;\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw 'No factory exists for subject ' + subject;\n}\n\n\n/**\n * Parses a number from the given input and if the input isn't a valid number\n * then returnOnInvalid is returned.\n *\n * **Examples:**\n *\n *     anim8.number( 5 );       // 5\n *     anim8.number( '5' );     // 5\n *     anim8.number( '5e4' );   // 50000\n *     anim8.number( 'x' );     // undefined\n *     anim8.number( 'x', 23 ); // 23\n *\n * @method anim8.number\n * @param {String|Number} value\n * @param {E} returnOnInvalid\n * @return {Number|E}\n */\nfunction $number(value, returnOnInvalid)\n{\n  var parsed = parseFloat( value );\n\n  return isNaN( parsed ) ? returnOnInvalid : parsed;\n}\n\n\n\n/**\n * Parses offset from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/offset:property\"}}anim8.defaults.offset{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.offset\n * @param {String|Number} time\n */\nfunction $offset(time)\n{\n  return $time( time, Defaults.offset );\n}\n\n\nvar Options = {};\n\n/**\n * Parses a value into an options object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [duration] x[repeat] z[sleep] ~[delay] @[offset] ![scale] [[easing][-easingType]]\n *\n * This is also a registry of options, you can add your own options that\n * can be used later with syntax like:\n *\n *     anim8.options['myOptions'] = anim8.options('1.5s x2 !2');\n *\n * So you can use 'myOptions' as the options input.\n *\n * You can also specify relative values & scaling values. If you have the\n * following options:\n *\n *     +2s x*2 ~-1s\n *\n * It will result in adding 2 seconds to the duration, repeating it twice as\n * much, and subtracting one second from the delay.\n *\n * For more information on acceptable values in options:\n *\n * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.delay:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}, and\n *          {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n *\n * @method anim8.options\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $options(options, cache)\n{\n  var originalInput = options;\n  var cacheIt = coalesce( cache, Defaults.cacheOptions );\n\n  if ( isString( options ) )\n  {\n    if ( options in Options )\n    {\n      return Options[ options ];\n    }\n\n    options = options.toLowerCase().split(' ');\n  }\n\n  if ( isArray( options ) )\n  {\n    var parsed = {};\n\n    for (var i = 0; i < options.length; i++)\n    {\n      var part = options[i];\n      var first = part.charAt( 0 );\n\n      // Repeats\n      if ( first === 'x' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n      }\n      // Sleeping\n      else if ( first === 'z' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'sleep', 'sleepAdd', 'sleepScale' );\n      }\n      // Delay\n      else if ( first === '~' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'delay', 'delayAdd', 'delayScale' );\n      }\n      // Scaling\n      else if ( first === '!' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $number, 'scale', 'scaleAdd', 'scaleScale' );\n      }\n      // Offset\n      else if ( first === '@' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'offset', 'offsetAdd', 'offsetScale' );\n      }\n      else\n      {\n        // Easing?\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          parsed.easing = easing;\n        }\n\n        // Duration?\n        var duration = parseOptionProperty( part, parsed, $time, 'duration', 'durationAdd', 'durationScale' );\n\n        if ( duration === false )\n        {\n          // If not a duration, might be an alternative repeat? (doesn't start with x)\n          parseOptionProperty( part, parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n        }\n      }\n    }\n\n    if ( isString( originalInput ) && cacheIt )\n    {\n      Options[ originalInput ] = parsed;\n    }\n\n    return parsed;\n  }\n\n  if ( isObject( options ) )\n  {\n    return options;\n  }\n\n  return Defaults.noOptions;\n}\n\nfunction parseOptionProperty(input, out, parseFunction, property, propertyAdd, propertyScale)\n{\n  var first = input.charAt( 0 );\n\n  if ( first === '*' )\n  {\n    parsed = $number( input.substring( 1 ), false );\n\n    if ( parsed !== false )\n    {\n      out[ propertyScale ] = parsed;\n    }\n  }\n  else\n  {\n    if ( first === '+' || first === '-' )\n    {\n      property = propertyAdd;\n      input = input.substring( 1 );\n    }\n\n    var parsed = parseFunction( input, false );\n\n    if ( parsed !== false )\n    {\n      out[ property ] = parsed;\n    }\n  }\n\n  return parsed;\n}\n\n\n/**\n * Parses a path given the input and returns an instance of anim8.Path or throws\n * an error if the path could not be parsed. If the input is an object and has\n * a type property with a value that maps to a path type the path's parsing\n * function is invoked with the object.\n *\n * @method anim8.path\n * @for Core\n * @param  {anim8.Path|String|Object} pathInput\n * @return {anim8.Path}\n * @throws {String} If the input is not a valid path.\n */\nfunction $path(pathInput)\n{\n  if ( pathInput instanceof Path )\n  {\n    return pathInput;\n  }\n  if ( isString( pathInput ) && pathInput in Paths )\n  {\n    return Paths[ pathInput ];\n  }\n  if ( isObject( pathInput ) && pathInput.type in Paths )\n  {\n    return Paths[ pathInput.type ]( pathInput );\n  }\n\n  throw pathInput + ' is not a valid path';\n}\n\n\n\n/**\n * Parses repeats from a string or number. If a valid repeat is not given then\n * `returnOnInvalid` is returned, if that is not given then\n * {{#crossLink \"anim8.defaults/repeat:property\"}}anim8.defaults.repeat{{/crossLink}}\n * is returned.\n *\n * **Examples:**\n *\n *     anim8.repeat( 5 );            // 5\n *     anim8.repeat( 'inf' );        // Infinity\n *     anim8.repeat( 'infinity' );   // Infinity\n *     anim8.repeat( 'infinite' );   // Infinity\n *     anim8.repeat( 'once' );       // 1\n *     anim8.repeat( 'twice' );      // 2\n *     anim8.repeat( 'thrice' );     // 3\n *     anim8.repeat( 'dozen' );      // 12\n *     anim8.repeat( 'random' );     // 4\n *     anim8.repeat( 'invalid', 6 ); // 6\n *     anim8.repeat( false, 7 );     // 7\n *     anim8.repeat();               // anim8.defaults.repeat\n *\n * @method anim8.repeat\n * @param {String|Number} time\n * @param {E} [returnOnInvalid]\n * @return {Number|E}\n */\nvar $repeat = (function()\n{\n  var conversions = {\n    inf:        Number.POSITIVE_INFINITY,\n    infinity:   Number.POSITIVE_INFINITY,\n    infinite:   Number.POSITIVE_INFINITY,\n    once:       1,\n    twice:      2,\n    thrice:     3,\n    dozen:      12,\n    random:     4 // chosen by fair dice roll. guaranteed to be random.\n  };\n\n  return function(repeat, returnOnInvalid)\n  {\n    if ( isNumber( repeat ) )\n    {\n      return repeat;\n    }\n    if ( isString( repeat ) )\n    {\n      repeat = repeat.toLowerCase();\n\n      if ( repeat in conversions )\n      {\n        return conversions[ repeat ];\n      }\n      else\n      {\n        var parsed = parseInt( repeat );\n\n        if ( !isNaN(parsed) )\n        {\n          return parsed;\n        }\n      }\n    }\n\n    return coalesce( returnOnInvalid, Defaults.repeat );\n  };\n\n})();\n\n\n/**\n * Parses scale from a string or number.\n *\n * **See:** {{#crossLink \"Core/anim8.number:method\"}}anim8.number{{/crossLink}}\n *\n * @method anim8.scale\n * @param {String|Number} scale\n * @return {Number}\n */\nfunction $scale(scale)\n{\n  return $number( scale, Defaults.scale );\n}\n\n\n\n/**\n * Parses sleep from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/sleep:property\"}}anim8.defaults.sleep{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.sleep\n * @param {String|Number} time\n */\nfunction $sleep(time)\n{\n  return $time( time, Defaults.sleep );\n}\n\n/**\n * Returns a spring if the provided argument is a spring, the name of a spring,\n * or an object with a spring type to be created. If none of these conditions\n * are true then an error is thrown.\n *\n * @method anim8.spring\n * @for Core\n * @param {Spring|String|Object} springInput\n * @return {Spring}\n */\nfunction $spring(springInput)\n{\n  if ( springInput instanceof Spring )\n  {\n    return springInput;\n  }\n  if ( isString( springInput ) && springInput in Springs )\n  {\n    return Springs[ springInput ];\n  }\n  if ( isObject( springInput ) && springInput.type in Springs )\n  {\n    return Springs[ springInput.type ]( springInput );\n  }\n\n  throw springInput + ' is not a valid spring';\n}\n\n\n/**\n * Parses milliseconds from a string or number. If a number is given it's\n * assumed to be milliseconds and is returned immediately. If a string is given\n * a unit is looked for to determine how to scale the number into milliseconds.\n * If the given time is invalid and returnOnInvalid is not given then zero is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.time( 45 );       // 45\n *     anim8.time( 45.9 );     // 45\n *     anim8.time( -4.1 );     // -5\n *     anim8.time( '5ms' );    // 5\n *     anim8.time( '23' );     // 23\n *     anim8.time( '5c' );     // 500\n *     anim8.time( '5cs' );    // 500\n *     anim8.time( '5jiffy' ); // 833\n *     anim8.time( '5third' ); // 833\n *     anim8.time( '10s' );    // 10000\n *     anim8.time( '10sec' );  // 10000\n *     anim8.time( '1.5m' );   // 90000\n *     anim8.time( '1.5min' ); // 90000\n *     anim8.time( '0.4h' );   // 144000\n *     anim8.time( '0.4hr' );  // 144000\n *\n * @method anim8.time\n * @param {String|Number} time\n * @param {Any} [returnOnInvalid]\n */\nvar $time = (function()\n{\n  var regex = /^(-?\\d*(\\.\\d+)|-?\\d+)(ms|s|c|cs|third|jiffy|sec|m|min|h|hr)?$/;\n\n  var conversions = {\n    ms:     1,\n    c:      100,\n    cs:     100,\n    jiffy:  1000 / 60,\n    third:  1000 / 60,\n    s:      1000,\n    sec:    1000,\n    m:      1000 * 60,\n    min:    1000 * 60,\n    h:      1000 * 60 * 60,\n    hr:     1000 * 60 * 60\n  };\n\n  return function(time, returnOnInvalid)\n  {\n    if ( isNumber( time ) )\n    {\n      // raw numbers are considered milliseconds\n      return Math.floor( time );\n    }\n    if ( isString( time ) )\n    {\n      var parsed = regex.exec( time );\n\n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n\n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n\n        return Math.floor( time );\n      }\n    }\n\n    return coalesce( returnOnInvalid, 0 );\n  };\n\n})();\n\n\nvar Transitions = {};\n\n/**\n * Parses a value into a transition object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [time] [easing[-easingType]] >[outro] <[intro] /[granularity] ^[lookup]\n *\n * This is also a registry of transitions, you can add your own transitions that\n * can be used later with syntax like:\n *\n *     anim8.transition['myTransition'] = anim8.transition('50ms 0.05 linear');\n *\n * So you can use 'myTransition' as the transition input.\n *\n *     animator.transition('myTransition', 'myAnimation');\n *\n * @method anim8.transition\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $transition(transition, cache)\n{\n  // 1. If it's a string, convert it into an array.\n  // 2. If it's an array, parse it and convert it into an object.\n  // 3. If it's an object, fill in any missing values with the defaults.\n\n  var originalInput = transition;\n\n  if ( isString( transition ) )\n  {\n    if ( transition in Transitions )\n    {\n      return Transitions[ transition ];\n    }\n\n    transition = transition.toLowerCase().split(' ');\n  }\n\n  if ( isArray( transition ) )\n  {\n    var transitionArray = transition;\n\n    transition = {};\n\n    for (var i = 0; i < transitionArray.length; i++)\n    {\n      var part = transitionArray[i];\n      var first = part.charAt( 0 );\n\n      // Introduction Time (into next event)\n      if ( first === '<' )\n      {\n        var intro = $time( part.substring(1), false );\n\n        if ( !isNaN( intro ) )\n        {\n          transition.intro = intro;\n        }\n      }\n      // Outroduction Time (out of current event)\n      else if ( first === '>' )\n      {\n        var outro = $time( part.substring(1), false );\n\n        if ( !isNaN( outro ) )\n        {\n          transition.outro = outro;\n        }\n      }\n      // Granularity (for velocity conscious transitions)\n      else if ( first === '/' )\n      {\n        var granularity = $number( part.substring(1), false );\n\n        if ( granularity !== false )\n        {\n          transition.granularity = granularity;\n        }\n      }\n      // Lookup (for velocity conscious transitions)\n      else if ( first === '^' )\n      {\n        var lookup = $time( part.substring(1), false );\n\n        if ( lookup !== false )\n        {\n          transition.lookup = lookup;\n        }\n      }\n      else\n      {\n        // Easing\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          transition.easing = easing;\n        }\n\n        // Time\n        var time = $time( part, false );\n\n        if ( time !== false )\n        {\n          transition.time = time;\n        }\n      }\n    }\n  }\n\n  if ( isObject( transition ) )\n  {\n    transition.time        = $time( transition.time, Defaults.transitionTime );\n    transition.outro       = $time( transition.outro, Defaults.transitionOutro );\n    transition.intro       = $time( transition.intro, Defaults.transitionIntro );\n    transition.easing      = $easing( coalesce( transition.easing, Defaults.transitionEasing ) );\n    transition.granularity = $number( transition.granularity, Defaults.transitionGranularity );\n    transition.lookup      = $time( transition.lookup, Defaults.transitionLookup );\n\n    if ( isString( originalInput ) && coalesce( cache, Defaults.cacheTransitions ) )\n    {\n      Transitions[ originalInput ] = transition;\n    }\n\n    return transition;\n  }\n\n  return Defaults.noTransition;\n}\n\n\n  // Add events to the animation cycle: begin, end, finished, starting\n  eventize( anim8 );\n\n  // anim8.js\n  anim8.anim8s = anim8s;\n  anim8.fn = Animator.prototype;\n  anim8s.fn = Animators.prototype;\n  anim8.isRunning = isRunning;\n  anim8.isLive = isLive;\n  anim8.setLive = setLive;\n  anim8.animating = animating;\n  anim8.requestRun = requestRun;\n  anim8.activateAnimator = activateAnimator;\n  anim8.pushAnimator = pushAnimator;\n  anim8.activate = activate;\n  anim8.run = run;\n  anim8.pause = pause;\n  anim8.resume = resume;\n  anim8.stop = stop;\n  anim8.end = end;\n  anim8.finish = finish;\n  anim8.nopeat = nopeat;\n\n  // Core\n  anim8.noop = noop;\n  anim8.isDefined = isDefined;\n  anim8.isFunction = isFunction;\n  anim8.isNumber = isNumber;\n  anim8.isBoolean = isBoolean;\n  anim8.isString = isString;\n  anim8.isArray = isArray;\n  anim8.isObject = isObject;\n  anim8.isEmpty = isEmpty;\n  anim8.now = now;\n  anim8.trim = trim;\n  anim8.toArray = toArray;\n  anim8.copy = copy;\n  anim8.extend = extend;\n  anim8.coalesce = coalesce;\n  anim8.constant = constant;\n  anim8.resolve = resolve;\n  anim8.clamp = clamp;\n  anim8.id = id;\n  anim8.Class = Class;\n  anim8.Defaults = Defaults;\n\n  // Registries\n  anim8.Animations = Animations;\n  anim8.Calculators = Calculators;\n  anim8.Factories = Factories;\n  anim8.Builders = Builder;\n  anim8.Paths = Paths;\n  anim8.Springs = Springs;\n  anim8.Easings = Easings;\n  anim8.EasingTypes = EasingTypes;\n  anim8.Options = Options;\n  anim8.Transitions = Transitions;\n\n  // Parsing\n  anim8.animation = $animation;\n  anim8.attrimatorsFor = $attrimatorsFor;\n  anim8.calculator = $calculator;\n  anim8.delay = $delay;\n  anim8.duration = $duration;\n  anim8.easing = $easing;\n  anim8.easingType = $easingType;\n  anim8.factory = $factory;\n  anim8.factoryFor = $factoryFor;\n  anim8.number = $number;\n  anim8.offset = $offset;\n  anim8.options = $options;\n  anim8.builder = $builder;\n  anim8.path = $path;\n  anim8.repeat = $repeat;\n  anim8.scale = $scale;\n  anim8.sleep = $sleep;\n  anim8.spring = $spring;\n  anim8.time = $time;\n  anim8.transition = $transition;\n\n  // Modules\n  // - color.js\n  anim8.Color = Color;\n  // - computed.js\n  anim8.computed = computed;\n  anim8.isComputed = isComputed;\n  // - dynamic.js\n  anim8.composite = composite;\n  anim8.partial = partial;\n  anim8.spread = spread;\n  // - eventize.js\n  anim8.eventize = eventize;\n  // - save.js\n  anim8.save = save;\n\n  // Classes\n  anim8.Aninmation = Animation;\n  anim8.Animator = Animator;\n  anim8.Animators = Animators;\n  anim8.Attrimator = Attrimator;\n  anim8.AttrimatorMap = AttrimatorMap;\n  anim8.Calculator = Calculator;\n  anim8.Defer = Defer;\n  anim8.DeferAnimator = DeferAnimator;\n  anim8.Event = Event;\n  anim8.EventState = EventState;\n  anim8.Factory = Factory;\n  anim8.FastMap = FastMap;\n  anim8.Movie = Movie;\n  anim8.Oncer = Oncer;\n  anim8.Builder = Builder;\n  anim8.Path = Path;\n  anim8.Physics = Physics;\n  anim8.Sequence = Sequence;\n  anim8.Spring = Spring;\n\n  // Calculators\n  anim8.Calculator2d = Calculator2d;\n  anim8.Calculator3d = Calculator3d;\n  anim8.CalculatorNumber = CalculatorNumber;\n  anim8.CalculatorQuaternion = CalculatorQuaternion;\n  anim8.CalculatorRGB = CalculatorRGB;\n  anim8.CalculatorRGBA = CalculatorRGBA;\n  anim8.CalculatorString = CalculatorString;\n\n  // Factories\n  anim8.object = object;\n  anim8.FactoryObject = FactoryObject;\n\n  // Builders\n  anim8.BuilderAnd = BuilderAnd;\n  anim8.BuilderDeltas = BuilderDeltas;\n  anim8.BuilderFinal = BuilderFinal;\n  anim8.BuilderInitial = BuilderInitial;\n  anim8.BuilderKeyframe = BuilderKeyframe;\n  anim8.BuilderMove = BuilderMove;\n  anim8.BuilderPath = BuilderPath;\n  anim8.BuilderPhysics = BuilderPhysics;\n  anim8.BuilderQueue = BuilderQueue;\n  anim8.BuilderSpring = BuilderSpring;\n  anim8.BuilderTravel = BuilderTravel;\n  anim8.BuilderTweenFrom = BuilderTweenFrom;\n  anim8.BuilderTweenTo = BuilderTweenTo;\n\n  // Paths\n  anim8.PathCombo = PathCombo;\n  anim8.PathCompiled = PathCompiled;\n  anim8.PathCubic = PathCubic;\n  anim8.PathDelta = PathDelta;\n  anim8.PathJump = PathJump;\n  anim8.PathKeyframe = PathKeyframe;\n  anim8.PathQuadratic = PathQuadratic;\n  anim8.PathTween = Tween;\n  anim8.PathHermite = PathHermite;\n  anim8.PathLinear = PathLinear;\n  anim8.PathQuadraticCorner = PathQuadraticCorner;\n  anim8.PathSub = PathSub;\n  anim8.PathUniform = PathUniform;\n\n  // Springs\n  anim8.SpringDistance = SpringDistance;\n  anim8.SpringLinear = SpringLinear;\n\n  return anim8;\n\n}));\n"],"sourceRoot":"/source/"}