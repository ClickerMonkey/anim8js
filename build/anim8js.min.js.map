{"version":3,"sources":["anim8js.min.js"],"names":["root","factory","define","amd","module","exports","global","m8","anim8","m8s","anim8s","this","noop","isDefined","x","isFunction","constructor","call","apply","isNumber","isBoolean","isString","isArray","Array","isObject","isEmpty","length","prop","toArray","split","props","push","copy","copied","i","p","extend","out","arguments","o","coalesce","a","b","c","d","constant","variable","resolve","Animation","name","input","options","attrimators","Animator","e","reset","Animators","$","fill","Attrimator","AttrimatorMap","Builder","BuilderHelper","oldOptions","newOptions","prepareSpecifics","Calculator","Defer","methods","$factory","$push","DeferAnimator","animator","previous","eventType","event","$reset","Event","attribute","path","duration","easing","delay","sleep","offset","repeat","scale","scaleBase","hasInitialState","builder","next","mergeId","$easing","$duration","$sleep","$repeat","$scale","calculator","parse","ZERO","$delay","$offset","Factory","priority","FastMap","map","putMap","put","Movie","events","currentTime","subjects","index","Oncer","value","applied","Path","Physics","position","velocity","acceleration","terminal","stopTime","$number","Number","POSITIVE_INFINITY","$time","finished","Sequence","animators","Spring","subject","$factoryFor","animatorFor","animatorsFor","isRunning","running","isLive","live","setLive","newLive","activateAnimator","pushAnimator","activate","active","animating","trigger","requestRun","run","now","preupdate","update","filter","handleFinished","pause","attributes","resume","stop","end","finish","nopeat","Color","r","g","computed","funcOrName","func","isComputed","delegate","functionName","returning","DelegateTypes","THIS","array","RESULTS","results","FIRST","undefined","TRUE","composite","frame","partial","subattribute","spread","eventize","target","Class","defineProperty","on","once","off","addListener","$this","property","callback","context","removeListeners","listeners","eventListeners","k","splice","deleteProperty","obj","triggerListeners","argument","clear","max","slice","$on","$once","gcd","temp","choose","n","m","num","den","clamp","v","min","save","animation","$animation","key","toLowerCase","Animations","Calculator2d","createConstants","Calculator3d","CalculatorNumber","CalculatorQuaternion","CalculatorRGB","CalculatorRGBA","CalculatorString","FactoryObject","BuilderAnd","BuilderDeltas","BuilderFinal","BuilderInitial","BuilderKeyframe","BuilderMove","BuilderPath","BuilderPhysics","BuilderQueue","BuilderSpring","BuilderTravel","BuilderTweenFrom","BuilderTweenTo","PathDelta","points","deltas","set","PathParametric","loop","matrix","weight","invert","PathBasisSpline","PathBezier","weights","PathCatmullRom","PathCombo","paths","uniform","granularity","PathCompiled","pointCount","PathCubic","p0","p1","p2","p3","PathHermite","start","startTangent","endTangent","PathJump","PathKeyframe","easings","PathLinear","PathParametricBezier","PathParametricHermite","PathQuadratic","PathQuadraticCorner","midpoint","PathSub","PathUniform","Tween","SpringDistance","rest","distance","damping","stiffness","gravity","finishOnRest","SpringLinear","temp0","temp1","cache","$options","hasOptions","newAttrimators","merge","$attrimatorsFor","parsedOptions","helper","builderName","$builder","saved","cacheIt","Defaults","animationsQueued","animationsMerged","base","j","animationString","trim","animationSplit","parsedAnimation","additionalOptions","hasAdditionalOptions","parsedAttrimators","queueMap","builderInput","Builders","$calculator","calculatorInput","Calculators","time","returnOnInvalid","Easings","EasingTypes","indexOf","pair","t","bezier","$easingType","easingType","optional","factoryInput","Factories","highestPriorityFactory","factoryName","is","parsed","parseFloat","isNaN","originalInput","cacheOptions","Options","part","first","charAt","parseOptionProperty","substring","noOptions","parseFunction","propertyAdd","propertyScale","$path","pathInput","Paths","type","$spring","springInput","Springs","$transition","transition","Transitions","transitionArray","intro","outro","lookup","transitionTime","transitionOutro","transitionIntro","transitionEasing","transitionGranularity","transitionLookup","cacheTransitions","noTransition","superPrefix","construct","parentConstructor","properties","F","prototype","Object","enumerable","configurable","writable","teasing","frameRate","pauseTime","Date","getTime","String","replace","id","_id","clone","attrimatorMap","attrimatorsAdded","updated","cycleCurrent","cycleNext","cycleEnded","newCycle","applyCycle","cycle","applyCurrentCycle","values","attrimator","attr","startCycle","endCurrentCycle","getAttribute","restore","applyInitialState","aa","setDefault","cloneDefault","wasFinished","minCycle","setTime","isFinished","Math","placeAttrimator","existing","get","trimAttrimators","removeAt","deactivate","destroy","spring","play","all","playAttrimators","finishNotPresent","queue","queueAttrimators","transitionAttrimators","current","hasOverlap","curr","calc","valueAt","create","getElapsed","pastLookahead","pastVelocity","sub","pastNegativeVelocity","past","add","outTime","outPoint","outNext","inTime","inPoint","inNext","outVelocity","outPerMillis","inVelocity","inPerMillis","compiled","lastPoint","totalDistance","distances","requiredTime","timeDelta","transitionEvent","stopIn","has","tweenTo","fromOptions","tweenManyTo","targets","tweenFrom","starting","tweenManyFrom","startings","tween","starts","ends","tweenMany","move","amount","relative","moveMany","amounts","ref","request","defaultValue","follow","attrimatorsFor","keys","resulting","remove","unset","timeRemaining","hasAttrimators","size","getSubject","wrapper","invoke","args","defer","onCycleStart","onCycleEnd","at","each","iterator","filterer","alive","getSubjects","reverse","last","mid","floor","e0","e1","sequence","maxRemaining","startTime","elapsed","paused","prestart","prestartNext","overrideNext","totalTime","milliseconds","hasComputed","isInfinite","totalPausedTime","isPaused","getBuilder","parseValue","setGroup","groupId","force","deep","onNewAttribute","hasCallback","unqueueAt","indices","nextCycle","currentDepth","nextDepth","iterate","depth","nextMergeId","mergeAttrimator","mergeEasing","mergeRepeat","mergeDelay","mergeSleep","mergeDuration","mergeOffset","mergeScale","mergeScaleBase","submerge","specifics","parseEasing","parseFirst","parseRepeat","parseNumber","parseDelay","parseSleep","parseDuration","parseOffset","parseScale","parseScaleBase","option","parseEvent","parseOptionFunction","optionAdd","optionScale","baseRaw","mergeFirst","mergeNumber","specific","ONE","INFINITY","parseArray","output","parsedDefault","zero","adds","mul","interpolate","delta","random","sqrt","distanceSq","lengthSq","isValid","isZero","isEqual","dot","distSq","setLength","isRelative","getRelativeAmount","z","eventable","$eventable","$previous","$eventType","$event","$callback","$calls","$next","$isRoot","$register","$run","methodName","undefer","i2","x2","eq1","eq2","x3","sin","wave","abs","cos","inv","log10","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","EventState","DELAYED","ANIMATING","SLEEPING","FINISHED","computeValue","baseValue","compute","applyValue","newRepeat","ceil","state","replaceComputed","oldState","newState","iteration","lastValue","pop","lastKey","select","by","wait","after","getAttrimators","_add","getValue","ps","resolvePoint","isLinear","prev","deltadelta","resolveVelocity","resolveAcceleration","initalPosition","dt","MAX_DT","vel","acc","pos","usePosition","maxDelay","createAttrimators","template","delayOffset","remaining","resolveRest","updateVelocity","EPSILON","vendors","requestor","requestAnimationFrame","lastTime","timeToCall","setTimeout","parsers","color","parseComponent","parseInt","vparsed","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","named","regex","matches","exec","cp","format","ca","cr","cg","cb","toString","relativeAmount","mask","relativeFunction","randomSelection","randomFunction","selected","resolvedMin","resolvedMax","y","cx","cy","rx","ry","ix","iy","aliases","left","right","middle","center","top","bottom","_x","_y","amountScale","dx","dy","epsilon","cz","rz","iz","dz","ab","angle","ra","ia","da","rr","rg","rb","ir","ig","ib","dr","dg","db","$animator","object","calculatorName","and","deltaObject","valueMax","initial","oncer","from","half","to","kframes","keyframe","sort","times","maxTime","order","pathEasings","pathDefinition","parsedPath","physics","physic","stopAt","springs","parser","travel","pointing","subtractVelocity","targetValue","difference","traveling","fromParsed","toParsed","traveler","ds","d0","d1","pd","d2","d3","loops","_set","MATRIX","WEIGHT","computeWeights","inverses","w","linear","lengthGranularity","lengthTotal","lengths","lengthCurrent","cachedLength","_length","previousDelta","compile","i1","i3","ea","getTimes","invlength","negmidpoint","halfmidpoint","_start","parent","parseArry","defaultEasing","conversions","inf","infinity","infinite","twice","thrice","dozen","ms","cs","jiffy","third","s","sec","h","hr","unit","fn","factoryFor","number","Aninmation","PathTween"],"mappings":"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","file":"anim8js.min.js","sourcesContent":["/* anim8js 1.0.4 - anim8js - Anim8 Everything by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define('anim8', [], function() { // jshint ignore:line\n      return factory(root);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global);  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.m8 = root.anim8 = factory(root);\n    root.m8s = root.anim8s = root.anim8.anim8s;\n  }\n}(this, function(global)\n{\n\n\nvar Class =\n{\n  superPrefix: '_',\n\n  extend: function(construct, parentConstructor, properties)\n  {\n    function F() {}\n\n    F.prototype = parentConstructor.prototype;\n\n    construct.prototype = new F();\n\n    if ( isObject( properties ) )\n    {\n      this.define( construct, properties );\n    }\n  },\n\n  define: function(construct, properties)\n  {\n    var target = construct.prototype;\n\n    for (var prop in properties)\n    {\n      if ( prop in target )\n      {\n        this.defineProperty( target, this.superPrefix + prop, target[ prop ] );\n      }\n\n      this.defineProperty( target, prop, properties[ prop ] );\n    }\n  },\n\n  defineProperty: function(target, property, value)\n  {\n    if ( Object.defineProperty )\n    {\n      Object.defineProperty( target, property, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    }\n    else\n    {\n      target[ property ] = value;\n    }\n  }\n};\n\n\n\n/**\n * The default values for anim8js properties.\n *\n * @property {Object} anim8.defaults\n */\nvar Defaults =\n{\n\n  /**\n   * The default animation duration in milliseconds.\n   *\n   * @property {Number} duration\n   * @for anim8.defaults\n   * @default 1000\n   */\n  duration: 1000,\n\n  /**\n   * The default easing.\n   *\n   * @property {String|Function|Array} easing\n   * @for anim8.defaults\n   * @default 'ease'\n   */\n  easing: 'ease',\n\n  /**\n   * The default \"total easing\" which is the overall easing\n   * for an animation which actually has easing values per frame.\n   *\n   * @property {String|Function|Array} teasing\n   * @for anim8.defaults\n   * @default 'linear'\n   */\n  teasing: 'linear',\n\n  /**\n   * The default animation delay in milliseconds.\n   *\n   * @property {Number} delay\n   * @for anim8.defaults\n   * @default 0\n   */\n  delay: 0,\n\n  /**\n   * The default animation sleep in milliseconds.\n   *\n   * @property {Number} sleep\n   * @for anim8.defaults\n   * @default 0\n   */\n  sleep: 0,\n\n  /**\n   * The default number of repeats for an animation.\n   *\n   * @property {Number} repeat\n   * @for anim8.defaults\n   * @default 1\n   */\n  repeat: 1,\n\n  /**\n   * The default scale for an animation.\n   *\n   * @property scale\n   * @for anim8.defaults\n   * @default 1.0\n   * @type {Number}\n   */\n  scale: 1.0,\n\n  /**\n   * The default animation offset in milliseconds.\n   *\n   * @property {Number} offset\n   * @for anim8.defaults\n   * @default 0\n   */\n  offset: 0,\n\n  /**\n   * The default transition time in milliseconds.\n   *\n   * @property {Number} transitionTime\n   * @for anim8.defaults\n   * @default 500\n   */\n  transitionTime: 500,\n\n  /**\n   * The default transition outroduction time in milliseconds.\n   *\n   * @property {Number} transitionOutro\n   * @for anim8.defaults\n   * @default 100\n   */\n  transitionOutro: 100,\n\n  /**\n   * The default transition introduction time in milliseconds.\n   *\n   * @property {Number} transitionIntro\n   * @for anim8.defaults\n   * @default 100\n   */\n  transitionIntro: 100,\n\n  /**\n   * The default transition easing when none is specified.\n   *\n   * @property {String|Function|Array} transitionEasing\n   * @for anim8.defaults\n   * @default 'linear'\n   */\n  transitionEasing: 'linear',\n\n  /**\n   * The default transition granularity. This is used for smooth transitions to\n   * provide a smooth transition from the outro velocity to the intro velocity,\n   * the cubic or quadratic path between the two is a curve with unknown length\n   * so the length needs to be calculated using a maximum number of points to\n   * calculate along the path - summing the distances between the consecutive points.\n   *\n   * @property {Number} transitionGranularity\n   * @for anim8.defaults\n   * @default 0\n   */\n  transitionGranularity: 0,\n\n  /**\n   * TODO\n   *\n   * @property {Number} transitionLookup\n   * @for anim8.defaults\n   * @default 10\n   */\n  transitionLookup: 10,\n\n  /**\n   * Whether animtions are cached whenever possible. Animations that can be\n   * cached are strings with options specified in the string and without an\n   * option object given. For example 'tada ~1s 3s x3' is cacheable.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cache\n   * @for anim8.defaults\n   * @default false\n   */\n  cache: false,\n\n  /**\n   * Whether parsed options are cached whenever possible. Options that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheOptions\n   * @for anim8.defaults\n   * @default false\n   */\n  cacheOptions: false,\n\n  /**\n   * Whether parsed transitions are cached whenever possible. Transitions that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheTransitions\n   * @for anim8.defaults\n   * @default false\n   */\n  cacheTransitions: false,\n\n  /**\n   * The value to return when options could not be parsed from input.\n   *\n   * @property {Object} noOptions\n   * @for anim8.defaults\n   * @default {}\n   */\n  noOptions: {},\n\n  /**\n   * The value to return when a transition could not be parsed from input.\n   *\n   * @property {Object} noTransition\n   * @for anim8.defaults\n   * @default {}\n   */\n  noTransition: {},\n\n  /**\n   * The target number of milliseconds between frames. This only applies if the\n   * browser doesn't support any of the requestAnimationFrame variations.\n   *\n   * @property {Number} frameRate\n   * @for anim8.defaults\n   * @default 33\n   */\n  frameRate: 16,\n\n  /**\n   * The number of milliseconds to pause between looping to let the UI react\n   * to user events.\n   *\n   * @property {Number} pauseTime\n   * @for anim8.defaults\n   * @default 5\n   */\n  pauseTime: 5\n\n};\n\n\nvar DelegateTypes =\n{\n\n  /**\n   * this is returned at the end.\n   *\n   * @property THIS\n   * @for DelegateTypes\n   */\n  THIS: 'this',\n\n  /**\n   * An array of results for each method call is returned.\n   *\n   * @property RESULTS\n   * @for DelegateTypes\n   */\n  RESULTS: 'results',\n\n  /**\n   * The result of the first element.\n   *\n   * @property RETURN_FIRST\n   * @for delegate\n   */\n  FIRST: 'first',\n\n  /**\n   * True if any of the methods return true, otherwise false.\n   *\n   * @property RETURN_TRUE\n   * @for delegate\n   */\n  TRUE: 'true'\n\n};\n\n\n\n/**\n * @class Core\n */\n\n/**\n * A function that does nothing.\n *\n * @property anim8.noop\n */\nfunction noop() {}\n\n/**\n * Returns true if the given variable is defined.\n *\n * **Examples:**\n *\n *     anim8.isDefined( 0 );     // true\n *     anim8.isDefined( false ); // true\n *     anim8.isDefined();        // false\n *\n * @method anim8.isDefined\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isDefined(x)\n{\n  return typeof x !== 'undefined';\n}\n\n/**\n * Returns true if the given variable is a function.\n *\n * @method anim8.isFunction\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isFunction(x)\n{\n  return !!(x && x.constructor && x.call && x.apply);\n}\n\n/**\n * Returns true if the given variable is a number.\n *\n * **Examples:**\n *\n *     anim8.isNumber( 0 );     // true\n *     anim8.isNumber( -45.6 ); // true\n *     anim8.isNumber( true );  // false\n *     anim8.isNumber( '1' );   // false\n *     anim8.isNumber();        // false\n *\n * @method anim8.isNumber\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isNumber(x)\n{\n  return typeof x === 'number';\n}\n\n/**\n * Returns true if the given variable is a boolean variable.\n *\n * **Examples:**\n *\n *     anim8.isBoolean( 0 );     // false\n *     anim8.isBoolean( -45.6 ); // false\n *     anim8.isBoolean( true );  // true\n *     anim8.isBoolean( false ); // true\n *     anim8.isBoolean( '1' );   // false\n *     anim8.isBoolean();        // false\n *\n * @method anim8.isBoolean\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isBoolean(x)\n{\n  return typeof x === 'boolean';\n}\n\n/**\n * Returns true if the given variable is a string.\n *\n * **Examples:**\n *\n *     anim8.isString( '' );    // true\n *     anim8.isString( '1' );   // true\n *     anim8.isString( 4.5 );   // false\n *     anim8.isString();        // false\n *\n * @method anim8.isString\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isString(x)\n{\n  return typeof x === 'string';\n}\n\n/**\n * Returns true if the given variable is an array. This should be checked before\n * anim8.isObject since Arrays are objects.\n *\n * **Examples:**\n *\n *     anim8.isArray( [] );     // true\n *     anim8.isArray( [4, 5] ); // true\n *     anim8.isArray( 4.5 );    // false\n *     anim8.isArray();         // false\n *\n * @method anim8.isArray\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isArray(x)\n{\n  return x instanceof Array;\n}\n\n/**\n * Returns true if the given variable is an object. Arrays are considered\n * objects.\n *\n * **Examples:**\n *\n *     anim8.isObject( {} );     // true\n *     anim8.isObject( [] );     // true\n *     anim8.isObject( 4.5 );    // false\n *     anim8.isObject();         // false\n *     anim8.isObject( null );   // false\n *\n * @method anim8.isObject\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isObject(x)\n{\n  return typeof x === 'object' && x !== null;\n}\n\n/**\n * Returns the current time in milliseconds.\n *\n * @method anim8.now\n * @return {Number}\n */\nvar now = (function()\n{\n  return Date.now ? Date.now : function()\n  {\n    return new Date().getTime();\n  };\n\n})();\n\n/**\n * Returns the trimmed version of the given string. A trimmed string has no\n * whitespace in the beginning or end of it.\n *\n * **Examples:**\n *\n *     anim8.trim( 'x' );     // 'x'\n *     anim8.trim( '   x' );  // 'x'\n *     anim8.trim( 'x   ' );  // 'x'\n *     anim8.trim( '  x ' );  // 'x'\n *     anim8.trim( '    ' );  // ''\n *\n * @method anim8.trim\n * @param  {String} x\n * @return {String}\n */\nvar trim = (function()\n{\n  if (String.prototype.trim) {\n    return function(x) {\n      return x.trim();\n    };\n  }\n  return function(x) {\n    return x.replace(/^([\\s]*)|([\\s]*)$/g, '');\n  };\n})();\n\n/**\n * Determines whether the given variable is empty.\n *\n * **Examples:**\n *\n *     anim8.isEmpty( '' );        // true\n *     anim8.isEmpty( 0 );         // true\n *     anim8.isEmpty( [] );        // true\n *     anim8.isEmpty( {} );        // true\n *     anim8.isEmpty( null );      // true\n *     anim8.isEmpty( true );      // true\n *     anim8.isEmpty( false );     // true\n *     anim8.isEmpty( 'x' );       // false\n *     anim8.isEmpty( 0.3 );       // false\n *     anim8.isEmpty( [0] );       // false\n *     anim8.isEmpty( {x:3} );     // false\n *\n * @method anim8.isEmpty\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isEmpty(x)\n{\n  if ( isArray( x ) || isString( x ) )\n  {\n    return x.length > 0;\n  }\n  else if ( x === null )\n  {\n    return true;\n  }\n  else if ( isObject( x ) )\n  {\n    for (var prop in x)\n    {\n      return false;\n    }\n  }\n  else if ( isNumber( x ) )\n  {\n    return x !== 0.0;\n  }\n\n  return true;\n}\n\n/**\n * Parses the given input and returns an array.\n *\n * **Examples:**\n *\n *     anim8.toArray();            // []\n *     anim8.toArray('a b');       // ['a b']\n *     anim8.toArray('a b', ' ');  // ['a', 'b']\n *     anim8.toArray({a:0,b:0});   // ['a', 'b']\n *     anim8.toArray(['a', 'b']);  // ['a', 'b']\n *     anim8.toArray(3.2);         // [3.2]\n *     anim8.toArray(true);        // [true]\n *\n * @param  {Any} x\n * @param  {String} [split]\n * @return {Array}\n */\nfunction toArray( x, split )\n{\n  if ( isString( x ) )\n  {\n    return split ? x.split( split ) : [ x ];\n  }\n  else if ( isArray ( x ) )\n  {\n    return x;\n  }\n  else if ( isObject( x ) )\n  {\n    var props = [];\n\n    for ( var prop in x )\n    {\n      props.push( prop );\n    }\n\n    return props;\n  }\n  else if ( isDefined( x ) )\n  {\n    return [ x ];\n  }\n\n  return [];\n}\n\n/**\n * Performs a deep copy of the given variable. If the variable is an array or\n * object a new instance of that type is created where the values are copied as\n * well. All other types can't be copied (most likely because they're scalar) so\n * they are returned as-is.\n *\n * @method anim8.copy\n * @param {T} x\n * @return {T}\n */\nfunction copy(x)\n{\n  if ( isArray(x) )\n  {\n    var copied = [];\n\n    for (var i = 0; i < x.length; i++)\n    {\n      copied.push( copy( x[i] ) );\n    }\n\n    x = copied;\n  }\n  else if ( isObject(x) )\n  {\n    var copied = {};\n\n    for (var p in x)\n    {\n      copied[p] = copy( x[p] );\n    }\n\n    x = copied;\n  }\n\n  return x;\n}\n\n/**\n * Extends the given object by merging the following objects into it, avoiding\n * overriding any existing properties.\n *\n * @method anim8.extend\n * @param  {Object} out\n * @return {Object}\n */\nfunction extend(out)\n{\n  for (var i = 1; i < arguments.length; i++)\n  {\n    var o = arguments[ i ];\n\n    if ( isObject( o ) )\n    {\n      for (var prop in o)\n      {\n        if ( !(prop in out) )\n        {\n          out[prop] = o[prop];\n        }\n      }\n    }\n  }\n\n  return out;\n}\n\n/**\n * Returns the first defined variable of a possible 4 variables.\n *\n * **Examples:**\n *\n *     anim8.coalesce( 1, 2, 3 );           // 1\n *     anim8.coalesce( undefined, 2, 3 );   // 2\n *     anim8.coalesce();                    // undefined\n *\n * @method anim8.coalesce\n */\nfunction coalesce(a, b, c, d)\n{\n  if (isDefined(a)) {\n    return a;\n  }\n  if (isDefined(b)) {\n    return b;\n  }\n  if (isDefined(c)) {\n    return c;\n  }\n  return d;\n}\n\n/**\n * Provides a way to wrap a variable so calculators don't try copying it on parse.\n *\n * **Examples:**\n *\n *     anim8.constant( 5 );   // function() { return 5; }\n *\n * @method anim8.constant\n * @param {T} variable\n * @return {Function}\n */\nfunction constant(variable)\n{\n  return function()\n  {\n    return variable;\n  };\n}\n\n/**\n * Resolves the given variable. If the variable is a function the result is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.resolve( 5 );                     // 5\n *     anim8.resolve( true );                  // true\n *     anim8.resolve( function(){return 7;} ); // 7\n *\n * @method anim8.resolve\n * @param  {Function|E} variable\n * @return {E}\n */\nfunction resolve(variable)\n{\n  return isFunction( variable ) ? variable() : variable;\n}\n\n/**\n * Returns a \"unique\" identifier.\n *\n * @method id\n * @return {Number}\n */\nvar id = (function()\n{\n  var _id = 0;\n  return function() {\n    return ++_id;\n  };\n\n})();\n\n\n/**\n * Instantiates a new Animation given it's name, the input & options passed, and\n * the attrimators that were generated from the input & options. If the name is\n * false this is an anonymous animation. Input & Options are used by builders to\n * generate attrimators, options allow for an animations default properties to\n * be overriden.\n *\n * @param {String|Boolean} name\n * @param {Object} input\n * @param {Object} options\n * @param {AttrimatorMap} attrimators\n * @class Animation\n * @constructor\n */\nfunction Animation(name, input, options, attrimators)\n{\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {String|False} name\n   */\n  this.name = name;\n\n  /**\n   * The object which created the animation.\n   *\n   * @property {Object} input\n   */\n  this.input = input;\n\n  /**\n   * The options given when the animation was created.\n   *\n   * @property {Object} [options]\n   */\n  this.options = options;\n\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {AttrimatorMap} name\n   */\n  this.attrimators = attrimators;\n}\n\nClass.define( Animation,\n{\n\n  /**\n   * Generates an map of event instances from the attrimators in this animation.\n   *\n   * @method newAttrimators\n   * @return {AttrimatorMap}\n   */\n  newAttrimators: function()\n  {\n    return this.attrimators.clone();\n  },\n\n  /**\n   * Merges options with the options in this animation and places them in the\n   * events.\n   *\n   * @method merge\n   * @param {Object} [options]\n   * @param {AttrimatorMap} attrimatorMap\n   * @return {AttrimatorMap}\n   */\n  merge: function(options, attrimatorMap)\n  {\n    var helper = new BuilderHelper( this.input, this.options, options );\n\n    for (var builderName in this.input)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( this.input, options, this.options, attrimatorMap, helper );\n      }\n    }\n\n    return attrimatorMap;\n  }\n\n});\n\n\n/**\n * Instantiates a new Animator given a subject to animate.\n *\n * @param {Any} e\n * @class Animator\n * @constructor\n * @extends anim8.eventize\n */\nfunction Animator(e)\n{\n  this.reset( e );\n}\n\n/**\n * The event triggered after preupdate is called. Pre-update is used to run any\n * preparations on the subject before updates are made and attributes are\n * applied.\n *\n * @event preupdate\n */\n\n/**\n * The event triggered after all attrimators are updated and any new values\n * have been applied to the current values (frame) on the animator.\n *\n * @event update\n */\n\n/**\n * The event triggered after the current values (frame) on the animator are\n * applied to the subject.\n *\n * @event apply\n */\n\n/**\n * The event triggered when the given animation cycle starts (and initial\n * values are applied) for all attrimators in the cycle.\n *\n * @event cycleStart:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when the given animation cycle ends which occurs when the\n * last attrimator for an animation finishes or is interrupted by commands like\n * play, queue, transition, end, finish, & stop.\n *\n * @event cycleEnd:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when all animations on the animator have finished.\n *\n * @event finished\n * @param {Animator} animator\n */\n\n/**\n * The event triggered when an animator is deactivated which occurs when an\n * animator has finished animating and is being taken off the list of live\n * animators (anim8.animating).\n *\n * @event deactivate\n */\n\n/**\n * The event triggered after the user calls destroy on an animator.\n *\n * @event destroyed\n */\n\nClass.define( Animator,\n{\n\n  /**\n   * Resets the animator given a subject to animate.\n   *\n   * @method reset\n   * @param {Any} subject\n   * @chainable\n   * @protected\n   */\n  reset: function(subject)\n  {\n    /**\n     * The subject which is being animated.\n     *\n     * @property {Any} subject\n     */\n    this.subject = subject;\n\n    /**\n     * The map of attrimators animating the subject.\n     *\n     * @property {AttrimatorMap} attrimators\n     */\n    this.attrimators = new AttrimatorMap();\n\n    /**\n     * The array of attrimators recently added to the animator that\n     * are ready to be started.\n     *\n     * @property {Array} attrimatorsAdded\n     * @protected\n     */\n    this.attrimatorsAdded = [];\n\n    /**\n     * The object which stores the attribute values being animated.\n     *\n     * @property {Object} frame\n     */\n    this.frame = {};\n\n    /**\n     * The object which stores the attributes last updated.\n     *\n     * @property {Object} updated\n     */\n    this.updated = {};\n\n    /**\n     * Whether or not this animator has completely finished animating it's subject.\n     *\n     * @property {Boolean} finished\n     */\n    this.finished = false;\n\n    /**\n     * The factory which created this Animator given a subject.\n     *\n     * @property {Factory} factory\n     */\n    this.factory = null;\n\n    /**\n     * Whether or not this animator is actively being updated.\n     *\n     * @property {Boolean} active\n     */\n    this.active = false;\n\n    /**\n     * The current cycle being animated. Multiple cycles can be animated at once, this is the first one.\n     *\n     * @property {Number} cycleCurrent\n     * @protected\n     */\n    this.cycleCurrent = 0;\n\n    /**\n     * The ID of the next cycle of animations to be added to this Animator.\n     *\n     * @property {Number} cycleNext\n     * @protected\n     */\n    this.cycleNext = 0;\n\n    /**\n     * The last cycle that was ended.\n     *\n     * @property {Number} cycleEnded\n     * @protected\n     */\n    this.cycleEnded = 0;\n\n    return this;\n  },\n\n  /**\n   * Starts a new animation cycle. This is done before events & springs are\n   * placed to group them together so we know when to apply their initial value.\n   *\n   * @method newCycle\n   * @param {Attrimator|AttrimatorMap} attrimators\n   * @chainable\n   * @protected\n   */\n  newCycle: function(attrimators)\n  {\n    this.cycleNext++;\n\n    if ( attrimators instanceof AttrimatorMap )\n    {\n      this.cycleNext = attrimators.applyCycle( this.cycleNext );\n    }\n    else if ( attrimators instanceof Attrimator )\n    {\n      attrimators.cycle = this.cycleNext;\n    }\n\n    return this;\n  },\n\n  /**\n   * Applies the current cycle. This involves finding all attrimators with the\n   * same cycle identifier and applying their initial state.\n   *\n   * @method applyCurrentCycle\n   * @chainable\n   * @protected\n   */\n  applyCurrentCycle: function()\n  {\n    var cycle = this.cycleCurrent;\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      if ( attrimator.cycle === cycle )\n      {\n        this.updated[ attr ] = (attrimator.startCycle( this.frame ) !== false) || this.updated[ attr ];\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Ends the current cycle which calls any listening functions.\n   *\n   * @method endCurrentCycle\n   * @chainable\n   * @protected\n   */\n  endCurrentCycle: function()\n  {\n    if ( this.cycleCurrent > this.cycleEnded )\n    {\n      this.cycleEnded = this.cycleCurrent;\n      this.trigger( 'cycleEnd:' + this.cycleCurrent, this.cycleCurrent );\n    }\n  },\n\n  /**\n   * Returns the attribute descriptor given the name of the attribute.\n   *\n   * @method getAttribute\n   * @param  {String} attr\n   * @return {Object}\n   */\n  getAttribute: function(attr)\n  {\n    return this.factory.attribute( attr );\n  },\n\n  /**\n   * Restores any temporary state that may exist on this Animator that\n   * is a result from animations.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore: function()\n  {\n    return this;\n  },\n\n  /**\n   * Applies the initial state of recently added attrimators immediately.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState: function()\n  {\n    var currentTime = now();\n\n    this.preupdate( currentTime );\n    this.update( currentTime );\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * A method thats invoked along with all other animators before updates are\n   * called. This is used to make any necessary preparations before the animator\n   * is updated.\n   *\n   * @method preupdate\n   * @param {Number} now\n   * @chainable\n   */\n  preupdate: function(now)\n  {\n    // If there are attribute placed on the animator since the last preupdate\n    // that has computed values we need to replace the path on the event with\n    // a copy containing the computed values. This is where current value &\n    // relative values are injected from the animator into the attribute.\n    var aa = this.attrimatorsAdded;\n    if ( aa.length )\n    {\n      for (var i = 0; i < aa.length; i++)\n      {\n        var attrimator = aa[ i ];\n        var attr = attrimator.attribute;\n\n        if ( attr in this.subject )\n        {\n          this.frame[ attr ] = this.subject[ attr ];\n        }\n        else\n        {\n          this.setDefault( attr );\n        }\n\n        attrimator.start( now, this );\n      }\n\n      aa.length = 0;\n    }\n\n    this.trigger('preupdate');\n\n    return this;\n  },\n\n  /**\n   * Sets the default value for the given attribute in the frame of this\n   * Animator if there's no value there.\n   *\n   * @method setDefault\n   * @param {String} attr\n   * @protected\n   */\n  setDefault: function(attr)\n  {\n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = this.getAttribute( attr ).cloneDefault();\n    }\n  },\n\n  /**\n   * Updates all attrimators in this animator with the given time.\n   *\n   * @method update\n   * @param {Number} now\n   * @chainable\n   */\n  update: function(now)\n  {\n    this.wasFinished = this.finished;\n    this.finished = true;\n\n    var attrimators = this.attrimators.values;\n    var minCycle = this.cycleNext;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      this.updated[ attr ] = attrimator.setTime( now, this.frame );\n\n      this.finished = this.finished && attrimator.isFinished();\n\n      minCycle = Math.min( minCycle, attrimator.cycle );\n    }\n\n    if ( this.cycleCurrent < minCycle )\n    {\n      while ( this.cycleCurrent < minCycle )\n      {\n        this.endCurrentCycle();\n        this.cycleCurrent++;\n      }\n\n      this.cycleCurrent = minCycle;\n      this.applyCurrentCycle();\n      this.trigger( 'cycleStart:' + this.cycleCurrent, this.cycleCurrent );\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.endCurrentCycle();\n    }\n\n    this.trigger('update');\n\n    return this;\n  },\n\n  /**\n   * Places the attribute animator in this animator replacing any existing\n   * animator for the same attribute. The next time the animator is updated the\n   * attribute animator will be started. The previous (if any) attrimator is\n   * returned.\n   *\n   * @method placeAttrimator\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  placeAttrimator: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var existing = this.attrimators.get( attr );\n\n    this.attrimators.put( attr, attrimator );\n    this.attrimatorsAdded.push( attrimator );\n\n    this.finished = false;\n\n    return existing;\n  },\n\n  /**\n   * Applies all updated attributes to the subject. This method is invoked with\n   * all of the other animators at the end of the animation cycle.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function()\n  {\n    for (var attr in this.frame)\n    {\n      if ( this.updated[ attr ] )\n      {\n        this.subject[ attr ] = this.frame[ attr ];\n        this.updated[ attr ] = false;\n      }\n    }\n\n    this.trigger('apply');\n\n    this.trimAttrimators();\n\n    return this;\n  },\n\n  /**\n   * Removes any finished attrimators and places any queued attrimators. If the\n   * animator previously wasn't finished but now is the 'finished' event will\n   * be triggered.\n   *\n   * @method trimAttrimators\n   * @chainable\n   * @protected\n   */\n  trimAttrimators: function()\n  {\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( attrimator.isFinished() )\n      {\n        if ( attrimator.next )\n        {\n          this.placeAttrimator( attrimator.next );\n        }\n        else\n        {\n          this.attrimators.removeAt( i );\n        }\n      }\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the current value for the given attribute (or undefined if the\n   * attribute is not or has not animated).\n   *\n   * @method value\n   * @param {String} attr\n   * @return {Any}\n   */\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\n  /**\n   * Activates this Animator by adding it to the main loop if it isn't there\n   * already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    activateAnimator( this );\n\n    return this;\n  },\n\n  /**\n   * A method that is invoked when an animator is finished and is being removed\n   * from the list of currently animating Animators.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate: function()\n  {\n    this.trigger('deactivate', this);\n\n    return this;\n  },\n\n  /**\n   * A method that can be invoked to destroy an animator - removing any\n   * relationship between the subject and animator. The next time an animator is\n   * generated for the subject a new animator will be created.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy: function()\n  {\n    this.finished = true;\n\n    this.factory.destroy( this );\n\n    this.trigger('destroyed');\n\n    return this;\n  },\n\n  /**\n   * Adds a spring to this animator replacing any existing attrimator for the\n   * same attribute. A spring object can be given, an instance of anim8.Spring,\n   * or a name of a saved Spring. The spring added to the animator is returned.\n   *\n   * @method spring\n   * @param {Spring|String|Object} spring\n   * @return {Spring}\n   */\n  spring: function(spring)\n  {\n    var spring = $spring( spring );\n\n    if ( spring === false )\n    {\n      return false;\n    }\n\n    this.newCycle( spring );\n    this.placeAttrimator( spring );\n\n    this.activate();\n\n    return spring;\n  },\n\n  /**\n   * Plays an animation. Attributes in the animation that are currently being\n   * animated will be stopped and replaced with the new attrimators. If `all` is\n   * true then any attrimators animating not specified in the given animation\n   * will be stopped.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.playAttrimators( attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Plays a map of attrimators. Attributes in the attrimator map that are\n   * currently being animated will be stopped and replaced with the new\n   * attrimators. If \"all\" is true then any attrimators animating not specified\n   * in the given attrimator map will be stopped. This method will not activate\n   * the Animator, that has to be done manually.\n   *\n   * @method playAttrimators\n   * @param {AttrimatorMap} animatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  playAttrimators: function(attrimatorMap, all)\n  {\n    if ( all )\n    {\n      this.finishNotPresent( attrimatorMap, 0 );\n    }\n\n    var attrimators = attrimatorMap.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      this.placeAttrimator( attrimators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Queues an animation. The attrimators generated from the given animation\n   * will be started at the same time - as soon as all finite attrimators for\n   * the same attributes are finished. Any infinite attrimators will be\n   * automatically stopped when all queued attrimators are set to start.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.queueAttrimators( attrimatorMap );\n\n    return this.activate();\n  },\n\n  /**\n   * Queues a map of attrimators. The map of attrimators will be started at the\n   * same time - as soon as all finished attrimators for the same attribute are\n   * finished. Any infinite attrimators will be automatically stopped when all\n   * queued attrimators are set to start.\n   *\n   * @method queueAttrimators\n   * @param {AttrimatorMap} attrimatorMap\n   * @chainable\n   * @protected\n   */\n  queueAttrimators: function(attrimatorMap)\n  {\n    this.attrimators.queueMap( attrimatorMap, this.placeAttrimator, this );\n\n    return this;\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given animation will be stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {String|Object|Animation} animation\n   * @param {Object} [options]\n   * @param {Boolean} [all]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.transitionAttrimators( transition, attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given attrimator map will be\n   * stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * @method transitionAttrimators\n   * @param {Object} transition\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators: function(transition, attrimatorMap, all)\n  {\n    // TRANSITIONING:\n    // If the animator doesn't have an attrimator for the given attribute just add the attrimator adding the total delay\n    // If the animator has an attrimator currently...\n    //   If the current attrimator or new attrimator don't have values at the desired times...\n    //      Stop the current attrimator after the total delay (adding the delay of the new attrimator as well)\n    //      Queue the new attrimator\n    //   Else\n    //      Create a path using the methods detailed above\n    // If all is true and there's an attrimator left on the animator that isn't being transitioned, stop it after the total delay.\n\n    // CREATING A TRANSITION PATH:\n    // If intro & outro are 0, use Tween\n    // If intro is 0, use Quadratic Path between current value, outro point, and first point on new path.\n    // If outro is 0, use Quadratic Path between current value, first point on new path, and intro point.\n    // If intro & outro are not 0, use Cubic Path between current value, outro point, first point on new path, and intro point.\n    // If granularity is given > 1 then compile the path, compute intro & outro velocities, and compute deltas for new\n    //    compiled path based on interpolated velocity over the path (knowing it's length and transition time)\n\n    var current = this.attrimators;\n    var attrimators = attrimatorMap.values;\n\n    // If transition all attributes,\n    if ( all )\n    {\n      this.finishNotPresent( attrimatorMap, transition.time );\n    }\n\n    // Only transition if we need to\n    if ( current.hasOverlap( attrimatorMap ) )\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        var next = attrimators[ i ];\n        var attr = next.attribute;\n        var curr = current.get( attr );\n\n        if ( curr && isDefined( this.frame[ attr ] ) )\n        {\n          var attribute = this.getAttribute( attr );\n          var calc = attribute.calculator;\n\n          var p2 = next.valueAt( 0, calc.create() );\n\n          if ( p2 !== false )\n          {\n            var transitionTime = transition.time;\n            var p0 = calc.clone( this.frame[ attr ] );\n            var p1 = transition.outro ? curr.valueAt( curr.getElapsed() + transition.outro, calc.create() ) : false;\n            var p3 = transition.intro ? next.valueAt( transition.intro, calc.create() ) : false;\n            var path = null;\n\n            // If the intro is negative we can look into the past by looking a little bit into\n            // the future and assume the past is going in the same direction (only the opposite).\n            if ( p3 !== false && transition.intro < 0 && transition.lookup > 0 )\n            {\n              var pastLookahead = next.valueAt( transition.lookup, calc.create() );\n              var pastVelocity = calc.sub( pastLookahead, p2 );\n\n              if ( pastVelocity !== false )\n              {\n                var pastNegativeVelocity = calc.scale( pastVelocity, transition.intro / transition.lookup );\n                var past = calc.add( pastNegativeVelocity, p2 );\n\n                p3 = p2;\n                p2 = past;\n              }\n            }\n\n            // Build a path with as many of the points as possible.\n            if ( p1 === false && p3 === false )\n            {\n              path = new Tween( attr, calc, p0, p2 );\n            }\n            else if ( p1 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p2, p3 );\n            }\n            else if ( p3 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p1, p2 );\n            }\n            else\n            {\n              path = new PathCubic( attr, calc, p0, p1, p2, p3 );\n            }\n\n            // If granularity is specified we will try to make the transition\n            // smooth by maintaining exit (outro) velocity from the current attrimator\n            // and interpolating it to the entrance (intro) velocity for the\n            // attrimator we're transitioning into.\n            if ( transition.granularity > 2 && transition.lookup > 0 )\n            {\n              var outTime  = p1 === false ? curr.getElapsed() : curr.getElapsed() + transition.outro;\n              var outPoint = p1 === false ? p0 : p1;\n              var outNext  = curr.valueAt( outTime + transition.lookup, calc.create() );\n\n              var inTime   = p3 === false ? 0 : transition.intro;\n              var inPoint  = p3 === false ? p2 : p3;\n              var inNext   = next.valueAt( inTime + transition.lookup, calc.create() );\n\n              // We can only proceed if we have reference points to calculate\n              // exit & entrance velocity.\n              if ( outNext !== false && inNext !== false )\n              {\n                var outVelocity  = calc.sub( calc.clone( outNext ), outPoint );\n                var outPerMillis = calc.length( outVelocity ) / transition.lookup;\n\n                var inVelocity   = calc.sub( calc.clone( inNext ), inPoint );\n                var inPerMillis  = calc.length( inVelocity ) / transition.lookup;\n\n                var compiled = new PathCompiled( attr, path, transition.granularity );\n                var points = compiled.points;\n                var lastPoint = points.length - 1;\n                var totalDistance = 0;\n                var distances = [];\n\n                for (var k = 0; k < lastPoint; k++)\n                {\n                  distances[ k ] = totalDistance;\n                  totalDistance += calc.distance( points[ k ], points[ k + 1 ] );\n                }\n                distances[ lastPoint ] = totalDistance;\n\n                if ( !isNaN( totalDistance ) )\n                {\n                  var requiredTime = 2.0 * totalDistance / (outPerMillis + inPerMillis);\n                  var acceleration = 0.5 * (inPerMillis - outPerMillis) / requiredTime;\n                  var timeDelta = requiredTime / lastPoint;\n                  var deltas = [];\n\n                  for (var k = 0; k < lastPoint; k++)\n                  {\n                    var time = k * timeDelta;\n                    var position = outPerMillis * time + acceleration * time * time;\n\n                    deltas[ k ] = position / totalDistance;\n                  }\n                  deltas[ lastPoint ] = 1.0;\n\n                  path = new PathDelta( attr, calc, points, deltas );\n                  transitionTime = requiredTime;\n                }\n              }\n            }\n\n            var transitionEvent = new Event( attr, path, transitionTime, transition.easing, 0, 0, 0, 1 );\n\n            transitionEvent.next = next;\n            transitionEvent.cycle = next.cycle;\n\n            next.offset = transition.intro;\n\n            this.placeAttrimator( transitionEvent );\n          }\n          else\n          {\n            curr.stopIn( transition.time + next.delay );\n            curr.queue( next );\n            next.delay = 0;\n          }\n        }\n        else\n        {\n          next.delay += transition.time;\n\n          this.placeAttrimator( next );\n        }\n      }\n    }\n    // We don't need to transition, just play the events\n    else\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        this.placeAttrimator( attrimators[ i ] );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Finishes any attrimators on this animator that are not present in the given\n   * map of attrimators. Optionally a delay in stopping them can be given.\n   *\n   * @method finishNotPresent\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Number} [delay=0]\n   * @chainable\n   * @protected\n   */\n  finishNotPresent: function(attrimatorMap, delay)\n  {\n    var attrimators = this.attrimators.values;\n    var stopIn = delay || 0;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( !attrimatorMap.has( attrimator.attribute ) )\n      {\n        attrimator.stopIn( stopIn );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Tweens a single attribute to a target value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenTo\n   * @param {String} attr\n   * @param {T} target\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenTo: function(attr, target, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var end       = attribute.parse( target );\n    var path      = new Tween( attr, attribute.calculator, computed.current, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes to target values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyTo\n   * @param {Object} targets\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenManyTo: function(targets, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in targets )\n    {\n      var attribute = this.getAttribute( attr );\n      var end       = attribute.parse( targets[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, computed.current, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens a single attribute from a starting value to the current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenFrom\n   * @param {String} attr\n   * @param {T} starting\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenFrom: function(attr, starting, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starting );\n    var path      = new Tween( attr, attribute.calculator, start, computed.current );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to the current values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyFrom\n   * @param {Object} startings\n   * @param {String|Array|Object} [options]\n   * @chainable\n   */\n  tweenManyFrom: function(startings, options)\n  {\n    var options = $options( options );\n\n    this.newCycle();\n\n    for ( var attr in startings )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( startings[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, computed.current );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens an attribute from a starting value to an ending value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tween\n   * @param {String} attr\n   * @param {T} starts\n   * @param {T} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tween: function(attr, starts, ends, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starts );\n    var end       = attribute.parse( ends );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to ending values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenMany\n   * @param {Object} starts\n   * @param {Object} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenMany: function(starts, ends, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in starts )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( starts[ attr ] );\n      var end       = attribute.parse( ends[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Moves an attribute relative to its current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method move\n   * @param {String} attr\n   * @param {T} amount\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  move: function(attr, amount, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var relative  = attribute.parse( amount );\n    var start     = computed.current;\n    var end       = isComputed( relative ) ? relative : computed.relative( relative );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Moves multiple attribute relative to their current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method moveMany\n   * @param {Object} amounts\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  moveMany: function(amounts, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in amounts )\n    {\n      var attribute = this.getAttribute( attr );\n      var relative  = attribute.parse( amounts[ attr ] );\n      var start     = computed.current;\n      var end       = isComputed( relative ) ? relative : computed.relative( relative );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Returns a function that returns the current value for the given attribute\n   * when invoked. The returned function can be given as values for paths &\n   * springs that are evaluated every frame.\n   *\n   * @method ref\n   * @param {String} attr\n   * @return {Function}\n   */\n  ref: function(attr)\n  {\n    var animator = this;\n    var attribute = this.getAttribute( attr );\n    var request = {};\n\n    return function()\n    {\n      if ( attr in animator.frame )\n      {\n        return animator.frame[ attr ];\n      }\n\n      request[ attr ] = true;\n\n      var current = animator.get( request );\n\n      if ( isDefined( current[ attr ] ) )\n      {\n        return current[ attr ];\n      }\n\n      return attribute.defaultValue;\n    };\n  },\n\n  /**\n   * Follows the attribute along the given path definition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method follow\n   * @param {String} attr\n   * @param {Path|Object|String} path\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  follow: function(attr, path, options, cache)\n  {\n    var options = $options( options, cache );\n    var path    = $path( path );\n    var event   = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Helper method that iterates over given attributes. If callback is specified\n   * it is invoked for each attrimator in this animator for the given\n   * attributes. If no callback is given an array of anim8.Attrimators is\n   * returned for each attrimator in this animator for the given attributes.\n   *\n   * @method attrimatorsFor\n   * @param {String|Array|Object} attributes\n   * @param {Function} callback\n   * @return {this|Array}\n   */\n  attrimatorsFor: function(attributes, callback)\n  {\n    var attrimatorMap = this.attrimators;\n    var attributes = toArray( coalesce( attributes, attrimatorMap.keys ), ' ' );\n    var resulting = !isFunction( callback );\n    var results = [];\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n      var attrimator = attrimatorMap.get( attr );\n\n      if ( attrimator )\n      {\n        if ( resulting )\n        {\n          results.push( attrimator );\n        }\n        else\n        {\n          callback.call( this, attrimator, attr );\n        }\n      }\n    }\n\n    return resulting ? results : this;\n  },\n\n  /**\n   * Stops all attributes for the specified attributes. Attribute names can be\n   * given as an array or a space separated string. If no attributes are given\n   * all attributes are assumed.\n   *\n   * @method stop\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  stop: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator, attr)\n    {\n      this.attrimators.remove( attr );\n    });\n  },\n\n  /**\n   * Ends all attributes for the specified attributes. If attributes are queued\n   * the last value of the last attribute is applied to this Animator before\n   * being completely removed. Attribute names can be given as an array or a\n   * space separated string. If no attributes are given all attributes are\n   * assumed.\n   *\n   * @method end\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  end: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      while (attrimator.next)\n      {\n        attrimator = attrimator.next;\n      }\n\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Finishes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method finish\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  finish: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Calls nopeat on all current attrimators for the specified attributes.\n   * Attribute names can be given as an array or a space separated string. If\n   * no attributes are given all attributes are assumed.\n   *\n   * **See:** {{#crossLink \"Attrimator/nopeat:method\"}}Attrimator.nopeat{{/crossLink}}\n   *\n   * @method nopeat\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  nopeat: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.nopeat();\n    });\n  },\n\n  /**\n   * Pauses all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method pause\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  pause: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.pause();\n    });\n  },\n\n  /**\n   * Resumes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method resume\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  resume: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.resume();\n    });\n  },\n\n  /**\n   * Sets the given attributes to this Animator immediately.\n   *\n   * @method set\n   * @param {Object} attributes\n   * @chainable\n   */\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n      this.updated[ attr ] = true;\n    }\n\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * Unsets the attribute, array of attributes, or object of attributes.\n   * Unsetting involves removing all attrimators and the current value in the\n   * frame,\n   *\n   * @method unset\n   * @param {String|Array|Object} attributes\n   * @chainable\n   */\n  unset: function(attributes)\n  {\n    var attributes = toArray( coalesce( attributes, this.frame ), ' ' );\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n\n      this.attrimators.remove( attr );\n\n      delete this.frame[ attr ];\n    }\n\n    return this;\n  },\n\n  /**\n   * Gets the current attribute values for all attributes specified. The\n   * argument must be an object where the key is the name of an attribute.\n   *\n   * @method get\n   * @param {Object} attributes\n   * @return {Object}\n   */\n  get: function(attributes)\n  {\n    var out = {};\n\n    for (var attr in attributes)\n    {\n      out[ attr ] = this.frame[ attr ];\n    }\n\n    return out;\n  },\n\n  /**\n   * Returns the amount of finite time remaining before the animator is done\n   * animating. Attrimators that don't have a known end time are not included.\n   * If there are no attrimators with end times then zero is returned.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.attrimators.timeRemaining();\n  },\n\n  /**\n   * Returns true if there are any attrimators on this Animator.\n   *\n   * @method hasAttrimators\n   * @return {Boolean}\n   */\n  hasAttrimators: function()\n  {\n    return this.attrimators.size() > 0;\n  },\n\n  /**\n   * Returns the subject of the Animator optionally passing it through a wrapper\n   * function before it's returned.\n   *\n   * @method getSubject\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubject: function(wrapper)\n  {\n    var subject = this.subject;\n\n    if ( isFunction( wrapper ) )\n    {\n      subject = wrapper( subject );\n    }\n\n    return subject;\n  },\n\n  /**\n   * Invokes a function with the given context or the context of this Animator\n   * if none is given. This is particularly useful for having a function be\n   * called on deferred statements.\n   *\n   * @method invoke\n   * @param {Function} func\n   * @param {Object} [context]\n   * @param {Array} [args]\n   * @chainable\n   */\n  invoke: function(func, context, args)\n  {\n    if ( isFunction( func ) )\n    {\n      func.apply( context || this, args || [] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Defers the method calls following this one to when the given event type\n   * (on or once) and event. To return this animator you need to call undefer()\n   * as many times as you called defer().\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} [callback]\n   * @return {DeferAnimator}\n   */\n  defer: function(eventType, event, callback)\n  {\n    return new DeferAnimator( this, this, eventType, event, callback );\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned starts.\n   *\n   * @method onCycleStart\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleStart: function(callback, context)\n  {\n    this.once( 'cycleStart:' + this.cycleNext, callback, context );\n\n    return this;\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned ends.\n   *\n   * @method onCycleEnd\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleEnd: function(callback, context)\n  {\n    this.once( 'cycleEnd:' + this.cycleNext, callback, context );\n\n    return this;\n  }\n\n});\n\n/**\n * Adds the following event methods to Animators: on, once, off, trigger.\n */\neventize( Animator.prototype );\n\n\n/**\n * Instantiates an Array of {{#crossLink \"Animator\"}}{{/crossLink}} instances.\n *\n * @param {Array} [input]\n * @class Animators\n * @constructor\n * @extends {Array}\n */\nfunction Animators(input)\n{\n  this.$ = [];\n\n  if ( isArray( input ) )\n  {\n    this.fill( input );\n  }\n}\n\n/**\n * Animators is an instance of Array. All array methods are supported.\n */\nClass.define( Animators,\n{\n\n  /**\n   * Adds an animator to this set of animators.\n   *\n   * @param  {Animator} animator\n   * @chainable\n   */\n  push: function(animator)\n  {\n    this.$.push( animator );\n\n    return this;\n  },\n\n  /**\n   * Returns the number of animators in this set.\n   *\n   * @return {Number}\n   */\n  length: function()\n  {\n    return this.$.length;\n  },\n\n  /**\n   * Returns the animator at the given index.\n   *\n   * @param  {Number} index\n   * @return {Animator}\n   */\n  at: function(index)\n  {\n    return this.$[ index ];\n  },\n\n  /**\n   * Invokes a callback for each element in the array.\n   *\n   * @method each\n   * @param {Function} iterator\n   * @param {Object} context\n   * @chainable\n   */\n  each: function(iterator, context)\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      if ( iterator.call( context || array[i], array[i], i ) === false )\n      {\n        break;\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Appends the array of animators given to the end of this array.\n   *\n   * @method fill\n   * @param {Array} animators\n   * @chainable\n   */\n  fill: function(animators)\n  {\n    for (var i = 0; i < animators.length; i++)\n    {\n      this.push( animators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Invokes a callback for each element in the array and if a true value is\n   * returned  that element is removed from the array.\n   *\n   * @method filter\n   * @param {Function} filterer\n   * @chainable\n   */\n  filter: function(filterer)\n  {\n    var array = this.$;\n    var alive = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      var remove = filterer( array[i] );\n\n      if ( !remove )\n      {\n        array[alive++] = array[i];\n      }\n    }\n\n    array.length = alive;\n\n    return this;\n  },\n\n  /**\n   * Returns the subjects of the Animators optionally passing them through a\n   * wrapper function before it's returned.\n   *\n   * @method getSubjects\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubjects: function(wrapper)\n  {\n    var array = this.$;\n    var subjects = [];\n\n    for (var i = 0; i < array.length; i++)\n    {\n      subjects.push( array[i].subject );\n    }\n\n    if ( isFunction( wrapper ) )\n    {\n      subjects = wrapper( subjects );\n    }\n\n    return subjects;\n  },\n\n  /**\n   * Returns the first animator in the array.\n   *\n   * @method first\n   * @return {Animator}\n   */\n  first: function()\n  {\n    return this.$[0];\n  },\n\n  /**\n   * Reverses the order of animators in the array.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    var array = this.$;\n    var last = array.length - 1;\n    var mid = Math.floor( array.length / 2 );\n\n    for (var i = 0; i < mid; i++)\n    {\n      var e0 = array[ i ];\n      var e1 = array[ last - i ];\n\n      array[ i ] = e1;\n      array[ last - i ] = e0;\n    }\n\n    return this;\n  },\n\n  /**\n   * Activates all Animators in the array if they aren't active already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      pushAnimator( array[i] );\n    }\n\n    activate();\n\n    return this;\n  },\n\n  /**\n   * Creates a sequence of events separated by a delay.\n   *\n   * @method sequence\n   * @param {String|Number} delay\n   * @param {String|Array|Function} easing\n   * @return {Sequence}\n   */\n  sequence: function(delay, easing)\n  {\n    return new Sequence( this, delay, easing );\n  },\n\n  /**\n   * Returns the maximum time remaining out of all Animators in the array.\n   *\n   * **See:** {{#crossLink \"Animating/timeRemaining:method\"}}{{/crossLink}}\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    var array = this.$;\n    var maxRemaining = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      maxRemaining = Math.max( maxRemaining, array[ i ].timeRemaining() );\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method preupdate\n   * @chainable\n   */\n  preupdate: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].preupdate( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/update:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method update\n   * @chainable\n   */\n  update: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].update( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function(max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].apply();\n    }\n\n    return this;\n  },\n\n  /**\n   * Handles an animator if it's finished, and returns false if the animator can\n   * be removed from the set of animators.\n   *\n   * @method handleFinished\n   * @param {Animator} animator\n   * @return {Boolean}\n   */\n  handleFinished: function(animator)\n  {\n    if ( animator.finished )\n    {\n      animator.deactivate();\n      animator.active = false;\n    }\n\n    return animator.finished;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} on each\n   * animator in the array and returns this.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore               : delegate( 'restore', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method placeAttrimator\n   * @chainable\n   */\n  placeAttrimator       : delegate( 'placeAttrimator', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState     : delegate( 'applyInitialState', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trimAttrimators\n   * @chainable\n   */\n  trimAttrimators       : delegate( 'trimAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate            : delegate( 'deactivate', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy               : delegate( 'destroy', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method spring\n   * @chainable\n   */\n  spring                : delegate( 'spring', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/play:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method play\n   * @chainable\n   */\n  play                  : delegate( 'play', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method playAttrimators\n   * @chainable\n   * @protected\n   */\n  playAttrimators       : delegate( 'playAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queue\n   * @chainable\n   */\n  queue                 : delegate( 'queue', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queueAttrimators\n   * @chainable\n   * @protected\n   */\n  queueAttrimators      : delegate( 'queueAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method transition\n   * @chainable\n   */\n  transition            : delegate( 'transition', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}}\n   * on each animator in the array and returns this.\n   *\n   * @method transitionAttrimators\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators : delegate( 'transitionAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tween\n   * @chainable\n   */\n  tween                 : delegate( 'tween', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenTo\n   * @chainable\n   */\n  tweenTo               : delegate( 'tweenTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenFrom\n   * @chainable\n   */\n  tweenFrom             : delegate( 'tweenFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenMany\n   * @chainable\n   */\n  tweenMany             : delegate( 'tweenMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyTo\n   * @chainable\n   */\n  tweenManyTo           : delegate( 'tweenManyTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyFrom\n   * @chainable\n   */\n  tweenManyFrom         : delegate( 'tweenManyFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/move:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method move\n   * @chainable\n   */\n  move                  : delegate( 'move', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method moveMany\n   * @chainable\n   */\n  moveMany              : delegate( 'moveMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method follow\n   * @chainable\n   */\n  follow                : delegate( 'follow', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/attrimatorsFor:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method attrimatorsFor\n   * @chainable\n   */\n  attrimatorsFor        : delegate( 'attrimatorsFor', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method stop\n   * @chainable\n   */\n  stop                  : delegate( 'stop', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/end:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method end\n   * @chainable\n   */\n  end                   : delegate( 'end', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method finish\n   * @chainable\n   */\n  finish                : delegate( 'finish', DelegateTypes.THIS ),\n\n/**\n   * Calls {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method nopeat\n   * @chainable\n   */\n  nopeat                : delegate( 'nopeat', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause                 : delegate( 'pause', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume                : delegate( 'resume', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/set:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method set\n   * @chainable\n   */\n  set                   : delegate( 'set', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method unset\n   * @chainable\n   */\n  unset                 : delegate( 'unset', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/get:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method get\n   * @chainable\n   */\n  get                   : delegate( 'get', DelegateTypes.FIRST ),\n\n  /**\n   * Calls {{#crossLink \"Animator/hasAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method hasAttrimators\n   * @chainable\n   */\n  hasAttrimators        : delegate( 'hasAttrimators', DelegateTypes.TRUE ),\n\n  /**\n   * Calls {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method invoke\n   * @chainable\n   */\n  invoke                : delegate( 'invoke', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleStart\n   * @chainable\n   */\n  onCycleStart          : delegate( 'onCycleStart', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleEnd\n   * @chainable\n   */\n  onCycleEnd            : delegate( 'onCycleEnd', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/on:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method on\n   * @chainable\n   */\n  on                    : delegate( 'on', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/once:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method once\n   * @chainable\n   */\n  once                  : delegate( 'once', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/off:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method off\n   * @chainable\n   */\n  off                   : delegate( 'off', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trigger:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trigger\n   * @chainable\n   */\n  trigger               : delegate( 'trigger', DelegateTypes.THIS )\n\n});\n\n\n/**\n * Animates a single attribute over any period of time.\n *\n * @class Attrimator\n * @constructor\n */\nfunction Attrimator()\n{\n\n}\n\nClass.define( Attrimator,\n{\n\n  /**\n   * Resets this attrimator for the given attribute created by the given builder.\n   *\n   * @method reset\n   * @param {String} attribute\n   * @param {Builder} builder\n   * @param {Attrimator} [next]\n   */\n  reset: function(attribute, builder, next)\n  {\n    /**\n     * The name of the attribute this attrimator is animating.\n     *\n     * @property {String} attribute\n     */\n    this.attribute = attribute;\n\n    /**\n     * The builder that created this attrimator (if any).\n     *\n     * @property {Builder} builder\n     */\n    this.builder = builder;\n\n    /**\n     * The next attrimator to be played once this one has finished.\n     *\n     * @property {Attrimator} next\n     */\n    this.next = next;\n\n    /**\n     * The time the attrimator was started by the animator.\n     *\n     * @property {Number} startTime\n     */\n    this.startTime = 0;\n\n    /**\n     * The time the attrimator was last paused.\n     *\n     * @property {Number} pauseTime\n     */\n    this.pauseTime = 0;\n\n    /**\n     * The amount of time that has elapsed since the attrimator started.\n     *\n     * @property {Number} elapsed\n     */\n    this.elapsed = 0;\n\n    /**\n     * The time this attrimator should stop itself after it started in milliseconds.\n     *\n     * @property {Number} stopTime\n     */\n    this.stopTime = Number.POSITIVE_INFINITY;\n\n    /**\n     * Whether or not the attrimator is paused.\n     *\n     * @property {Boolean} paused\n     */\n    this.paused = false;\n\n    /**\n     * The cycle this attrimator belongs to.\n     *\n     * @type {Number} cycle\n     */\n    this.cycle = 0;\n\n    /**\n     * The amount of time in milliseconds this attrimator is delayed since start.\n     *\n     * @property {Number} delay\n     */\n    this.delay = 0;\n\n    /**\n     * The initial elapsed time in milliseconds when the attrimator is started.\n     *\n     * @property {Number} offset\n     */\n    this.offset = 0;\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject animator. This\n   * is called as early as possible to establish the start time of the\n   * attrimator so when the user isn't on the page time can be kept accurately.\n   *\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  prestart: function(now)\n  {\n    if ( this.startTime === 0 )\n    {\n      this.startTime = now - this.offset;\n      this.elapsed = this.offset;\n      this.finished = false;\n      this.prestartNext();\n    }\n  },\n\n  /**\n   * Calls {{#crossLink \"Attrimator/prestart:method\"}}{{/crossLink}} on the next\n   * attrimator if it can be called.\n   *\n   * @method prestartNext\n   */\n  prestartNext: function( overrideNext )\n  {\n    // If there is a next attrimator and this attrimator has been prestarted...\n    if ( this.next && this.startTime !== 0 )\n    {\n      // If override next is specified, clear next's startTime\n      if ( overrideNext )\n      {\n        this.next.startTime = 0;\n      }\n\n      // We can only prestart next if it has no startTime.\n      if ( this.next.startTime === 0 )\n      {\n        var totalTime = this.totalTime();\n\n        // If this attrimator has a finite total amount of time, it's end can be calculated.\n        if ( !isNaN( totalTime ) )\n        {\n          this.next.prestart( this.startTime + totalTime );\n        }\n      }\n    }\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject\n   * animator. This is called once in anim8.Animator.preupdate before the first\n   * time this attrimator is updated.\n   *\n   * @method start\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  start: function(now, animator)\n  {\n    this.prestart( now );\n  },\n\n  /**\n   * Invoked once when a new animation cycle is started on an Animator. If this\n   * attrimator updated the frame true must be returned.\n   *\n   * @method startCycle\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  startCycle: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Updates this attrimator given a time to animate to and the frame to\n   * provide with a new value. This method will return true if the attribute\n   * this is animating has been updated and needs to be applied to the subject.\n   *\n   * @method setTime\n   * @param {Number} now\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  setTime: function(now, frame)\n  {\n    if ( this.paused )\n    {\n      return false;\n    }\n\n    var updated = false;\n    var elapsed = now - this.startTime;\n    var updated = false;\n\n    if ( elapsed > this.stopTime )\n    {\n      updated = this.finish( frame );\n    }\n    else if ( elapsed >= this.delay )\n    {\n      updated = this.update( elapsed, frame );\n    }\n\n    this.elapsed = elapsed;\n\n    return updated;\n  },\n\n  /**\n   * Updates the attrimator given elapsed time in milliseconds, the frame to\n   * apply a value to, and returns whether the frame was updated or not.\n   *\n   * @method update\n   * @param {Number} elapsed\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  update: function(elapsed, frame)\n  {\n    throw 'Attrimator.update not implemented';\n  },\n\n  /**\n   * Returns the amount of time that has elapsed in milliseconds.\n   *\n   * @method getElapsed\n   * @return {Number}\n   */\n  getElapsed: function()\n  {\n    return this.elapsed;\n  },\n\n  /**\n   * Stops this attrimator in the given number of milliseconds.\n   *\n   * @method stopIn\n   * @param {Number} milliseconds\n   * @chainable\n   */\n  stopIn: function(milliseconds)\n  {\n    this.stopTime = this.getElapsed() + milliseconds;\n\n    return this;\n  },\n\n  /**\n   * If this attrimator repeats its animation this method will stop repitition\n   * after the next animation cycle.\n   *\n   * @chainable\n   */\n  nopeat: function()\n  {\n    return this;\n  },\n\n  /**\n   * Returns the value at the given time or returns false if it can't be\n   * calculated.\n   *\n   * @method valueAt\n   * @param {Number} time\n   * @param {Any} out\n   * @return {Any|False}\n   */\n  valueAt: function(time, out)\n  {\n    return false;\n  },\n\n  /**\n   * The total amount of time this attrimator will take in milliseconds. This\n   * may be an infinite number.\n   *\n   * @method totalTime\n   * @return {Number}\n   */\n  totalTime: function()\n  {\n    return this.stopTime;\n  },\n\n  /**\n   * The time remaining before this attrimator and any following will be\n   * finished.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.totalTime() - this.elapsed + ( this.next ? this.next.timeRemaining() : 0 );\n  },\n\n  /**\n   * Clones this attrimator.\n   *\n   * @method clone\n   * @return {Attrimator}\n   */\n  clone: function()\n  {\n    throw 'AttributeAnimator.clone not implemented';\n  },\n\n  /**\n   * Returns whether this attrimator has computed values which need to be\n   * resolved by the subject animator calling prepare on this attrimator.\n   *\n   * @method hasComputed\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    return false;\n  },\n\n  /**\n   * Determines whether this attrimator will run infinitely.\n   *\n   * @method isInfinite\n   * @return {Boolean}\n   */\n  isInfinite: function()\n  {\n    return (this.stopTime === Number.POSITIVE_INFINITY);\n  },\n\n  /**\n   * Pauses this attrimator if it isn't already paused.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause: function()\n  {\n    if ( !this.paused )\n    {\n      this.pauseTime = now();\n      this.paused = true;\n    }\n\n    return this;\n  },\n\n  /**\n   * Resumes this attrimator if it's paused. This involves resetting the start\n   * time of the attrimator.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume: function()\n  {\n    if ( this.paused )\n    {\n      var totalPausedTime = now() - this.pauseTime;\n      var delay = this;\n\n      while ( delay && delay.startTime !== 0 )\n      {\n        delay.startTime += totalPausedTime;\n        delay = delay.next;\n      }\n\n      this.paused = false;\n    }\n\n    return this;\n  },\n\n  /**\n   * Whether this attrimator is paused.\n   *\n   * @method isPaused\n   * @return {Boolean}\n   */\n  isPaused: function()\n  {\n    return this.paused;\n  },\n\n  /**\n   * Sets the final state of the attrimator to the frame if one exists and\n   * returns true, otherwise false is returned and frame remains unchanged.\n   *\n   * @method finish\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  finish: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Whether this attrimator is finished.\n   *\n   * @method isFinished\n   * @return {Boolean}\n   */\n  isFinished: function()\n  {\n    return false;\n  },\n\n  /**\n   * Returns the builder that created this attrimator (if any).\n   *\n   * @method getBuilder\n   * @return {Builder}\n   */\n  getBuilder: function()\n  {\n    return this.builder;\n  },\n\n  /**\n   * Places the given attrimator on the end of the chain of attrimators starting\n   * with this attrimator.\n   *\n   * @method queue\n   * @param {Attrimator} next\n   * @chainable\n   */\n  queue: function(next)\n  {\n    if ( this.next )\n    {\n      this.next.queue( next );\n    }\n    else\n    {\n      this.next = next;\n      this.prestartNext();\n    }\n\n    return this;\n  },\n\n  /**\n   * Parses a value with the calculator given a default value to fallback on.\n   *\n   * @method parseValue\n   * @param {Animator} animator\n   * @param {T|Function|True} value\n   * @param {T} defaultValue\n   * @return {T|Function}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  }\n\n});\n\n\n/**\n * A map of attrimators by their attribute name.\n *\n * @class AttrimatorMap\n * @constructor\n * @extends FastMap\n */\nfunction AttrimatorMap()\n{\n  this.reset();\n}\n\nClass.extend( AttrimatorMap, FastMap,\n{\n\n  /**\n   * Sets the group identifier for attrimators in this map. If force is\n   * specified it will overwrite any existing group identifier on attrimators.\n   * If deep is true, then all next attrimators also could have their group\n   * identifiers set.\n   *\n   * @method setGroup\n   * @param {Number} groupId\n   * @param {Boolean} [force=false]\n   * @param {Boolean} [deep=false]\n   */\n  setGroup: function(groupId, force, deep)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[ i ];\n\n      do\n      {\n        if ( !attrimator.groupId || force )\n        {\n          attrimator.groupId = groupId;\n        }\n\n        attrimator = attrimator.next;\n\n      } while ( deep && attrimator );\n    }\n  },\n\n  /**\n   * Queues the attrimator on this map. If the attribute is already on this map\n   * this is placed on the end of the Attrimator chain, otherwise the attrimator\n   * is added to the map. If there is an attrimator already on the map it's\n   * returned.\n   *\n   * @method queue\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  queue: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var current = this.get( attr );\n\n    if ( current )\n    {\n      current.queue( attrimator );\n    }\n    else\n    {\n      this.put( attr, attrimator );\n    }\n\n    return current;\n  },\n\n  /**\n   * Queues the given map to this map. The attrimators placed on this map are\n   * queued and delayed in a way that they all start at the same time. If a\n   * function is provided as the second argument it is invoked whenever an\n   * attrimator in the given map is new & added to this map.\n   *\n   * @method queueMap\n   * @param {AttrimatorMap} map\n   * @param {Function} [onNewAttribute]\n   * @param {Object} [context]\n   * @chainable   188703090\n   */\n  queueMap: function(map, onNewAttribute, context)\n  {\n    var maxRemaining = this.timeRemaining();\n    var attrimators = map.values;\n    var hasCallback = isFunction( onNewAttribute );\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = this.get( attr );\n\n      if ( existing )\n      {\n        if ( existing.isInfinite() )\n        {\n          existing.stopIn( attrimator.delay + maxRemaining );\n        }\n        else\n        {\n          attrimator.delay += (maxRemaining - existing.timeRemaining());\n        }\n\n        existing.queue( attrimator );\n      }\n      else\n      {\n        attrimator.delay += maxRemaining;\n\n        this.put( attr, attrimator );\n\n        if ( hasCallback )\n        {\n          onNewAttribute.call( context || this, attrimator );\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the attrimator at the given index replacing it with the next\n   * attrimator if one exists.\n   *\n   * @method unqueueAt\n   * @param {Number} index\n   * @chainable\n   */\n  unqueueAt: function(index)\n  {\n    var current = this.values[ index ];\n\n    if ( current.next )\n    {\n      this.values[ index ] = current.next;\n    }\n    else\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Clones this map returning a deep clone where all attrimators are cloned.\n   *\n   * @method clone\n   * @return {AttrimatorMap}\n   */\n  clone: function()\n  {\n    var values = this.values;\n    var keys = this.keys;\n    var clone = new AttrimatorMap();\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      clone.values[i] = values[i].clone();\n      clone.keys[i] = keys[i];\n      clone.indices[ keys[i] ] = i;\n    }\n\n    return clone;\n  },\n\n  /**\n   * Returns the time remaining for all finite attrimators in this map. The time\n   * remaining includes queued attrimators.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    var maxRemaining = 0;\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n\n      if ( !attrimator.isInfinite() )\n      {\n        maxRemaining = Math.max( maxRemaining, attrimator.timeRemaining() );\n      }\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Sets the cycle of the attrimators in this map. If there are attrimators\n   * queued the are given the next cycle number. The final cycle number is\n   * returned.\n   *\n   * @method applyCycle\n   * @param {Number} nextCycle\n   * @return {Number}\n   */\n  applyCycle: function(nextCycle)\n  {\n    var currentDepth = this.values;\n    var nextDepth = null;\n\n    while ( currentDepth.length )\n    {\n      nextDepth = [];\n\n      for (var i = currentDepth.length - 1; i >= 0; i--)\n      {\n        var attrimator = currentDepth[ i ];\n\n        attrimator.cycle = nextCycle;\n\n        if ( attrimator.next )\n        {\n          nextDepth.push( attrimator.next );\n        }\n      }\n\n      if ( nextDepth.length )\n      {\n        nextCycle++;\n      }\n\n      currentDepth = nextDepth;\n    }\n\n    return nextCycle;\n  },\n\n  /**\n   * Iterates through all attrimators in this map, at any depth.\n   *\n   * @method iterate\n   * @param  {Function} callback\n   * @param  {Object} [context]\n   * @chainable\n   */\n  iterate: function(callback, context)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n      var previous = null;\n      var depth = 0;\n\n      while ( attrimator )\n      {\n        callback.call( context || this, attrimator, depth++, previous );\n\n        attrimator = (previous = attrimator).next;\n      }\n    }\n\n    return this;\n  }\n\n});\n\n\n/**\n * Instantiates a new Builder. Builders are responsible for taking animation\n * definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generating & placing {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}\n * onto an {{#crossLink \"AttrimatorMap\"}}{{/crossLink}}.\n *\n * Builders are added to the {{#crossLink \"anim8.builder\"}}{{/crossLink}} object\n * by a key and when that key exists in an animation definition, the animation\n * definition is passed to the {{#crossLink \"Builder/parse:method\"}}{{/crossLink}}\n * to generate {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class Builder\n * @constructor\n */\nfunction Builder()\n{\n\n}\n\n/**\n * Returns the next merge ID. Merge IDs are used when merging options into\n * attrimators to perform an optimal merge.\n *\n * @method nextMergeId\n * @static\n */\nBuilder.nextMergeId = (function()\n{\n  var id = 0;\n  return function() {\n    return id++;\n  };\n})();\n\nClass.define( Builder,\n{\n\n  /**\n   * Parses the animation object (and optionally an option object) and pushes\n   * all generated attrimatorMap to the given array.\n   *\n   * @method parse\n   * @param {Object} animation\n   * @param {Object} options\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    throw 'Builder.parse not implemented';\n  },\n\n  /**\n   * Merges the options with the given event instances. This is when an existing\n   * animation is provided but the user wants to override the animation's options.\n   *\n   * Because event properties can be specified in several places there's a priority\n   * to which one takes precedence. The properties specified in the animation object\n   * itself are highest priority, followed by the new options, then by the old\n   * options, and finally by the existing property on the event instance.\n   *\n   * @method merge\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  merge: function( animation, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    var builder = this;\n    var factory = $factory( animation.factory );\n\n    attrimatorMap.iterate(function(e)\n    {\n      if ( e.getBuilder() === builder )\n      {\n        builder.mergeAttrimator( e, e.attribute, helper, factory );\n      }\n    });\n  },\n\n  /**\n   * Merges new options contained in the helper into the given attrimator.\n   *\n   * @method mergeAttrimator\n   * @param {Attrimator} e\n   * @param {String} attr\n   * @param {BuilderHelper} helper\n   * @param {Factory} factory\n   */\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.easing    = helper.mergeEasing( attr, e.easing );\n    e.repeat    = helper.mergeRepeat( attr, e.repeat );\n    e.delay     = helper.mergeDelay( attr, e.delay );\n    e.sleep     = helper.mergeSleep( attr, e.sleep );\n    e.duration  = helper.mergeDuration( attr, e.duration );\n    e.offset    = helper.mergeOffset( attr, e.offset );\n    e.scale     = helper.mergeScale( attr, e.scale );\n    e.scaleBase = helper.mergeScaleBase( attr, e.scaleBase, factory );\n  },\n\n  /**\n   * Calls merge on all builders specified in the given animation definition.\n   *\n   * @method submerge\n   * @protected\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   */\n  submerge: function( animation, newOptions, oldOptions, attrimatorMap )\n  {\n    var helper = new BuilderHelper( animation, oldOptions, newOptions );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( animation, newOptions, oldOptions, attrimatorMap, helper );\n      }\n    }\n  }\n});\n\n\n/**\n * Instantiates a new instance of Builder Helper.\n *\n * @param {Object} input\n * @param {Object} oldOptions\n * @param {Object} newOptions\n * @class BuilderHelper\n * @constructor\n */\nfunction BuilderHelper( input, oldOptions, newOptions )\n{\n  this.input = input;\n  this.oldOptions = oldOptions || {};\n  this.newOptions = newOptions || {};\n\n  this.prepareSpecifics( 'easings' );\n  this.prepareSpecifics( 'repeats' );\n  this.prepareSpecifics( 'delays' );\n  this.prepareSpecifics( 'sleeps' );\n  this.prepareSpecifics( 'durations' );\n  this.prepareSpecifics( 'offsets' );\n  this.prepareSpecifics( 'scales' );\n  this.prepareSpecifics( 'scaleBases' );\n}\n\nClass.define( BuilderHelper,\n{\n\n  /**\n   * If an object with the given name doesn't exist on the input it's created.\n   *\n   * @method prepareSpecifics\n   * @param {String} specifics\n   */\n  prepareSpecifics: function(specifics)\n  {\n    if ( !isObject( this.input[ specifics ] ) )\n    {\n      this.input[ specifics ] = {};\n    }\n  },\n\n  /* PARSING */\n\n  /**\n   * Parses an easing from the input.\n   *\n   * @method parseEasing\n   * @param  {String} attr\n   * @return {String|Function|Array}\n   */\n  parseEasing: function(attr)\n  {\n    return this.parseFirst( attr, 'easing', 'easings' );\n  },\n\n  /**\n   * Parses repeats from the input.\n   *\n   * @method parseRepeat\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseRepeat: function(attr)\n  {\n    return this.parseNumber( attr, $repeat, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Parses delay from the input.\n   *\n   * @method parseDelay\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDelay: function(attr)\n  {\n    return this.parseNumber( attr, $delay, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Parses sleep from the input.\n   *\n   * @method parseSleep\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseSleep: function(attr)\n  {\n    return this.parseNumber( attr, $sleep, $time, 'sleep', 'sleepAdd', 'sleepScale', 'sleeps' );\n  },\n\n  /**\n   * Parses duration from the input.\n   *\n   * @method parseDuration\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDuration: function(attr)\n  {\n    return this.parseNumber( attr, $duration, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Parses offset from the input.\n   *\n   * @method parseOffset\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseOffset: function(attr)\n  {\n    return this.parseNumber( attr, $offset, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Parses scale from the input.\n   *\n   * @method parseScale\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseScale: function(attr)\n  {\n    return this.parseNumber( attr, $scale, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Parses scale base from the input.\n   *\n   * @method parseScaleBase\n   * @param  {String} attr\n   * @return {Any}\n   */\n  parseScaleBase: function(attr)\n  {\n    return this.parseFirst( attr, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Parses a value from the input given the attribute, option, and specific.\n   *\n   * @method parseFirst\n   * @param {String} attr\n   * @param {String} option\n   * @param {String} specifics\n   * @return {Any}\n   */\n  parseFirst: function(attr, option, specifics)\n  {\n    return coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n  },\n\n  /**\n   * Parses an event from the input given a path & builder for the event.\n   *\n   * @method parseEvent\n   * @param {String} attr\n   * @param {Path} path\n   * @param {Builder} builder\n   * @param {Boolean} hasInitialState\n   * @return {Event}\n   */\n  parseEvent: function(attr, path, builder, hasInitialState, mergeId)\n  {\n    var duration   = this.parseDuration( attr );\n    var easing     = this.parseEasing( attr );\n    var delay      = this.parseDelay( attr );\n    var sleep      = this.parseSleep( attr );\n    var repeat     = this.parseRepeat( attr );\n    var offset     = this.parseOffset( attr );\n    var scale      = this.parseScale( attr );\n    var scaleBase  = this.parseScaleBase( attr );\n    var event      = new Event( attr, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, hasInitialState, builder, null, this.input );\n\n    return event;\n  },\n\n  /**\n   * Parses a number from the input given parse functions.\n   *\n   * @method parseNumber\n   * @param {String} attr\n   * @param {Function} parseFunction\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  parseNumber: function(attr, parseFunction, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n    var base = parseFunction( baseRaw );\n    var add = parseOptionFunction( this.oldOptions[ optionAdd ], 0 );\n    var scale = coalesce( this.oldOptions[ optionScale ], 1 );\n\n    return (add === 0 && scale === 1) ? baseRaw : (base + add) * scale;\n  },\n\n  /* MERGING */\n\n  /**\n   * Merges easing based on the input, new options, and the current easing.\n   *\n   * @method mergeEasing\n   * @param {String} attr\n   * @param {Function} current\n   * @return {Function}\n   */\n  mergeEasing: function(attr, current)\n  {\n    return this.mergeFirst( attr, current, $easing, 'easing', 'easings' );\n  },\n\n  /**\n   * Merges repeats based on the input, new options, and the current repeat.\n   *\n   * @method mergeRepeat\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeRepeat: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Merges delay based on the input, new options, and the current delay.\n   *\n   * @method mergeDelay\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDelay: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Merges sleep based on the input, new options, and the current sleep.\n   *\n   * @method mergeSleep\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeSleep: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'sleep', 'sleepAdd', 'sleepScale', 'scales' );\n  },\n\n  /**\n   * Merges duration based on the input, new options, and the current duration.\n   *\n   * @method mergeDuration\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDuration: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Merges offset based on the input, new options, and the current offset.\n   *\n   * @method mergeOffset\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeOffset: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Merges scale based on the input, new options, and the current scale.\n   *\n   * @method mergeScale\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeScale: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Merges scale base based on the input, new options, and the current scale\n   * base.\n   *\n   * @method mergeScaleBase\n   * @param {String} attr\n   * @param {T} current\n   * @param {Factory} factory\n   * @return {T}\n   */\n  mergeScaleBase: function(attr, current, factory)\n  {\n    var calc = factory.attribute( attr ).calculator;\n\n    var parseFunction = function(value, defaultValue) {\n      return calc.parse( value, defaultValue );\n    };\n\n    return this.mergeFirst( attr, current, parseFunction, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Returns the first available option from input, new options, old options,\n   * and the current value.\n   *\n   * @method mergeFirst\n   * @param {String} attr\n   * @param {T} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} specifics\n   * @return {T}\n   */\n  mergeFirst: function(attr, current, parseOptionFunction, option, specifics)\n  {\n    var specific = this.input[ specifics ][ attr ];\n    var value = coalesce( specific, this.newOptions[ option ], this.oldOptions[ option ] );\n\n    return parseOptionFunction( value, current );\n  },\n\n  /**\n   * Merges a number by returning the first occurrence from input, new options,\n   * old options, and the current value.\n   *\n   * @method mergeNumber\n   * @param {String} attr\n   * @param {Number} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  mergeNumber: function(attr, current, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.newOptions[ option ], this.oldOptions[ option ] );\n    var base = parseOptionFunction( baseRaw, current );\n    var add = parseOptionFunction( coalesce( this.newOptions[ optionAdd ], this.oldOptions[ optionAdd ] ), 0 );\n    var scale = coalesce( this.newOptions[ optionScale ], this.oldOptions[ optionScale ], 1 );\n\n    return (base + add) * scale;\n  }\n\n});\n\n\n\n\n/**\n * Instantiates a new Calculator instance.\n *\n * @class Calculator\n * @constructor\n */\nfunction Calculator()\n{\n\n}\n\nClass.define( Calculator,\n{\n\n  /**\n   * Creates the constants for this calculator.\n   *\n   * @method createConstants\n   */\n  createConstants: function()\n  {\n    this.ZERO = this.create();\n    this.ONE = this.parse( 1.0, this.ZERO );\n    this.INFINITY = this.parse( Number.POSITIVE_INFINITY, this.ZERO );\n  },\n\n  /**\n   * Parses the given input for a value this calculator understands.\n   *\n   * @method parse\n   * @param  {T} x\n   * @param  {T} defaultValue\n   * @return {T|Function|False}\n   */\n  parse: function(x, defaultValue)\n  {\n    throw 'Calculator.parse not implemented';\n  },\n\n  /**\n   * Parses the given input for a value this calculator understands.\n   *\n   * @method parse\n   * @param  {T} x\n   * @param  {T} defaultValue\n   * @return {T|Function|False}\n   */\n  parseArray: function(input, output, defaultValue)\n  {\n    if (input.length !== output.length)\n    {\n      output.length = input.length;\n    }\n\n    var parsedDefault = this.parse( defaultValue, this.ZERO );\n\n    for (var i = 0; i < input.length; i++)\n    {\n      output[ i ] = this.parse( input[ i ], parsedDefault );\n    }\n\n    return output;\n  },\n\n  /**\n   * Copies a value and places it in out and returns out.\n   *\n   * @method copy\n   * @param {T} out\n   * @param {T} copy\n   * @return {T}\n   */\n  copy: function(out, copy)\n  {\n    throw 'Calculator.copy not implemented';\n  },\n\n  /**\n   * Zeros out and returns it.\n   *\n   * @method zero\n   * @param {T} out\n   * @return {T}\n   */\n  zero: function(out)\n  {\n    throw 'Calculator.zero not implemented';\n  },\n\n  /**\n   * Clones the value and returns the clone.\n   *\n   * @method clone\n   * @param {T} clone\n   * @return {T}\n   */\n  clone: function(clone)\n  {\n    return this.copy( this.create(), clone );\n  },\n\n  /**\n   * Creates an empty value equivalent to zero.\n   *\n   * @method create\n   * @return {T}\n   */\n  create: function()\n  {\n    throw 'Calculator.create not implemented';\n  },\n\n  /**\n   * Scales out by the given scalar value and returns out.\n   *\n   * @method scale\n   * @param {T} out\n   * @param {Number} scale\n   * @return {T}\n   */\n  scale: function(out, scale)\n  {\n    return this.adds( out, out, scale - 1 );\n  },\n\n  /**\n   * Adds an amount to out and returns out.\n   *\n   * @method add\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  add: function(out, amount)\n  {\n    return this.adds( out, amount, 1 );\n  },\n\n  /**\n   * Adds an amount scaled by a scalar value to out and returns out.\n   *\n   * @method adds\n   * @param {T} out\n   * @param {T} amount\n   * @param {Number} amountScale\n   * @return {T}\n   */\n  adds: function(out, amount, amountScale)\n  {\n    throw 'Calculator.adds not implemented';\n  },\n\n  /**\n   * Subtracts an amount from out and returns out.\n   *\n   * @method sub\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  sub: function(out, amount)\n  {\n    return this.adds( out, amount, -1 );\n  },\n\n  /**\n   * Multiplies out by some amount and returns out.\n   *\n   * @method mul\n   * @param {T} out\n   * @param {T} scale\n   * @return {T}\n   */\n  mul: function(out, scale)\n  {\n    throw 'Calculator.mul not implemented';\n  },\n\n  /**\n   * Interpolates out between start & end given a delta value and returns out.\n   * A delta value typically lies between 0 and 1 inclusively.\n   *\n   * @method interpolate\n   * @param {T} out\n   * @param {T} start\n   * @param {T} end\n   * @param {Number} delta\n   * @return {T}\n   */\n  interpolate: function(out, start, end, delta)\n  {\n    out = this.zero( out );\n    out = this.adds( out, start, 1 - delta );\n    out = this.adds( out, end, delta );\n\n    return out;\n  },\n\n  /**\n   * Returns a random value between the given min and max.\n   *\n   * @method random\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  random: function(out, min, max)\n  {\n    return this.interpolate( out, min, max, Math.random() );\n  },\n\n  /**\n   * Calculates the distance between the two values.\n   *\n   * @method distance\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distance: function(a, b)\n  {\n    return Math.sqrt( this.distanceSq( a, b ) );\n  },\n\n  /**\n   * Calculates the squared distance between the two values.\n   *\n   * @method distanceSq\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distanceSq: function(a, b)\n  {\n    throw 'Calculator.distanceSq not implemented';\n  },\n\n  /**\n   * Returns the distance the given value is from zero.\n   *\n   * @method length\n   * @param {T} a\n   * @return {Number}\n   */\n  length: function(a)\n  {\n    return this.distance( a, this.ZERO );\n  },\n\n  /**\n   * Returns the squared distance the given value is from zero.\n   *\n   * @method lengthSq\n   * @param {T} a\n   * @return {Number}\n   */\n  lengthSq: function(a)\n  {\n    return this.distanceSq( a, this.ZERO );\n  },\n\n  /**\n   * Determines whether the given value is valid for this calculator.\n   *\n   * @method isValid\n   * @param {any} a\n   * @return {Boolean}\n   */\n  isValid: function(a)\n  {\n    throw 'Calculator.isValid not implemented';\n  },\n\n  /**\n   * Returns whether the given value is not a number or has a component which is\n   * not a number.\n   *\n   * @method isNaN\n   * @param {T} a\n   * @return {Boolean}\n   */\n  isNaN: function(a)\n  {\n    throw 'Calculator.isNaN not implemented';\n  },\n\n  /**\n   * Determines whether the given value is equivalent to zero given an\n   * acceptable distance from zero (epsilon).\n   *\n   * @method isZero\n   * @param {T} a\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isZero: function(a, epsilon)\n  {\n    throw 'Calculator.isZero not implemented';\n  },\n\n  /**\n   * Determines whether the given values are equivalent up to an acceptable\n   * distance apart.\n   *\n   * @method isEqual\n   * @param {T} a\n   * @param {T} b\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isEqual: function(a, b, epsilon)\n  {\n    throw 'Calculator.isEqual not implemented';\n  },\n\n  /**\n   * Sets out to the minimum value between the two values and returns out.\n   *\n   * @method min\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  min: function(out, a, b)\n  {\n    throw 'Calculator.min not implemented';\n  },\n\n  /**\n   * Sets out to the maximum value between two values and returns out.\n   *\n   * @method max\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  max: function(out, a, b)\n  {\n    throw 'Calculator.max not implemented';\n  },\n\n  /**\n   * Performs the dot product between two values.\n   *\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  dot: function(a, b)\n  {\n    throw 'Calculator.dot not implemented';\n  },\n\n  /**\n   * Clamps out between the given minimum and maximum values and returns out.\n   *\n   * @method clamp\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  clamp: function(out, min, max)\n  {\n    var distSq = this.distanceSq( out, this.ZERO );\n\n    if ( distSq < min * min )\n    {\n      return this.scale( out, min / Math.sqrt( distSq ) );\n    }\n    else if ( distSq > max * max )\n    {\n      return this.scale( out, max / Math.sqrt( distSq ) );\n    }\n\n    return out;\n  },\n\n  /**\n   * Sets the length of the given value and returns the new value.\n   *\n   * @param {T} out\n   * @param {Number} length\n   * @return {T}\n   */\n  setLength: function(out, length)\n  {\n    var lengthSq = this.lengthSq( out );\n\n    if ( lengthSq !== 0 )\n    {\n      return this.scale( out, length / Math.sqrt( lengthSq ) );\n    }\n\n    return out;\n  },\n\n  /**\n   * Determines whether the given value appears to be a relative value. Relative\n   * values are stored as strings starting with a plus or minus for positive or\n   * negative respectively.\n   *\n   * @method isRelative\n   * @param {Any} x\n   * @return {Boolean}\n   * @protected\n   */\n  isRelative: function(x)\n  {\n    return isString( x ) && ( x[0] === '-' || x[0] === '+' );\n  },\n\n  /**\n   * Returns the relative amount of the given relative value. If the value is\n   * not a valid relative value false is returned.\n   *\n   * @method getRelativeAmount\n   * @param {String} x\n   * @return {Number}\n   * @protected\n   */\n  getRelativeAmount: function(x)\n  {\n    var z = parseFloat( x );\n\n    return isNaN(z) ? false : z;\n  }\n\n});\n\n\n/**\n * Instantiates a Defer instance. Defer instances keep track of method calls\n * to call at a later time - after an event occurs. The first argument needs\n * to be a function which returns an instance of anim8.Defer when it's invoked.\n * The second argument is an array of methods that can be deferred.\n *\n * @param {Function} factory\n * @param {Array} methods\n * @class Defer\n * @constructor\n */\nfunction Defer(factory, methods)\n{\n  this.$factory = factory;\n\n  for (var i = 0; i < methods.length; i++)\n  {\n    this[ methods[i] ] = this.$push( methods[i] );\n  }\n}\n\nClass.define( Defer,\n{\n  /**\n   * Resets the defer instance.\n   *\n   * @method $reset\n   * @param {Object} eventable\n   * @param {Any} previous\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   */\n  $reset: function(eventable, previous, eventType, event, callback)\n  {\n    this.$eventable = eventable;\n    this.$previous = previous;\n    this.$eventType = eventType;\n    this.$event = event;\n    this.$callback = callback;\n    this.$calls = [];\n    this.$next = [];\n\n    if ( this.$isRoot() )\n    {\n      this.$register();\n    }\n  },\n\n  /**\n   * Determines whether this Defer instance is at the root.\n   *\n   * @method $isRoot\n   * @return {Boolean}\n   */\n  $isRoot: function()\n  {\n    return this.$eventable === this.$previous;\n  },\n\n  /**\n   * Registers this Defer instance with the eventable.\n   *\n   * @method $register\n   */\n  $register: function()\n  {\n    this.$eventable[ this.$eventType ]( this.$event, this.$run, this );\n  },\n\n  /**\n   * Creates a defered function which passes the method and arguments for\n   * any method call into an array of calls on this Defer instance.\n   *\n   * @method $push\n   * @param {String} methodName\n   * @return {Function}\n   */\n  $push: function(methodName)\n  {\n    return function()\n    {\n      this.$calls.push( [methodName, arguments] );\n\n      return this;\n    };\n  },\n\n  /**\n   * Executes all defered method calls and starts any child Defer instances.\n   *\n   * @method $run\n   */\n  $run: function()\n  {\n    // Invoke the callback if one was given.\n    if ( isFunction( this.$callback ) )\n    {\n      this.$callback.call( this.$eventable, this );\n    }\n\n    for (var i = 0; i < this.$calls.length; i++)\n    {\n      var call = this.$calls[ i ];\n\n      this.$eventable[ call[0] ].apply( this.$eventable, call[1] );\n    }\n\n    for (var k = 0; k < this.$next.length; k++)\n    {\n      this.$next[ k ].$register();\n    }\n  },\n\n  /**\n   * Returns the object before the defer statement.\n   *\n   * @method undefer\n   * @return {Any}\n   */\n  undefer: function()\n  {\n    return this.$previous;\n  },\n\n  /**\n   * Defers any following method calls to after the given event is triggered. A\n   * callback can be specified which is a function invoked after the event is\n   * triggered.\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   * @return {Defer}\n   */\n  defer: function(eventType, event, callback)\n  {\n    var next = new this.$factory( this.$eventable, this, eventType, event, callback );\n\n    this.$next.push( next );\n\n    return next;\n  }\n\n});\n\n\n/**\n * Provides the ability to defer method calls until certain events are triggered.\n *\n * @class DeferAnimator\n * @constructor\n * @extends Defer\n */\nfunction DeferAnimator(animator, previous, eventType, event)\n{\n  this.$reset( animator, previous, eventType, event );\n}\n\n/**\n * Creates the Defer prototype for the following Animator methods.\n */\nDeferAnimator.prototype = new Defer( DeferAnimator,\n[\n  /**\n   * Defers the {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'restore',\n\n  /**\n   * Defers the {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method placeAttrimator\n   */\n  'placeAttrimator',\n\n  /**\n   * Defers the {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method applyInitialState\n   */\n  'applyInitialState',\n\n  /**\n   * Defers the {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method preupdate\n   */\n  'preupdate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/update:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method update\n   */\n  'update',\n\n  /**\n   * Defers the {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method apply\n   */\n  'apply',\n\n  /**\n   * Defers the {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'trimAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/activate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'activate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'deactivate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'destroy',\n\n  /**\n   * Defers the {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'spring',\n\n  /**\n   * Defers the {{#crossLink \"Animator/play:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'play',\n\n  /**\n   * Defers the {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'playAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queue\n   */\n  'queue',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queueAttrimators\n   * @protected\n   */\n  'queueAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transition\n   */\n  'transition',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transitionAttrimators\n   * @protected\n   */\n  'transitionAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tween\n   */\n  'tween',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenTo\n   */\n  'tweenTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenMany\n   */\n  'tweenMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyTo\n   */\n  'tweenManyTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenFrom\n   */\n  'tweenFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyFrom\n   */\n  'tweenManyFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/move:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method move\n   */\n  'move',\n\n  /**\n   * Defers the {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method moveMany\n   */\n  'moveMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method follow\n   */\n  'follow',\n\n  /**\n   * Defers the {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method stop\n   */\n  'stop',\n\n  /**\n   * Defers the {{#crossLink \"Animator/end:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method end\n   */\n  'end',\n\n  /**\n   * Defers the {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method finish\n   */\n  'finish',\n\n  /**\n   * Defers the {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method nopeat\n   */\n  'nopeat',\n\n  /**\n   * Defers the {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method pause\n   */\n  'pause',\n\n  /**\n   * Defers the {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method resume\n   */\n  'resume',\n\n  /**\n   * Defers the {{#crossLink \"Animator/set:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method set\n   */\n  'set',\n\n  /**\n   * Defers the {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method unset\n   */\n  'unset',\n\n  /**\n   * Defers the {{#crossLink \"Animator/get:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method get\n   */\n  'get',\n\n  /**\n   * Defers the {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method invoke\n   */\n  'invoke',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleStart\n   */\n  'onCycleStart',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleEnd\n   */\n  'onCycleEnd'\n]);\n\n\nvar EasingTypes = {};\n\n/**\n * A collection of easing type functions. An easing type functions takes an\n * easing function as an argument and modifies it's input and output values.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.easingType\n */\n\n/**\n * Plays the animation forward normally.\n *\n * @method in\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['in'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum.\n *\n * @method out\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['out'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum halfway.\n *\n * @method inout\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['inout'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x ) * 0.5;\n    }\n    else\n    {\n      return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n    }\n  };\n};\n\n/**\n * Plays the aninmation forwards with the given easing, and backwards with the same easing momentum.\n *\n * @method yoyo\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['yoyo'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation forwards with the given easing, and backwards reflecting the easing's momentum.\n *\n * @method mirror\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['mirror'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return 1.0 - easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation backwards with using the same easing momentum.\n *\n * @method reverse\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['reverse'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation backwards by flipping the easing's momentum.\n *\n * @method flip\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['flip'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( x );\n  };\n};\n\n\n/**\n * A collection of easing functions. An easing functions takes a single number\n * as input that's between 0 and 1 inclusively and returns a number that\n * progresses from 0 to 1 but in-between values may return a number that's less\n * than 0 or greater than 1.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.Easings\n */\nvar Easings = {};\n\n\n/**\n * Returns true if the given string would result in returning an easing.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @method anim8.isEasingName\n * @for Core\n * @param {String} easing\n * @return {Boolean}\n */\nfunction isEasingName(easing)\n{\n  if ( easing in Easings )\n  {\n    return true;\n  }\n\n  var pair = easing.split('-');\n  var e = pair[0];\n  var t = pair[1];\n\n  if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n  {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method linear\n * @for anim8.easing\n */\nEasings['linear'] = function(x)\n{\n  return x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['quad'] = function(x)\n{\n  return x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDAuMyooMS14KSooMS14KSp4KSsoMy4wKigxLXgpKngqeCkrKHgqeCp4KSkqKDEteCkreCooMS0oMS14KSooMS14KSooMS14KSooMS14KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['ease'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n\n  return eq1 * i + eq2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method cubic\n * @for anim8.easing\n */\nEasings['cubic'] = function(x)\n{\n  return x * x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method quartic\n * @for anim8.easing\n */\nEasings['quartic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quintic\n * @for anim8.easing\n */\nEasings['quintic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KngpKyh4KngpLXgiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method back\n * @for anim8.easing\n */\nEasings['back'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  return x3 + x2 - x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzaW4oeCoxLjU3MDc5NjMyNjc5KSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method sine\n * @for anim8.easing\n */\nEasings['sine'] = function(x)\n{\n  return Math.sin( x * 1.57079632679 );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLXgqKDcuMC8xMCkpKngqKDEwLjAvMy4wKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method overshot\n * @for anim8.easing\n */\nEasings['overshot'] = function(x)\n{\n  return (1.0 - x * (7.0 / 10)) * x * (10.0 / 3.0);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KigoMi4wKngqeCp4KSt4KngtKDQuMCp4KSsyLjApKSotc2luKHgqMTAuOTk1NTc0Mjg3NikiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method elastic\n * @for anim8.easing\n */\nEasings['elastic'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n  var wave = -Math.sin(x * 10.9955742876);\n  return scale * wave;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJhYnMoeC1zaW4oeCozLjE0MTU5MjY1MzU5KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method revisit\n * @for anim8.easing\n */\nEasings['revisit'] = function(x)\n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWNvcyh4KngqeCozNi4wKSooMS4wLXgpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method lasso\n * @for anim8.easing\n */\nEasings['lasso'] = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgqeCkqY29zKHgqeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slowbounce\n * @for anim8.easing\n */\nEasings['slowbounce'] = function(x)\n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgpKmNvcyh4KngqMTQuODA0NDA2NjAxNikpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method bounce\n * @for anim8.easing\n */\nEasings['bounce'] = function(x)\n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method smallbounce\n * @for anim8.easing\n */\nEasings['smallbounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjcpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method tinybounce\n * @for anim8.easing\n */\nEasings['tinybounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoY29zKHgqeCoxMi4wKSp4KigxLjAteCkreCkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method hesitant\n * @for anim8.easing\n */\nEasings['hesitant'] = function(x)\n{\n  return (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzcXJ0KHgpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrt\n * @for anim8.easing\n */\nEasings['sqrt'] = function(x)\n{\n  return Math.sqrt( x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDEuMC0oMS14KSooMS14KSooMS14KSooMS14KSkreCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrtf\n * @for anim8.easing\n */\nEasings['sqrtf'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIobG9nKHgpKzIuMCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method log10\n * @for anim8.easing\n */\nEasings['log10'] = function(x)\n{\n  return (Math.log10(x + 0.01) + 2.0) * 0.5 / 1.0021606868913213;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeDwwLjc_KHgqLTAuMzU3KTooKCh4LTAuNykqKHgtMC43KSoyNy41LTAuNSkqMC41KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slingshot\n * @for anim8.easing\n */\nEasings['slingshot'] = function(x)\n{\n  if (x < 0.7) {\n    return (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIxLXNxcnQoMS14KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method circular\n * @for anim8.easing\n */\nEasings['circular'] = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMy4wKigxLjAteCkqeCp4KSsoeCp4KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method gentle\n * @for anim8.easing\n */\nEasings['gentle'] = function(x)\n{\n  return (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\n/**\n * Generates a bezier easing function given the two middle control points. The\n * first point is {0,0} and the last point is {1, 1}.\n *\n * @method bezier\n * @for anim8.easing\n * @param {Number} mX1\n * @param {Number} mY1\n * @param {Number} mX2\n * @param {Number} mY2\n * @return {Function}\n */\nEasings['bezier'] = function(mX1, mY1, mX2, mY2)\n{\n  // https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\n\n/**\n * Possible states an event can be in.\n *\n * @type {Object}\n */\nvar EventState =\n{\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  FINISHED: 8\n};\n\n/**\n * Instantiates a new Event which extends Attrimator.\n *\n * @param {String} attribute\n * @param {Path} path\n * @param {String|Number} duration\n * @param {String|Function|Array} easing\n * @param {String|Number} delay\n * @param {String|Number} sleep\n * @param {String|Number} offset\n * @param {String|Number} repeat\n * @param {Number} scale\n * @param {T|Number} scaleBase\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @param {Object} input\n * @param {Number} mergeId\n * @class Event\n * @constructor\n * @extends Attrimator\n */\nfunction Event(attribute, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, hasInitialState, builder, next, input, mergeId)\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The path the attribute will be animated along.\n   *\n   * @property {Path} path\n   */\n  this.path             = path;\n\n  /**\n   * The easing used to modify the delta value passed to the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n   *\n   * @property {Function} easing\n   */\n  this.easing           = $easing( easing );\n\n  /**\n   * The amount of time in milliseconds to animate an attribute over the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}}\n   *\n   * @property {Number} duration\n   */\n  this.duration         = $duration( duration );\n\n  /**\n   * If this event repeats more than once, this is a pause between animations.\n   *\n   * **See:** {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}}\n   *\n   * @property {Number} sleep\n   */\n  this.sleep            = $sleep( sleep );\n\n  /**\n   * The number of times to repeat the animation.\n   *\n   * **See:** {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}}\n   *\n   * @property {Number} repeat\n   */\n  this.repeat           = $repeat( repeat );\n\n  /**\n   * The amount to scale the value computed from the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}\n   *\n   * @property {T} scale\n   */\n  this.scale            = $scale( scale );\n\n  /**\n   * The base value from which to scale from. This is essentially this data\n   * types default value.\n   *\n   * @property {T} scaleBase\n   */\n  this.scaleBase        = path.calculator.parse( scaleBase, path.calculator.ZERO );\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.offset           = $offset( offset );\n\n  this.input            = input;\n  this.mergeId          = mergeId;\n}\n\nClass.extend( Event, Attrimator,\n{\n  /**\n   * Returns the computed value given a base value and a delta along the path.\n   *\n   * @method computeValue\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  computeValue: function(baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n\n    if ( value !== false && this.scale !== 1.0 )\n    {\n      var calc = this.path.calculator;\n      var baseValue = calc.clone( this.scaleBase );\n      var distance = calc.sub( baseValue, value );\n\n      value = calc.adds( value, distance, -this.scale );\n    }\n\n    return value;\n  },\n\n  /**\n   * Applies the value to the frame and returns true, otherwise returns false.\n   *\n   * @method applyValue\n   * @param {Object} frame\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = baseValue;\n\n    // TODO pull defaultValue from attribute\n    if (!this.path.calculator.isValid( baseValue ))\n    {\n      value = this.path.calculator.create();\n    }\n\n    value = this.computeValue( value, delta );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = value;\n    }\n\n    return value;\n  },\n\n  nopeat: function()\n  {\n    var newRepeat = clamp( Math.ceil( ( this.elapsed - this.delay ) / ( this.duration + this.sleep ) ), 0, this.repeat );\n\n    if ( newRepeat !== this.repeat )\n    {\n      this.repeat = newRepeat;\n      this.prestartNext( true );\n    }\n\n    return this;\n  },\n  finish: function(frame)\n  {\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = EventState.FINISHED;\n  },\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.state = this.delay ? EventState.DELAYED : EventState.ANIMATING;\n\n    if ( this.hasComputed() )\n    {\n      this.path = this.path.replaceComputed( this, animator );\n    }\n  },\n  startCycle: function(frame)\n  {\n    if ( this.hasInitialState )\n    {\n      return this.applyValue( frame, frame[ this.attribute ], 0 );\n    }\n\n    return false;\n  },\n  update: function(elapsed, frame)\n  {\n    var updated = false;\n    var delay = this.delay;\n    var duration = this.duration;\n    var sleep = this.sleep;\n    var repeat = this.repeat;\n    var oldState = this.state;\n    var newState = this.state;\n    var delta = 0;\n\n    elapsed -= delay;\n\n    var cycle = duration + sleep;\n    var iteration = Math.floor( elapsed / cycle );\n\n    if ( iteration >= repeat )\n    {\n      newState = EventState.FINISHED;\n      delta = 1;\n    }\n    else\n    {\n      elapsed -= iteration * cycle;\n\n      if ( elapsed > duration )\n      {\n        newState = EventState.SLEEPING;\n        delta = 1;\n      }\n      else\n      {\n        newState = EventState.ANIMATING;\n        delta = elapsed / duration;\n      }\n    }\n\n    if ( newState === EventState.ANIMATING ||\n       ( newState !== EventState.ANIMATING && oldState === EventState.ANIMATING ) )\n    {\n      this.applyValue( frame, frame[ this.attribute ], delta );\n      updated = true;\n    }\n\n    this.state = newState;\n\n    return updated;\n  },\n  valueAt: function(time, out)\n  {\n    if ( time < this.delay && !this.hasInitialState )\n    {\n      return false;\n    }\n\n    var delta = 0;\n\n    if ( time >= this.delay )\n    {\n      var cycle = (this.duration + this.sleep);\n      var elapsed = (time - this.delay);\n      var iteration = Math.floor( ( elapsed + this.sleep ) / cycle );\n\n      if ( iteration >= this.repeat )\n      {\n        delta = 1.0;\n      }\n      else\n      {\n        delta = Math.min( 1.0, (elapsed % cycle) / this.duration );\n      }\n    }\n\n    return this.computeValue( out, delta );\n  },\n  totalTime: function()\n  {\n    return Math.min( this.stopTime, this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep) );\n  },\n  clone: function()\n  {\n    return new Event( this.attribute, this.path, this.duration, this.easing, this.delay, this.sleep, this.offset, this.repeat, this.scale, this.scaleBase, this.hasInitialState, this.builder, this.next ? this.next.clone() : null, this.input );\n  },\n  hasComputed: function()\n  {\n    return this.path.computed;\n  },\n  isInfinite: function()\n  {\n    return (this.repeat === Number.POSITIVE_INFINITY) && (this.stopTime === Number.POSITIVE_INFINITY);\n  },\n  isFinished: function()\n  {\n    return (this.state === EventState.FINISHED);\n  }\n\n});\n\n/**\n * Returns an Event given the attribute, the path, and a parsed options object.\n *\n * **See:** {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method fromOptions\n * @for Event\n * @param  {String} attr\n * @param  {Path} path\n * @param  {Object} options\n * @return {Event}\n */\nEvent.fromOptions = function(attr, path, options)\n{\n  return new Event( attr, path, options.duration, options.easing, options.delay, options.sleep, options.offset, options.repeat, options.scale, options.scaleBase );\n};\n\n\n/**\n * A factory creates Animator instances for subjects.\n *\n * @class Factory\n * @constructor\n */\nfunction Factory()\n{\n  this.priority = 0;\n}\n\nClass.define( Factory,\n{\n\n  /**\n   * Determines whether the given subject is valid for this factory to create Animators for.\n   *\n   * @method is\n   * @param  {Any} subject\n   * @return {Boolean}\n   */\n  is: function(subject)\n  {\n    throw 'Factory.is not implemented';\n  },\n\n  /**\n   * Returns an animator given a subject.\n   *\n   * @method animatorFor\n   * @param  {Any} subject\n   * @return {Animator}\n   */\n  animatorFor: function(subject)\n  {\n    throw 'Factory.animatorFor not implemented';\n  },\n\n  /**\n   * Explodes the given subject to an array of Animators and adds them to the given array.\n   *\n   * @method animatorsFor\n   * @param {Any} subject\n   * @param {Array} animators\n   */\n  animatorsFor: function(subject, animators)\n  {\n    animators.push( this.animatorFor( subject ) );\n  },\n\n  /**\n   * Destroys the animator by unlinking the animator from the subject.\n   *\n   * @method destroy\n   * @param {Animator} animator\n   */\n  destroy: function(animator)\n  {\n\n  },\n\n  /**\n   * Returns the attribute descriptor for the given attribute. An attribute\n   * descriptor is an object with at least the following properties:\n   *\n   * - `name` = the name of the attribute (same as `attr`)\n   * - `calculatorName` = the name of the calculator for the attribute\n   * - `calculator` = the calculator for the attribute\n   * - `defaultValue` = the default value for the attribute\n   * - `parse` = a method to pass a value and have the calculator parse it and\n   *             return the defaultValue if it was invalid\n   * - `cloneDefault` = a method which returns a clone of the default value\n   *\n   * @method attribute\n   * @param {String} attr\n   * @return {Object}\n   */\n  attribute: function(attr)\n  {\n    throw 'Factory.attribute not implemented';\n  }\n\n});\n\n\n/**\n * A FastMap has the key-to-value benefits of a map and iteration benefits of an\n * array. This is especially beneficial when most of the time the contents of\n * the structure need to be iterated and order doesn't matter (since removal\n * performs a swap which breaks insertion order).\n *\n * @param {FastMap|Object} map\n * @class FastMap\n * @constructor\n */\nfunction FastMap(map)\n{\n  this.reset();\n\n  if ( map instanceof FastMap )\n  {\n    this.putMap( map );\n  }\n  else if ( isObject( map ) )\n  {\n    for (var prop in map)\n    {\n      this.put( prop, map[ prop ] );\n    }\n  }\n}\n\nClass.define( FastMap,\n{\n\n  /**\n   * Resets the map by initializing the values, keys, and indexes.\n   *\n   * @method reset\n   * @chainable\n   */\n  reset: function()\n  {\n    /**\n     * An array of the values in this map.\n     *\n     * @property {Array} values\n     */\n    this.values = [];\n\n    /**\n     * An array of the keys in this map.\n     *\n     * @property {Array} keys\n     */\n    this.keys = [];\n\n    /**\n     * An object of key to index mappings.\n     *\n     * @property {Object} indices\n     */\n    this.indices = {};\n\n    return this;\n  },\n\n  /**\n   * Puts the value in the map by the given key.\n   *\n   * @method put\n   * @param {String} key\n   * @param {V} value\n   * @chainable\n   */\n  put: function(key, value)\n  {\n    if ( key in this.indices )\n    {\n      this.values[ this.indices[ key ] ] = value;\n    }\n    else\n    {\n      this.indices[ key ] = this.values.length;\n      this.values.push( value );\n      this.keys.push( key );\n    }\n\n    return this;\n  },\n\n  /**\n   * Puts all keys & values on the given map into this map overwriting any existing values mapped by similar keys.\n   *\n   * @method putMap\n   * @param {FastMap} map\n   * @chainable\n   */\n  putMap: function(map)\n  {\n    var keys = map.keys;\n    var values = map.values;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      this.put( keys[ i ], values[ i ] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the value mapped by the given key.\n   *\n   * @method get\n   * @param {String} key\n   * @return {V}\n   */\n  get: function(key)\n  {\n    return this.values[ this.indices[ key ] ];\n  },\n\n  /**\n   * Removes the value by a given key\n   *\n   * @method remove\n   * @param {String} key\n   * @chainable\n   */\n  remove: function(key)\n  {\n    var index = this.indices[ key ];\n\n    if ( isNumber( index ) )\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the value & key at the given index.\n   *\n   * @method removeAt\n   * @param {Number} index\n   * @chainable\n   */\n  removeAt: function(index)\n  {\n    var key = this.keys[ index ];\n    var lastValue = this.values.pop();\n    var lastKey = this.keys.pop();\n\n    if ( index < this.values.length )\n    {\n      this.values[ index ] = lastValue;\n      this.keys[ index ] = lastKey;\n      this.indices[ lastKey ] = index;\n    }\n\n    delete this.indices[ key ];\n\n    return this;\n  },\n\n  /**\n   * Returns the index of the value in the array given a key.\n   *\n   * @method indexOf\n   * @param {String} key\n   * @return {Number}\n   */\n  indexOf: function(key)\n  {\n    return coalesce( this.indices[ key ], -1 );\n  },\n\n  /**\n   * Returns whether this map has a value for the given key.\n   *\n   * @method has\n   * @param {String} key\n   * @return {Boolean}\n   */\n  has: function(key)\n  {\n    return key in this.indices;\n  },\n\n  /**\n   * Returns whether the given input has overlap with keys in this map.\n   *\n   * @method hasOverlap\n   * @param {FastMap|Object} map\n   * @return {Boolean}\n   */\n  hasOverlap: function(map)\n  {\n    var keys = this.keys;\n    var indices = map.indices;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      if ( keys[i] in indices )\n      {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Returns the number of elements in the map.\n   *\n   * @method size\n   * @return {Number}\n   */\n  size: function()\n  {\n    return this.values.length;\n  },\n\n  /**\n   * Clears all keys & values from the map.\n   *\n   * @method clear\n   * @chainable\n   */\n  clear: function()\n  {\n    this.values.length = 0;\n    this.keys.length = 0;\n    this.indices = {};\n\n    return this;\n  }\n\n});\n\n\n// TODO\n\nfunction Movie()\n{\n  this.events = [];\n  this.currentTime = 0;\n  this.subjects = new Animators();\n  this.index = 0;\n}\n\nClass.define( Movie,\n{\n  select: function(subjects)\n  {\n\n  },\n  at: function(time)\n  {\n    var at = $time( time, false );\n\n    if ( at === false )\n    {\n      throw 'Invalid time in Movie.at: ' + time;\n    }\n\n    this.currentTime = at;\n  },\n  move: function(time)\n  {\n    var by = $time( time, false );\n\n    if ( by === false )\n    {\n      throw 'Invalid time in Movie.move: ' + time;\n    }\n\n    this.at( this.currentTime + by );\n  },\n  wait: function(time)\n  {\n\n  },\n  after: function(callback, context)\n  {\n\n  },\n  invoke: function(callback, context)\n  {\n\n  },\n  play: function(animation, options, all)\n  {\n    var attr = this.getAttrimators( animation, options );\n    var dura = attr.timeRemaining();\n\n  },\n  queue: function(animation, options)\n  {\n\n  },\n  transition: function(transition, animation, options, all)\n  {\n    var tran = $transition( transition );\n    var attr = this.getAttrimators( animation, options );\n\n  },\n  sequence: function(delay)\n  {\n\n  },\n  _add: function(event)\n  {\n\n  },\n  getAttrimators: function(animation, options)\n  {\n    return $attrimatorsFor( animation, options );\n  }\n});\n\neventize( Movie.prototype );\n\nfunction MovieEvent(time, type, parameters)\n{\n  this.time = time;\n  this.type = type;\n  this.parameters = parameters;\n}\n\nfunction MoviePlayer(movie)\n{\n  this.movie = movie;\n  this.startTime = 0;\n  this.referenceTime = 0;\n  this.direction = 1;\n  this.currentIndex = 0;\n}\n\n\n/**\n * Instantiates a new Oncer which extends Attrimator.\n *\n * @param {String} attribute\n * @param {T} value\n * @param {String|Number} delay\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @class Oncer\n * @constructor\n * @extends Attrimator\n */\nfunction Oncer( attribute, value, delay, hasInitialState, builder, next, input )\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The value that's set to the animator once.\n   *\n   * @property {T} value\n   */\n  this.value = value;\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.applied          = false;\n  this.input            = input;\n}\n\nClass.extend( Oncer, Attrimator,\n{\n  /**\n   * Computes the value of this Oncer.\n   *\n   * @method getValue\n   * @return {T}\n   */\n  getValue: function()\n  {\n    return isFunction( this.value ) ? this.value() : this.value;\n  },\n\n  finish: function(frame)\n  {\n    var update = !this.applied;\n\n    if ( update )\n    {\n      frame[ this.attribute ] = this.getValue();\n\n      this.applied = true;\n    }\n\n    return update;\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.value = animator.getAttribute( this.attribute ).parse( this.value );\n\n    if ( isComputed( this.value ) )\n    {\n      this.value = this.value( this, animator );\n    }\n\n    this.applied = false;\n  },\n\n  startCycle: function(frame)\n  {\n    return this.hasInitialState && this.finish( frame );\n  },\n\n  update: function(elapsed, frame)\n  {\n    return elapsed >= this.delay && this.finish( frame );\n  },\n\n  valueAt: function(time, out)\n  {\n    if ( time < this.delay )\n    {\n      return false;\n    }\n\n    return this.getValue();\n  },\n\n  totalTime: function()\n  {\n    return Math.min( this.stopTime, this.delay );\n  },\n\n  clone: function()\n  {\n    return new Oncer( this.attribute, this.value, this.delay, this.hasInitialState, this.builder, this.next ? this.next.clone() : null );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.value );\n  },\n\n  isInfinite: function()\n  {\n    return false;\n  },\n\n  isFinished: function()\n  {\n    return this.applied;\n  }\n  \n});\n\n\n/**\n * Path class computes a value given a delta value [0, 1].\n *\n * @class Path\n * @constructor\n */\nfunction Path()\n{\n}\n\nClass.define( Path,\n{\n\n  /**\n   * Resets the path with the given name, calculator, and points.\n   *\n   * @method reset\n   * @param {String|false} name\n   * @param {anim8.Calculator} calculator\n   * @param {Array} points\n   */\n  reset: function(calculator, points)\n  {\n    this.calculator = $calculator( calculator );\n    this.points = points;\n    this.computed = this.hasComputed();\n  },\n\n  /**\n   * Computes a value at the given delta setting and returning out.\n   *\n   * @method compute\n   * @param {T} out\n   * @param {Number} delta\n   * @return {T}\n   */\n  compute: function(out, delta)\n  {\n    throw 'Path.compute not implemented';\n  },\n\n  /**\n   * Determines if this path has at least one computed value.\n   *\n   * **See:** {{#crossLink \"anim8.computed\"}}{{/crossLink}}\n   *\n   * @method reset\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    var ps = this.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( isComputed( ps[i] ) )\n      {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Replaces any computed values in this path with the result from invoking\n   * the function and returns a clone of this path.\n   *\n   * @method replaceComputed\n   * @return {anim8.Path}\n   */\n  replaceComputed: function(event, animator)\n  {\n    var clone = this.copy();\n    var ps = clone.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( isComputed( ps[i] ) )\n      {\n        ps[i] = ps[i]( event, animator );\n      }\n    }\n\n    return clone;\n  },\n\n  /**\n   * Resolves and returns the point at the given index.\n   *\n   * @method resolvePoint\n   * @param {Number} i\n   * @return {T}\n   */\n  resolvePoint: function(i)\n  {\n    return resolve( this.points[ i ] );\n  },\n\n  /**\n   * Returns whether the path is linear. Linear paths go directly from point to\n   * point where curved paths do not. Linear paths can have their length\n   * calculated fairly easily however curves you must compute length with a\n   * given granularity.\n   *\n   * @method isLinear\n   * @return {Boolean}\n   */\n  isLinear: function()\n  {\n    return true;\n  },\n\n  /**\n   * Computes the length of the Path with a given granularity. Granularity is\n   * used for non-linear paths - it's the number of segments are calculated on\n   * the path where the length of the segments are summed and returned as the\n   * length.\n   *\n   * @method length\n   * @param {Number} granularity\n   * @return {Number}\n   */\n  length: function(granularity)\n  {\n    var distance = 0;\n    var calc = this.calculator;\n\n    if ( this.isLinear() )\n    {\n      var prev = this.resolvePoint( 0 );\n\n      for (var i = 1; i < this.points.length; i++)\n      {\n        var next = this.resolvePoint( i );\n\n        distance += calc.distance( prev, next );\n\n        prev = next;\n      }\n    }\n    else\n    {\n      var deltadelta = 1.0 / granularity;\n      var delta = deltadelta;\n      var prev = calc.clone( this.resolvePoint( 0 ) );\n      var temp = calc.create();\n\n      for (var i = 1; i <= granularity; i++)\n      {\n        var next = this.compute( temp, delta );\n\n        distance += calc.distance( prev, next );\n        delta += deltadelta;\n\n        temp = prev;\n        prev = next;\n      }\n    }\n\n    return distance;\n  }\n\n});\n\n\n/**\n * Animates a single attribute with a velocity and acceleration.\n *\n * @param {String} attribute\n * @param {Builder} builder\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} velocity\n * @param {T} acceleration\n * @param {Number} terminal\n * @param {Number} stopTime\n * @class Physics\n * @constructor\n * @extends Attrimator\n */\nfunction Physics( attribute, builder, calculator, position, velocity, acceleration, terminal, stopTime )\n{\n  this.reset( attribute, builder, null );\n\n  this.calculator   = calculator;\n  this.position     = position;\n  this.velocity     = velocity;\n  this.acceleration = acceleration;\n  this.terminal     = $number( terminal, Number.POSITIVE_INFINITY );\n  this.stopTime     = $time( stopTime, Number.POSITIVE_INFINITY );\n  this.finished     = false;\n}\n\nClass.extend( Physics, Attrimator,\n{\n  /**\n   * Parses a value for the animator given a default value.\n   *\n   * @method parseValue\n   * @param {anim8.Animator} animator.\n   * @param {T} value\n   * @param {T} defaultValue\n   * @return {T}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  },\n\n  /**\n   * Resolves the velocity to a value.\n   *\n   * @method resolveVelocity\n   * @return {T}\n   */\n  resolveVelocity: function()\n  {\n    return resolve( this.velocity );\n  },\n\n  /**\n   * Resolves the acceleration to a value.\n   *\n   * @method resolveAcceleration\n   * @return {T}\n   */\n  resolveAcceleration: function()\n  {\n    return resolve( this.acceleration );\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator     = calc;\n    this.position       = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.initalPosition = calc.clone( this.position );\n    this.velocity       = this.parseValue( animator, this.velocity, calc.ZERO );\n    this.acceleration   = this.parseValue( animator, this.acceleration, calc.ZERO );\n    this.temp           = calc.create();\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.position ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.acceleration );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var value = this.valueAt( elapsed, this.temp, true );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = this.position = value;\n\n      return true;\n    }\n\n    var calc = this.calculator;\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Physics.MAX_DT );\n    var vel = calc.copy( this.temp, this.resolveVelocity() );\n    var acc = this.resolveAcceleration();\n    var pos = this.position;\n\n    vel = calc.adds( vel, acc, dt );\n\n    if ( this.terminal !== Number.POSITIVE_INFINITY )\n    {\n      vel = calc.clamp( vel, 0, this.terminal );\n    }\n\n    pos = calc.adds( pos, vel, dt );\n\n    this.position = pos;\n\n    if ( !isFunction( this.velocity ) )\n    {\n      this.velocity = calc.copy( this.velocity, vel );\n    }\n\n    frame[ this.attribute ] = pos;\n\n    return true;\n  },\n\n  valueAt: function(time, out, usePosition)\n  {\n    if ( isFunction( this.velocity ) || isFunction( this.acceleration ) || this.terminal !== Number.POSITIVE_INFINITY )\n    {\n      return false;\n    }\n\n    time -= this.delay;\n    time *= 0.001;\n\n    var calc = this.calculator;\n    var value = usePosition ? calc.copy( this.position, this.initalPosition ) : calc.copy( out, this.initalPosition );\n    value = calc.adds( value, this.velocity, time );\n    value = calc.adds( value, this.acceleration, time * time );\n\n    return value;\n  },\n\n  clone: function()\n  {\n    return new Physics( this.attribute, this.builder, this.calculator, this.position, this.velocity, this.acceleration, this.terminal, this.stopTime );\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nPhysics.MAX_DT = 0.1;\n\n\n/**\n * Creates a seqeuence for the given animators offseting animations be the given\n * delay and easing.\n *\n * @param {Animators} animators\n * @param {String|Number} delay\n * @param {String|Array|Function} easing\n * @class Sequence\n * @constructor\n */\nfunction Sequence(animators, delay, easing)\n{\n  /**\n   * The animators to play a sequence of animations against.\n   *\n   * @property {Animators} animators\n   */\n  this.animators = animators;\n\n  /**\n   * The delay in milliseconds between animations.\n   *\n   * @property {Number} delay\n   */\n  this.delay = $delay( delay );\n\n  /**\n   * The easing function to use to calculate the delay offset for an animation.\n   *\n   * @property {Function} easing\n   */\n  this.easing = $easing( easing );\n}\n\nClass.define( Sequence,\n{\n  /**\n   * Returns the maximum delay for delaying generated attrimators.\n   *\n   * @method maxDelay\n   * @return {Number}\n   */\n  maxDelay: function()\n  {\n    return this.delay * (this.animators.length() - 1);\n  },\n\n  /**\n   * Creates an AttrimatorMap with the given options for the animator at the\n   * given index.\n   *\n   * @method createAttrimators\n   * @param {Animation} animation\n   * @param {Object} options\n   * @param {Number} i\n   * @return {AttrimatorMap}\n   */\n  createAttrimators: function(template, i)\n  {\n    var attrimatorMap = template.clone();\n    var attrimators = attrimatorMap.values;\n    var delta = i / (this.animators.length() - 1);\n    var delayOffset = this.easing( delta ) * this.maxDelay();\n\n    for (var k = attrimators.length - 1; k >= 0; k--)\n    {\n      attrimators[ k ].delay += delayOffset;\n    }\n\n    return attrimatorMap;\n  },\n\n  /**\n   * Reverses the sequence by reversing the underlying array of animators.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    this.animators.reverse();\n\n    return this;\n  },\n\n  /**\n   * Plays the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/play:method\"}}Animator.play{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.playAttrimators( attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Queues the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/queue:method\"}}Animator.queue{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n    var maxRemaining = 0;\n    var remaining = [];\n\n    this.animators.each(function(animator, i)\n    {\n      remaining[i] = animator.timeRemaining();\n      maxRemaining = Math.max( maxRemaining, remaining[i] );\n    });\n\n    this.animators.each(function(animator, i)\n    {\n      var delayOffset = maxRemaining - remaining[i];\n      var attrimatorMap = sequence.createAttrimators( template, i );\n      var attrimators = attrimatorMap.values;\n\n      for (var k = attrimators.length - 1; k >= 0; k--)\n      {\n        attrimators[ k ].delay += delayOffset;\n      }\n\n      animator.newCycle( attrimatorMap );\n      animator.queueAttrimators( attrimatorMap );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Transitions into the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/transition:method\"}}Animator.transition{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.transitionAttrimators( transition, attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Activates all animators in this sequence and returns this.\n   *\n   * **See:** {{#crossLink \"Animator/activate:method\"}}Animator.activate{{/crossLink}}\n   *\n   * @method add\n   * @chainable\n   */\n  add: function()\n  {\n    this.animators.activate();\n\n    return this;\n  }\n\n});\n\n\n/**\n * A spring has a resting point, a current position, and the velocity currently\n * enacting on the position based on the implementing classes logic.\n *\n * @class Spring\n * @constructor\n * @extends Attrimator\n */\nfunction Spring()\n{\n}\n\nClass.extend( Spring, Attrimator,\n{\n\n  /**\n   * Resets the spring's properties.\n   *\n   * @method set\n   * @param {String} attribute\n   * @param {Calculator|String} calculator\n   * @param {T|Function|true} rest\n   * @param {T|Function|true} position\n   * @param {T|Function|true} velocity\n   * @param {T|Function|true} gravity\n   * @param {Boolean} finishOnRest\n   */\n  set: function(attribute, calculator, rest, position, velocity, gravity, finishOnRest)\n  {\n    this.reset( attribute, null, null );\n\n    this.calculator   = calculator;\n    this.rest         = rest;\n    this.position     = position;\n    this.gravity      = gravity;\n    this.velocity     = velocity;\n    this.finishOnRest = finishOnRest;\n  },\n\n  /**\n   * Resolves the rest to the expected format.\n   *\n   * @method resolveRest\n   * @return {T}\n   */\n  resolveRest: function()\n  {\n    return resolve( this.rest );\n  },\n\n  /**\n   * Method that's invoked on each spring update.\n   *\n   * @method updateVelocity\n   * @param {Number} dt\n   */\n  updateVelocity: function(dt)\n  {\n    throw 'Spring.updateVelocity not implemented';\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator = calc;\n    this.rest       = this.parseValue( animator, this.rest, attribute.defaultValue );\n    this.position   = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.gravity    = this.parseValue( animator, this.gravity, calc.ZERO );\n    this.velocity   = this.parseValue( animator, this.velocity, calc.ZERO );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var calc = this.calculator;\n\n    // the number of elapsed seconds (maxed to avoid crazy behavior with low FPS)\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Spring.MAX_DT );\n\n    // keep track of the starting position to determine whether the position has updated.\n    var starting = calc.clone( this.position );\n\n    // call the update method which should update the position\n    this.updateVelocity( dt );\n    this.velocity = calc.adds( this.velocity, this.gravity, dt );\n    this.position = calc.adds( this.position, this.velocity, dt );\n\n    // track whether the attribute has updated so the animator knows if it needs to apply the attribute to the subject.\n    var updated = !calc.isEqual( starting, this.position, Spring.EPSILON );\n\n    if ( updated )\n    {\n      frame[ this.attribute ] = this.position;\n    }\n    else if ( this.finishOnRest && calc.isZero( this.velocity ) )\n    {\n      this.finished = true;\n    }\n\n    return updated;\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nSpring.MAX_DT = 0.1;\n\n/**\n * The value used to determine whether two positions in a spring are different.\n */\nSpring.EPSILON = 0.0001;\n\n\n/**\n * @module anim8\n * @class Core\n */\n\n/**\n * Converts a subject into an animator and returns it. If the subject\n * is already an animator it's returned immediately. If the subject can't be\n * animated then false is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.factoryFor:method\"}}{{/crossLink}}\n *\n * @param {Any} subject\n * @return {Animator|false}\n * @method anim8\n */\nfunction anim8(subject)\n{\n  if ( subject instanceof Animator )\n  {\n    return subject;\n  }\n\n  var factory = $factoryFor( subject, true );\n\n  if ( factory === false )\n  {\n    return false;\n  }\n\n  return factory.animatorFor( subject );\n}\n\n/**\n * Add events to the animation cycle: begin, end, finished, starting\n */\neventize( anim8 );\n\n/**\n * Converts an array of subjects into an array of Animators.\n *\n * @param {Array} subject\n * @return {Animators}\n * @method anim8s\n */\nfunction anim8s(subjects)\n{\n  var factory = $factoryFor( subjects, true );\n  var animators = [];\n\n  if ( factory !== false )\n  {\n    factory.animatorsFor( subjects, animators );\n\n    return new Animators( animators );\n  }\n\n  if ( !isArray( subjects ) )\n  {\n    subjects = [ subjects ];\n  }\n\n  var animators = [];\n\n  for (var i = 0; i < subjects.length; i++)\n  {\n    var animator = anim8( subjects[i] );\n\n    if ( animator !== false )\n    {\n      animators.push( animator );\n    }\n  }\n\n  return new Animators( animators );\n}\n\n/**\n * Whether the animation cycle is currently running. This is true\n * when where are active animators and anim8.run is being called\n * and false otherwise.\n *\n * @property {Boolean} anim8.running\n * @readOnly\n */\nvar running = false;\n\n/**\n * Live Mode keeps the animation cycles running even when there aren't\n * Animators. For highly interactive applications enabling this may\n * take up more resources but it will result in smoother animations. When\n * the animation cycle goes from stopped to running it takes a few frames\n * to smooth out when this is false.\n *\n * @property {Boolean} anim8.live\n */\nvar live = false;\n\n/**\n * The anim8 instance for all active animators.\n *\n * @property {Animators} anim8.animating\n * @readOnly\n */\nvar animating = new Animators();\n\n\nfunction isRunning()\n{\n  return running;\n}\n\nfunction isLive()\n{\n  return live;\n}\n\nfunction setLive(newLive)\n{\n  live = newLive;\n}\n\n/**\n * Adds an animator to the list of animating if it isn't there already. If the\n * animation loop isn't currently running it's started.\n *\n * @method anim8.add\n * @param {Animator} animator\n */\nfunction activateAnimator(animator)\n{\n  pushAnimator( animator );\n\n  activate();\n}\n\nfunction pushAnimator(animator)\n{\n  if ( !animator.active )\n  {\n    animator.active = true;\n    animating.push( animator );\n  }\n}\n\nfunction activate()\n{\n  if ( !running )\n  {\n    running = true;\n\n    anim8.trigger('starting');\n\n    requestRun( run );\n  }\n}\n\n/**\n * The function to call if animations need to be done.\n *\n * @method anim8.requestRun\n * @param {Function} callback\n */\nvar requestRun = (function()\n{\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n  var requestor = global.requestAnimationFrame;\n\n  for (var x = 0; x < vendors.length && !requestor; ++x)\n  {\n    requestor = global[ vendors[x] + 'RequestAnimationFrame' ];\n  }\n\n  if (!requestor)\n  {\n    var lastTime = 0;\n\n    return function(callback)\n    {\n      var currentTime = now();\n      var timeToCall = Math.max( Defaults.pauseTime, Defaults.frameRate - (currentTime - lastTime) );\n      var id = global.setTimeout( function() { callback( currentTime + timeToCall ); }, timeToCall );\n      lastTime = currentTime + timeToCall;\n      return id;\n    };\n  }\n\n  return function(callback)\n  {\n    requestor( callback );\n  };\n\n})();\n\n/**\n * Executes an animation loop cycle which consists of four operations:\n *\n * 1. Call preupdate on all Animators\n * 2. Call update on all Animators\n * 3. Call apply on all Animators\n * 4. Remove finished Animators\n *\n * When there are no more animating the loop cycle is stopped.\n *\n * @method anim8.run\n */\nfunction run()\n{\n  anim8.trigger('begin');\n\n  var currentTime = now();\n  var active = animating.length();\n\n  // notify animators that we're about to update\n  animating.preupdate( currentTime, active );\n\n  // update animating based on the current time\n  animating.update( currentTime, active );\n\n  // apply the attributes calculated\n  animating.apply( active );\n\n  // if the animator is done remove it\n  animating.filter( animating.handleFinished );\n\n  // The loop has ended!\n  anim8.trigger('end');\n\n  // if there are animators still remaining call me again!\n  if ( animating.length() || live )\n  {\n    requestRun( run );\n  }\n  else\n  {\n    running = false;\n\n    anim8.trigger('finished');\n  }\n}\n\n/**\n * Pauses all animators.\n *\n * **See:** {{#crossLink \"Animator/pause:method\"}}{{/crossLink}}\n *\n * @method anim8.pause\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction pause(attributes)\n{\n  animating.pause( attributes );\n\n  return anim8;\n}\n\n/**\n * Resumes all animators.\n *\n * **See:** {{#crossLink \"Animator/resume:method\"}}{{/crossLink}}\n *\n * @method anim8.resume\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction resume(attributes)\n{\n  animating.resume( attributes );\n\n  return anim8;\n}\n\n/**\n * Stops all animators.\n *\n * **See:** {{#crossLink \"Animator/stop:method\"}}{{/crossLink}}\n *\n * @method anim8.stop\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction stop(attributes)\n{\n  animating.stop( attributes );\n\n  return anim8;\n}\n\n/**\n * Ends all animators.\n *\n * **See:** {{#crossLink \"Animator/end:method\"}}{{/crossLink}}\n *\n * @method anim8.end\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction end(attributes)\n{\n  animating.end( attributes );\n\n  return anim8;\n}\n\n/**\n * Finishes all animators.\n *\n * **See:** {{#crossLink \"Animator/finish:method\"}}{{/crossLink}}\n *\n * @method anim8.finish\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction finish(attributes)\n{\n  animating.finish( attributes );\n\n  return anim8;\n}\n\n/**\n * Interrupts all animators from repeating currently running animations.\n *\n * **See:** {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}}\n *\n * @method anim8.nopeat\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction nopeat(attributes)\n{\n  animating.nopeat( attributes );\n\n  return anim8;\n}\n\n\n/**\n * Instantiates a new color given red, green, blue, and white components.\n * If a component is missed it's default value is either 255 (white) or\n * 1.0 (opaque).\n *\n * @method anim8.color\n * @for Core\n * @param {Number} [r=255]\n * @param {Number} [g=255]\n * @param {Number} [b=255]\n * @param {Number} [a=1]\n * @return {Object}\n */\nfunction Color(r, g, b, a)\n{\n  return {\n    r: coalesce( r, 255 ),\n    g: coalesce( g, 255 ),\n    b: coalesce( b, 255 ),\n    a: coalesce( a, 1.0 )\n  };\n}\n\n/**\n * The array of parsing methods to execute sequentally until a color is returned.\n */\nColor.parsers =\n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, parseInt, 255),\n          g: this.parseComponent(input.g, parseInt, 255),\n          b: this.parseComponent(input.b, parseInt, 255),\n          a: this.parseComponent(input.a, parseFloat, 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = parseFunction(t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  },\n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n/**\n * Parses a color from a string.\n *\n * @method anim8.color.parse\n * @for Core\n * @param {String} input\n * @return {Object|False}\n */\nColor.parse = function(input)\n{\n  var cp = Color.parsers;\n\n  for (var i = 0; i < cp.length; i++)\n  {\n    var parsed = cp[ i ].parse( input );\n\n    if (parsed !== false)\n    {\n      return parsed;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Formats a color to a string.\n *\n * @method anim8.color.format\n * @for Core\n * @param {Object} color\n * @return {String}\n */\nColor.format = function(color)\n{\n  var ca = clamp( coalesce( color.a, 1.0 ), 0, 1 );\n  var cr = Math.floor( clamp( coalesce( color.r, 255 ), 0, 255 ) );\n  var cg = Math.floor( clamp( coalesce( color.g, 255 ), 0, 255 ) );\n  var cb = Math.floor( clamp( coalesce( color.b, 255 ), 0, 255 ) );\n\n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n\n    if (r.length === 1) {\n      r = '0' + r;\n    }\n    if (g.length === 1) {\n      g = '0' + g;\n    }\n    if (b.length === 1) {\n      b = '0' + b;\n    }\n\n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n\n\n/**\n * A collection of computed functions. Computed functions are functions that\n * are invoked once at the start of an animation given the\n * {{#crossLink \"Attrimator\"}}{{/crossLink}} and\n * {{#crossLink \"Animator\"}}{{/crossLink}} and the result replaces the function.\n *\n * **See:** {{#crossLink \"anim8.computed/current:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/relative:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/random:method\"}}{{/crossLink}}\n *\n * @class anim8.computed\n */\nfunction computed(funcOrName, func)\n{\n  if ( isString( funcOrName ) && isFunction( func ) )\n  {\n    func.computed = true;\n\n    computed[ funcOrName ] = func;\n\n    return func;\n  }\n  else if ( isFunction( funcOrName ) )\n  {\n    funcOrName.computed = true;\n\n    return funcOrName;\n  }\n\n  throw funcOrName + ' and ' + func + ' are not valid parameters for creating a computed function.';\n}\n\n/**\n * Calculates and returns the current value for an\n * {{#crossLink \"Animator\"}}{{/crossLink}}. If the animator doesn't have a\n * current value the default value for the attribute is returned.\n *\n * @method current\n * @param {Attrimator} attrimator\n * @param {Animator} animator\n * @return {T}\n */\ncomputed('current', function(attrimator, animator)\n{\n  var attr = attrimator.attribute;\n  var attribute = animator.getAttribute( attr );\n\n  if ( attr in animator.frame )\n  {\n    return attribute.calculator.clone( animator.frame[ attr ] );\n  }\n  else\n  {\n    return attribute.cloneDefault();\n  }\n});\n\n/**\n * Calculates a value relative to the attribute value currently in the animator.\n * A mask can be used for mixed relative & absolute values in a single value\n * where 1 makes it relative and 0 makes it absolute.\n *\n * **Examples:**\n *\n *     anim8.computed.relative( 40 ); // returns function which adds 40 to current value\n *     anim8.computed.relative( 40, 0.5 ); // returns function which adds 40 to half of the current value\n *     anim8.computed.relative( {x: 20, y: 10}, {x: 1, y: 0} ); // returns function which adds 20 to the x of the current value and sets the y of the current value to 10\n *\n * @method relative\n * @param {T} relativeAmount\n * @param {T} mask\n * @return {Function}\n */\ncomputed('relative', function(relativeAmount, mask)\n{\n  // If the relativeAmount is already a computed value, return it.\n  if ( isComputed( relativeAmount ) )\n  {\n    return relativeAmount;\n  }\n\n  var relativeFunction = function(attrimator, animator)\n  {\n    var attr = attrimator.attribute;\n    var attribute = animator.getAttribute( attr );\n    var calc = attribute.calculator;\n    var current = null;\n\n    if ( attr in animator.frame )\n    {\n      current = calc.clone( animator.frame[ attr ] );\n    }\n    else\n    {\n      current = attribute.cloneDefault();\n    }\n\n    if ( mask )\n    {\n      current = calc.mul( current, mask );\n    }\n\n    return calc.add( current, relativeAmount );\n  };\n\n  // Marks the function as computed which is a signal to paths & events.\n  relativeFunction.computed = true;\n\n  // Place the input on the function if the user wants to modify it live\n  relativeFunction.relativeAmount = relativeAmount;\n  relativeFunction.mask = mask;\n\n  return relativeFunction;\n});\n\n/**\n * Returns a random value based on the given random selection.\n *\n * 1. If an array is given an item is randomly chosen from that array.\n * 2. If an instance of {{#crossLink \"Path\"}}{{/crossLink}} is given a point is randomly computed and returned.\n * 3. If an object with min & max values is given a random value between them is returned.\n *\n * **Examples:**\n *\n *     anim8.computed.random( [1, 2, 3] ); // returns function which returns a 1, 2, or 3\n *     anim8.computed.random( {min: 1, max: 5} ); // returns function which returns a value between 1 and 5\n *     anim8.computed.random( {min: {x: 0, y: 0}, max: {x: 100, y: 200}} ); // returns function which returns a point in the rectangle {0,0,100,200}\n *     anim8.computed.random( path ); // returns function which returns a value anywhere along the given path\n *\n * @method random\n * @param  {Array|Object|Path} randomSelection\n * @return {Function}\n */\ncomputed('random', function(randomSelection)\n{\n  var randomFunction = null;\n\n  if ( isArray( randomSelection ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var selected = randomSelection[ Math.floor( Math.random() * randomSelection.length ) ];\n\n      return calc.parse( selected, calc.ZERO );\n    };\n  }\n  else if ( randomSelection instanceof Path )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n\n      return randomSelection.compute( calc.create(), Math.random() );\n    };\n  }\n  else if ( isObject( randomSelection ) && isDefined( randomSelection.min ) && isDefined( randomSelection.max ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var resolvedMin = resolve( randomSelection.min );\n      var resolvedMax = resolve( randomSelection.max );\n      var min = calc.parse( resolvedMin, calc.ZERO );\n      var max = calc.parse( resolvedMax, calc.ZERO );\n\n      return calc.random( calc.create(), min, max );\n    };\n  }\n  else\n  {\n    throw 'Invalid random input: ' + randomSelection;\n  }\n\n  // Place the input on the function if the user wants to modify it live\n  randomFunction.randomSelection = randomSelection;\n\n  return computed( randomFunction );\n});\n\n/**\n * Determines whether the given value is a computed value. A computed value is\n * function with a variable 'computed' set to a true value.\n *\n * @param  {any} x\n * @return {Boolean}\n */\nfunction isComputed(x)\n{\n  return isFunction( x ) && x.computed;\n}\n\n\n/**\n * Creates a function which calls a method on all elements in the array or on\n * the first element.\n *\n * @method delegate\n * @param {String} functionName\n * @param {String} returning\n */\nfunction delegate(functionName, returning)\n{\n  switch (returning)\n  {\n  case DelegateTypes.THIS:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        array[i][functionName].apply( array[i], arguments );\n      }\n\n      return this;\n    };\n\n  case DelegateTypes.RESULTS:\n    return function()\n    {\n      var array = this.$ || this;\n      var results = [];\n\n      for (var i = 0; i < array.length; i++)\n      {\n        results.push( array[i][functionName].apply( array[i], arguments ) );\n      }\n\n      return results;\n    };\n\n  case DelegateTypes.FIRST:\n    return function()\n    {\n      var array = this.$ || this;\n\n      return array.length === 0 ? undefined : array[0][functionName].apply( array[0], arguments );\n    };\n\n  case DelegateTypes.TRUE:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        if ( array[i][functionName].apply( array[i], arguments ) )\n        {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n  }\n\n  return noop;\n}\n\n\n/**\n * Creates a composite dyanmic attribute which is an object of existing\n * attributes which takes advantage of an object based calculator.\n *\n * **Example:**\n *\n *     anim8.object.attribute.topLeft = {\n *       dynamic: anim8.composite({x:'left', y:'top'}),\n *       calculator:'2d',\n *       defaultValue: {x: 0, y: 0},\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'topLeft' being placed in left and top.\n *\n * @method anim8.composite\n * @param  {Object} map\n * @for Core\n * @return {Function}\n */\nfunction composite( map )\n{\n  return function( value, frame )\n  {\n    for ( var prop in map )\n    {\n      frame[ map[ prop ] ] = value[ prop ];\n    }\n  };\n}\n\n/**\n * Creates a partial dynamic attribute which is a value that's placed in a\n * sub-property of an attribute.\n *\n * **Example:**\n *\n *     anim8.object.attribute.x = {\n *       dynamic: anim8.partial( 'position', 'x' ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'x' being placed in position.x\n *\n * @method anim8.partial\n * @param {String} attribute\n * @param {String} subattribute\n * @for Core\n * @return {Function}\n */\nfunction partial( attribute, subattribute )\n{\n  return function( value, frame )\n  {\n    if ( !isObject( frame[ attribute ] ) )\n    {\n      frame[ attribute ] = {};\n    }\n\n    frame[ attribute ][ subattribute ] = value;\n  };\n}\n\n/**\n * Creates a dynamic attribute which spreads its value over several attributes.\n *\n * **Example:**\n *\n *     anim8.dom.attribute.padding = {\n *       dynamic: anim8.spread( ['paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom' ] ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the value in 'padding' being placed in paddingLeft, paddingTop,\n * paddingRight, and paddingBottom.\n *\n * @param  {Array} attributes\n * @return {Function}\n */\nfunction spread( attributes )\n{\n  return function( value, frame )\n  {\n    for ( var i = 0; i < attributes.length; i++ )\n    {\n      frame[ attributes[ i ] ] = value;\n    }\n  };\n}\n\n\n\n\n/**\n * Adds functions to the given object (or prototype) so you can listen for any\n * number of events on the given object, optionally once. Listeners can be\n * removed later.\n *\n * The following methods will be added to the given target:\n *\n *     target.on( events, callback, [context] )\n *     target.once( events, callback, [context] )\n *     target.off( events, callback )\n *     target.trigger( event, [argument] )\n *\n * Where...\n * - `events` is a string of space delimited events.\n * - `callback` is a function to invoke when the event is triggered.\n * - `context` is an object that should be the `this` when the callback is\n *   invoked. If no context is given the default value is the object which has\n *   the trigger function that was invoked.\n *\n * @method eventize\n * @for Core\n * @param {Object} target The object to add `on`, `once`, `off`, and `trigger`\n *    functions to.\n */\nfunction eventize(target)\n{\n  Class.defineProperty( target, 'on', on );\n  Class.defineProperty( target, 'once', once );\n  Class.defineProperty( target, 'off', off );\n  Class.defineProperty( target, 'trigger', trigger );\n}\n\n  // Adds a listener to $this\nfunction addListener($this, property, events, callback, context)\n{\n  var events = toArray( events, ' ' );\n\n  if ( !isDefined( $this[ property ] ) )\n  {\n    Class.defineProperty( $this, property, {} );\n  }\n\n  for (var i = 0; i < events.length; i++)\n  {\n    if ( !isDefined( $this[ property ][ events[i] ] ) )\n    {\n      $this[ property ][ events[i] ] = [];\n    }\n\n    $this[ property ][ events[i] ].push( [ callback, context || $this ] );\n  }\n}\n\n// Removes a listener from an array of listeners.\nfunction removeListeners(listeners, event, callback)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n\n    for (var k = eventListeners.length - 1; k >= 0; k--)\n    {\n      if (eventListeners[ k ][0] === callback)\n      {\n        eventListeners.splice( k, 1 );\n      }\n    }\n  }\n}\n\n// Deletes a property from the given object if it exists\nfunction deleteProperty(obj, prop)\n{\n  if ( obj && prop in obj )\n  {\n    delete obj[ prop ];\n  }\n}\n\n// Triggers listeneers for the given event\nfunction triggerListeners(listeners, event, argument, clear)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n    var max = eventListeners.length;\n\n    for (var i = 0; i < max; i++)\n    {\n      var callback = eventListeners[ i ];\n\n      callback[0].call( callback[1], argument );\n    }\n\n    if ( clear )\n    {\n      if ( eventListeners.length !== max )\n      {\n        listeners[ event ] = eventListeners.slice( max );\n      }\n      else\n      {\n        delete listeners[ event ];\n      }\n    }\n  }\n}\n\n/**\n * Listens for every occurrence of the given events and invokes the callback\n * each time any of them are triggered.\n *\n * @method on\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction on(events, callback, context)\n{\n  addListener( this, '$on', events, callback, context );\n\n  return this;\n}\n\n/**\n * Listens for the next occurrence for each of the given events and invokes\n * the callback when any of the events are triggered.\n *\n * @method once\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction once(events, callback, context)\n{\n  addListener( this, '$once', events, callback, context );\n\n  return this;\n}\n\n/**\n * Stops listening for a given callback for a given set of events.\n *\n * **Examples:**\n *\n *     target.off();           // remove all listeners\n *     target.off('a b');      // remove all listeners on events a & b\n *     target.off(['a', 'b']); // remove all listeners on events a & b\n *     target.off('a', x);     // remove listener x from event a\n *\n * @method off\n * @for eventize\n * @param {String|Array|Object} [events]\n * @param {Function} [callback]\n * @chainable\n */\nfunction off(events, callback)\n{\n  // Remove ALL listeners\n  if ( !isDefined( events ) )\n  {\n    delete this.$on;\n    delete this.$once;\n  }\n  else\n  {\n    var events = toArray( events, ' ' );\n\n    // Remove listeners for given events\n    if ( !isFunction( callback ) )\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        deleteProperty( this.$on, events[i] );\n        deleteProperty( this.$once, events[i] );\n      }\n    }\n    // Remove specific listener\n    else\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        removeListeners( this.$on, events[i], callback );\n        removeListeners( this.$once, events[i], callback );\n      }\n    }\n  }\n\n  return this;\n}\n\n/**\n * Triggers a single event optionally passing an argument to any listeners.\n *\n * @method trigger\n * @for eventize\n * @param {String} event\n * @param {Any} argument\n * @chainable\n */\nfunction trigger(event, argument)\n{\n  triggerListeners( this.$on, event, argument, false );\n  triggerListeners( this.$once, event, argument, true );\n\n  return this;\n}\n\n\nfunction gcd(a,b)\n{\n  if (a < 0)\n  {\n    a = -a;\n  }\n  if (b < 0)\n  {\n    b = -b;\n  }\n  if (b > a)\n  {\n    var temp = a;\n    a = b;\n    b = temp;\n  }\n\n  while (true)\n  {\n    if (b === 0)\n    {\n      return a;\n    }\n\n    a %= b;\n\n    if (a === 0)\n    {\n      return b;\n    }\n\n    b %= a;\n  }\n}\n\nfunction choose(n, m)\n{\n  var num = 1, den = 1, g;\n\n  if ( m > (n / 2) )\n  {\n    m = n - m;\n  }\n\n  while ( m >= 1 )\n  {\n    num *= n--;\n    den *= m--;\n    g = gcd( num, den );\n    num /= g;\n    den /= g;\n  }\n\n  return num;\n}\n\n/**\n * Returns a value between the given minimum and maximum.\n *\n * **Examples:**\n *\n *     anim8.clamp( 5, 1, 6 );   // 5\n *     anim8.clamp( 0, 1, 6 );   // 1\n *     anim8.clamp( 7, 1, 6 );   // 6\n *\n * @method anim8.clamp\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nfunction clamp(v, min, max)\n{\n  return (v < min) ? min : (v > max ? max : v);\n}\n\n\nvar Animations = {};\n\n/**\n * Saves an animation under the given name. It can be played, queued, and\n * transitioned into at a later time providing the name and optionally options\n * to override with.\n *\n * **See:** {{#crossLink \"Core/anim8.animation:method\"}}anim8.animation{{/crossLink}},\n *          {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method anim8.save\n * @for Core\n * @param {String} name\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n */\nfunction save( name, animation, options )\n{\n  var animation = $animation( animation, options );\n  var key = name.toLowerCase();\n\n  animation.name = name;\n\n  Animations[ key ] = animation;\n}\n\n\n/*\n * A calculator for objects with an x and y component (number)\n *\n * @class Calculator2d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator2d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator2d, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x\n      };\n    }\n    // When an array is given, assume [x, y]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, defaultValue.x );\n      var cy = coalesce( x.y, defaultValue.y );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n\n      if ( rx !== false && ry !== false )\n      {\n        var parsed = { x: rx, y: ry };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n\n        if ( ix || iy )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // Relative values & left/right/middle/center/top/bottom aliases.\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the X & Y components evenly.\n      if ( this.isRelative( x ) )\n      {\n        var rx = this.getRelativeAmount( x );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { x: rx, y: rx } );\n        }\n      }\n\n      var aliases = {\n        'left':   0,\n        'right':  100,\n        'middle': 50,\n        'center': 50,\n        'top':    0,\n        'bottom': 100\n      };\n\n      if ( x.indexOf(' ') === -1 )\n      {\n        var _x = parseFloat( x );\n\n        if ( !isNaN(_x) || x in aliases )\n        {\n          return {\n            x: x in aliases ? aliases[x] : _x,\n            y: x in aliases ? aliases[x] : _x\n          };\n        }\n      }\n      else\n      {\n        var pair = x.split(' ');\n        var _x = parseFloat( pair[0] );\n        var _y = parseFloat( pair[1] );\n\n        if ((!isNaN(_x) || pair[0] in aliases) && (!isNaN(_y) || pair[1] in aliases))\n        {\n          return {\n            x: pair[0] in aliases ? aliases[pair[0]] : _x,\n            y: pair[1] in aliases ? aliases[pair[1]] : _y\n          };\n        }\n      }\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    return dx * dx + dy * dy;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, and z component (number)\n *\n * @class Calculator3d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator3d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator3d, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x,\n        z: x\n      };\n    }\n    // When an array is given, assume [x, y, z]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, defaultValue.x );\n      var cy = coalesce( x.y, defaultValue.y );\n      var cz = coalesce( x.z, defaultValue.z );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n      var rz = this.getRelativeAmount( cz );\n\n      if ( rx !== false && ry !== false && rz !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n        var iz = this.isRelative( cz );\n\n        if ( ix || iy || iz )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // If only a relative value is given it will modify the X, Y, & Z components evenly.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { x: rx, y: rx, z: rx } );\n      }\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for number primitives.\n *\n * @class CalculatorNumber\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorNumber()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorNumber, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // A raw number\n    if ( isNumber( x ) )\n    {\n      return x;\n    }\n    // A number in a string or a relative number.\n    if ( isString( x ) )\n    {\n      var amount = this.getRelativeAmount( x );\n\n      if ( amount !== false )\n      {\n        if ( this.isRelative( x ) )\n        {\n          return computed.relative( amount );\n        }\n        else\n        {\n          return amount;\n        }\n      }\n    }\n\n    return defaultValue;\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return 0.0;\n  },\n  zero: function(out)\n  {\n    return 0.0;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale)\n  {\n    return out *= scale;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return (end - start) * delta + start;\n  },\n  distanceSq: function(a, b)\n  {\n    var ab = a - b;\n    return ab * ab;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a - b );\n  },\n  length: function(a)\n  {\n    return Math.abs( a );\n  },\n  lengthSq: function(a)\n  {\n    return a * a;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'number';\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a - b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    return Math.min( a, b );\n  },\n  max: function(out, a, b)\n  {\n    return Math.max( a, b );\n  },\n  dot: function(a, b)\n  {\n    return a * b;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, z, and angle components.\n *\n * @class CalculatorQuaternion\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorQuaternion()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorQuaternion, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When only a number is given assume it's an angle around the Z-axis.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: 0,\n        y: 0,\n        z: 1,\n        angle: x\n      };\n    }\n    // When an array is given, assume [x, y, z, angle]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2], angle: x[3] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, defaultValue.x );\n      var cy = coalesce( x.y, defaultValue.y );\n      var cz = coalesce( x.z, defaultValue.z );\n      var ca = coalesce( x.angle, defaultValue.angle );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n      var rz = this.getRelativeAmount( cz );\n      var ra = this.getRelativeAmount( ca );\n\n      if ( rx !== false && ry !== false && rz !== false && ra !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz, angle: ra };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n        var iz = this.isRelative( cz );\n        var ia = this.isRelative( ca );\n\n        if ( ix || iy || iz || ia )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0,\n            angle: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed );\n        }\n\n        return parsed;\n      }\n    }\n    // When a relative value is given, assume it's for an angle around the Z-axis.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { x:0, y:0, z:1, angle: rx }, { x:0, y:0, z:0, angle:1 } );\n      }\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    out.angle = copy.angle;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    out.angle = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    out.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    out.angle *= scale.angle;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    out.angle = (end.angle - start.angle) * delta + start.angle;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    var da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon &&\n           Math.abs(a.z) < epsilon &&\n           Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon &&\n           Math.abs(a.angle - b.angle) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    out.angle = Math.min(a.angle, b.angle);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    out.angle = Math.max(a.angle, b.angle);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z + a.angle * b.angle;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    out.angle = (max.angle - min.angle) * Math.random() + min.angle;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n *\n * @class CalculatorRGB\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGB()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGB, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given a grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x\n      };\n    }\n    // When an array is given, assume [r, g, b]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, defaultValue.r );\n      var cg = coalesce( x.g, defaultValue.g );\n      var cb = coalesce( x.b, defaultValue.b );\n      var rr = this.getRelativeAmount( cr );\n      var rg = this.getRelativeAmount( cg );\n      var rb = this.getRelativeAmount( cb );\n\n      if ( rr !== false && rg !== false && rb !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb };\n        var ir = this.isRelative( cr );\n        var ig = this.isRelative( cg );\n        var ib = this.isRelative( cb );\n\n        if ( ir || ig || ib )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // If only a relative value is given it will modify the R, G, & B components.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { r: rx, g: rx, b: rx } );\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with r, g, & b components\n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n *\n * @class CalculatorRGBA\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGBA()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGBA, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given an opaque grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x,\n        a: 1.0\n      };\n    }\n    // When an array is given, assume [r, g, b, a]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2], a: x[3] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, defaultValue.r );\n      var cg = coalesce( x.g, defaultValue.g );\n      var cb = coalesce( x.b, defaultValue.b );\n      var ca = coalesce( x.a, defaultValue.a );\n      var rr = this.getRelativeAmount( cr );\n      var rg = this.getRelativeAmount( cg );\n      var rb = this.getRelativeAmount( cb );\n      var ra = this.getRelativeAmount( ca );\n\n      if ( rr !== false && rg !== false && rb !== false && ra !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb, a: ra };\n        var ir = this.isRelative( cr );\n        var ig = this.isRelative( cg );\n        var ib = this.isRelative( cb );\n        var ia = this.isRelative( ca );\n\n        if ( ir || ig || ib || ia )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0,\n            a: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // If only a relative value is given it will modify the R, G, & B components.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { r: rx, g: rx, b: rx, a: 0 } );\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    out.a = (end.a - start.a) * delta + start.a;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    var da = a.a - b.a;\n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon &&\n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon &&\n           Math.abs(a.a - b.a) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    out.a = Math.min(a.a, b.a);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    out.a = Math.max(a.a, b.a);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b + a.a * b.a;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    out.a = (max.a - min.a) * Math.random() + min.a;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for strings.\n *\n * @class CalculatorString\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorString()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorString, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // A raw string\n    if ( isString( x ) )\n    {\n      return x;\n    }\n\n    return defaultValue;\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return '';\n  },\n  zero: function(out)\n  {\n    return '';\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return amount;\n  },\n  mul: function(out, scale)\n  {\n    return scale;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return delta < 0.5 ? start : end;\n  },\n  distanceSq: function(a, b)\n  {\n    var d = Math.abs( a.length - b.length );\n    return d * d;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a.length - b.length );\n  },\n  length: function(a)\n  {\n    return a.length;\n  },\n  lengthSq: function(a)\n  {\n    return a.length * a.length;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'string';\n  },\n  isNaN: function(a)\n  {\n    return false;\n  },\n  isZero: function(a, epsilon)\n  {\n    return a.length <= epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return a === b;\n  },\n  min: function(out, a, b)\n  {\n    return a < b ? a : b;\n  },\n  max: function(out, a, b)\n  {\n    return a > b ? a : b;\n  },\n  dot: function(a, b)\n  {\n    return a.length * b.length;\n  }\n});\n\n\n/**\n * A factory for plain objects.\n *\n * @class FactoryObject\n * @constructor\n * @extends Factory\n */\nfunction FactoryObject()\n{\n  this.priority = 0;\n  this.attributes = {};\n}\n\nClass.extend( FactoryObject, Factory,\n{\n  is: function(subject)\n  {\n    return isObject( subject ) && !isArray( subject ); /* !isElement( subject ) && */\n  },\n  animatorFor: function(subject)\n  {\n    var animator = subject.$animator;\n\n    if ( !animator )\n    {\n      animator = new Animator( subject );\n      animator.factory = this;\n\n      subject.$animator = animator;\n    }\n\n    return animator;\n  },\n  destroy: function(animator)\n  {\n    delete animator.subject.$animator;\n  },\n  attribute: function(attr)\n  {\n    var attribute = this.attributes[ attr ];\n\n    if ( !attribute )\n    {\n      attribute = this.attributes[ attr ] = object.attribute( attr );\n\n      var calculatorName = attribute.calculator;\n      var calculator = $calculator( calculatorName );\n      var defaultValue = calculator.parse( attribute.defaultValue, calculator.ZERO );\n\n      attribute.calculatorName = calculatorName;\n      attribute.calculator = calculator;\n      attribute.defaultValue = defaultValue;\n      attribute.name = attr;\n      attribute.parse = function(value) {\n        return this.calculator.parse( value, this.defaultValue );\n      };\n      attribute.cloneDefault = function() {\n        return this.calculator.clone( this.defaultValue );\n      };\n    }\n\n    return attribute;\n  }\n});\n\n/**\n * The Object namespace.\n *\n * @type {Object}\n */\nvar object = {};\n\n/**\n * Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\n * returned immediately. If the input is a string the attribute with the given name is returned. Otherwise\n * the default attribute is returned.\n *\n * @param {Object|String} attr\n * @return {Object}\n */\nobject.attribute = function(attr)\n{\n  if ( isObject( attr ) && isDefined( attr.defaultValue ) )\n  {\n    return attr;\n  }\n  if ( isString( attr ) && attr in object.attribute )\n  {\n    return object.attribute[ attr ];\n  }\n\n  return object.attribute['default'];\n};\n\n/**\n * The default attribute.\n */\nobject.attribute['default']                 = {defaultValue: 0};\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderAnd\n * @constructor\n * @extends Builder\n */\nfunction BuilderAnd()\n{\n\n}\n\nClass.extend( BuilderAnd, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var and = animation.and;\n\n    and.factory = coalesce( and.factory, animation.factory );\n\n    attrimatorMap.putMap( $attrimatorsFor( and, options ) );\n  },\n  \n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.and, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'deltas' & 'values' animation type.\n *\n * @class BuilderDeltas\n * @constructor\n * @extends Builder\n */\nfunction BuilderDeltas()\n{\n\n}\n\nClass.extend( BuilderDeltas, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. If deltas wasn't specified, assume a uniform distribution of points\n    // 2. If deltas was an array, expand out into an object where the keys are attributes and the value is the delta array\n    // 3. Generate the attrimators\n\n    var mergeId = Builder.nextMergeId();\n    var factory = $factory( animation.factory );\n    var deltas = animation.deltas;\n    var values = animation.values;\n\n    if ( !isDefined( deltas ) )\n    {\n      deltas = {};\n    }\n    else if ( isArray( deltas ) )\n    {\n      var deltaObject = {};\n\n      for (var attr in values)\n      {\n        deltaObject[attr] = deltas;\n      }\n\n      deltas = deltaObject;\n    }\n\n    for (var attr in values)\n    {\n      var value = values[ attr ];\n      var valueMax = value.length - 1;\n      var delta = deltas[ attr ];\n      var attribute = factory.attribute( attr );\n\n      for (var k = 0; k <= valueMax; k++)\n      {\n        value[k] = attribute.parse( value[k] );\n      }\n\n      if ( !isArray( delta ) )\n      {\n        delta = [];\n\n        for (var i = 0; i <= valueMax; i++)\n        {\n          delta[i] = i / valueMax;\n        }\n      }\n\n      var path      = new PathDelta( attr, attribute.calculator, value, delta );\n      var event     = helper.parseEvent( attr, path, this, true );\n\n      event.mergeId = mergeId;\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'final' animation type.\n *\n * @class BuilderFinal\n * @constructor\n * @extends Builder\n */\nfunction BuilderFinal()\n{\n\n}\n\nClass.extend( BuilderFinal, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays and durations\n\n    var factory = $factory( animation.factory );\n    var values = animation.final;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = $delay( helper.parseDelay( attr ) );\n      var duration   = $duration( helper.parseDuration( attr ) );\n      var event      = new Oncer( attr, value, delay + duration, false, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay ) +\n              helper.mergeDuration( attr, e.duration );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'initial' animation type.\n *\n * @class BuilderInitial\n * @constructor\n * @extends Builder\n */\nfunction BuilderInitial()\n{\n\n}\n\nClass.extend( BuilderInitial, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays & scales\n\n    var factory    = $factory( animation.factory );\n    var values     = animation.initial;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = helper.parseDelay( attr );\n      var oncer      = new Oncer( attr, value, delay, true, this, null, animation );\n\n      attrimatorMap.put( attr, oncer );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'keyframe' animation type.\n *\n * @class BuilderKeyframe\n * @constructor\n * @extends Builder\n */\nfunction BuilderKeyframe()\n{\n\n}\n\nClass.extend( BuilderKeyframe, Builder,\n{\n  aliases: {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  },\n\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Normalize keys by converting aliases to the actual value\n    // 2. Split up keys that have commas into multiple entries\n    // 3. Validate keys and remove invalid ones - also calculate max key value\n    // 4. Sort frames by the key\n    // 5. Expand frames to generate delta arrays, value arrays, and easing arrays\n    // 6. Generate the attrimators\n\n    var factory = $factory( animation.factory );\n    var kframes = animation.keyframe;\n    var easings = animation.easings || {};\n    var teasing = $easing( coalesce( options.teasing, Defaults.teasing ) );\n\n    var sort = false;\n\n    // split up comma delimited times\n    for (var time in kframes)\n    {\n      if ( time in this.aliases )\n      {\n        kframes[ this.aliases[time] ] = kframes[ time ];\n\n        delete kframes[ time ];\n      }\n      else if ( time.indexOf(',') !== -1 )\n      {\n        var times = time.split(',');\n\n        for (var i = 0; i < times.length; i++)\n        {\n          kframes[times[i]] = kframes[time];\n        }\n\n        delete kframes[time];\n\n        sort = true;\n      }\n    }\n\n    var times = [];\n\n    // validate times\n    var lastTime = 0.0;\n    var maxTime = 0.0;\n\n    for (var time in kframes)\n    {\n      var t = parseFloat(time);\n\n      if (isNaN(t))\n      {\n        delete kframes[time];\n      }\n      else\n      {\n        if (t < lastTime)\n        {\n          sort = true;\n        }\n\n        times.push({\n          order: t,\n          key: time,\n          value: kframes[time]\n        });\n\n        lastTime = t;\n\n        maxTime = Math.max( maxTime, t );\n      }\n    }\n\n    // sort if necessary\n    if (sort)\n    {\n      times.sort(function(a, b)\n      {\n        return a.order - b.order;\n      });\n\n      kframes = {};\n\n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i].key] = times[i].value;\n      }\n    }\n\n    // split up into deltas and values\n    var deltas = {};\n    var values = {};\n    var pathEasings = {};\n    var attributes = {};\n\n    for (var i = 0; i < times.length; i++)\n    {\n      var frame = times[i];\n      var easing = coalesce( frame.value.easing, options.easing );\n\n      delete frame.value.easing;\n\n      for (var attr in frame.value)\n      {\n        if ( !(attr in deltas) )\n        {\n          deltas[attr] = [];\n          values[attr] = [];\n          pathEasings[attr] = [];\n          attributes[attr] = factory.attribute( attr );\n        }\n\n        deltas[attr].push( frame.order / maxTime );\n        values[attr].push( attributes[ attr ].parse( frame.value[ attr ] ) );\n        pathEasings[attr].push( $easing( coalesce( easings[ attr ], easing ) ) );\n      }\n    }\n\n    // create events & paths\n    for (var attr in deltas)\n    {\n      var duration  = helper.parseDuration( attr );\n      var delay     = helper.parseDelay( attr );\n      var sleep     = helper.parseSleep( attr );\n      var offset    = helper.parseOffset( attr );\n      var repeat    = helper.parseRepeat( attr );\n      var scale     = helper.parseScale( attr );\n      var scaleBase = helper.parseScaleBase( attr );\n      var path      = new PathKeyframe( attr, attributes[attr].calculator, values[attr], deltas[attr], pathEasings[attr] );\n      var event     = new Event( attr, path, duration, teasing, delay, sleep, offset, repeat, scale, scaleBase, true, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'move' animation type.\n *\n * @class BuilderMove\n * @constructor\n * @extends Builder\n */\nfunction BuilderMove()\n{\n\n}\n\nClass.extend( BuilderMove, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var move       = animation.move;\n\n    for (var attr in move)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( move[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, computed.relative( value ) );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'path' animation type.\n *\n * @class BuilderPath\n * @constructor\n * @extends Builder\n */\nfunction BuilderPath()\n{\n\n}\n\nClass.extend( BuilderPath, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory = $factory( animation.factory );\n    var path    = animation.path;\n\n    for (var attr in path)\n    {\n      var attribute  = factory.attribute( attr );\n      var pathDefinition = path[ attr ];\n\n      if ( !( pathDefinition instanceof Path ) )\n      {\n        pathDefinition.name = attr;\n        pathDefinition.calculator = attribute.calculator;\n      }\n\n      var parsedPath = $path( pathDefinition );\n      var event      = helper.parseEvent( attr, parsedPath, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'physics' animation type.\n *\n * @class BuilderPhysics\n * @constructor\n * @extends Builder\n */\nfunction BuilderPhysics()\n{\n\n}\n\nClass.extend( BuilderPhysics, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory );\n    var physics    = animation.physics;\n\n    for (var attr in physics)\n    {\n      var physic    = physics[ attr ];\n\n      var attrimator = new Physics(\n        attr,\n        this,\n        physic.calculator,\n        coalesce( physic.position, true ),\n        physic.velocity,\n        physic.acceleration,\n        physic.terminal,\n        physic.stopAt\n      );\n\n      attrimatorMap.put( attr, attrimator );\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderQueue\n * @constructor\n * @extends Builder\n */\nfunction BuilderQueue()\n{\n\n}\n\nClass.extend( BuilderQueue, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var queue = animation.queue;\n\n    queue.factory = coalesce( queue.factory, animation.factory );\n\n    attrimatorMap.queueMap( $attrimatorsFor( queue, options ) );\n  },\n\n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.queue, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'springs' animation type.\n *\n * @class BuilderSpring\n * @constructor\n * @extends Builder\n */\nfunction BuilderSpring()\n{\n\n}\n\nClass.extend( BuilderSpring, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory );\n    var springs    = animation.springs;\n\n    for (var attr in springs)\n    {\n      var spring     = springs[ attr ];\n\n      if ( !isDefined( spring.attribute ) )\n      {\n        spring.attribute = attr;\n      }\n\n      var parsed = $spring( spring );\n\n      if ( parsed !== false )\n      {\n        parsed.parser = this;\n\n        attrimatorMap.put( attr, parsed );\n      }\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'travel' animation type.\n *\n * @class BuilderTravel\n * @constructor\n * @extends Builder\n */\nfunction BuilderTravel()\n{\n\n}\n\nClass.extend( BuilderTravel, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var travel     = animation.travel;\n\n    /**\n     * The computed function which returns a function which returns a value pointing\n     * to a given target given the current position of the animator.\n     *\n     * @param  {Number}\n     * @param  {any}\n     * @param  {Number}\n     * @return {Function}\n     */\n    var pointing = function(amount, target, epsilon, subtractVelocity)\n    {\n      return computed(function pointingFunction(attrimator, animator)\n      {\n        var attribute = animator.getAttribute( attrimator.attribute );\n        var calc = attribute.calculator;\n        var targetValue = isComputed( target ) ? target( attrimator, animator ) : target;\n        var temp = calc.create();\n\n        return function()\n        {\n          var position   = attrimator.position;\n          var current    = calc.copy( temp, resolve( targetValue ) );\n          var difference = calc.sub( current, position );\n          var distance   = calc.distance( difference, calc.ZERO );\n\n          if ( distance < epsilon )\n          {\n            attrimator.stopIn( 0 );\n          }\n          else\n          {\n            difference = calc.scale( difference, amount / distance );\n          }\n\n          if ( subtractVelocity )\n          {\n            difference = calc.sub( difference, attrimator.resolveVelocity() );\n          }\n\n          return difference;\n        };\n      });\n    };\n\n    for (var attr in travel)\n    {\n      var traveling     = travel[ attr ];\n      var attribute     = factory.attribute( attr );\n      var fromParsed    = attribute.parse( coalesce( traveling.from, true ) );\n      var toParsed      = attribute.parse( coalesce( traveling.to, true ) );\n      var velocity      = $number( traveling.velocity, 0 );\n      var acceleration  = $number( traveling.acceleration, 0 );\n      var terminal      = $number( coalesce( traveling.terminal, traveling.velocity ), Number.POSITIVE_INFINITY );\n      var epsilon       = $number( traveling.epsilon, 0.001 );\n\n      if ( acceleration !== 0 )\n      {\n        acceleration = pointing( acceleration, toParsed, epsilon, true );\n      }\n\n      if ( velocity !== 0 )\n      {\n        velocity = pointing( velocity, toParsed, epsilon, false );\n      }\n\n      var traveler = new Physics(\n        attr,\n        this,\n        attribute.calculator,\n        fromParsed,\n        velocity,\n        acceleration,\n        terminal\n      );\n\n      attrimatorMap.put( attr, traveler );\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new builder for the 'tweenFrom' animation type.\n *\n * @class BuilderTweenFrom\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenFrom()\n{\n\n}\n\nClass.extend( BuilderTweenFrom, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var tweenFrom  = animation.tweenFrom;\n\n    for (var attr in tweenFrom)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenFrom[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, value, computed.current );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'tweenTo' animation type.\n *\n * @class BuilderTweenTo\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenTo()\n{\n\n}\n\nClass.extend( BuilderTweenTo, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var tweenTo    = animation.tweenTo;\n\n    for (var attr in tweenTo)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenTo[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, value );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new PathDelta.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @class PathDelta\n * @constructor\n * @extends Path\n */\nfunction PathDelta(name, calculator, points, deltas)\n{\n  this.name = name;\n  this.set( calculator, points, deltas );\n}\n\nClass.extend( PathDelta, Path,\n{\n  set: function(calculator, points, deltas)\n  {\n    this.reset( calculator, points );\n    this.deltas = deltas;\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n\n    return this.calculator.interpolate( out, p0, p1, pd );\n  },\n\n  copy: function()\n  {\n    return new PathDelta( this.name, this.calculator, copy(this.points), copy(this.deltas) );\n  }\n});\n\n\n/**\n * Instantiates a new PathParametric.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @param {Array} matrix\n * @param {Number} weight\n * @class PathParametric\n * @constructor\n * @extends Path\n */\nfunction PathParametric(name, calculator, points, loop, matrix, weight, invert)\n{\n  this.name = name;\n  this.set( calculator, points, loop, matrix, weight, invert );\n}\n\nClass.extend( PathParametric, Path,\n{\n  set: function(calculator, points, loop, matrix, weight, invert)\n  {\n    this.reset( calculator, points );\n    this.loop = loop;\n    this.matrix = matrix;\n    this.weight = weight;\n    this.invert = invert;\n    this.temp = calculator.create();\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var temp = this.temp;\n    var matrix = this.matrix;\n    var n = this.points.length - 1;\n    var a = delta * n;\n    var i = clamp( Math.floor( a ), 0, n - 1 );\n    var d = a - i;\n\n    var p0 = this.resolvePoint( i - 1 );\n    var p1 = this.resolvePoint( i );\n    var p2 = this.resolvePoint( i + 1 );\n    var p3 = this.resolvePoint( i + 2 );\n\n    var d0, d1, d2, d3;\n    if (this.invert) {\n      d3 = 1;\n      d2 = d;\n      d1 = d * d2;\n      d0 = d * d1;\n    } else {\n      d0 = 1;\n      d1 = d;\n      d2 = d * d1;\n      d3 = d * d2;\n    }\n\n    out = calc.zero( out );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[0][0] );\n    temp = calc.adds( temp, p1, matrix[0][1] );\n    temp = calc.adds( temp, p2, matrix[0][2] );\n    temp = calc.adds( temp, p3, matrix[0][3] );\n    out = calc.adds( out, temp, d0 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[1][0] );\n    temp = calc.adds( temp, p1, matrix[1][1] );\n    temp = calc.adds( temp, p2, matrix[1][2] );\n    temp = calc.adds( temp, p3, matrix[1][3] );\n    out = calc.adds( out, temp, d1 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[2][0] );\n    temp = calc.adds( temp, p1, matrix[2][1] );\n    temp = calc.adds( temp, p2, matrix[2][2] );\n    temp = calc.adds( temp, p3, matrix[2][3] );\n    out = calc.adds( out, temp, d2 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[3][0] );\n    temp = calc.adds( temp, p1, matrix[3][1] );\n    temp = calc.adds( temp, p2, matrix[3][2] );\n    temp = calc.adds( temp, p3, matrix[3][3] );\n    out = calc.adds( out, temp, d3 );\n\n    out = calc.scale( out, this.weight );\n\n    return out;\n  },\n\n  resolvePoint: function(i)\n  {\n    var points = this.points;\n    var n = points.length;\n    var k = (this.loops ? (i + n) % n : clamp( i, 0, n - 1 ));\n\n    return resolve( points[ k ] );\n  },\n\n  copy: function()\n  {\n    return new PathParametric( this.name, this.calculator, copy(this.points), this.loop, this.matrix, this.weight );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathBasisSpline.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathBasisSpline\n * @constructor\n * @extends PathParametric\n */\nfunction PathBasisSpline(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathBasisSpline, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathBasisSpline.MATRIX, PathBasisSpline.WEIGHT, true );\n  },\n\n  copy: function()\n  {\n    return new PathBasisSpline( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                                 [-1, 3,-3, 1]   [p-1]\n * f(t) = [t^3, t^2, t, 1] * 1/6 * [ 3,-6, 3, 0] * [ p ]\n *                                 [-3, 0, 3, 0]   [p+1]\n *                                 [ 1, 4, 1, 0]   [p+2]\n */\n\nPathBasisSpline.WEIGHT = 1.0 / 6.0;\nPathBasisSpline.MATRIX = [\n  [-1, 3,-3, 1],\n  [ 3,-6, 3, 0],\n  [-3, 0, 3, 0],\n  [ 1, 4, 1, 0]\n];\n\n\n/**\n * Instantiates a new PathBezier.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathBezier\n * @constructor\n * @extends Path\n */\nfunction PathBezier(name, calculator, points, weights)\n{\n  this.name = name;\n  this.set( calculator, points, weights );\n}\n\nClass.extend( PathBezier, Path,\n{\n  set: function(calculator, points, weights)\n  {\n    this.reset( calculator, points );\n    this.weights = weights || PathBezier.computeWeights( points.length );\n    this.inverses = new Array( points.length );\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var inverses = this.inverses;\n    var weights = this.weights;\n    var n = this.points.length;\n    var x = 1;\n\n    inverses[n - 1] = 1;\n\n    for (var i = n - 2; i >= 0; i--)\n    {\n      inverses[i] = inverses[i + 1] * (1 - delta);\n    }\n\n    out = calc.zero( out );\n\n    for (var i = 0; i < n; i++)\n    {\n      out = calc.adds( out, this.resolvePoint( i ), weights[ i ] * inverses[ i ] * x );\n\n      x *= delta;\n    }\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathBezier( this.name, this.calculator, copy(this.points), this.weights );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\nPathBezier.computeWeights = function(n)\n{\n  var w = new Array( n-- );\n\n  for (var i = 0; i <= n; i++)\n  {\n    w[ i ] = choose( n, i );\n  }\n\n  return w;\n};\n\n\n/**\n * Instantiates a new PathCatmullRom.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathCatmullRom\n * @constructor\n * @extends PathParametric\n */\nfunction PathCatmullRom(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathCatmullRom, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathCatmullRom.MATRIX, PathCatmullRom.WEIGHT, false );\n  },\n\n  copy: function()\n  {\n    return new PathCatmullRom( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                                 [-1, 3,-3, 1]   [p-1]\n * f(t) = [1, t, t^2, t^3] * 1/2 * [ 3,-6, 3, 0] * [ p ]\n *                                 [-3, 0, 3, 0]   [p+1]\n *                                 [ 1, 4, 1, 0]   [p+2]\n */\n\nPathCatmullRom.WEIGHT = 0.5;\nPathCatmullRom.MATRIX = [\n  [ 0, 2, 0, 0],\n\t[-1, 0, 1, 0],\n\t[ 2,-5, 4,-1],\n\t[-1, 3,-3, 1]\n];\n\n\n/**\n * Instantiates a new PathCombo.\n *\n * @param {String|false} name\n * @param {Path[]} paths\n * @param {Boolean} [uniform]\n * @param {Number} [granularity]\n * @class PathCombo\n * @constructor\n * @extends Path\n */\nfunction PathCombo(name, paths, uniform, granularity)\n{\n  this.name = name;\n  this.set( paths, uniform, granularity );\n}\n\nClass.extend( PathCombo, Path,\n{\n  set: function(paths, uniform, granularity)\n  {\n    var calc = paths[0].calculator;\n    var points = [];\n    var deltas = [];\n    var linear = true;\n    var length = false;\n\n    for (var i = 0; i < paths.length; i++)\n    {\n      points.push.apply( points, paths[ i ].points );\n\n      deltas[ i ] = ( i + 1 ) / paths.length;\n\n      if ( !paths[ i ].isLinear() )\n      {\n        linear = false;\n      }\n    }\n\n    if ( uniform )\n    {\n      var lengthGranularity = coalesce( granularity, 100 );\n      var lengthTotal = 0;\n      var lengths = [];\n\n      for (var i = 0; i < paths.length; i++)\n      {\n        lengths[ i ] = paths[ i ].length( lengthGranularity );\n        lengthTotal += lengths[ i ];\n      }\n\n      var lengthCurrent = 0;\n\n      for (var i = 0; i < paths.length; i++)\n      {\n        lengthCurrent += lengths[ i ];\n        deltas[ i ] = lengthCurrent / lengthTotal;\n      }\n\n      length = lengthTotal;\n    }\n\n    this.reset( calc, points );\n    this.paths = paths;\n    this.deltas = deltas;\n    this.uniform = uniform;\n    this.granularity = granularity;\n    this.linear = linear;\n    this.cachedLength = length;\n  },\n\n  isLinear: function()\n  {\n    return this.linear;\n  },\n\n  length: function(granularity)\n  {\n    return this.cachedLength !== false ? this.cachedLength : this._length( granularity );\n  },\n\n  compute: function(out, delta)\n  {\n    var paths = this.paths;\n    var deltas = this.deltas;\n    var previousDelta = 0;\n    var i = 0;\n\n    while ( i < paths.length - 1 && deltas[ i ] < delta )\n    {\n      previousDelta = deltas[ i ];\n      i++;\n    }\n\n    return paths[ i ].compute( out, ( delta - previousDelta ) / ( deltas[ i ] - previousDelta ) );\n  },\n\n  copy: function()\n  {\n    return new PathCombo( this.name, this.paths, this.uniform, this.granularity );\n  }\n});\n\n\n/**\n * Instantiates a new PathCompiled.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} pointCount\n * @class PathCompiled\n * @constructor\n * @extends Path\n */\nfunction PathCompiled(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathCompiled, Path,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var compiled = PathCompiled.compile( calc, path, pointCount );\n\n    this.reset( calc, compiled );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  compute: function(out, delta)\n  {\n    var n = this.points.length;\n    var a = Math.floor( delta * n );\n    var index = Math.min( a, n - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathCompiled( this.name, this, this.points.length );\n  }\n});\n\nPathCompiled.compile = function(calc, path, pointCount)\n{\n  if (path.points.length === pointCount)\n  {\n    return copy( path.points );\n  }\n\n  var points = [];\n\n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n\n  return points;\n};\n\n\n/**\n * Instantiates a new PathCubic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @param {T} p3\n * @class PathCubic\n * @constructor\n * @extends Path\n */\nfunction PathCubic(name, calculator, p0, p1, p2, p3)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2, p3 );\n}\n\nClass.extend( PathCubic, Path,\n{\n  set: function(calculator, p0, p1, p2, p3)\n  {\n    this.reset( calculator, [p0, p1, p2, p3] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var d3 = d1 * d2;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n    var i3 = i1 * i2;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i3 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 3 * i2 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), 3 * i1 * d2 );\n    out = calc.adds( out, this.resolvePoint( 3 ), d3 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathCubic( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathHermite.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} startTangent\n * @param {T} end\n * @param {T} endTangent\n * @class PathHermite\n * @constructor\n * @extends Path\n */\nfunction PathHermite(name, calculator, start, startTangent, end, endTangent)\n{\n  this.name = name;\n  this.set( calculator, start, startTangent, end, endTangent );\n}\n\nClass.extend( PathHermite, Path,\n{\n  set: function(calculator, start, startTangent, end, endTangent)\n  {\n    this.reset( calculator, [start, end] );\n    this.startTangent = startTangent;\n    this.endTangent = endTangent;\n  },\n\n  compute: function(out, d)\n  {\n    var calc = this.calculator;\n    var d2 = d * d;\n    var d3 = d2 * d;\n\n    out = calc.zero( out );\n    out = calc.adds( out, this.resolvePoint( 0 ), 2 * d3 - 3 * d2 + 1 );\n    out = calc.adds( out, this.resolvePoint( 1 ), -2 * d3 + 3 * d2 );\n    out = calc.adds( out, resolve( this.startTangent ), d3 - 2 * d2 + d );\n    out = calc.adds( out, resolve( this.endTangent ), d3 - d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathHermite( this.name, this.calculator, this.points[0], this.startTangent, this.points[1], this.endTangent );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathJump.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathJump\n * @constructor\n * @extends Path\n */\nfunction PathJump(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathJump, Path,\n{\n  set: function(calculator, points)\n  {\n    this.reset( calculator, points );\n  },\n\n  compute: function(out, delta)\n  {\n    var a = Math.floor( delta * this.points.length );\n    var index = Math.min( a, this.points.length - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathJump( this.name, this.calculator, copy(this.points) );\n  }\n});\n\n\n/**\n * Instantiates a new PathKeyframe.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @param {Array} easings\n * @class PathKeyframe\n * @constructor\n * @extends Path\n */\nfunction PathKeyframe(name, calculator, points, deltas, easings)\n{\n  this.name = name;\n  this.set( calculator, points, deltas, easings );\n}\n\nClass.extend( PathKeyframe, Path,\n{\n  set: function(calculator, points, deltas, easings)\n  {\n    this.reset( calculator, points );\n    this.deltas = deltas;\n    this.easings = easings;\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n\n    if ( delta < ds[0] ) {\n      return false;\n    }\n\n    if ( delta > ds[ds.length - 1] ) {\n      return this.points[ds.length - 1];\n    }\n\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n    var ea = this.easings[i];\n\n    return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n  },\n  copy: function()\n  {\n    return new PathKeyframe( this.name, this.calculator, copy(this.points), copy(this.deltas), copy(this.easings) );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathLinear(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathLinear, PathDelta,\n{\n  set: function(calculator, points)\n  {\n    var deltas = PathLinear.getTimes( calculator, points );\n\n    this._set( calculator, points, deltas );\n  },\n\n  copy: function()\n  {\n    return new PathLinear( this.name, this.calculator, copy(this.points) );\n  }\n});\n\nPathLinear.getTimes = function(calc, points)\n{\n  var n = points.length - 1;\n\tvar distances = [];\n\n\tdistances[ 0 ] = 0;\n\n\tfor (var i = 1; i <= n; i++)\n\t{\n\t\tdistances[ i ] = distances[ i - 1 ] + calc.distance( points[ i - 1 ], points[ i ] );\n\t}\n\n\tvar invlength = 1.0 / distances[ n ];\n\n\tfor (var i = 1; i < n; i++)\n\t{\n\t\tdistances[ i ] *= invlength;\n\t}\n\n  distances[ n ] = 1;\n\n\treturn distances;\n};\n\n\n/**\n * Instantiates a new PathParametricBezier.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathParametricBezier\n * @constructor\n * @extends PathParametric\n */\nfunction PathParametricBezier(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathParametricBezier, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathParametricBezier.MATRIX, PathParametricBezier.WEIGHT, true );\n  },\n\n  copy: function()\n  {\n    return new PathParametricBezier( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                           [-1, 3,-3, 1]   [p-1]\n * f(t) = [t^3, t^2, t, 1] * [ 3,-6, 3, 0] * [ p ]\n *                           [-3, 3, 0, 0]   [p+1]\n *                           [ 1, 0, 0, 0]   [p+2]\n */\n\nPathParametricBezier.WEIGHT = 1.0;\nPathParametricBezier.MATRIX = [\n  [-1, 3,-3, 1],\n  [ 3,-6, 3, 0],\n  [-3, 3, 0, 0],\n  [ 1, 0, 0, 0]\n];\n\n\n/**\n * Instantiates a new PathParametricHermite.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathParametricHermite\n * @constructor\n * @extends PathParametric\n */\nfunction PathParametricHermite(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathParametricHermite, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathParametricHermite.MATRIX, PathParametricHermite.WEIGHT, true );\n  },\n\n  copy: function()\n  {\n    return new PathParametricHermite( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                           [ 2,-2, 1, 2]   [p-1]\n * f(t) = [t^3, t^2, t, 1] * [-3, 3,-2,-1] * [ p ]\n *                           [ 0, 0, 1, 0]   [p+1]\n *                           [ 1, 0, 0, 0]   [p+2]\n */\n\nPathParametricHermite.WEIGHT = 1.0;\nPathParametricHermite.MATRIX = [\n  [ 2,-2, 1, 2],\n  [-3, 3,-2,-1],\n  [ 0, 0, 1, 0],\n  [ 1, 0, 0, 0]\n];\n\n\n/**\n * Instantiates a new PathQuadratic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @class PathQuadratic\n * @constructor\n * @extends Path\n */\nfunction PathQuadratic(name, calculator, p0, p1, p2)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2 );\n}\n\nClass.extend( PathQuadratic, Path,\n{\n  set: function(calculator, p0, p1, p2)\n  {\n    this.reset( calculator, [p0, p1, p2] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i2 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 2 * i1 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathQuadratic( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathQuadraticCorner.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Number} midpoint\n * @param {Boolean} loop\n * @class PathQuadraticCorner\n * @constructor\n * @extends Path\n */\nfunction PathQuadraticCorner(name, calculator, points, midpoint, loop)\n{\n  this.name = name;\n  this.set( calculator, points, midpoint, loop );\n}\n\nClass.extend( PathQuadraticCorner, Path,\n{\n  set: function(calculator, points, midpoint, loop)\n  {\n    this.reset( calculator, points );\n    this.midpoint = midpoint;\n    this.loop = loop;\n    this.temp0 = calculator.create();\n    this.temp1 = calculator.create();\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var temp0 = this.temp0;\n    var temp1 = this.temp1;\n    var midpoint = this.midpoint;\n    var negmidpoint = 1.0 - midpoint;\n    var halfmidpoint = midpoint * 0.5;\n    var n = this.points.length - (this.loops ? 0 : 1);\n    var a = delta * n;\n    var i = clamp( Math.floor( a ), 0, n - 1 );\n    var d = a - i;\n\n    var p0 = this.resolvePoint( i - 1 );\n    var p1 = this.resolvePoint( i );\n    var p2 = this.resolvePoint( i + 1 );\n    var p3 = this.resolvePoint( i + 2 );\n\n    if ( d < midpoint )\n    {\n      d = (d / midpoint);\n      temp0 = calc.interpolate( temp0, p0, p1, d * halfmidpoint + negmidpoint + halfmidpoint );\n      temp1 = calc.interpolate( temp1, p1, p2, d * halfmidpoint + halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5 + 0.5;\n    }\n    else if ( d > negmidpoint )\n    {\n      d = (d - negmidpoint) / midpoint;\n      temp0 = calc.interpolate( temp0, p1, p2, d * halfmidpoint + negmidpoint );\n      temp1 = calc.interpolate( temp1, p2, p3, d * halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5;\n    }\n\n    out = calc.interpolate( out, p1, p2, d );\n\n    return out;\n  },\n\n  resolvePoint: function(i)\n  {\n    var points = this.points;\n    var n = points.length;\n    var k = (this.loops ? (i + n) % n : clamp( i, 0, n - 1 ));\n\n    return resolve( points[ k ] );\n  },\n\n  copy: function()\n  {\n    return new PathQuadraticCorner( this.name, this.calculator, copy(this.points), this.midpoint, this.loop );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathSub.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} start\n * @param {Number} end\n * @class PathSub\n * @constructor\n * @extends Path\n */\nfunction PathSub(name, path, start, end)\n{\n  this.name = name;\n  this.set( path, start, end );\n}\n\nClass.extend( PathSub, Path,\n{\n  set: function(path, start, end)\n  {\n    this.reset( path.calculator, path.points );\n    this.path = path;\n    this.start = start;\n    this.end = end;\n  },\n\n  compute: function(out, delta)\n  {\n    return this.path.compute( out, (this.end - this.start) * delta + this.start );\n  },\n\n  copy: function()\n  {\n    return new PathSub( this.name, this.path, this.start, this.end );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathUniform(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathUniform, PathDelta,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var points = PathCompiled.compile( calc, path, pointCount );\n    var deltas = PathLinear.getTimes( calc, points );\n\n    this._set( calc, points, deltas );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  copy: function()\n  {\n    return new PathUniform( this.name, this.path, this.pointCount );\n  }\n});\n\n\n/**\n * Instantiates a new Tween.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} end\n * @class Tween\n * @constructor\n * @extends Path\n */\nfunction Tween(name, calculator, start, end)\n{\n  this.name = name;\n  this.set( calculator, start, end );\n}\n\nClass.extend( Tween, Path,\n{\n  set: function(calculator, start, end)\n  {\n    this.reset( calculator, [ start, end ] );\n  },\n\n  compute: function(out, delta)\n  {\n    return this.calculator.interpolate( out, this.resolvePoint( 0 ), this.resolvePoint( 1 ), delta );\n  },\n\n  copy: function()\n  {\n    return new Tween( this.name, this.calculator, this.points[0], this.points[1] );\n  }\n});\n\n\n/**\n * Instantiates a new SpringDistance.\n *\n * @param {String|false} attribute\n * @param {anim8.Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {Number} distance\n * @param {Number} damping\n * @param {Number} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringDistance\n * @constructor\n * @extends Spring\n */\nfunction SpringDistance(attribute, calculator, position, rest, distance, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.distance   = distance;\n  this.damping    = damping;\n  this.stiffness  = stiffness;\n  this.temp       = null;\n}\n\nClass.extend( SpringDistance, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    this.temp = this.calculator.create();\n  },\n\n  clone: function()\n  {\n    return new SpringDistance( this.attribute, this.calculator, this.position, this.rest, this.distance, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // d = DISTANCE( position, rest )\n    // velocity += ((position - rest) / d * stiffness * |distance - d| - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n    var rest = this.resolveRest();\n\n    var d = calc.distance( this.position, rest );\n\n    this.temp = calc.copy( this.temp, this.position );\n    this.temp = calc.sub( this.temp, rest );\n\n    if ( d !== 0 )\n    {\n      this.temp = calc.scale( this.temp, 1.0 / d );\n      this.temp = calc.scale( this.temp, (d - this.distance) * this.stiffness );\n    }\n\n    this.temp = calc.adds( this.temp, this.velocity, -this.damping );\n\n    this.velocity = calc.adds( this.velocity, this.temp, dt );\n  }\n\n});\n\n\n/**\n * Instantiates a new SpringLinear.\n *\n * @param {String|false} attribute\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {T} damping\n * @param {T} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringLinear\n * @constructor\n * @extends Spring\n */\nfunction SpringLinear(attribute, calculator, position, rest, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.damping      = damping;\n  this.stiffness    = stiffness;\n  this.temp0        = null;\n  this.temp1        = null;\n}\n\nClass.extend( SpringLinear, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = this.calculator;\n\n    this.damping      = this.parseValue( animator, this.damping, attribute.defaultValue );\n    this.stiffness    = this.parseValue( animator, this.stiffness, attribute.defaultValue );\n    this.temp0        = calc.create();\n    this.temp1        = calc.create();\n  },\n\n  clone: function()\n  {\n    return new SpringLinear( this.attribute, this.calculator, this.position, this.rest, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.damping ) ||\n           isComputed( this.stiffness );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // velocity += ((stiffness * (position - rest)) - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n\n    this.temp1 = calc.copy( this.temp1, this.damping );\n    this.temp1 = calc.mul( this.temp1, this.velocity );\n\n    this.temp0 = calc.copy( this.temp0, this.position );\n    this.temp0 = calc.sub( this.temp0, this.resolveRest() );\n    this.temp0 = calc.mul( this.temp0, this.stiffness );\n    this.temp0 = calc.sub( this.temp0, this.temp1 );\n\n    this.velocity = calc.adds( this.velocity, this.temp0, dt );\n  }\n\n});\n\n\nvar Builders = {};\n\n/**\n * Register the builder.\n */\nBuilders['values'] = new BuilderDeltas();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      and: {\n *       ... more builders ...\n *      }\n *     });\n *\n *\n * @property {BuilderAnd} and\n * @for anim8.builder\n */\nBuilders['and'] = new BuilderAnd();\n\n/**\n * Register the builder.\n */\nBuilders['final'] = new BuilderFinal();\n\n\n/**\n * Register the builder.\n */\nBuilders['initial'] = new BuilderInitial();\n\n/**\n * Registers the builder.\n */\nBuilders['keyframe'] = new BuilderKeyframe();\n\n/**\n * Register the builder.\n */\nBuilders['move'] = new BuilderMove();\n\n/**\n * A builder which generates attrimators which follow a given path.\n *\n * **Examples:**\n *\n *     animator.play({\n *      path: {\n *       opacity: {\n *        type: 'quadratic',\n *        p0: 0,\n *        p1: 0.4,\n *        p2: 1.0\n *       }\n *      }\n *     });\n *\n *\n * @property {BuilderPath} path\n * @for anim8.builder\n */\nBuilders['path'] = new BuilderPath();\n\n/**\n * Register the builder.\n */\nBuilders['physics'] = new BuilderPhysics();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      queue: {\n *       ... more builders to play after the others ...\n *      }\n *     });\n *\n *\n * @property {BuilderQueue} queue\n * @for anim8.builder\n */\nBuilders['queue'] = new BuilderQueue();\n\n/**\n * Register the builder.\n */\nBuilders['springs'] = new BuilderSpring();\n\n/**\n * Register the builder.\n */\nBuilders['travel'] = new BuilderTravel();\n\n/**\n * Register the builder.\n */\nBuilders['tweenFrom'] = new BuilderTweenFrom();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      tweenTo: {\n *       opacity: 1.0,       // absolute value\n *       left: '+40'         // 40 more units from current value\n *      }\n *     });\n *\n *\n * @property {BuilderTweenTo} tweenTo\n * @for anim8.builder\n */\nBuilders['tweenTo'] = new BuilderTweenTo();\n\n\n/**\n * A collection of calculators. A calculator is responsible for performing\n * mathematical operations for a specific animatable data type.\n *\n * @class anim8.calculator\n */\nvar Calculators = {};\n\n/**\n * A calculator for numbers.\n *\n * @property {CalculatorNumber} number\n * @for anim8.Calculators\n */\nCalculators['number'] = new CalculatorNumber();\n\n/**\n * A calculator for 2d points; objects with x & y Number components.\n *\n * @property {Calculator2d} 2d\n * @for anim8.Calculators\n */\nCalculators['2d'] = new Calculator2d();\n\n/**\n * A calculator for 3d points; objects with x, y, & z Number components.\n *\n * @property {Calculator3d} 3d\n * @for anim8.Calculators\n */\nCalculators['3d'] = new Calculator3d();\n\n/**\n * A calculator for quaternions; objects with x, y, z, & angle Number components.\n *\n * @property {CalculatorQuaternion} quaternion\n * @for anim8.Calculators\n */\nCalculators['quaternion'] = new CalculatorQuaternion();\n\n/**\n * A calculator for opaque colors; objects with r, g, & b Number components.\n *\n * @property {CalculatorRGB} rgb\n * @for anim8.Calculators\n */\nCalculators['rgb'] = new CalculatorRGB();\n\n/**\n * A calculator for colors; objects with r, g, b, & a Number components.\n *\n * @property {CalculatorRGBA} rgba\n * @for anim8.Calculators\n */\nCalculators['rgba'] = new CalculatorRGBA();\n\n/**\n * A calculator for strings.\n *\n * @property {CalculatorString} string\n * @for anim8.Calculators\n */\nCalculators['string'] = new CalculatorString();\n\n/**\n * The default calculator.\n *\n * @property {CalculatorNumber} default\n * @for anim8.Calculators\n */\nCalculators['default'] = Calculators['number'];\n\n\nvar Factories = {};\n\n/**\n * Registers the object factory.\n */\nFactories['object'] = new FactoryObject();\n\n/**\n * Registers the default factory.\n */\nFactories['default'] = Factories['object'];\n\n\nvar Paths = {};\n\n/**\n * Parses an object for a combo path.\n *\n * @param {Object} path\n * @return {PathCombo}\n */\nPaths['combo'] = function(path)\n{\n  var paths = path.paths;\n\n  for (var i = 0; i < paths.length; i++)\n  {\n    paths[ i ] = $path( paths[ i ] );\n  }\n\n  return new PathCombo(\n    path.name,\n    paths,\n    path.uniform,\n    path.granularity\n  );\n};\n\n\n/**\n * Parses an object for a compiled path.\n *\n * @param {Object} path\n * @return {PathCompiled}\n */\nPaths['compiled'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathCompiled(\n    path.name,\n    parent,\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a cubic path.\n *\n * @param {Object} path\n * @return {PathCubic}\n */\nPaths['cubic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathCubic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue ),\n    calc.parse( path.p3, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a delta path.\n *\n * @param {Object} path\n * @return {PathDelta}\n */\nPaths['delta'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  return new PathDelta(\n    path.name,\n    calc,\n    calc.parseArry( path.points, path.points, path.defaultValue ),\n    path.deltas\n  );\n};\n\n/**\n * Parses an object for a jump path.\n *\n * @param {Object} path\n * @return {PathJump}\n */\nPaths['jump'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathJump(\n    path.name,\n    calc,\n    calc.parseArry( path.points, path.points, path.defaultValue )\n  );\n};\n\n/**\n * Parses an object for a keyframe path.\n *\n * @param {Object} path\n * @return {PathKeyframe}\n */\nPaths['keyframe'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  var defaultEasing = $easing( path.easings, null );\n\n  if ( !isDefined( path.easings ) || !isArray( path.easings ) || defaultEasing !== null )\n  {\n    path.easings = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.easings[ i ] = defaultEasing;\n    }\n  }\n\n  for (var i = 0; i < path.easings.length; i++)\n  {\n    path.easings[ i ] = $easing( path.easings[ i ] );\n  }\n\n  return new PathKeyframe(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.deltas,\n    path.easings\n  );\n};\n\n\n/**\n * Parses an object for a quadratic path.\n *\n * @param {Object} path\n * @return {PathQuadratic}\n */\nPaths['quadratic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathQuadratic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a tween path.\n *\n * @param {Object} path\n * @return {Tween}\n */\nPaths['tween'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new Tween(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.end, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a sub path.\n *\n * @param {Object} path\n * @return {PathSub}\n */\nPaths['sub'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathSub(\n    path.name,\n    parent,\n    coalesce( path.start, 0 ),\n    coalesce( path.end, 1 )\n  );\n};\n\n/**\n * Parses an object for a quadratic corner path.\n *\n * @param {Object} path\n * @return {PathQuadraticCorner}\n */\nPaths['quadratic-corner'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathQuadraticCorner(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.midpoint,\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a linear path.\n *\n * @param {Object} path\n * @return {PathLinear}\n */\nPaths['linear'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathLinear(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue )\n  );\n};\n\n\n/**\n * Parses an object for a uniform path.\n *\n * @param {Object} path\n * @return {PathUniform}\n */\nPaths['uniform'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathUniform(\n    path.name,\n    parent,\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a hermite path.\n *\n * @param {Object} path\n * @return {PathHermite}\n */\nPaths['hermite'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathHermite(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.startTangent, defaultValue ),\n    calc.parse( path.end, defaultValue ),\n    calc.parse( path.endTangent, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a bezier path.\n *\n * @param {Object} path\n * @return {PathBezier}\n */\nPaths['bezier'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathBezier(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.weights\n  );\n};\n\n/**\n * Parses an object for a parametric cubic curve path.\n *\n * @param {Object} path\n * @return {PathParametric}\n */\nPaths['parametric'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathParametric(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop,\n    path.matrix,\n    path.weight\n  );\n};\n\n/**\n * Parses an object for a parametric cubic curve path.\n *\n * @param {Object} path\n * @return {PathParametric}\n */\nPaths['catmull-rom'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathCatmullRom(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a basis spline path.\n *\n * @param {Object} path\n * @return {PathBasisSpline}\n */\nPaths['basis-spline'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathBasisSpline(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a parametric bezier path.\n *\n * @param {Object} path\n * @return {PathParametricBezier}\n */\nPaths['parametric-bezier'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathParametricBezier(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a parametric hermite path.\n *\n * @param {Object} path\n * @return {PathParametricHermite}\n */\nPaths['parametric-hermite'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathParametricHermite(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n\nvar Springs = {};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringDistance}\n */\nSprings['distance'] = function(spring)\n{\n  return new SpringDistance(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.distance,\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringLinear}\n */\nSprings['linear'] = function(spring)\n{\n  return new SpringLinear(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n\n/**\n * Returns an instance of {{#crossLink \"Animation\"}}{{/crossLink}} based on the\n * given input & options. If the input is a string the animation with that name\n * is returned. If the input is a string with an animation name and an option\n * string the animation with the given name modified by any additional options\n * is returned. Commas can be used to queue animation & option pairs one after\n * another. Ampersands can be used to play animations at the same time. If the\n * input is an object an anonymous animation is created. If no animation could\n * be determined then false is returned.\n *\n * **Examples:**\n *\n *     animation('wiggle');\n *     animation('wiggle ~1s 4s z40ms x5 !1.2');\n *     animation('wiggle', {...options...});\n *     animation('wiggle, tada ~50ms, fadeOut 2s');\n *     animation('wiggle & tada !3, fadeOut');\n *     animation({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method animation\n * @for Core\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n * @param {Boolean} [cache=false]\n * @return {Animation|False}\n * @throws {String} The animation string has an invalid animation name or the\n *    animation fails to create attrimators from the animation definition.\n */\nfunction $animation(animation, options, cache)\n{\n  var options = $options( options, cache );\n  var hasOptions = !isEmpty( options );\n\n  if ( animation instanceof Animation )\n  {\n    if ( hasOptions )\n    {\n      var attrimators = animation.newAttrimators();\n\n      animation.merge( options, attrimators );\n\n      return new Animation( false, animation.input, options, attrimators);\n    }\n\n    return animation;\n  }\n  if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    var attrimators = $attrimatorsFor( animation, options, cache );\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    return new Animation( false, {}, options, attrimators );\n  }\n  if ( isObject( animation ) )\n  {\n    var attrimators = $attrimatorsFor( animation, options, cache );\n\n    return new Animation( false, animation, options, attrimators );\n  }\n\n  return false;\n}\n\n\n\n/**\n * Generates an AttrimatorMap for the given animation and options. If the\n * animation given is an instance of {{#crossLink \"Animation\"}}{{/crossLink}}\n * then a copy of that animations attrimators is returned, and if options are\n * specified then they are merged into the generated attrimators. If the\n * animation given is an object it's properties are iterated and for each builder\n * with a matching name attrimators are generated. If the animation given is a\n * string of a cached or saved animation then it's handled as if an instance of\n * {{#crossLink \"Animation\"}}{{/crossLink}} was given. If the animation given\n * is a string which isn't saved or cached it goes through the following parsing\n * logic.\n *\n * - Split up the string into sections with `,` which queues animations.\n * - Split up each of the sections with `&` which enables animations to play\n *   simultaneously.\n * - For each of those sections, take the first word as the name of the\n *   animation and any remaining text as the options for that animation.\n *\n * If no attrimators could be parsed, an empty attrimator map is returned. If\n * the animation given is a string that specifies animations that don't exist\n * an error is thrown.\n *\n * **Examples:**\n *\n *     anim8.attrimatorsFor('wiggle');\n *     anim8.attrimatorsFor('wiggle ~1s 4s z40ms x5 !1.2');\n *     anim8.attrimatorsFor('wiggle', {...options...});\n *     anim8.attrimatorsFor('wiggle, tada ~50ms, fadeOut 2s');\n *     anim8.attrimatorsFor('wiggle & tada !3, fadeOut');\n *     anim8.attrimatorsFor({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method anim8.attrimatorsFor\n * @for Core\n * @param {Object|String} animation\n * @param {Object|String} [options]\n * @param {Boolean} [cache=false]\n * @return {AttrimatorMap}\n */\nfunction $attrimatorsFor( animation, options, cache )\n{\n  var parsedOptions = $options( options, cache );\n  var hasOptions = !isEmpty( parsedOptions );\n  var attrimators = new AttrimatorMap();\n\n  if ( animation instanceof Animation )\n  {\n    attrimators.putMap( animation.newAttrimators() );\n\n    if ( hasOptions )\n    {\n      animation.merge( parsedOptions, attrimators );\n    }\n  }\n  else if ( isObject( animation ) )\n  {\n    var helper = new BuilderHelper( animation, parsedOptions );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false )\n      {\n        builder.parse( animation, parsedOptions, attrimators, helper );\n      }\n    }\n  }\n  else if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n    var saved = Animations[ key ];\n    var cacheIt = coalesce( cache, Defaults.cache );\n\n    if ( saved )\n    {\n      attrimators.putMap( saved.newAttrimators() );\n\n      if ( hasOptions )\n      {\n        saved.merge( parsedOptions, attrimators );\n      }\n    }\n    else\n    {\n      var animationsQueued = animation.split( ',' );\n\n      for (var k = 0; k < animationsQueued.length; k++)\n      {\n        var animationsMerged = animationsQueued[ k ].split( '&' );\n        var base = new AttrimatorMap();\n\n        for (var j = 0; j < animationsMerged.length; j++)\n        {\n          var animationString = trim( animationsMerged[ j ].toLowerCase() );\n          var animationSplit = animationString.split( ' ' );\n          var parsedAnimation = Animations[ animationSplit[ 0 ] ];\n\n          if ( parsedAnimation )\n          {\n            var additionalOptions = $options( animationSplit.slice( 1 ), cache );\n            var hasAdditionalOptions = !isEmpty( additionalOptions );\n            var parsedAttrimators = parsedAnimation.newAttrimators();\n\n            if ( hasOptions && hasAdditionalOptions )\n            {\n              parsedAnimation.merge( extend( {}, parsedOptions, additionalOptions ), parsedAttrimators );\n            }\n            else if ( hasAdditionalOptions )\n            {\n              parsedAnimation.merge( additionalOptions, parsedAttrimators );\n            }\n            else if ( hasOptions )\n            {\n              parsedAnimation.merge( parsedOptions, parsedAttrimators );\n            }\n\n            base.putMap( parsedAttrimators );\n          }\n          else\n          {\n            throw animationString + ' is not a valid animation in \"' + animationsQueued[ k ] + '\"';\n          }\n        }\n\n        attrimators.queueMap( base );\n      }\n\n      if ( cacheIt && !hasOptions )\n      {\n        Animations[ key ] = new Animation( animation, {}, {}, attrimators );\n      }\n    }\n  }\n\n  return attrimators;\n}\n\n\n/**\n * A collection of {{#crossLink \"Builder\"}}builders{{/crossLink}} which takes\n * animation definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generates {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class anim8.builder\n */\n\n/**\n * Returns a builder based on the input. If the input is an instance of Builder\n * it's returned immediately. If the input is a string the builder with that name\n * is returned. If no builder could be determined then false is returned.\n *\n * **See:** {{#crossLink \"anim8.builder\"}}{{/crossLink}}\n *\n * @method anim8.builder\n * @for Core\n * @param {Builder|String} builderInput\n * @return {Builder|false}\n */\nfunction $builder(builderInput)\n{\n  if ( builderInput instanceof Builder )\n  {\n    return builderInput;\n  }\n  if ( isString( builderInput ) && builderInput in Builders )\n  {\n    return Builders[ builderInput ];\n  }\n\n  return false;\n}\n\n\n/**\n* Returns a calculator based on the input. If the input is an instance of\n* {{#crossLink \"Calculator\"}}{{/crossLink}} it is immediately returned. If the\n* input is a string the calculator with that name is returned. If no calculator\n* could be determined the default calculator is returned.\n*\n* @method anim8.calculator\n* @for Core\n* @param {Calculator|String} calculatorInput\n* @return {Calculator}\n*/\nfunction $calculator(calculatorInput)\n{\n if ( calculatorInput instanceof Calculator )\n {\n   return calculatorInput;\n }\n if ( isString( calculatorInput ) && calculatorInput in Calculators )\n {\n   return Calculators[ calculatorInput ];\n }\n\n return Calculators['default'];\n}\n\n\n\n/**\n * Parses delay from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/delay:property\"}}anim8.defaults.delay{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.delay\n * @param {String|Number} time\n */\nfunction $delay(time)\n{\n  return $time( time, Defaults.delay );\n}\n\n\n/**\n * Parses duration from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/duration:property\"}}anim8.defaults.duration{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.duration\n * @param {String|Number} time\n */\nfunction $duration(time)\n{\n  return $time( time, Defaults.duration );\n}\n\n\n/**\n * Returns an easing based on the given input. If the input is a function it's\n * assumed to be an easing function and is returned immediately. If the input is\n * a string the easing with that name is returned. If the input is a string in\n * the format 'easing-easingType' then an easing is returned that is a\n * combination of the easing with the given name and the easingType with the\n * given name. If the given input is an array with 4 elements it's assumed to be\n * a bezier path and one is created and returned. If no input is given the\n * default easing is returned. If an easing cannot be determined then an error\n * is thrown.\n *\n * **Examples:**\n *\n *     anim8.easing();               // anim8.defaults.easing\n *     anim8.easing( 'linear' );     // anim8.easing.linear\n *     anim8.easing( 'reverse' );    // anim8.easingType.reverse( anim8.defaults.easing )\n *     anim8.easing( 'ease-yoyo' );  // anim8.easingType.yoyo( anim8.easing.ease )\n *     anim8.easing( [0,0,1,1] );    // anim8.easing.bezier( 0, 0, 1, 1 )\n *     anim8.easing( 5, false );     // false\n *     anim8.easing( 'invalid', 1 ); // 1\n *     anim8.easing( [0,0,1], 1 );   // 1\n *\n * @method anim8.easing\n * @for Core\n * @param {Function|String|Array} easing\n * @param {E} [returnOnInvalid]\n * @return {Function|E}\n */\nfunction $easing(easing, returnOnInvalid)\n{\n  if ( isFunction( easing ) )\n  {\n    return easing;\n  }\n  if ( isString( easing ) )\n  {\n    if ( easing in Easings )\n    {\n      return Easings[ easing ];\n    }\n    if ( easing in EasingTypes )\n    {\n      return EasingTypes[ easing ]( $easing( Defaults.easing ) );\n    }\n\n    if ( easing.indexOf('-') !== -1 )\n    {\n      var pair = easing.split('-');\n      var e = pair[0];\n      var t = pair[1];\n\n      if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n      {\n        return EasingTypes[ t ]( Easings[ e ] );\n      }\n    }\n  }\n  if ( isArray( easing ) && easing.length === 4 && isNumber( easing[0] ) && isNumber( easing[1] ) && isNumber( easing[2] ) && isNumber( easing[3] ) )\n  {\n    return Easings.bezier.apply( null, easing );\n  }\n  if ( !isDefined( easing ) )\n  {\n    return $easing( Defaults.easing );\n  }\n\n  if ( isDefined( returnOnInvalid ) )\n  {\n    return returnOnInvalid;\n  }\n\n  throw easing + ' is not a valid easing';\n}\n\n\n/**\n * Returns an easing type based on the input. If the input is a function that\n * function is immediately returned. If the input is a string the easing type\n * with that name is returned. If no easing type could be determined an error is\n * thrown.\n *\n * @param {Function|String} easingType\n * @param [Boolean] optional\n * @return {Function|false}\n */\nfunction $easingType(easingType, optional)\n{\n  if ( isFunction( easingType ) )\n  {\n    return easingType;\n  }\n  if ( isString( easingType ) && easingType in EasingTypes )\n  {\n    return EasingTypes[ easingType ];\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw easingType + ' is not a valid easing type';\n}\n\n\n/**\n * Returns a factory given the input and returns the default if none is found.\n *\n * @method factory\n * @for Core\n * @param {String|Factory} [factory]\n * @return {Factory}\n */\nfunction $factory(factoryInput)\n{\n  if ( factoryInput instanceof Factory )\n  {\n    return factoryInput;\n  }\n  if ( isString( factoryInput ) && factoryInput in Factories )\n  {\n    return Factories[ factoryInput ];\n  }\n\n  return Factories['default'];\n}\n\n\n/**\n * Returns a factory for the given subject and optionally throws an error if no\n * factory exists.\n *\n * @method factoryFor\n * @for Core\n * @param {Any} subject\n * @param {Boolean} [optional]\n * @return {Factory}\n */\nfunction $factoryFor(subject, optional)\n{\n  var highestPriorityFactory = false;\n\n  for (var factoryName in Factories)\n  {\n    var factory = Factories[ factoryName ];\n\n    if ( factory.is( subject ) && (highestPriorityFactory === false || highestPriorityFactory.priority < factory.priority) )\n    {\n      highestPriorityFactory = factory;\n    }\n  }\n\n  if ( highestPriorityFactory )\n  {\n    return highestPriorityFactory;\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw 'No factory exists for subject ' + subject;\n}\n\n\n/**\n * Parses a number from the given input and if the input isn't a valid number\n * then returnOnInvalid is returned.\n *\n * **Examples:**\n *\n *     anim8.number( 5 );       // 5\n *     anim8.number( '5' );     // 5\n *     anim8.number( '5e4' );   // 50000\n *     anim8.number( 'x' );     // undefined\n *     anim8.number( 'x', 23 ); // 23\n *\n * @method anim8.number\n * @param {String|Number} value\n * @param {E} returnOnInvalid\n * @return {Number|E}\n */\nfunction $number(value, returnOnInvalid)\n{\n  var parsed = parseFloat( value );\n\n  return isNaN( parsed ) ? returnOnInvalid : parsed;\n}\n\n\n\n/**\n * Parses offset from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/offset:property\"}}anim8.defaults.offset{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.offset\n * @param {String|Number} time\n */\nfunction $offset(time)\n{\n  return $time( time, Defaults.offset );\n}\n\n\nvar Options = {};\n\n/**\n * Parses a value into an options object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [duration] x[repeat] z[sleep] ~[delay] @[offset] ![scale] [[easing][-easingType]]\n *\n * This is also a registry of options, you can add your own options that\n * can be used later with syntax like:\n *\n *     anim8.options['myOptions'] = anim8.options('1.5s x2 !2');\n *\n * So you can use 'myOptions' as the options input.\n *\n * You can also specify relative values & scaling values. If you have the\n * following options:\n *\n *     +2s x*2 ~-1s\n *\n * It will result in adding 2 seconds to the duration, repeating it twice as\n * much, and subtracting one second from the delay.\n *\n * For more information on acceptable values in options:\n *\n * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.delay:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}, and\n *          {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n *\n * @method anim8.options\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $options(options, cache)\n{\n  var originalInput = options;\n  var cacheIt = coalesce( cache, Defaults.cacheOptions );\n\n  if ( isString( options ) )\n  {\n    if ( options in Options )\n    {\n      return Options[ options ];\n    }\n\n    options = options.toLowerCase().split(' ');\n  }\n\n  if ( isArray( options ) )\n  {\n    var parsed = {};\n\n    for (var i = 0; i < options.length; i++)\n    {\n      var part = options[i];\n      var first = part.charAt( 0 );\n\n      // Repeats\n      if ( first === 'x' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n      }\n      // Sleeping\n      else if ( first === 'z' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'sleep', 'sleepAdd', 'sleepScale' );\n      }\n      // Delay\n      else if ( first === '~' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'delay', 'delayAdd', 'delayScale' );\n      }\n      // Scaling\n      else if ( first === '!' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $number, 'scale', 'scaleAdd', 'scaleScale' );\n      }\n      // Offset\n      else if ( first === '@' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'offset', 'offsetAdd', 'offsetScale' );\n      }\n      else\n      {\n        // Easing?\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          parsed.easing = easing;\n        }\n\n        // Duration?\n        var duration = parseOptionProperty( part, parsed, $time, 'duration', 'durationAdd', 'durationScale' );\n\n        if ( duration === false )\n        {\n          // If not a duration, might be an alternative repeat? (doesn't start with x)\n          parseOptionProperty( part, parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n        }\n      }\n    }\n\n    if ( isString( originalInput ) && cacheIt )\n    {\n      Options[ originalInput ] = parsed;\n    }\n\n    return parsed;\n  }\n\n  if ( isObject( options ) )\n  {\n    return options;\n  }\n\n  return Defaults.noOptions;\n}\n\nfunction parseOptionProperty(input, out, parseFunction, property, propertyAdd, propertyScale)\n{\n  var first = input.charAt( 0 );\n\n  if ( first === '*' )\n  {\n    parsed = $number( input.substring( 1 ), false );\n\n    if ( parsed !== false )\n    {\n      out[ propertyScale ] = parsed;\n    }\n  }\n  else\n  {\n    if ( first === '+' || first === '-' )\n    {\n      property = propertyAdd;\n      input = input.substring( 1 );\n    }\n\n    var parsed = parseFunction( input, false );\n\n    if ( parsed !== false )\n    {\n      out[ property ] = parsed;\n    }\n  }\n\n  return parsed;\n}\n\n\n/**\n * Parses a path given the input and returns an instance of anim8.Path or throws\n * an error if the path could not be parsed. If the input is an object and has\n * a type property with a value that maps to a path type the path's parsing\n * function is invoked with the object.\n *\n * @method anim8.path\n * @for Core\n * @param  {anim8.Path|String|Object} pathInput\n * @return {anim8.Path}\n * @throws {String} If the input is not a valid path.\n */\nfunction $path(pathInput)\n{\n  if ( pathInput instanceof Path )\n  {\n    return pathInput;\n  }\n  if ( isString( pathInput ) && pathInput in Paths )\n  {\n    return Paths[ pathInput ];\n  }\n  if ( isObject( pathInput ) && pathInput.type in Paths )\n  {\n    return Paths[ pathInput.type ]( pathInput );\n  }\n\n  throw pathInput + ' is not a valid path';\n}\n\n\n\n/**\n * Parses repeats from a string or number. If a valid repeat is not given then\n * `returnOnInvalid` is returned, if that is not given then\n * {{#crossLink \"anim8.defaults/repeat:property\"}}anim8.defaults.repeat{{/crossLink}}\n * is returned.\n *\n * **Examples:**\n *\n *     anim8.repeat( 5 );            // 5\n *     anim8.repeat( 'inf' );        // Infinity\n *     anim8.repeat( 'infinity' );   // Infinity\n *     anim8.repeat( 'infinite' );   // Infinity\n *     anim8.repeat( 'once' );       // 1\n *     anim8.repeat( 'twice' );      // 2\n *     anim8.repeat( 'thrice' );     // 3\n *     anim8.repeat( 'dozen' );      // 12\n *     anim8.repeat( 'random' );     // 4\n *     anim8.repeat( 'invalid', 6 ); // 6\n *     anim8.repeat( false, 7 );     // 7\n *     anim8.repeat();               // anim8.defaults.repeat\n *\n * @method anim8.repeat\n * @param {String|Number} time\n * @param {E} [returnOnInvalid]\n * @return {Number|E}\n */\nvar $repeat = (function()\n{\n  var conversions = {\n    inf:        Number.POSITIVE_INFINITY,\n    infinity:   Number.POSITIVE_INFINITY,\n    infinite:   Number.POSITIVE_INFINITY,\n    once:       1,\n    twice:      2,\n    thrice:     3,\n    dozen:      12,\n    random:     4 // chosen by fair dice roll. guaranteed to be random.\n  };\n\n  return function(repeat, returnOnInvalid)\n  {\n    if ( isNumber( repeat ) )\n    {\n      return repeat;\n    }\n    if ( isString( repeat ) )\n    {\n      repeat = repeat.toLowerCase();\n\n      if ( repeat in conversions )\n      {\n        return conversions[ repeat ];\n      }\n      else\n      {\n        var parsed = parseInt( repeat );\n\n        if ( !isNaN(parsed) )\n        {\n          return parsed;\n        }\n      }\n    }\n\n    return coalesce( returnOnInvalid, Defaults.repeat );\n  };\n\n})();\n\n\n/**\n * Parses scale from a string or number.\n *\n * **See:** {{#crossLink \"Core/anim8.number:method\"}}anim8.number{{/crossLink}}\n *\n * @method anim8.scale\n * @param {String|Number} scale\n * @return {Number}\n */\nfunction $scale(scale)\n{\n  return $number( scale, Defaults.scale );\n}\n\n\n\n/**\n * Parses sleep from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/sleep:property\"}}anim8.defaults.sleep{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.sleep\n * @param {String|Number} time\n */\nfunction $sleep(time)\n{\n  return $time( time, Defaults.sleep );\n}\n\n/**\n * Returns a spring if the provided argument is a spring, the name of a spring,\n * or an object with a spring type to be created. If none of these conditions\n * are true then an error is thrown.\n *\n * @method anim8.spring\n * @for Core\n * @param {Spring|String|Object} springInput\n * @return {Spring}\n */\nfunction $spring(springInput)\n{\n  if ( springInput instanceof Spring )\n  {\n    return springInput;\n  }\n  if ( isString( springInput ) && springInput in Springs )\n  {\n    return Springs[ springInput ];\n  }\n  if ( isObject( springInput ) && springInput.type in Springs )\n  {\n    return Springs[ springInput.type ]( springInput );\n  }\n\n  throw springInput + ' is not a valid spring';\n}\n\n\n/**\n * Parses milliseconds from a string or number. If a number is given it's\n * assumed to be milliseconds and is returned immediately. If a string is given\n * a unit is looked for to determine how to scale the number into milliseconds.\n * If the given time is invalid and returnOnInvalid is not given then zero is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.time( 45 );       // 45\n *     anim8.time( 45.9 );     // 45\n *     anim8.time( -4.1 );     // -5\n *     anim8.time( '5ms' );    // 5\n *     anim8.time( '23' );     // 23\n *     anim8.time( '5c' );     // 500\n *     anim8.time( '5cs' );    // 500\n *     anim8.time( '5jiffy' ); // 833\n *     anim8.time( '5third' ); // 833\n *     anim8.time( '10s' );    // 10000\n *     anim8.time( '10sec' );  // 10000\n *     anim8.time( '1.5m' );   // 90000\n *     anim8.time( '1.5min' ); // 90000\n *     anim8.time( '0.4h' );   // 144000\n *     anim8.time( '0.4hr' );  // 144000\n *\n * @method anim8.time\n * @param {String|Number} time\n * @param {Any} [returnOnInvalid]\n */\nvar $time = (function()\n{\n  var regex = /^(-?\\d*(\\.\\d+)|-?\\d+)(ms|s|c|cs|third|jiffy|sec|m|min|h|hr)?$/;\n\n  var conversions = {\n    ms:     1,\n    c:      100,\n    cs:     100,\n    jiffy:  1000 / 60,\n    third:  1000 / 60,\n    s:      1000,\n    sec:    1000,\n    m:      1000 * 60,\n    min:    1000 * 60,\n    h:      1000 * 60 * 60,\n    hr:     1000 * 60 * 60\n  };\n\n  return function(time, returnOnInvalid)\n  {\n    if ( isNumber( time ) )\n    {\n      // raw numbers are considered milliseconds\n      return Math.floor( time );\n    }\n    if ( isString( time ) )\n    {\n      var parsed = regex.exec( time );\n\n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n\n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n\n        return Math.floor( time );\n      }\n    }\n\n    return coalesce( returnOnInvalid, 0 );\n  };\n\n})();\n\n\nvar Transitions = {};\n\n/**\n * Parses a value into a transition object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [time] [easing[-easingType]] >[outro] <[intro] /[granularity] ^[lookup]\n *\n * This is also a registry of transitions, you can add your own transitions that\n * can be used later with syntax like:\n *\n *     anim8.transition['myTransition'] = anim8.transition('50ms 0.05 linear');\n *\n * So you can use 'myTransition' as the transition input.\n *\n *     animator.transition('myTransition', 'myAnimation');\n *\n * @method anim8.transition\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $transition(transition, cache)\n{\n  // 1. If it's a string, convert it into an array.\n  // 2. If it's an array, parse it and convert it into an object.\n  // 3. If it's an object, fill in any missing values with the defaults.\n\n  var originalInput = transition;\n\n  if ( isString( transition ) )\n  {\n    if ( transition in Transitions )\n    {\n      return Transitions[ transition ];\n    }\n\n    transition = transition.toLowerCase().split(' ');\n  }\n\n  if ( isArray( transition ) )\n  {\n    var transitionArray = transition;\n\n    transition = {};\n\n    for (var i = 0; i < transitionArray.length; i++)\n    {\n      var part = transitionArray[i];\n      var first = part.charAt( 0 );\n\n      // Introduction Time (into next event)\n      if ( first === '<' )\n      {\n        var intro = $time( part.substring(1), false );\n\n        if ( !isNaN( intro ) )\n        {\n          transition.intro = intro;\n        }\n      }\n      // Outroduction Time (out of current event)\n      else if ( first === '>' )\n      {\n        var outro = $time( part.substring(1), false );\n\n        if ( !isNaN( outro ) )\n        {\n          transition.outro = outro;\n        }\n      }\n      // Granularity (for velocity conscious transitions)\n      else if ( first === '/' )\n      {\n        var granularity = $number( part.substring(1), false );\n\n        if ( granularity !== false )\n        {\n          transition.granularity = granularity;\n        }\n      }\n      // Lookup (for velocity conscious transitions)\n      else if ( first === '^' )\n      {\n        var lookup = $time( part.substring(1), false );\n\n        if ( lookup !== false )\n        {\n          transition.lookup = lookup;\n        }\n      }\n      else\n      {\n        // Easing\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          transition.easing = easing;\n        }\n\n        // Time\n        var time = $time( part, false );\n\n        if ( time !== false )\n        {\n          transition.time = time;\n        }\n      }\n    }\n  }\n\n  if ( isObject( transition ) )\n  {\n    transition.time        = $time( transition.time, Defaults.transitionTime );\n    transition.outro       = $time( transition.outro, Defaults.transitionOutro );\n    transition.intro       = $time( transition.intro, Defaults.transitionIntro );\n    transition.easing      = $easing( coalesce( transition.easing, Defaults.transitionEasing ) );\n    transition.granularity = $number( transition.granularity, Defaults.transitionGranularity );\n    transition.lookup      = $time( transition.lookup, Defaults.transitionLookup );\n\n    if ( isString( originalInput ) && coalesce( cache, Defaults.cacheTransitions ) )\n    {\n      Transitions[ originalInput ] = transition;\n    }\n\n    return transition;\n  }\n\n  return Defaults.noTransition;\n}\n\n\n  // Add events to the animation cycle: begin, end, finished, starting\n  eventize( anim8 );\n\n  // anim8.js\n  anim8.anim8s = anim8s;\n  anim8.fn = Animator.prototype;\n  anim8s.fn = Animators.prototype;\n  anim8.isRunning = isRunning;\n  anim8.isLive = isLive;\n  anim8.setLive = setLive;\n  anim8.animating = animating;\n  anim8.requestRun = requestRun;\n  anim8.activateAnimator = activateAnimator;\n  anim8.pushAnimator = pushAnimator;\n  anim8.activate = activate;\n  anim8.run = run;\n  anim8.pause = pause;\n  anim8.resume = resume;\n  anim8.stop = stop;\n  anim8.end = end;\n  anim8.finish = finish;\n  anim8.nopeat = nopeat;\n\n  // Core\n  anim8.noop = noop;\n  anim8.isDefined = isDefined;\n  anim8.isFunction = isFunction;\n  anim8.isNumber = isNumber;\n  anim8.isBoolean = isBoolean;\n  anim8.isString = isString;\n  anim8.isArray = isArray;\n  anim8.isObject = isObject;\n  anim8.isEmpty = isEmpty;\n  anim8.now = now;\n  anim8.trim = trim;\n  anim8.toArray = toArray;\n  anim8.copy = copy;\n  anim8.extend = extend;\n  anim8.coalesce = coalesce;\n  anim8.constant = constant;\n  anim8.resolve = resolve;\n  anim8.id = id;\n  anim8.Class = Class;\n  anim8.Defaults = Defaults;\n\n  // Math\n  anim8.clamp = clamp;\n  anim8.gcd = gcd;\n  anim8.choose = choose;\n\n  // Registries\n  anim8.Animations = Animations;\n  anim8.Calculators = Calculators;\n  anim8.Factories = Factories;\n  anim8.Builders = Builder;\n  anim8.Paths = Paths;\n  anim8.Springs = Springs;\n  anim8.Easings = Easings;\n  anim8.EasingTypes = EasingTypes;\n  anim8.Options = Options;\n  anim8.Transitions = Transitions;\n\n  // Parsing\n  anim8.animation = $animation;\n  anim8.attrimatorsFor = $attrimatorsFor;\n  anim8.calculator = $calculator;\n  anim8.delay = $delay;\n  anim8.duration = $duration;\n  anim8.easing = $easing;\n  anim8.easingType = $easingType;\n  anim8.factory = $factory;\n  anim8.factoryFor = $factoryFor;\n  anim8.number = $number;\n  anim8.offset = $offset;\n  anim8.options = $options;\n  anim8.builder = $builder;\n  anim8.path = $path;\n  anim8.repeat = $repeat;\n  anim8.scale = $scale;\n  anim8.sleep = $sleep;\n  anim8.spring = $spring;\n  anim8.time = $time;\n  anim8.transition = $transition;\n\n  // Modules\n  // - color.js\n  anim8.Color = Color;\n  // - computed.js\n  anim8.computed = computed;\n  anim8.isComputed = isComputed;\n  // - dynamic.js\n  anim8.composite = composite;\n  anim8.partial = partial;\n  anim8.spread = spread;\n  // - eventize.js\n  anim8.eventize = eventize;\n  // - save.js\n  anim8.save = save;\n\n  // Classes\n  anim8.Aninmation = Animation;\n  anim8.Animator = Animator;\n  anim8.Animators = Animators;\n  anim8.Attrimator = Attrimator;\n  anim8.AttrimatorMap = AttrimatorMap;\n  anim8.Calculator = Calculator;\n  anim8.Defer = Defer;\n  anim8.DeferAnimator = DeferAnimator;\n  anim8.Event = Event;\n  anim8.EventState = EventState;\n  anim8.Factory = Factory;\n  anim8.FastMap = FastMap;\n  anim8.Movie = Movie;\n  anim8.Oncer = Oncer;\n  anim8.Builder = Builder;\n  anim8.Path = Path;\n  anim8.Physics = Physics;\n  anim8.Sequence = Sequence;\n  anim8.Spring = Spring;\n\n  // Calculators\n  anim8.Calculator2d = Calculator2d;\n  anim8.Calculator3d = Calculator3d;\n  anim8.CalculatorNumber = CalculatorNumber;\n  anim8.CalculatorQuaternion = CalculatorQuaternion;\n  anim8.CalculatorRGB = CalculatorRGB;\n  anim8.CalculatorRGBA = CalculatorRGBA;\n  anim8.CalculatorString = CalculatorString;\n\n  // Factories\n  anim8.object = object;\n  anim8.FactoryObject = FactoryObject;\n\n  // Builders\n  anim8.BuilderAnd = BuilderAnd;\n  anim8.BuilderDeltas = BuilderDeltas;\n  anim8.BuilderFinal = BuilderFinal;\n  anim8.BuilderInitial = BuilderInitial;\n  anim8.BuilderKeyframe = BuilderKeyframe;\n  anim8.BuilderMove = BuilderMove;\n  anim8.BuilderPath = BuilderPath;\n  anim8.BuilderPhysics = BuilderPhysics;\n  anim8.BuilderQueue = BuilderQueue;\n  anim8.BuilderSpring = BuilderSpring;\n  anim8.BuilderTravel = BuilderTravel;\n  anim8.BuilderTweenFrom = BuilderTweenFrom;\n  anim8.BuilderTweenTo = BuilderTweenTo;\n\n  // Paths\n  anim8.PathCombo = PathCombo;\n  anim8.PathCompiled = PathCompiled;\n  anim8.PathCubic = PathCubic;\n  anim8.PathDelta = PathDelta;\n  anim8.PathJump = PathJump;\n  anim8.PathKeyframe = PathKeyframe;\n  anim8.PathQuadratic = PathQuadratic;\n  anim8.PathTween = Tween;\n  anim8.PathHermite = PathHermite;\n  anim8.PathLinear = PathLinear;\n  anim8.PathQuadraticCorner = PathQuadraticCorner;\n  anim8.PathSub = PathSub;\n  anim8.PathUniform = PathUniform;\n\n  // Springs\n  anim8.SpringDistance = SpringDistance;\n  anim8.SpringLinear = SpringLinear;\n\n  return anim8;\n\n}));\n"],"sourceRoot":"/source/"}