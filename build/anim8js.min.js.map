{"version":3,"sources":["anim8js.min.js"],"names":["root","factory","define","amd","module","exports","global","m8","anim8","m8s","anim8s","this","noop","isDefined","x","isFunction","constructor","call","apply","isNumber","isBoolean","isString","isArray","Array","isObject","isEmpty","length","prop","toArray","split","props","push","copy","copied","i","p","extend","out","arguments","o","coalesce","a","b","c","d","constant","variable","resolve","Animation","name","input","options","attrimators","Animator","e","reset","Animators","$","fill","Attrimator","AttrimatorMap","Builder","BuilderHelper","oldOptions","newOptions","prepareSpecifics","Calculator","Defer","methods","$factory","$push","DeferAnimator","animator","previous","eventType","event","$reset","Event","attribute","path","duration","easing","delay","sleep","offset","repeat","scale","scaleBase","hasInitialState","builder","next","mergeId","$easing","$duration","$sleep","$repeat","$scale","calculator","parse","ZERO","$delay","$offset","Factory","priority","FastMap","map","putMap","put","Oncer","value","applied","Path","Physics","position","velocity","acceleration","terminal","stopTime","$number","Number","POSITIVE_INFINITY","$time","finished","Sequence","animators","Spring","subject","$factoryFor","animatorFor","subjects","animatorsFor","isRunning","running","isLive","live","setLive","newLive","activateAnimator","pushAnimator","activate","active","animating","trigger","requestRun","run","currentTime","now","preupdate","update","filter","handleFinished","pause","attributes","resume","stop","end","finish","nopeat","Color","r","g","computed","funcOrName","func","isComputed","delegate","functionName","returning","DelegateTypes","THIS","array","RESULTS","results","FIRST","undefined","TRUE","composite","frame","partial","subattribute","spread","eventize","target","Class","defineProperty","on","once","off","addListener","$this","property","events","callback","context","removeListeners","listeners","eventListeners","k","splice","deleteProperty","obj","triggerListeners","argument","clear","max","slice","$on","$once","gcd","temp","choose","n","m","num","den","clamp","v","min","save","animation","$animation","SaveOptions","cache","qualifiedName","prefix","key","toLowerCase","Animations","saveGroup","prefixOrOptions","animations","previousOptions","parsedOptions","$options","Defaults","noOptions","animationName","translate","mappings","saveAs","parsed","newAttrimators","fromAttribute","toAttribute","get","rekey","translated","Calculator2d","createConstants","Calculator3d","CalculatorNumber","CalculatorQuaternion","CalculatorRGB","CalculatorRGBA","CalculatorString","FactoryObject","BuilderAnd","BuilderDeltas","BuilderFinal","BuilderInitial","BuilderKeyframe","BuilderMove","BuilderPath","BuilderPhysics","BuilderQueue","BuilderSpring","BuilderTravel","BuilderTweenFrom","BuilderTweenTo","PathDelta","points","deltas","set","PathParametric","loop","matrix","weight","invert","PathBasisSpline","PathBezier","weights","PathCatmullRom","PathCombo","paths","uniform","granularity","PathCompiled","pointCount","PathCubic","p0","p1","p2","p3","PathHermite","start","startTangent","endTangent","PathJump","PathKeyframe","easings","PathLinear","PathQuadratic","PathQuadraticCorner","midpoint","PathSub","PathUniform","Tween","SpringDistance","rest","distance","damping","stiffness","gravity","finishOnRest","SpringLinear","temp0","temp1","Movie","currentTimelines","introduce","timelines","autoEnd","MoviePlayer","movie","speed","time","playing","runner","MovieTimeline","hasOptions","merge","$attrimatorsFor","helper","builderName","$builder","saved","cacheIt","animationsQueued","animationsMerged","base","j","animationString","trim","animationSplit","parsedAnimation","additionalOptions","hasAdditionalOptions","parsedAttrimators","queueMap","builderInput","Builders","$calculator","calculatorInput","Calculators","returnOnInvalid","Easings","EasingTypes","indexOf","pair","t","bezier","$easingType","easingType","optional","factoryInput","Factories","highestPriorityFactory","factoryName","is","parseFloat","isNaN","originalInput","cacheOptions","Options","part","first","charAt","parseOptionProperty","substring","parseFunction","propertyAdd","propertyScale","$path","pathInput","Paths","type","$spring","springInput","Springs","$transition","transition","Transitions","transitionArray","intro","outro","lookup","transitionTime","transitionOutro","transitionIntro","transitionEasing","transitionGranularity","transitionLookup","cacheTransitions","noTransition","superPrefix","construct","parentConstructor","properties","F","prototype","Object","enumerable","configurable","writable","teasing","frameRate","pauseTime","comboPathUniformGranularity","Date","getTime","String","replace","id","_id","clone","attrimatorMap","attrimatorsAdded","updated","cycleCurrent","cycleNext","cycleEnded","newCycle","applyCycle","cycle","applyCurrentCycle","values","attrimator","attr","startCycle","endCurrentCycle","getAttribute","restore","applyInitialState","aa","setDefault","cloneDefault","wasFinished","minCycle","setTime","isFinished","Math","placeAttrimator","existing","trimAttrimators","removeAt","deactivate","destroy","spring","play","all","playAttrimators","finishNotPresent","unplay","unplayAttrimators","startings","transitionAttrimators","queue","queueAttrimators","current","hasOverlap","curr","calc","valueAt","create","getElapsed","pastLookahead","pastVelocity","sub","pastNegativeVelocity","past","add","outTime","outPoint","outNext","inTime","inPoint","inNext","outVelocity","outPerMillis","inVelocity","inPerMillis","compiled","lastPoint","totalDistance","distances","requiredTime","timeDelta","transitionEvent","stopIn","tweenTo","fromOptions","tweenManyTo","targets","tweenFrom","starting","tweenManyFrom","tween","starts","ends","tweenMany","move","amount","relative","moveMany","amounts","ref","request","defaultValue","follow","attrimatorsFor","keys","resulting","remove","unset","timeRemaining","hasAttrimators","size","getSubject","wrapper","invoke","args","defer","onCycleStart","onCycleEnd","at","index","each","iterator","filterer","alive","getSubjects","reverse","last","mid","floor","e0","e1","sequence","maxRemaining","startTime","elapsed","paused","prestart","prestartNext","overrideNext","totalTime","milliseconds","stopAt","valueAtSearch","attrimatorAt","hasComputed","isInfinite","isFinite","totalPausedTime","isPaused","getBuilder","nextAt","parseValue","setGroup","groupId","force","deep","onNewAttribute","hasCallback","mapOffset","timeOffset","unqueueAt","playMapAt","stopNotPresentAt","transitionMapAt","has","indices","returnInfinity","Infinity","nextCycle","currentDepth","nextDepth","iterate","depth","nextMergeId","mergeAttrimator","mergeEasing","mergeRepeat","mergeDelay","mergeSleep","mergeDuration","mergeOffset","mergeScale","mergeScaleBase","submerge","specifics","parseEasing","parseFirst","parseRepeat","parseNumber","parseDelay","parseSleep","parseDuration","parseOffset","parseScale","parseScaleBase","option","parseEvent","parseOptionFunction","optionAdd","optionScale","baseRaw","mergeFirst","mergeNumber","specific","ONE","INFINITY","parseArray","output","parsedDefault","zero","adds","mul","interpolate","delta","random","sqrt","distanceSq","lengthSq","isValid","isZero","isEqual","dot","distSq","setLength","isRelative","getRelativeAmount","z","eventable","$eventable","$previous","$eventType","$event","$callback","$calls","$next","$isRoot","$register","$run","methodName","undefer","i2","x2","eq1","eq2","x3","sin","wave","abs","cos","inv","log10","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","EventState","DELAYED","ANIMATING","SLEEPING","FINISHED","computeValue","baseValue","compute","applyValue","newRepeat","ceil","state","replaceComputed","oldState","newState","iteration","fromKey","toKey","lastValue","pop","lastKey","getValue","deterministic","isDeterministic","examinePoints","examiner","returnOnTrue","returnOnFalse","ps","resolvePoint","isLinear","prev","deltadelta","resolveVelocity","resolveAcceleration","initalPosition","dt","MAX_DT","vel","acc","pos","usePosition","maxDelay","createAttrimators","template","delayOffset","remaining","resolveRest","updateVelocity","EPSILON","vendors","requestor","requestAnimationFrame","lastTime","timeToCall","setTimeout","parsers","color","parseComponent","parseInt","vparsed","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","named","regex","matches","exec","cp","format","ca","cr","cg","cb","toString","relativeAmount","mask","relativeFunction","randomSelection","randomFunction","selected","resolvedMin","resolvedMax","y","cx","cy","rx","ry","ix","iy","aliases","left","right","middle","center","top","bottom","_x","_y","amountScale","dx","dy","epsilon","cz","rz","iz","dz","ab","angle","ra","ia","da","rr","rg","rb","ir","ig","ib","dr","dg","db","$animator","object","calculatorName","and","deltaObject","valueMax","initial","oncer","from","half","to","kframes","keyframe","sort","times","maxTime","order","pathEasings","pathDefinition","parsedPath","physics","physic","springs","parser","travel","pointing","subtractVelocity","targetValue","difference","traveling","fromParsed","toParsed","traveler","ds","d0","d1","pd","d2","d3","loops","_set","MATRIX","WEIGHT","computeWeights","inverses","w","pathCount","linear","lengthGranularity","lengthTotal","lengths","lengthCurrent","cachedLength","_length","previousDelta","deltaDistance","deltaGap","pathDelta","compile","i1","i3","ea","getTimes","invlength","negmidpoint","halfmidpoint","_start","nextTimeline","setAutoEnd","getTimelines","with","additional","getTimeline","timelineId","$timelineId","timeline","seek","by","addAttrimators","backward","forward","goto","applyNow","avoidApplyTrigger","applyTime","evaluatePlaying","player","currentValue","parent","parseArry","defaultEasing","conversions","inf","infinity","infinite","twice","thrice","dozen","ms","cs","jiffy","third","s","sec","h","hr","unit","fn","factoryFor","number","Aninmation","PathTween"],"mappings":"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","file":"anim8js.min.js","sourcesContent":["/* anim8js 1.0.5 - anim8js - Anim8 Everything by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define('anim8', [], function() { // jshint ignore:line\n      return factory(root);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global);  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.m8 = root.anim8 = factory(root);\n    root.m8s = root.anim8s = root.anim8.anim8s;\n  }\n}(this, function(global)\n{\n\n\nvar Class =\n{\n  superPrefix: '_',\n\n  extend: function(construct, parentConstructor, properties)\n  {\n    function F() {}\n\n    F.prototype = parentConstructor.prototype;\n\n    construct.prototype = new F();\n\n    if ( isObject( properties ) )\n    {\n      this.define( construct, properties );\n    }\n  },\n\n  define: function(construct, properties)\n  {\n    var target = construct.prototype;\n\n    for (var prop in properties)\n    {\n      if ( prop in target )\n      {\n        this.defineProperty( target, this.superPrefix + prop, target[ prop ] );\n      }\n\n      this.defineProperty( target, prop, properties[ prop ] );\n    }\n  },\n\n  defineProperty: function(target, property, value)\n  {\n    if ( Object.defineProperty )\n    {\n      Object.defineProperty( target, property, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    }\n    else\n    {\n      target[ property ] = value;\n    }\n  }\n};\n\n\n\n/**\n * The default values for anim8js properties.\n *\n * @property {Object} anim8.Defaults\n */\nvar Defaults =\n{\n\n  /**\n   * The default animation duration in milliseconds.\n   *\n   * @property {Number} duration\n   * @for anim8.Defaults\n   * @default 1000\n   */\n  duration: 1000,\n\n  /**\n   * The default easing.\n   *\n   * @property {String|Function|Array} easing\n   * @for anim8.Defaults\n   * @default 'ease'\n   */\n  easing: 'ease',\n\n  /**\n   * The default \"total easing\" which is the overall easing\n   * for an animation which actually has easing values per frame.\n   *\n   * @property {String|Function|Array} teasing\n   * @for anim8.Defaults\n   * @default 'linear'\n   */\n  teasing: 'linear',\n\n  /**\n   * The default animation delay in milliseconds.\n   *\n   * @property {Number} delay\n   * @for anim8.Defaults\n   * @default 0\n   */\n  delay: 0,\n\n  /**\n   * The default animation sleep in milliseconds.\n   *\n   * @property {Number} sleep\n   * @for anim8.Defaults\n   * @default 0\n   */\n  sleep: 0,\n\n  /**\n   * The default number of repeats for an animation.\n   *\n   * @property {Number} repeat\n   * @for anim8.Defaults\n   * @default 1\n   */\n  repeat: 1,\n\n  /**\n   * The default scale for an animation.\n   *\n   * @property scale\n   * @for anim8.Defaults\n   * @default 1.0\n   * @type {Number}\n   */\n  scale: 1.0,\n\n  /**\n   * The default animation offset in milliseconds.\n   *\n   * @property {Number} offset\n   * @for anim8.Defaults\n   * @default 0\n   */\n  offset: 0,\n\n  /**\n   * The default transition time in milliseconds.\n   *\n   * @property {Number} transitionTime\n   * @for anim8.Defaults\n   * @default 500\n   */\n  transitionTime: 500,\n\n  /**\n   * The default transition outroduction time in milliseconds.\n   *\n   * @property {Number} transitionOutro\n   * @for anim8.Defaults\n   * @default 100\n   */\n  transitionOutro: 100,\n\n  /**\n   * The default transition introduction time in milliseconds.\n   *\n   * @property {Number} transitionIntro\n   * @for anim8.Defaults\n   * @default 100\n   */\n  transitionIntro: 100,\n\n  /**\n   * The default transition easing when none is specified.\n   *\n   * @property {String|Function|Array} transitionEasing\n   * @for anim8.Defaults\n   * @default 'linear'\n   */\n  transitionEasing: 'linear',\n\n  /**\n   * The default transition granularity. This is used for smooth transitions to\n   * provide a smooth transition from the outro velocity to the intro velocity,\n   * the cubic or quadratic path between the two is a curve with unknown length\n   * so the length needs to be calculated using a maximum number of points to\n   * calculate along the path - summing the distances between the consecutive points.\n   *\n   * @property {Number} transitionGranularity\n   * @for anim8.Defaults\n   * @default 0\n   */\n  transitionGranularity: 0,\n\n  /**\n   * TODO\n   *\n   * @property {Number} transitionLookup\n   * @for anim8.Defaults\n   * @default 10\n   */\n  transitionLookup: 10,\n\n  /**\n   * Whether animtions are cached whenever possible. Animations that can be\n   * cached are strings with options specified in the string and without an\n   * option object given. For example 'tada ~1s 3s x3' is cacheable.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cache\n   * @for anim8.Defaults\n   * @default false\n   */\n  cache: false,\n\n  /**\n   * Whether parsed options are cached whenever possible. Options that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheOptions\n   * @for anim8.Defaults\n   * @default false\n   */\n  cacheOptions: false,\n\n  /**\n   * Whether parsed transitions are cached whenever possible. Transitions that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheTransitions\n   * @for anim8.Defaults\n   * @default false\n   */\n  cacheTransitions: false,\n\n  /**\n   * The value to return when options could not be parsed from input.\n   *\n   * @property {Object} noOptions\n   * @for anim8.Defaults\n   * @default {}\n   */\n  noOptions: {},\n\n  /**\n   * The value to return when a transition could not be parsed from input.\n   *\n   * @property {Object} noTransition\n   * @for anim8.Defaults\n   * @default {}\n   */\n  noTransition: {},\n\n  /**\n   * The target number of milliseconds between frames. This only applies if the\n   * browser doesn't support any of the requestAnimationFrame variations.\n   *\n   * @property {Number} frameRate\n   * @for anim8.Defaults\n   * @default 33\n   */\n  frameRate: 16,\n\n  /**\n   * The number of milliseconds to pause between looping to let the UI react\n   * to user events.\n   *\n   * @property {Number} pauseTime\n   * @for anim8.Defaults\n   * @default 5\n   */\n  pauseTime: 5,\n\n  /**\n   * The granularity for uniform combo paths used to calculate path lengths.\n   *\n   * @property {Number} comboPathUniformGranularity\n   * @for anim8.Defaults\n   * @default 100\n   */\n\n  comboPathUniformGranularity: 100\n\n};\n\n\nvar DelegateTypes =\n{\n\n  /**\n   * this is returned at the end.\n   *\n   * @property THIS\n   * @for DelegateTypes\n   */\n  THIS: 'this',\n\n  /**\n   * An array of results for each method call is returned.\n   *\n   * @property RESULTS\n   * @for DelegateTypes\n   */\n  RESULTS: 'results',\n\n  /**\n   * The result of the first element.\n   *\n   * @property RETURN_FIRST\n   * @for delegate\n   */\n  FIRST: 'first',\n\n  /**\n   * True if any of the methods return true, otherwise false.\n   *\n   * @property RETURN_TRUE\n   * @for delegate\n   */\n  TRUE: 'true'\n\n};\n\n\n\n/**\n * @class Core\n */\n\n/**\n * A function that does nothing.\n *\n * @property anim8.noop\n */\nfunction noop() {}\n\n/**\n * Returns true if the given variable is defined.\n *\n * **Examples:**\n *\n *     anim8.isDefined( 0 );     // true\n *     anim8.isDefined( false ); // true\n *     anim8.isDefined();        // false\n *\n * @method anim8.isDefined\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isDefined(x)\n{\n  return typeof x !== 'undefined';\n}\n\n/**\n * Returns true if the given variable is a function.\n *\n * @method anim8.isFunction\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isFunction(x)\n{\n  return !!(x && x.constructor && x.call && x.apply);\n}\n\n/**\n * Returns true if the given variable is a number.\n *\n * **Examples:**\n *\n *     anim8.isNumber( 0 );     // true\n *     anim8.isNumber( -45.6 ); // true\n *     anim8.isNumber( true );  // false\n *     anim8.isNumber( '1' );   // false\n *     anim8.isNumber();        // false\n *\n * @method anim8.isNumber\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isNumber(x)\n{\n  return typeof x === 'number';\n}\n\n/**\n * Returns true if the given variable is a boolean variable.\n *\n * **Examples:**\n *\n *     anim8.isBoolean( 0 );     // false\n *     anim8.isBoolean( -45.6 ); // false\n *     anim8.isBoolean( true );  // true\n *     anim8.isBoolean( false ); // true\n *     anim8.isBoolean( '1' );   // false\n *     anim8.isBoolean();        // false\n *\n * @method anim8.isBoolean\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isBoolean(x)\n{\n  return typeof x === 'boolean';\n}\n\n/**\n * Returns true if the given variable is a string.\n *\n * **Examples:**\n *\n *     anim8.isString( '' );    // true\n *     anim8.isString( '1' );   // true\n *     anim8.isString( 4.5 );   // false\n *     anim8.isString();        // false\n *\n * @method anim8.isString\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isString(x)\n{\n  return typeof x === 'string';\n}\n\n/**\n * Returns true if the given variable is an array. This should be checked before\n * anim8.isObject since Arrays are objects.\n *\n * **Examples:**\n *\n *     anim8.isArray( [] );     // true\n *     anim8.isArray( [4, 5] ); // true\n *     anim8.isArray( 4.5 );    // false\n *     anim8.isArray();         // false\n *\n * @method anim8.isArray\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isArray(x)\n{\n  return x instanceof Array;\n}\n\n/**\n * Returns true if the given variable is an object. Arrays are considered\n * objects.\n *\n * **Examples:**\n *\n *     anim8.isObject( {} );     // true\n *     anim8.isObject( [] );     // true\n *     anim8.isObject( 4.5 );    // false\n *     anim8.isObject();         // false\n *     anim8.isObject( null );   // false\n *\n * @method anim8.isObject\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isObject(x)\n{\n  return typeof x === 'object' && x !== null;\n}\n\n/**\n * Returns the current time in milliseconds.\n *\n * @method anim8.now\n * @return {Number}\n */\nvar now = (function()\n{\n  return Date.now ? Date.now : function()\n  {\n    return new Date().getTime();\n  };\n\n})();\n\n/**\n * Returns the trimmed version of the given string. A trimmed string has no\n * whitespace in the beginning or end of it.\n *\n * **Examples:**\n *\n *     anim8.trim( 'x' );     // 'x'\n *     anim8.trim( '   x' );  // 'x'\n *     anim8.trim( 'x   ' );  // 'x'\n *     anim8.trim( '  x ' );  // 'x'\n *     anim8.trim( '    ' );  // ''\n *\n * @method anim8.trim\n * @param  {String} x\n * @return {String}\n */\nvar trim = (function()\n{\n  if (String.prototype.trim) {\n    return function(x) {\n      return x.trim();\n    };\n  }\n  return function(x) {\n    return x.replace(/^([\\s]*)|([\\s]*)$/g, '');\n  };\n})();\n\n/**\n * Determines whether the given variable is empty.\n *\n * **Examples:**\n *\n *     anim8.isEmpty( '' );        // true\n *     anim8.isEmpty( 0 );         // true\n *     anim8.isEmpty( [] );        // true\n *     anim8.isEmpty( {} );        // true\n *     anim8.isEmpty( null );      // true\n *     anim8.isEmpty( true );      // true\n *     anim8.isEmpty( false );     // true\n *     anim8.isEmpty( 'x' );       // false\n *     anim8.isEmpty( 0.3 );       // false\n *     anim8.isEmpty( [0] );       // false\n *     anim8.isEmpty( {x:3} );     // false\n *\n * @method anim8.isEmpty\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isEmpty(x)\n{\n  if ( isArray( x ) || isString( x ) )\n  {\n    return x.length > 0;\n  }\n  else if ( x === null )\n  {\n    return true;\n  }\n  else if ( isObject( x ) )\n  {\n    for (var prop in x)\n    {\n      return false;\n    }\n  }\n  else if ( isNumber( x ) )\n  {\n    return x !== 0.0;\n  }\n\n  return true;\n}\n\n/**\n * Parses the given input and returns an array.\n *\n * **Examples:**\n *\n *     anim8.toArray();            // []\n *     anim8.toArray('a b');       // ['a b']\n *     anim8.toArray('a b', ' ');  // ['a', 'b']\n *     anim8.toArray({a:0,b:0});   // ['a', 'b']\n *     anim8.toArray(['a', 'b']);  // ['a', 'b']\n *     anim8.toArray(3.2);         // [3.2]\n *     anim8.toArray(true);        // [true]\n *\n * @param  {Any} x\n * @param  {String} [split]\n * @return {Array}\n */\nfunction toArray( x, split )\n{\n  if ( isString( x ) )\n  {\n    return split ? x.split( split ) : [ x ];\n  }\n  else if ( isArray ( x ) )\n  {\n    return x;\n  }\n  else if ( isObject( x ) )\n  {\n    var props = [];\n\n    for ( var prop in x )\n    {\n      props.push( prop );\n    }\n\n    return props;\n  }\n  else if ( isDefined( x ) )\n  {\n    return [ x ];\n  }\n\n  return [];\n}\n\n/**\n * Performs a deep copy of the given variable. If the variable is an array or\n * object a new instance of that type is created where the values are copied as\n * well. All other types can't be copied (most likely because they're scalar) so\n * they are returned as-is.\n *\n * @method anim8.copy\n * @param {T} x\n * @return {T}\n */\nfunction copy(x)\n{\n  if ( isArray(x) )\n  {\n    var copied = [];\n\n    for (var i = 0; i < x.length; i++)\n    {\n      copied.push( copy( x[i] ) );\n    }\n\n    x = copied;\n  }\n  else if ( isObject(x) )\n  {\n    var copied = {};\n\n    for (var p in x)\n    {\n      copied[p] = copy( x[p] );\n    }\n\n    x = copied;\n  }\n\n  return x;\n}\n\n/**\n * Extends the given object by merging the following objects into it, avoiding\n * overriding any existing properties.\n *\n * @method anim8.extend\n * @param  {Object} out\n * @return {Object}\n */\nfunction extend(out)\n{\n  for (var i = 1; i < arguments.length; i++)\n  {\n    var o = arguments[ i ];\n\n    if ( isObject( o ) )\n    {\n      for (var prop in o)\n      {\n        if ( !(prop in out) )\n        {\n          out[prop] = o[prop];\n        }\n      }\n    }\n  }\n\n  return out;\n}\n\n/**\n * Returns the first defined variable of a possible 4 variables.\n *\n * **Examples:**\n *\n *     anim8.coalesce( 1, 2, 3 );           // 1\n *     anim8.coalesce( undefined, 2, 3 );   // 2\n *     anim8.coalesce();                    // undefined\n *\n * @method anim8.coalesce\n */\nfunction coalesce(a, b, c, d)\n{\n  if (isDefined(a)) {\n    return a;\n  }\n  if (isDefined(b)) {\n    return b;\n  }\n  if (isDefined(c)) {\n    return c;\n  }\n  return d;\n}\n\n/**\n * Provides a way to wrap a variable so calculators don't try copying it on parse.\n *\n * **Examples:**\n *\n *     anim8.constant( 5 );   // function() { return 5; }\n *\n * @method anim8.constant\n * @param {T} variable\n * @return {Function}\n */\nfunction constant(variable)\n{\n  return function()\n  {\n    return variable;\n  };\n}\n\n/**\n * Resolves the given variable. If the variable is a function the result is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.resolve( 5 );                     // 5\n *     anim8.resolve( true );                  // true\n *     anim8.resolve( function(){return 7;} ); // 7\n *\n * @method anim8.resolve\n * @param  {Function|E} variable\n * @return {E}\n */\nfunction resolve(variable)\n{\n  return isFunction( variable ) ? variable() : variable;\n}\n\n/**\n * Returns a \"unique\" identifier.\n *\n * @method id\n * @return {Number}\n */\nvar id = (function()\n{\n  var _id = 0;\n  return function() {\n    return ++_id;\n  };\n\n})();\n\n\n/**\n * Instantiates a new Animation given it's name, the input & options passed, and\n * the attrimators that were generated from the input & options. If the name is\n * false this is an anonymous animation. Input & Options are used by builders to\n * generate attrimators, options allow for an animations default properties to\n * be overriden.\n *\n * @param {String|Boolean} name\n * @param {Object} input\n * @param {Object} options\n * @param {AttrimatorMap} attrimators\n * @class Animation\n * @constructor\n */\nfunction Animation(name, input, options, attrimators)\n{\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {String|False} name\n   */\n  this.name = name;\n\n  /**\n   * The object which created the animation.\n   *\n   * @property {Object} input\n   */\n  this.input = input;\n\n  /**\n   * The options given when the animation was created.\n   *\n   * @property {Object} [options]\n   */\n  this.options = options;\n\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {AttrimatorMap} name\n   */\n  this.attrimators = attrimators;\n}\n\nClass.define( Animation,\n{\n\n  /**\n   * Generates an map of event instances from the attrimators in this animation.\n   *\n   * @method newAttrimators\n   * @return {AttrimatorMap}\n   */\n  newAttrimators: function()\n  {\n    return this.attrimators.clone();\n  },\n\n  /**\n   * Merges options with the options in this animation and places them in the\n   * events.\n   *\n   * @method merge\n   * @param {Object} [options]\n   * @param {AttrimatorMap} attrimatorMap\n   * @return {AttrimatorMap}\n   */\n  merge: function(options, attrimatorMap)\n  {\n    var helper = new BuilderHelper( this.input, this.options, options );\n\n    for (var builderName in this.input)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( this.input, options, this.options, attrimatorMap, helper );\n      }\n    }\n\n    return attrimatorMap;\n  }\n\n});\n\n\n/**\n * Instantiates a new Animator given a subject to animate.\n *\n * @param {Any} e\n * @class Animator\n * @constructor\n * @extends anim8.eventize\n */\nfunction Animator(e)\n{\n  this.reset( e );\n}\n\n/**\n * The event triggered after preupdate is called. Pre-update is used to run any\n * preparations on the subject before updates are made and attributes are\n * applied.\n *\n * @event preupdate\n */\n\n/**\n * The event triggered after all attrimators are updated and any new values\n * have been applied to the current values (frame) on the animator.\n *\n * @event update\n */\n\n/**\n * The event triggered after the current values (frame) on the animator are\n * applied to the subject.\n *\n * @event apply\n */\n\n/**\n * The event triggered when the given animation cycle starts (and initial\n * values are applied) for all attrimators in the cycle.\n *\n * @event cycleStart:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when the given animation cycle ends which occurs when the\n * last attrimator for an animation finishes or is interrupted by commands like\n * play, queue, transition, end, finish, & stop.\n *\n * @event cycleEnd:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when all animations on the animator have finished.\n *\n * @event finished\n * @param {Animator} animator\n */\n\n/**\n * The event triggered when an animator is deactivated which occurs when an\n * animator has finished animating and is being taken off the list of live\n * animators (anim8.animating).\n *\n * @event deactivate\n */\n\n/**\n * The event triggered after the user calls destroy on an animator.\n *\n * @event destroyed\n */\n\nClass.define( Animator,\n{\n\n  /**\n   * Resets the animator given a subject to animate.\n   *\n   * @method reset\n   * @param {Any} subject\n   * @chainable\n   * @protected\n   */\n  reset: function(subject)\n  {\n    /**\n     * The subject which is being animated.\n     *\n     * @property {Any} subject\n     */\n    this.subject = subject;\n\n    /**\n     * The map of attrimators animating the subject.\n     *\n     * @property {AttrimatorMap} attrimators\n     */\n    this.attrimators = new AttrimatorMap();\n\n    /**\n     * The array of attrimators recently added to the animator that\n     * are ready to be started.\n     *\n     * @property {Array} attrimatorsAdded\n     * @protected\n     */\n    this.attrimatorsAdded = [];\n\n    /**\n     * The object which stores the attribute values being animated.\n     *\n     * @property {Object} frame\n     */\n    this.frame = {};\n\n    /**\n     * The object which stores the attributes last updated.\n     *\n     * @property {Object} updated\n     */\n    this.updated = {};\n\n    /**\n     * Whether or not this animator has completely finished animating it's subject.\n     *\n     * @property {Boolean} finished\n     */\n    this.finished = false;\n\n    /**\n     * The factory which created this Animator given a subject.\n     *\n     * @property {Factory} factory\n     */\n    this.factory = null;\n\n    /**\n     * Whether or not this animator is actively being updated.\n     *\n     * @property {Boolean} active\n     */\n    this.active = false;\n\n    /**\n     * The current cycle being animated. Multiple cycles can be animated at once, this is the first one.\n     *\n     * @property {Number} cycleCurrent\n     * @protected\n     */\n    this.cycleCurrent = 0;\n\n    /**\n     * The ID of the next cycle of animations to be added to this Animator.\n     *\n     * @property {Number} cycleNext\n     * @protected\n     */\n    this.cycleNext = 0;\n\n    /**\n     * The last cycle that was ended.\n     *\n     * @property {Number} cycleEnded\n     * @protected\n     */\n    this.cycleEnded = 0;\n\n    return this;\n  },\n\n  /**\n   * Starts a new animation cycle. This is done before events & springs are\n   * placed to group them together so we know when to apply their initial value.\n   *\n   * @method newCycle\n   * @param {Attrimator|AttrimatorMap} attrimators\n   * @chainable\n   * @protected\n   */\n  newCycle: function(attrimators)\n  {\n    this.cycleNext++;\n\n    if ( attrimators instanceof AttrimatorMap )\n    {\n      this.cycleNext = attrimators.applyCycle( this.cycleNext );\n    }\n    else if ( attrimators instanceof Attrimator )\n    {\n      attrimators.cycle = this.cycleNext;\n    }\n\n    return this;\n  },\n\n  /**\n   * Applies the current cycle. This involves finding all attrimators with the\n   * same cycle identifier and applying their initial state.\n   *\n   * @method applyCurrentCycle\n   * @chainable\n   * @protected\n   */\n  applyCurrentCycle: function()\n  {\n    var cycle = this.cycleCurrent;\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      if ( attrimator.cycle === cycle )\n      {\n        this.updated[ attr ] = (attrimator.startCycle( this.frame ) !== false) || this.updated[ attr ];\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Ends the current cycle which calls any listening functions.\n   *\n   * @method endCurrentCycle\n   * @chainable\n   * @protected\n   */\n  endCurrentCycle: function()\n  {\n    if ( this.cycleCurrent > this.cycleEnded )\n    {\n      this.cycleEnded = this.cycleCurrent;\n      this.trigger( 'cycleEnd:' + this.cycleCurrent, this.cycleCurrent );\n    }\n  },\n\n  /**\n   * Returns the attribute descriptor given the name of the attribute.\n   *\n   * @method getAttribute\n   * @param  {String} attr\n   * @return {Object}\n   */\n  getAttribute: function(attr)\n  {\n    return this.factory.attribute( attr );\n  },\n\n  /**\n   * Restores any temporary state that may exist on this Animator that\n   * is a result from animations.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore: function()\n  {\n    return this;\n  },\n\n  /**\n   * Applies the initial state of recently added attrimators immediately.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState: function()\n  {\n    var currentTime = now();\n\n    this.preupdate( currentTime );\n    this.update( currentTime );\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * A method thats invoked along with all other animators before updates are\n   * called. This is used to make any necessary preparations before the animator\n   * is updated.\n   *\n   * @method preupdate\n   * @param {Number} now\n   * @chainable\n   */\n  preupdate: function(now)\n  {\n    // If there are attribute placed on the animator since the last preupdate\n    // that has computed values we need to replace the path on the event with\n    // a copy containing the computed values. This is where current value &\n    // relative values are injected from the animator into the attribute.\n    var aa = this.attrimatorsAdded;\n    if ( aa.length )\n    {\n      for (var i = 0; i < aa.length; i++)\n      {\n        var attrimator = aa[ i ];\n        var attr = attrimator.attribute;\n\n        if ( attr in this.subject )\n        {\n          this.frame[ attr ] = this.subject[ attr ];\n        }\n        else\n        {\n          this.setDefault( attr );\n        }\n\n        attrimator.start( now, this );\n      }\n\n      aa.length = 0;\n    }\n\n    this.trigger('preupdate');\n\n    return this;\n  },\n\n  /**\n   * Sets the default value for the given attribute in the frame of this\n   * Animator if there's no value there.\n   *\n   * @method setDefault\n   * @param {String} attr\n   * @protected\n   */\n  setDefault: function(attr)\n  {\n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = this.getAttribute( attr ).cloneDefault();\n    }\n  },\n\n  /**\n   * Updates all attrimators in this animator with the given time.\n   *\n   * @method update\n   * @param {Number} now\n   * @chainable\n   */\n  update: function(now)\n  {\n    this.wasFinished = this.finished;\n    this.finished = true;\n\n    var attrimators = this.attrimators.values;\n    var minCycle = this.cycleNext;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      this.updated[ attr ] = attrimator.setTime( now, this.frame );\n\n      this.finished = this.finished && attrimator.isFinished();\n\n      minCycle = Math.min( minCycle, attrimator.cycle );\n    }\n\n    if ( this.cycleCurrent < minCycle )\n    {\n      while ( this.cycleCurrent < minCycle )\n      {\n        this.endCurrentCycle();\n        this.cycleCurrent++;\n      }\n\n      this.cycleCurrent = minCycle;\n      this.applyCurrentCycle();\n      this.trigger( 'cycleStart:' + this.cycleCurrent, this.cycleCurrent );\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.endCurrentCycle();\n    }\n\n    this.trigger('update');\n\n    return this;\n  },\n\n  /**\n   * Places the attribute animator in this animator replacing any existing\n   * animator for the same attribute. The next time the animator is updated the\n   * attribute animator will be started. The previous (if any) attrimator is\n   * returned.\n   *\n   * @method placeAttrimator\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  placeAttrimator: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var existing = this.attrimators.get( attr );\n\n    this.attrimators.put( attr, attrimator );\n    this.attrimatorsAdded.push( attrimator );\n\n    this.finished = false;\n\n    return existing;\n  },\n\n  /**\n   * Applies all updated attributes to the subject. This method is invoked with\n   * all of the other animators at the end of the animation cycle.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function()\n  {\n    for (var attr in this.frame)\n    {\n      if ( this.updated[ attr ] )\n      {\n        this.subject[ attr ] = this.frame[ attr ];\n        this.updated[ attr ] = false;\n      }\n    }\n\n    this.trigger('apply');\n\n    this.trimAttrimators();\n\n    return this;\n  },\n\n  /**\n   * Removes any finished attrimators and places any queued attrimators. If the\n   * animator previously wasn't finished but now is the 'finished' event will\n   * be triggered.\n   *\n   * @method trimAttrimators\n   * @chainable\n   * @protected\n   */\n  trimAttrimators: function()\n  {\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( attrimator.isFinished() )\n      {\n        if ( attrimator.next )\n        {\n          this.placeAttrimator( attrimator.next );\n        }\n        else\n        {\n          this.attrimators.removeAt( i );\n        }\n      }\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the current value for the given attribute (or undefined if the\n   * attribute is not or has not animated).\n   *\n   * @method value\n   * @param {String} attr\n   * @return {Any}\n   */\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\n  /**\n   * Activates this Animator by adding it to the main loop if it isn't there\n   * already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    activateAnimator( this );\n\n    return this;\n  },\n\n  /**\n   * A method that is invoked when an animator is finished and is being removed\n   * from the list of currently animating Animators.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate: function()\n  {\n    this.trigger('deactivate', this);\n\n    return this;\n  },\n\n  /**\n   * A method that can be invoked to destroy an animator - removing any\n   * relationship between the subject and animator. The next time an animator is\n   * generated for the subject a new animator will be created.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy: function()\n  {\n    this.finished = true;\n\n    this.factory.destroy( this );\n\n    this.trigger('destroyed');\n\n    return this;\n  },\n\n  /**\n   * Adds a spring to this animator replacing any existing attrimator for the\n   * same attribute. A spring object can be given, an instance of anim8.Spring,\n   * or a name of a saved Spring. The spring added to the animator is returned.\n   *\n   * @method spring\n   * @param {Spring|String|Object} spring\n   * @return {Spring}\n   */\n  spring: function(spring)\n  {\n    var spring = $spring( spring );\n\n    if ( spring === false )\n    {\n      return false;\n    }\n\n    this.newCycle( spring );\n    this.placeAttrimator( spring );\n\n    this.activate();\n\n    return spring;\n  },\n\n  /**\n   * Plays an animation. Attributes in the animation that are currently being\n   * animated will be stopped and replaced with the new attrimators. If `all` is\n   * true then any attrimators animating not specified in the given animation\n   * will be stopped.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.playAttrimators( attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Plays a map of attrimators. Attributes in the attrimator map that are\n   * currently being animated will be stopped and replaced with the new\n   * attrimators. If \"all\" is true then any attrimators animating not specified\n   * in the given attrimator map will be stopped. This method will not activate\n   * the Animator, that has to be done manually.\n   *\n   * @method playAttrimators\n   * @param {AttrimatorMap} animatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  playAttrimators: function(attrimatorMap, all)\n  {\n    if ( all )\n    {\n      this.attrimators.finishNotPresent( attrimatorMap, 0 );\n    }\n\n    var attrimators = attrimatorMap.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      this.placeAttrimator( attrimators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Unplays an animation. Attributes in the animation that are currently being\n   * animated will be transitioned to their starting values. If `all` is true\n   * then any attrimators animating not specified in the given animation will be\n   * stopped.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method unplay\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} transition\n   * @param {String|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  unplay: function(animation, transition, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.unplayAttrimators( attrimatorMap, transition, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Unplays a map of attrimators. Attributes in the attrimator map that are\n   * currently being animated will be transitioned to their starting values.\n   * If \"all\" is true then any attrimators animating not specified\n   * in the given attrimator map will be stopped. This method will not activate\n   * the Animator, that has to be done manually.\n   *\n   * @method unplayAttrimators\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Object} transition\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  unplayAttrimators: function(attrimatorMap, transition, all)\n  {\n    var unplayAttrimators = new AttrimatorMap();\n    var attrimators = attrimatorMap.values;\n    var startings = {};\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      if ( attrimator.startCycle( startings ) )\n      {\n        unplayAttrimators.put( attr, new Oncer( attr, startings[ attr ], 0, true ) );\n      }\n    }\n\n    this.newCycle( unplayAttrimators );\n    this.transitionAttrimators( transition, unplayAttrimators, all );\n\n    return this;\n  },\n\n  /**\n   * Queues an animation. The attrimators generated from the given animation\n   * will be started at the same time - as soon as all finite attrimators for\n   * the same attributes are finished. Any infinite attrimators will be\n   * automatically stopped when all queued attrimators are set to start.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.queueAttrimators( attrimatorMap );\n\n    return this.activate();\n  },\n\n  /**\n   * Queues a map of attrimators. The map of attrimators will be started at the\n   * same time - as soon as all finished attrimators for the same attribute are\n   * finished. Any infinite attrimators will be automatically stopped when all\n   * queued attrimators are set to start.\n   *\n   * @method queueAttrimators\n   * @param {AttrimatorMap} attrimatorMap\n   * @chainable\n   * @protected\n   */\n  queueAttrimators: function(attrimatorMap)\n  {\n    this.attrimators.queueMap( attrimatorMap, 0, this.placeAttrimator, this );\n\n    return this;\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given animation will be stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {String|Object|Animation} animation\n   * @param {Object} [options]\n   * @param {Boolean} [all]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var attrimatorMap = $attrimatorsFor( animation, options, cache );\n\n    this.newCycle( attrimatorMap );\n    this.transitionAttrimators( transition, attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given attrimator map will be\n   * stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * @method transitionAttrimators\n   * @param {Object} transition\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators: function(transition, attrimatorMap, all)\n  {\n    // TRANSITIONING:\n    // If the animator doesn't have an attrimator for the given attribute just add the attrimator adding the total delay\n    // If the animator has an attrimator currently...\n    //   If the current attrimator or new attrimator don't have values at the desired times...\n    //      Stop the current attrimator after the total delay (adding the delay of the new attrimator as well)\n    //      Queue the new attrimator\n    //   Else\n    //      Create a path using the methods detailed above\n    // If all is true and there's an attrimator left on the animator that isn't being transitioned, stop it after the total delay.\n\n    // CREATING A TRANSITION PATH:\n    // If intro & outro are 0, use Tween\n    // If intro is 0, use Quadratic Path between current value, outro point, and first point on new path.\n    // If outro is 0, use Quadratic Path between current value, first point on new path, and intro point.\n    // If intro & outro are not 0, use Cubic Path between current value, outro point, first point on new path, and intro point.\n    // If granularity is given > 1 then compile the path, compute intro & outro velocities, and compute deltas for new\n    //    compiled path based on interpolated velocity over the path (knowing it's length and transition time)\n\n    var current = this.attrimators;\n    var attrimators = attrimatorMap.values;\n\n    // If transition all attributes,\n    if ( all )\n    {\n      this.attrimators.finishNotPresent( attrimatorMap, transition.time );\n    }\n\n    // Only transition if we need to\n    if ( current.hasOverlap( attrimatorMap ) )\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        var next = attrimators[ i ];\n        var attr = next.attribute;\n        var curr = current.get( attr );\n\n        if ( curr && isDefined( this.frame[ attr ] ) )\n        {\n          var attribute = this.getAttribute( attr );\n          var calc = attribute.calculator;\n\n          var p2 = next.valueAt( 0, calc.create() );\n\n          if ( p2 !== false )\n          {\n            var transitionTime = transition.time;\n            var p0 = calc.clone( this.frame[ attr ] );\n            var p1 = transition.outro ? curr.valueAt( curr.getElapsed() + transition.outro, calc.create() ) : false;\n            var p3 = transition.intro ? next.valueAt( transition.intro, calc.create() ) : false;\n            var path = null;\n\n            // If the intro is negative we can look into the past by looking a little bit into\n            // the future and assume the past is going in the same direction (only the opposite).\n            if ( p3 !== false && transition.intro < 0 && transition.lookup > 0 )\n            {\n              var pastLookahead = next.valueAt( transition.lookup, calc.create() );\n              var pastVelocity = calc.sub( pastLookahead, p2 );\n\n              if ( pastVelocity !== false )\n              {\n                var pastNegativeVelocity = calc.scale( pastVelocity, transition.intro / transition.lookup );\n                var past = calc.add( pastNegativeVelocity, p2 );\n\n                p3 = p2;\n                p2 = past;\n              }\n            }\n\n            // Build a path with as many of the points as possible.\n            if ( p1 === false && p3 === false )\n            {\n              path = new Tween( attr, calc, p0, p2 );\n            }\n            else if ( p1 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p2, p3 );\n            }\n            else if ( p3 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p1, p2 );\n            }\n            else\n            {\n              path = new PathCubic( attr, calc, p0, p1, p2, p3 );\n            }\n\n            // If granularity is specified we will try to make the transition\n            // smooth by maintaining exit (outro) velocity from the current attrimator\n            // and interpolating it to the entrance (intro) velocity for the\n            // attrimator we're transitioning into.\n            if ( transition.granularity > 2 && transition.lookup > 0 )\n            {\n              var outTime  = p1 === false ? curr.getElapsed() : curr.getElapsed() + transition.outro;\n              var outPoint = p1 === false ? p0 : p1;\n              var outNext  = curr.valueAt( outTime + transition.lookup, calc.create() );\n\n              var inTime   = p3 === false ? 0 : transition.intro;\n              var inPoint  = p3 === false ? p2 : p3;\n              var inNext   = next.valueAt( inTime + transition.lookup, calc.create() );\n\n              // We can only proceed if we have reference points to calculate\n              // exit & entrance velocity.\n              if ( outNext !== false && inNext !== false )\n              {\n                var outVelocity  = calc.sub( calc.clone( outNext ), outPoint );\n                var outPerMillis = calc.length( outVelocity ) / transition.lookup;\n\n                var inVelocity   = calc.sub( calc.clone( inNext ), inPoint );\n                var inPerMillis  = calc.length( inVelocity ) / transition.lookup;\n\n                var compiled = new PathCompiled( attr, path, transition.granularity );\n                var points = compiled.points;\n                var lastPoint = points.length - 1;\n                var totalDistance = 0;\n                var distances = [];\n\n                for (var k = 0; k < lastPoint; k++)\n                {\n                  distances[ k ] = totalDistance;\n                  totalDistance += calc.distance( points[ k ], points[ k + 1 ] );\n                }\n                distances[ lastPoint ] = totalDistance;\n\n                if ( !isNaN( totalDistance ) )\n                {\n                  var requiredTime = 2.0 * totalDistance / (outPerMillis + inPerMillis);\n                  var acceleration = 0.5 * (inPerMillis - outPerMillis) / requiredTime;\n                  var timeDelta = requiredTime / lastPoint;\n                  var deltas = [];\n\n                  for (var k = 0; k < lastPoint; k++)\n                  {\n                    var time = k * timeDelta;\n                    var position = outPerMillis * time + acceleration * time * time;\n\n                    deltas[ k ] = position / totalDistance;\n                  }\n                  deltas[ lastPoint ] = 1.0;\n\n                  path = new PathDelta( attr, calc, points, deltas );\n                  transitionTime = requiredTime;\n                }\n              }\n            }\n\n            var transitionEvent = new Event( attr, path, transitionTime, transition.easing, 0, 0, 0, 1 );\n\n            transitionEvent.next = next;\n            transitionEvent.cycle = next.cycle;\n\n            next.offset = transition.intro;\n\n            this.placeAttrimator( transitionEvent );\n          }\n          else\n          {\n            curr.stopIn( transition.time + next.delay );\n            curr.queue( next );\n            next.delay = 0;\n          }\n        }\n        else\n        {\n          next.delay += transition.time;\n\n          this.placeAttrimator( next );\n        }\n      }\n    }\n    // We don't need to transition, just play the events\n    else\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        this.placeAttrimator( attrimators[ i ] );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Tweens a single attribute to a target value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenTo\n   * @param {String} attr\n   * @param {T} target\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenTo: function(attr, target, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var end       = attribute.parse( target );\n    var path      = new Tween( attr, attribute.calculator, computed.current, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes to target values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyTo\n   * @param {Object} targets\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenManyTo: function(targets, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in targets )\n    {\n      var attribute = this.getAttribute( attr );\n      var end       = attribute.parse( targets[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, computed.current, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens a single attribute from a starting value to the current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenFrom\n   * @param {String} attr\n   * @param {T} starting\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenFrom: function(attr, starting, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starting );\n    var path      = new Tween( attr, attribute.calculator, start, computed.current );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to the current values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyFrom\n   * @param {Object} startings\n   * @param {String|Array|Object} [options]\n   * @chainable\n   */\n  tweenManyFrom: function(startings, options)\n  {\n    var options = $options( options );\n\n    this.newCycle();\n\n    for ( var attr in startings )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( startings[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, computed.current );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens an attribute from a starting value to an ending value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tween\n   * @param {String} attr\n   * @param {T} starts\n   * @param {T} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tween: function(attr, starts, ends, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starts );\n    var end       = attribute.parse( ends );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to ending values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenMany\n   * @param {Object} starts\n   * @param {Object} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenMany: function(starts, ends, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in starts )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( starts[ attr ] );\n      var end       = attribute.parse( ends[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Moves an attribute relative to its current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method move\n   * @param {String} attr\n   * @param {T} amount\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  move: function(attr, amount, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var relative  = attribute.parse( amount );\n    var start     = computed.current;\n    var end       = isComputed( relative ) ? relative : computed.relative( relative );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Moves multiple attribute relative to their current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method moveMany\n   * @param {Object} amounts\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  moveMany: function(amounts, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in amounts )\n    {\n      var attribute = this.getAttribute( attr );\n      var relative  = attribute.parse( amounts[ attr ] );\n      var start     = computed.current;\n      var end       = isComputed( relative ) ? relative : computed.relative( relative );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Returns a function that returns the current value for the given attribute\n   * when invoked. The returned function can be given as values for paths &\n   * springs that are evaluated every frame.\n   *\n   * @method ref\n   * @param {String} attr\n   * @return {Function}\n   */\n  ref: function(attr)\n  {\n    var animator = this;\n    var attribute = this.getAttribute( attr );\n    var request = {};\n\n    return function()\n    {\n      if ( attr in animator.frame )\n      {\n        return animator.frame[ attr ];\n      }\n\n      request[ attr ] = true;\n\n      var current = animator.get( request );\n\n      if ( isDefined( current[ attr ] ) )\n      {\n        return current[ attr ];\n      }\n\n      return attribute.defaultValue;\n    };\n  },\n\n  /**\n   * Follows the attribute along the given path definition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method follow\n   * @param {String} attr\n   * @param {Path|Object|String} path\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  follow: function(attr, path, options, cache)\n  {\n    var options = $options( options, cache );\n    var path    = $path( path );\n    var event   = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Helper method that iterates over given attributes. If callback is specified\n   * it is invoked for each attrimator in this animator for the given\n   * attributes. If no callback is given an array of anim8.Attrimators is\n   * returned for each attrimator in this animator for the given attributes.\n   *\n   * @method attrimatorsFor\n   * @param {String|Array|Object} attributes\n   * @param {Function} callback\n   * @return {this|Array}\n   */\n  attrimatorsFor: function(attributes, callback)\n  {\n    var attrimatorMap = this.attrimators;\n    var attributes = toArray( coalesce( attributes, attrimatorMap.keys ), ' ' );\n    var resulting = !isFunction( callback );\n    var results = [];\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n      var attrimator = attrimatorMap.get( attr );\n\n      if ( attrimator )\n      {\n        if ( resulting )\n        {\n          results.push( attrimator );\n        }\n        else\n        {\n          callback.call( this, attrimator, attr );\n        }\n      }\n    }\n\n    return resulting ? results : this;\n  },\n\n  /**\n   * Stops all attributes for the specified attributes. Attribute names can be\n   * given as an array or a space separated string. If no attributes are given\n   * all attributes are assumed.\n   *\n   * @method stop\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  stop: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator, attr)\n    {\n      this.attrimators.remove( attr );\n    });\n  },\n\n  /**\n   * Ends all attributes for the specified attributes. If attributes are queued\n   * the last value of the last attribute is applied to this Animator before\n   * being completely removed. Attribute names can be given as an array or a\n   * space separated string. If no attributes are given all attributes are\n   * assumed.\n   *\n   * @method end\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  end: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      while (attrimator.next)\n      {\n        attrimator = attrimator.next;\n      }\n\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Finishes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method finish\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  finish: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Calls nopeat on all current attrimators for the specified attributes.\n   * Attribute names can be given as an array or a space separated string. If\n   * no attributes are given all attributes are assumed.\n   *\n   * **See:** {{#crossLink \"Attrimator/nopeat:method\"}}Attrimator.nopeat{{/crossLink}}\n   *\n   * @method nopeat\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  nopeat: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.nopeat();\n    });\n  },\n\n  /**\n   * Pauses all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method pause\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  pause: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.pause();\n    });\n  },\n\n  /**\n   * Resumes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method resume\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  resume: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.resume();\n    });\n  },\n\n  /**\n   * Sets the given attributes to this Animator immediately.\n   *\n   * @method set\n   * @param {Object} attributes\n   * @chainable\n   */\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n      this.updated[ attr ] = true;\n    }\n\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * Unsets the attribute, array of attributes, or object of attributes.\n   * Unsetting involves removing all attrimators and the current value in the\n   * frame,\n   *\n   * @method unset\n   * @param {String|Array|Object} attributes\n   * @chainable\n   */\n  unset: function(attributes)\n  {\n    var attributes = toArray( coalesce( attributes, this.frame ), ' ' );\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n\n      this.attrimators.remove( attr );\n\n      delete this.frame[ attr ];\n    }\n\n    return this;\n  },\n\n  /**\n   * Gets the current attribute values for all attributes specified. The\n   * argument must be an object where the key is the name of an attribute.\n   *\n   * @method get\n   * @param {Object} attributes\n   * @return {Object}\n   */\n  get: function(attributes)\n  {\n    var out = {};\n\n    for (var attr in attributes)\n    {\n      out[ attr ] = this.frame[ attr ];\n    }\n\n    return out;\n  },\n\n  /**\n   * Returns the amount of finite time remaining before the animator is done\n   * animating. Attrimators that don't have a known end time are not included.\n   * If there are no attrimators with end times then zero is returned.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.attrimators.timeRemaining();\n  },\n\n  /**\n   * Returns true if there are any attrimators on this Animator.\n   *\n   * @method hasAttrimators\n   * @return {Boolean}\n   */\n  hasAttrimators: function()\n  {\n    return this.attrimators.size() > 0;\n  },\n\n  /**\n   * Returns the subject of the Animator optionally passing it through a wrapper\n   * function before it's returned.\n   *\n   * @method getSubject\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubject: function(wrapper)\n  {\n    var subject = this.subject;\n\n    if ( isFunction( wrapper ) )\n    {\n      subject = wrapper( subject );\n    }\n\n    return subject;\n  },\n\n  /**\n   * Invokes a function with the given context or the context of this Animator\n   * if none is given. This is particularly useful for having a function be\n   * called on deferred statements.\n   *\n   * @method invoke\n   * @param {Function} func\n   * @param {Object} [context]\n   * @param {Array} [args]\n   * @chainable\n   */\n  invoke: function(func, context, args)\n  {\n    if ( isFunction( func ) )\n    {\n      func.apply( context || this, args || [] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Defers the method calls following this one to when the given event type\n   * (on or once) and event. To return this animator you need to call undefer()\n   * as many times as you called defer().\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} [callback]\n   * @return {DeferAnimator}\n   */\n  defer: function(eventType, event, callback)\n  {\n    return new DeferAnimator( this, this, eventType, event, callback );\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned starts.\n   *\n   * @method onCycleStart\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleStart: function(callback, context)\n  {\n    this.once( 'cycleStart:' + this.cycleNext, callback, context );\n\n    return this;\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned ends.\n   *\n   * @method onCycleEnd\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleEnd: function(callback, context)\n  {\n    this.once( 'cycleEnd:' + this.cycleNext, callback, context );\n\n    return this;\n  }\n\n});\n\n/**\n * Adds the following event methods to Animators: on, once, off, trigger.\n */\neventize( Animator.prototype );\n\n\n/**\n * Instantiates an Array of {{#crossLink \"Animator\"}}{{/crossLink}} instances.\n *\n * @param {Array} [input]\n * @class Animators\n * @constructor\n * @extends {Array}\n */\nfunction Animators(input)\n{\n  this.$ = [];\n\n  if ( isArray( input ) )\n  {\n    this.fill( input );\n  }\n}\n\n/**\n * Animators is an instance of Array. All array methods are supported.\n */\nClass.define( Animators,\n{\n\n  /**\n   * Adds an animator to this set of animators.\n   *\n   * @param  {Animator} animator\n   * @chainable\n   */\n  push: function(animator)\n  {\n    this.$.push( animator );\n\n    return this;\n  },\n\n  /**\n   * Returns the number of animators in this set.\n   *\n   * @return {Number}\n   */\n  length: function()\n  {\n    return this.$.length;\n  },\n\n  /**\n   * Returns the animator at the given index.\n   *\n   * @param  {Number} index\n   * @return {Animator}\n   */\n  at: function(index)\n  {\n    return this.$[ index ];\n  },\n\n  /**\n   * Invokes a callback for each element in the array.\n   *\n   * @method each\n   * @param {Function} iterator\n   * @param {Object} context\n   * @chainable\n   */\n  each: function(iterator, context)\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      if ( iterator.call( context || array[i], array[i], i ) === false )\n      {\n        break;\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Appends the array of animators given to the end of this array.\n   *\n   * @method fill\n   * @param {Array} animators\n   * @chainable\n   */\n  fill: function(animators)\n  {\n    for (var i = 0; i < animators.length; i++)\n    {\n      this.push( animators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Invokes a callback for each element in the array and if a true value is\n   * returned  that element is removed from the array.\n   *\n   * @method filter\n   * @param {Function} filterer\n   * @chainable\n   */\n  filter: function(filterer)\n  {\n    var array = this.$;\n    var alive = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      var remove = filterer( array[i] );\n\n      if ( !remove )\n      {\n        array[alive++] = array[i];\n      }\n    }\n\n    array.length = alive;\n\n    return this;\n  },\n\n  /**\n   * Returns the subjects of the Animators optionally passing them through a\n   * wrapper function before it's returned.\n   *\n   * @method getSubjects\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubjects: function(wrapper)\n  {\n    var array = this.$;\n    var subjects = [];\n\n    for (var i = 0; i < array.length; i++)\n    {\n      subjects.push( array[i].subject );\n    }\n\n    if ( isFunction( wrapper ) )\n    {\n      subjects = wrapper( subjects );\n    }\n\n    return subjects;\n  },\n\n  /**\n   * Returns the first animator in the array.\n   *\n   * @method first\n   * @return {Animator}\n   */\n  first: function()\n  {\n    return this.$[0];\n  },\n\n  /**\n   * Reverses the order of animators in the array.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    var array = this.$;\n    var last = array.length - 1;\n    var mid = Math.floor( array.length / 2 );\n\n    for (var i = 0; i < mid; i++)\n    {\n      var e0 = array[ i ];\n      var e1 = array[ last - i ];\n\n      array[ i ] = e1;\n      array[ last - i ] = e0;\n    }\n\n    return this;\n  },\n\n  /**\n   * Activates all Animators in the array if they aren't active already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      pushAnimator( array[i] );\n    }\n\n    activate();\n\n    return this;\n  },\n\n  /**\n   * Creates a sequence of events separated by a delay.\n   *\n   * @method sequence\n   * @param {String|Number} delay\n   * @param {String|Array|Function} easing\n   * @return {Sequence}\n   */\n  sequence: function(delay, easing)\n  {\n    return new Sequence( this, delay, easing );\n  },\n\n  /**\n   * Returns the maximum time remaining out of all Animators in the array.\n   *\n   * **See:** {{#crossLink \"Animating/timeRemaining:method\"}}{{/crossLink}}\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    var array = this.$;\n    var maxRemaining = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      maxRemaining = Math.max( maxRemaining, array[ i ].timeRemaining() );\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method preupdate\n   * @chainable\n   */\n  preupdate: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].preupdate( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/update:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method update\n   * @chainable\n   */\n  update: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].update( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function(max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].apply();\n    }\n\n    return this;\n  },\n\n  /**\n   * Handles an animator if it's finished, and returns false if the animator can\n   * be removed from the set of animators.\n   *\n   * @method handleFinished\n   * @param {Animator} animator\n   * @return {Boolean}\n   */\n  handleFinished: function(animator)\n  {\n    if ( animator.finished )\n    {\n      animator.deactivate();\n      animator.active = false;\n    }\n\n    return animator.finished;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} on each\n   * animator in the array and returns this.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore               : delegate( 'restore', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method placeAttrimator\n   * @chainable\n   */\n  placeAttrimator       : delegate( 'placeAttrimator', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState     : delegate( 'applyInitialState', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trimAttrimators\n   * @chainable\n   */\n  trimAttrimators       : delegate( 'trimAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate            : delegate( 'deactivate', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy               : delegate( 'destroy', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method spring\n   * @chainable\n   */\n  spring                : delegate( 'spring', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/play:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method play\n   * @chainable\n   */\n  play                  : delegate( 'play', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/unplay:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method unplay\n   * @chainable\n   */\n  unplay                : delegate( 'unplay', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method playAttrimators\n   * @chainable\n   * @protected\n   */\n  playAttrimators       : delegate( 'playAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queue\n   * @chainable\n   */\n  queue                 : delegate( 'queue', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queueAttrimators\n   * @chainable\n   * @protected\n   */\n  queueAttrimators      : delegate( 'queueAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method transition\n   * @chainable\n   */\n  transition            : delegate( 'transition', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}}\n   * on each animator in the array and returns this.\n   *\n   * @method transitionAttrimators\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators : delegate( 'transitionAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tween\n   * @chainable\n   */\n  tween                 : delegate( 'tween', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenTo\n   * @chainable\n   */\n  tweenTo               : delegate( 'tweenTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenFrom\n   * @chainable\n   */\n  tweenFrom             : delegate( 'tweenFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenMany\n   * @chainable\n   */\n  tweenMany             : delegate( 'tweenMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyTo\n   * @chainable\n   */\n  tweenManyTo           : delegate( 'tweenManyTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyFrom\n   * @chainable\n   */\n  tweenManyFrom         : delegate( 'tweenManyFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/move:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method move\n   * @chainable\n   */\n  move                  : delegate( 'move', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method moveMany\n   * @chainable\n   */\n  moveMany              : delegate( 'moveMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method follow\n   * @chainable\n   */\n  follow                : delegate( 'follow', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/attrimatorsFor:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method attrimatorsFor\n   * @chainable\n   */\n  attrimatorsFor        : delegate( 'attrimatorsFor', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method stop\n   * @chainable\n   */\n  stop                  : delegate( 'stop', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/end:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method end\n   * @chainable\n   */\n  end                   : delegate( 'end', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method finish\n   * @chainable\n   */\n  finish                : delegate( 'finish', DelegateTypes.THIS ),\n\n/**\n   * Calls {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method nopeat\n   * @chainable\n   */\n  nopeat                : delegate( 'nopeat', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause                 : delegate( 'pause', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume                : delegate( 'resume', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/set:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method set\n   * @chainable\n   */\n  set                   : delegate( 'set', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method unset\n   * @chainable\n   */\n  unset                 : delegate( 'unset', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/get:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method get\n   * @chainable\n   */\n  get                   : delegate( 'get', DelegateTypes.FIRST ),\n\n  /**\n   * Calls {{#crossLink \"Animator/hasAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method hasAttrimators\n   * @chainable\n   */\n  hasAttrimators        : delegate( 'hasAttrimators', DelegateTypes.TRUE ),\n\n  /**\n   * Calls {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method invoke\n   * @chainable\n   */\n  invoke                : delegate( 'invoke', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleStart\n   * @chainable\n   */\n  onCycleStart          : delegate( 'onCycleStart', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleEnd\n   * @chainable\n   */\n  onCycleEnd            : delegate( 'onCycleEnd', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/on:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method on\n   * @chainable\n   */\n  on                    : delegate( 'on', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/once:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method once\n   * @chainable\n   */\n  once                  : delegate( 'once', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/off:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method off\n   * @chainable\n   */\n  off                   : delegate( 'off', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trigger:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trigger\n   * @chainable\n   */\n  trigger               : delegate( 'trigger', DelegateTypes.THIS )\n\n});\n\n\n/**\n * Animates a single attribute over any period of time.\n *\n * @class Attrimator\n * @constructor\n */\nfunction Attrimator()\n{\n\n}\n\nClass.define( Attrimator,\n{\n\n  /**\n   * Resets this attrimator for the given attribute created by the given builder.\n   *\n   * @method reset\n   * @param {String} attribute\n   * @param {Builder} builder\n   * @param {Attrimator} [next]\n   */\n  reset: function(attribute, builder, next)\n  {\n    /**\n     * The name of the attribute this attrimator is animating.\n     *\n     * @property {String} attribute\n     */\n    this.attribute = attribute;\n\n    /**\n     * The builder that created this attrimator (if any).\n     *\n     * @property {Builder} builder\n     */\n    this.builder = builder;\n\n    /**\n     * The next attrimator to be played once this one has finished.\n     *\n     * @property {Attrimator} next\n     */\n    this.next = next;\n\n    /**\n     * The time the attrimator was started by the animator.\n     *\n     * @property {Number} startTime\n     */\n    this.startTime = 0;\n\n    /**\n     * The time the attrimator was last paused.\n     *\n     * @property {Number} pauseTime\n     */\n    this.pauseTime = 0;\n\n    /**\n     * The amount of time that has elapsed since the attrimator started.\n     *\n     * @property {Number} elapsed\n     */\n    this.elapsed = 0;\n\n    /**\n     * The time this attrimator should stop itself after it started in milliseconds.\n     *\n     * @property {Number} stopTime\n     */\n    this.stopTime = Number.POSITIVE_INFINITY;\n\n    /**\n     * Whether or not the attrimator is paused.\n     *\n     * @property {Boolean} paused\n     */\n    this.paused = false;\n\n    /**\n     * The cycle this attrimator belongs to.\n     *\n     * @type {Number} cycle\n     */\n    this.cycle = 0;\n\n    /**\n     * The amount of time in milliseconds this attrimator is delayed since start.\n     *\n     * @property {Number} delay\n     */\n    this.delay = 0;\n\n    /**\n     * The initial elapsed time in milliseconds when the attrimator is started.\n     *\n     * @property {Number} offset\n     */\n    this.offset = 0;\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject animator. This\n   * is called as early as possible to establish the start time of the\n   * attrimator so when the user isn't on the page time can be kept accurately.\n   *\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  prestart: function(now)\n  {\n    if ( this.startTime === 0 )\n    {\n      this.startTime = now - this.offset;\n      this.elapsed = this.offset;\n      this.finished = false;\n      this.prestartNext();\n    }\n  },\n\n  /**\n   * Calls {{#crossLink \"Attrimator/prestart:method\"}}{{/crossLink}} on the next\n   * attrimator if it can be called.\n   *\n   * @method prestartNext\n   */\n  prestartNext: function( overrideNext )\n  {\n    // If there is a next attrimator and this attrimator has been prestarted...\n    if ( this.next && this.startTime !== 0 )\n    {\n      // If override next is specified, clear next's startTime\n      if ( overrideNext )\n      {\n        this.next.startTime = 0;\n      }\n\n      // We can only prestart next if it has no startTime.\n      if ( this.next.startTime === 0 )\n      {\n        var totalTime = this.totalTime();\n\n        // If this attrimator has a finite total amount of time, it's end can be calculated.\n        if ( !isNaN( totalTime ) )\n        {\n          this.next.prestart( this.startTime + totalTime );\n        }\n      }\n    }\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject\n   * animator. This is called once in anim8.Animator.preupdate before the first\n   * time this attrimator is updated.\n   *\n   * @method start\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  start: function(now, animator)\n  {\n    this.prestart( now );\n  },\n\n  /**\n   * Invoked once when a new animation cycle is started on an Animator. If this\n   * attrimator updated the frame true must be returned.\n   *\n   * @method startCycle\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  startCycle: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Updates this attrimator given a time to animate to and the frame to\n   * provide with a new value. This method will return true if the attribute\n   * this is animating has been updated and needs to be applied to the subject.\n   *\n   * @method setTime\n   * @param {Number} now\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  setTime: function(now, frame)\n  {\n    if ( this.paused )\n    {\n      return false;\n    }\n\n    var updated = false;\n    var elapsed = now - this.startTime;\n\n    if ( elapsed > this.stopTime )\n    {\n      updated = this.finish( frame );\n    }\n    else if ( elapsed >= this.delay )\n    {\n      updated = this.update( elapsed, frame );\n    }\n\n    this.elapsed = elapsed;\n\n    return updated;\n  },\n\n  /**\n   * Updates the attrimator given elapsed time in milliseconds, the frame to\n   * apply a value to, and returns whether the frame was updated or not.\n   *\n   * @method update\n   * @param {Number} elapsed\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  update: function(elapsed, frame)\n  {\n    throw 'Attrimator.update not implemented';\n  },\n\n  /**\n   * Returns the amount of time that has elapsed in milliseconds.\n   *\n   * @method getElapsed\n   * @return {Number}\n   */\n  getElapsed: function()\n  {\n    return this.elapsed;\n  },\n\n  /**\n   * Stops this attrimator in the given number of milliseconds.\n   *\n   * @method stopIn\n   * @param {Number} milliseconds\n   * @chainable\n   */\n  stopIn: function(milliseconds)\n  {\n    this.stopTime = this.getElapsed() + milliseconds;\n\n    return this;\n  },\n\n  /**\n   * Stops this attrimator at the given time. If the given time is outside this\n   * attrimator and has a next attrimator that stopAt will be called.\n   *\n   * @method stopAt\n   * @param {Number} time\n   * @chainable\n   */\n  stopAt: function(time)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time > totalTime )\n    {\n      if ( this.next )\n      {\n        this.next.stopAt( time - totalTime );\n      }\n    }\n    else\n    {\n      this.stopTime = time;\n    }\n\n    return this;\n  },\n\n  /**\n   * If this attrimator repeats its animation this method will stop repitition\n   * after the next animation cycle.\n   *\n   * @chainable\n   */\n  nopeat: function()\n  {\n    return this;\n  },\n\n  /**\n   * Returns the value at the given time or returns false if it can't be\n   * calculated.\n   *\n   * @method valueAt\n   * @param {Number} time\n   * @param {Any} out\n   * @return {Any|False}\n   */\n  valueAt: function(time, out)\n  {\n    return false;\n  },\n\n  /**\n   * Returns the value at the given time or returns false if it can't be\n   * calculated. If the time is outside this attrimator, the next attrimator\n   * is checked.\n   *\n   * @method valueAt\n   * @param {Number} time\n   * @param {Any} out\n   * @return {Any|False}\n   */\n  valueAtSearch: function(time, out)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time > totalTime )\n    {\n      return this.next ? this.next.valueAtSearch( time - totalTime, out ) : false;\n    }\n\n    return this.valueAt( time, out );\n  },\n\n  /**\n   * Returns the attrimator at the given time.\n   *\n   * @method attrimatorAt\n   * @param {Number} time\n   * @return {Attrimator}\n   */\n  attrimatorAt: function(time)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time > totalTime )\n    {\n      return this.next ? this.next.attrimatorAt( time - totalTime ) : null;\n    }\n\n    return this;\n  },\n\n  /**\n   * The total amount of time this attrimator will take in milliseconds. This\n   * may be an infinite number.\n   *\n   * @method totalTime\n   * @return {Number}\n   */\n  totalTime: function()\n  {\n    return this.stopTime;\n  },\n\n  /**\n   * The time remaining before this attrimator and any following will be\n   * finished.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.totalTime() - this.elapsed + ( this.next ? this.next.timeRemaining() : 0 );\n  },\n\n  /**\n   * Clones this attrimator.\n   *\n   * @method clone\n   * @return {Attrimator}\n   */\n  clone: function()\n  {\n    throw 'AttributeAnimator.clone not implemented';\n  },\n\n  /**\n   * Returns whether this attrimator has computed values which need to be\n   * resolved by the subject animator calling prepare on this attrimator.\n   *\n   * @method hasComputed\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    return false;\n  },\n\n  /**\n   * Determines whether this attrimator will run infinitely.\n   *\n   * @method isInfinite\n   * @return {Boolean}\n   */\n  isInfinite: function()\n  {\n    return !isFinite( this.stopTime );\n  },\n\n  /**\n   * Pauses this attrimator if it isn't already paused.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause: function()\n  {\n    if ( !this.paused )\n    {\n      this.pauseTime = now();\n      this.paused = true;\n    }\n\n    return this;\n  },\n\n  /**\n   * Resumes this attrimator if it's paused. This involves resetting the start\n   * time of the attrimator.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume: function()\n  {\n    if ( this.paused )\n    {\n      var totalPausedTime = now() - this.pauseTime;\n      var delay = this;\n\n      while ( delay && delay.startTime !== 0 )\n      {\n        delay.startTime += totalPausedTime;\n        delay = delay.next;\n      }\n\n      this.paused = false;\n    }\n\n    return this;\n  },\n\n  /**\n   * Whether this attrimator is paused.\n   *\n   * @method isPaused\n   * @return {Boolean}\n   */\n  isPaused: function()\n  {\n    return this.paused;\n  },\n\n  /**\n   * Sets the final state of the attrimator to the frame if one exists and\n   * returns true, otherwise false is returned and frame remains unchanged.\n   *\n   * @method finish\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  finish: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Whether this attrimator is finished.\n   *\n   * @method isFinished\n   * @return {Boolean}\n   */\n  isFinished: function()\n  {\n    return false;\n  },\n\n  /**\n   * Returns the builder that created this attrimator (if any).\n   *\n   * @method getBuilder\n   * @return {Builder}\n   */\n  getBuilder: function()\n  {\n    return this.builder;\n  },\n\n  /**\n   * Places the given attrimator on the end of the chain of attrimators starting\n   * with this attrimator.\n   *\n   * @method queue\n   * @param {Attrimator} next\n   * @chainable\n   */\n  queue: function(next)\n  {\n    if ( this.next )\n    {\n      this.next.queue( next );\n    }\n    else\n    {\n      this.next = next;\n      this.prestartNext();\n    }\n\n    return this;\n  },\n\n  /**\n   * Places the given attrimator at the given time.\n   */\n  nextAt: function(next, time)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time < totalTime )\n    {\n      this.stopTime = time;\n      this.next = next;\n    }\n    else if ( this.next )\n    {\n      this.next.nextAt( next, time - totalTime );\n    }\n    else\n    {\n      next.delay += time - totalTime;\n      this.next = next;\n    }\n\n    return this;\n  },\n\n  /**\n   * Parses a value with the calculator given a default value to fallback on.\n   *\n   * @method parseValue\n   * @param {Animator} animator\n   * @param {T|Function|True} value\n   * @param {T} defaultValue\n   * @return {T|Function}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  }\n\n});\n\n\n/**\n * A map of attrimators by their attribute name.\n *\n * @class AttrimatorMap\n * @constructor\n * @extends FastMap\n */\nfunction AttrimatorMap()\n{\n  this.reset();\n}\n\nClass.extend( AttrimatorMap, FastMap,\n{\n\n  /**\n   * Sets the group identifier for attrimators in this map. If force is\n   * specified it will overwrite any existing group identifier on attrimators.\n   * If deep is true, then all next attrimators also could have their group\n   * identifiers set.\n   *\n   * @method setGroup\n   * @param {Number} groupId\n   * @param {Boolean} [force=false]\n   * @param {Boolean} [deep=false]\n   */\n  setGroup: function(groupId, force, deep)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[ i ];\n\n      do\n      {\n        if ( !attrimator.groupId || force )\n        {\n          attrimator.groupId = groupId;\n        }\n\n        attrimator = attrimator.next;\n\n      } while ( deep && attrimator );\n    }\n  },\n\n  /**\n   * Adds a delay to all attrimators in this map.\n   *\n   * @method delay\n   * @param {Number} time\n   * @return {AttrimatorMap}\n   */\n  delay: function(time)\n  {\n    var attrimators = this.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      attrimators[ i ].delay += time;\n    }\n\n    return this;\n  },\n\n  /**\n   * Queues the attrimator on this map. If the attribute is already on this map\n   * this is placed on the end of the Attrimator chain, otherwise the attrimator\n   * is added to the map. If there is an attrimator already on the map it's\n   * returned.\n   *\n   * @method queue\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  queue: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var current = this.get( attr );\n\n    if ( current )\n    {\n      current.queue( attrimator );\n    }\n    else\n    {\n      this.put( attr, attrimator );\n    }\n\n    return current;\n  },\n\n  /**\n   * Queues the given map to this map. The attrimators placed on this map are\n   * queued and delayed in a way that they all start at the same time. If a\n   * function is provided as the second argument it is invoked whenever an\n   * attrimator in the given map is new & added to this map.\n   *\n   * @method queueMap\n   * @param {AttrimatorMap} map\n   * @param {Function} [onNewAttribute]\n   * @param {Object} [context]\n   * @chainable   188703090\n   */\n  queueMap: function(map, offset, onNewAttribute, context)\n  {\n    var maxRemaining = this.timeRemaining();\n    var attrimators = map.values;\n    var hasCallback = isFunction( onNewAttribute );\n    var mapOffset = coalesce( offset, 0 );\n    var timeOffset = maxRemaining + mapOffset;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = this.get( attr );\n\n      if ( existing )\n      {\n        if ( existing.isInfinite() )\n        {\n          existing.stopIn( attrimator.delay + timeOffset );\n        }\n        else\n        {\n          attrimator.delay += (timeOffset - existing.timeRemaining());\n        }\n\n        existing.queue( attrimator );\n      }\n      else\n      {\n        attrimator.delay += timeOffset;\n\n        this.put( attr, attrimator );\n\n        if ( hasCallback )\n        {\n          onNewAttribute.call( context || this, attrimator );\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the attrimator at the given index replacing it with the next\n   * attrimator if one exists.\n   *\n   * @method unqueueAt\n   * @param {Number} index\n   * @chainable\n   */\n  unqueueAt: function(index)\n  {\n    var current = this.values[ index ];\n\n    if ( current.next )\n    {\n      this.values[ index ] = current.next;\n    }\n    else\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Plays the given attrimators at the given time. This performs the necessary\n   * stopping, queueing, and delaying of attrimators that may need to be done.\n   *\n   * @method playMapAt\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Boolean} all\n   * @param {Number} time\n   * @chainable\n   */\n  playMapAt: function(attrimatorMap, all, time)\n  {\n    if ( all )\n    {\n      this.stopNotPresentAt( attrimatorMap, time );\n    }\n\n    var attrimators = attrimatorMap.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = this.get( attr );\n\n      if ( existing )\n      {\n        existing.nextAt( attrimator, time );\n      }\n      else\n      {\n        attrimator.delay += time;\n\n        this.put( attr, attrimator );\n      }\n    }\n\n    return this;\n  },\n\n  // TODO\n  transitionMapAt: function(attrimatorMap, transition, all)\n  {\n\n  },\n\n  /**\n   * Finishes any attrimators on this animator that are not present in the given\n   * map of attrimators. Optionally a delay in stopping them can be given.\n   *\n   * @method finishNotPresent\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Number} [delay=0]\n   * @chainable\n   * @protected\n   */\n  finishNotPresent: function(attrimatorMap, delay)\n  {\n    var attrimators = this.values;\n    var stopIn = delay || 0;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( !attrimatorMap.has( attrimator.attribute ) )\n      {\n        attrimator.stopIn( stopIn );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Finishes any attrimators on this animator that are not present in the given\n   * map of attrimators. Optionally a delay in stopping them can be given.\n   *\n   * @method stopNotPresentAt\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Number} time\n   * @chainable\n   * @protected\n   */\n  stopNotPresentAt: function(attrimatorMap, time)\n  {\n    var attrimators = this.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( !attrimatorMap.has( attrimator.attribute ) )\n      {\n        attrimator.stopAt( time );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Clones this map returning a deep clone where all attrimators are cloned.\n   *\n   * @method clone\n   * @return {AttrimatorMap}\n   */\n  clone: function()\n  {\n    var values = this.values;\n    var keys = this.keys;\n    var clone = new AttrimatorMap();\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      clone.values[i] = values[i].clone();\n      clone.keys[i] = keys[i];\n      clone.indices[ keys[i] ] = i;\n    }\n\n    return clone;\n  },\n\n  /**\n   * Returns the time remaining for all finite attrimators in this map. The time\n   * remaining includes queued attrimators.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function(returnInfinity)\n  {\n    var maxRemaining = 0;\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n\n      if ( !attrimator.isInfinite() )\n      {\n        maxRemaining = Math.max( maxRemaining, attrimator.timeRemaining() );\n      }\n      else if ( returnInfinity )\n      {\n        return Number.Infinity;\n      }\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Sets the cycle of the attrimators in this map. If there are attrimators\n   * queued the are given the next cycle number. The final cycle number is\n   * returned.\n   *\n   * @method applyCycle\n   * @param {Number} nextCycle\n   * @return {Number}\n   */\n  applyCycle: function(nextCycle)\n  {\n    var currentDepth = this.values;\n    var nextDepth = null;\n\n    while ( currentDepth.length )\n    {\n      nextDepth = [];\n\n      for (var i = currentDepth.length - 1; i >= 0; i--)\n      {\n        var attrimator = currentDepth[ i ];\n\n        attrimator.cycle = nextCycle;\n\n        if ( attrimator.next )\n        {\n          nextDepth.push( attrimator.next );\n        }\n      }\n\n      if ( nextDepth.length )\n      {\n        nextCycle++;\n      }\n\n      currentDepth = nextDepth;\n    }\n\n    return nextCycle;\n  },\n\n  /**\n   * Iterates through all attrimators in this map, at any depth.\n   *\n   * @method iterate\n   * @param  {Function} callback\n   * @param  {Object} [context]\n   * @chainable\n   */\n  iterate: function(callback, context)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n      var previous = null;\n      var depth = 0;\n\n      while ( attrimator )\n      {\n        callback.call( context || this, attrimator, depth++, previous );\n\n        attrimator = (previous = attrimator).next;\n      }\n    }\n\n    return this;\n  }\n\n});\n\n\n/**\n * Instantiates a new Builder. Builders are responsible for taking animation\n * definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generating & placing {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}\n * onto an {{#crossLink \"AttrimatorMap\"}}{{/crossLink}}.\n *\n * Builders are added to the {{#crossLink \"anim8.builder\"}}{{/crossLink}} object\n * by a key and when that key exists in an animation definition, the animation\n * definition is passed to the {{#crossLink \"Builder/parse:method\"}}{{/crossLink}}\n * to generate {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class Builder\n * @constructor\n */\nfunction Builder()\n{\n\n}\n\n/**\n * Returns the next merge ID. Merge IDs are used when merging options into\n * attrimators to perform an optimal merge.\n *\n * @method nextMergeId\n * @static\n */\nBuilder.nextMergeId = (function()\n{\n  var id = 0;\n  return function() {\n    return id++;\n  };\n})();\n\nClass.define( Builder,\n{\n\n  /**\n   * Parses the animation object (and optionally an option object) and pushes\n   * all generated attrimatorMap to the given array.\n   *\n   * @method parse\n   * @param {Object} animation\n   * @param {Object} options\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    throw 'Builder.parse not implemented';\n  },\n\n  /**\n   * Merges the options with the given event instances. This is when an existing\n   * animation is provided but the user wants to override the animation's options.\n   *\n   * Because event properties can be specified in several places there's a priority\n   * to which one takes precedence. The properties specified in the animation object\n   * itself are highest priority, followed by the new options, then by the old\n   * options, and finally by the existing property on the event instance.\n   *\n   * @method merge\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  merge: function( animation, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    var builder = this;\n    var factory = $factory( animation.factory );\n\n    attrimatorMap.iterate(function(e)\n    {\n      if ( e.getBuilder() === builder )\n      {\n        builder.mergeAttrimator( e, e.attribute, helper, factory );\n      }\n    });\n  },\n\n  /**\n   * Merges new options contained in the helper into the given attrimator.\n   *\n   * @method mergeAttrimator\n   * @param {Attrimator} e\n   * @param {String} attr\n   * @param {BuilderHelper} helper\n   * @param {Factory} factory\n   */\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.easing    = helper.mergeEasing( attr, e.easing );\n    e.repeat    = helper.mergeRepeat( attr, e.repeat );\n    e.delay     = helper.mergeDelay( attr, e.delay );\n    e.sleep     = helper.mergeSleep( attr, e.sleep );\n    e.duration  = helper.mergeDuration( attr, e.duration );\n    e.offset    = helper.mergeOffset( attr, e.offset );\n    e.scale     = helper.mergeScale( attr, e.scale );\n    e.scaleBase = helper.mergeScaleBase( attr, e.scaleBase, factory );\n  },\n\n  /**\n   * Calls merge on all builders specified in the given animation definition.\n   *\n   * @method submerge\n   * @protected\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   */\n  submerge: function( animation, newOptions, oldOptions, attrimatorMap )\n  {\n    var helper = new BuilderHelper( animation, oldOptions, newOptions );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( animation, newOptions, oldOptions, attrimatorMap, helper );\n      }\n    }\n  }\n});\n\n\n/**\n * Instantiates a new instance of Builder Helper.\n *\n * @param {Object} input\n * @param {Object} oldOptions\n * @param {Object} newOptions\n * @class BuilderHelper\n * @constructor\n */\nfunction BuilderHelper( input, oldOptions, newOptions )\n{\n  this.input = input;\n  this.oldOptions = oldOptions || {};\n  this.newOptions = newOptions || {};\n\n  this.prepareSpecifics( 'easings' );\n  this.prepareSpecifics( 'repeats' );\n  this.prepareSpecifics( 'delays' );\n  this.prepareSpecifics( 'sleeps' );\n  this.prepareSpecifics( 'durations' );\n  this.prepareSpecifics( 'offsets' );\n  this.prepareSpecifics( 'scales' );\n  this.prepareSpecifics( 'scaleBases' );\n}\n\nClass.define( BuilderHelper,\n{\n\n  /**\n   * If an object with the given name doesn't exist on the input it's created.\n   *\n   * @method prepareSpecifics\n   * @param {String} specifics\n   */\n  prepareSpecifics: function(specifics)\n  {\n    if ( !isObject( this.input[ specifics ] ) )\n    {\n      this.input[ specifics ] = {};\n    }\n  },\n\n  /* PARSING */\n\n  /**\n   * Parses an easing from the input.\n   *\n   * @method parseEasing\n   * @param  {String} attr\n   * @return {String|Function|Array}\n   */\n  parseEasing: function(attr)\n  {\n    return this.parseFirst( attr, 'easing', 'easings' );\n  },\n\n  /**\n   * Parses repeats from the input.\n   *\n   * @method parseRepeat\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseRepeat: function(attr)\n  {\n    return this.parseNumber( attr, $repeat, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Parses delay from the input.\n   *\n   * @method parseDelay\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDelay: function(attr)\n  {\n    return this.parseNumber( attr, $delay, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Parses sleep from the input.\n   *\n   * @method parseSleep\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseSleep: function(attr)\n  {\n    return this.parseNumber( attr, $sleep, $time, 'sleep', 'sleepAdd', 'sleepScale', 'sleeps' );\n  },\n\n  /**\n   * Parses duration from the input.\n   *\n   * @method parseDuration\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDuration: function(attr)\n  {\n    return this.parseNumber( attr, $duration, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Parses offset from the input.\n   *\n   * @method parseOffset\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseOffset: function(attr)\n  {\n    return this.parseNumber( attr, $offset, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Parses scale from the input.\n   *\n   * @method parseScale\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseScale: function(attr)\n  {\n    return this.parseNumber( attr, $scale, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Parses scale base from the input.\n   *\n   * @method parseScaleBase\n   * @param  {String} attr\n   * @return {Any}\n   */\n  parseScaleBase: function(attr)\n  {\n    return this.parseFirst( attr, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Parses a value from the input given the attribute, option, and specific.\n   *\n   * @method parseFirst\n   * @param {String} attr\n   * @param {String} option\n   * @param {String} specifics\n   * @return {Any}\n   */\n  parseFirst: function(attr, option, specifics)\n  {\n    return coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n  },\n\n  /**\n   * Parses an event from the input given a path & builder for the event.\n   *\n   * @method parseEvent\n   * @param {String} attr\n   * @param {Path} path\n   * @param {Builder} builder\n   * @param {Boolean} hasInitialState\n   * @return {Event}\n   */\n  parseEvent: function(attr, path, builder, hasInitialState, mergeId)\n  {\n    var duration   = this.parseDuration( attr );\n    var easing     = this.parseEasing( attr );\n    var delay      = this.parseDelay( attr );\n    var sleep      = this.parseSleep( attr );\n    var repeat     = this.parseRepeat( attr );\n    var offset     = this.parseOffset( attr );\n    var scale      = this.parseScale( attr );\n    var scaleBase  = this.parseScaleBase( attr );\n    var event      = new Event( attr, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, hasInitialState, builder, null, this.input );\n\n    return event;\n  },\n\n  /**\n   * Parses a number from the input given parse functions.\n   *\n   * @method parseNumber\n   * @param {String} attr\n   * @param {Function} parseFunction\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  parseNumber: function(attr, parseFunction, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n    var base = parseFunction( baseRaw );\n    var add = parseOptionFunction( this.oldOptions[ optionAdd ], 0 );\n    var scale = coalesce( this.oldOptions[ optionScale ], 1 );\n\n    return (add === 0 && scale === 1) ? baseRaw : (base + add) * scale;\n  },\n\n  /* MERGING */\n\n  /**\n   * Merges easing based on the input, new options, and the current easing.\n   *\n   * @method mergeEasing\n   * @param {String} attr\n   * @param {Function} current\n   * @return {Function}\n   */\n  mergeEasing: function(attr, current)\n  {\n    return this.mergeFirst( attr, current, $easing, 'easing', 'easings' );\n  },\n\n  /**\n   * Merges repeats based on the input, new options, and the current repeat.\n   *\n   * @method mergeRepeat\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeRepeat: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Merges delay based on the input, new options, and the current delay.\n   *\n   * @method mergeDelay\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDelay: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Merges sleep based on the input, new options, and the current sleep.\n   *\n   * @method mergeSleep\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeSleep: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'sleep', 'sleepAdd', 'sleepScale', 'scales' );\n  },\n\n  /**\n   * Merges duration based on the input, new options, and the current duration.\n   *\n   * @method mergeDuration\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDuration: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Merges offset based on the input, new options, and the current offset.\n   *\n   * @method mergeOffset\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeOffset: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Merges scale based on the input, new options, and the current scale.\n   *\n   * @method mergeScale\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeScale: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Merges scale base based on the input, new options, and the current scale\n   * base.\n   *\n   * @method mergeScaleBase\n   * @param {String} attr\n   * @param {T} current\n   * @param {Factory} factory\n   * @return {T}\n   */\n  mergeScaleBase: function(attr, current, factory)\n  {\n    var calc = factory.attribute( attr ).calculator;\n\n    var parseFunction = function(value, defaultValue) {\n      return calc.parse( value, defaultValue );\n    };\n\n    return this.mergeFirst( attr, current, parseFunction, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Returns the first available option from input, new options, old options,\n   * and the current value.\n   *\n   * @method mergeFirst\n   * @param {String} attr\n   * @param {T} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} specifics\n   * @return {T}\n   */\n  mergeFirst: function(attr, current, parseOptionFunction, option, specifics)\n  {\n    var specific = this.input[ specifics ][ attr ];\n    var value = coalesce( specific, this.newOptions[ option ], this.oldOptions[ option ] );\n\n    return parseOptionFunction( value, current );\n  },\n\n  /**\n   * Merges a number by returning the first occurrence from input, new options,\n   * old options, and the current value.\n   *\n   * @method mergeNumber\n   * @param {String} attr\n   * @param {Number} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  mergeNumber: function(attr, current, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.newOptions[ option ], this.oldOptions[ option ] );\n    var base = parseOptionFunction( baseRaw, current );\n    var add = parseOptionFunction( coalesce( this.newOptions[ optionAdd ], this.oldOptions[ optionAdd ] ), 0 );\n    var scale = coalesce( this.newOptions[ optionScale ], this.oldOptions[ optionScale ], 1 );\n\n    return (base + add) * scale;\n  }\n\n});\n\n\n\n\n/**\n * Instantiates a new Calculator instance.\n *\n * @class Calculator\n * @constructor\n */\nfunction Calculator()\n{\n\n}\n\nClass.define( Calculator,\n{\n\n  /**\n   * Creates the constants for this calculator.\n   *\n   * @method createConstants\n   */\n  createConstants: function()\n  {\n    this.ZERO = this.create();\n    this.ONE = this.parse( 1.0, this.ZERO );\n    this.INFINITY = this.parse( Number.POSITIVE_INFINITY, this.ZERO );\n  },\n\n  /**\n   * Parses the given input for a value this calculator understands.\n   *\n   * @method parse\n   * @param  {T} x\n   * @param  {T} defaultValue\n   * @return {T|Function|False}\n   */\n  parse: function(x, defaultValue)\n  {\n    throw 'Calculator.parse not implemented';\n  },\n\n  /**\n   * Parses the given input for a value this calculator understands.\n   *\n   * @method parse\n   * @param  {T} x\n   * @param  {T} defaultValue\n   * @return {T|Function|False}\n   */\n  parseArray: function(input, output, defaultValue)\n  {\n    if (input.length !== output.length)\n    {\n      output.length = input.length;\n    }\n\n    var parsedDefault = this.parse( defaultValue, this.ZERO );\n\n    for (var i = 0; i < input.length; i++)\n    {\n      output[ i ] = this.parse( input[ i ], parsedDefault );\n    }\n\n    return output;\n  },\n\n  /**\n   * Copies a value and places it in out and returns out.\n   *\n   * @method copy\n   * @param {T} out\n   * @param {T} copy\n   * @return {T}\n   */\n  copy: function(out, copy)\n  {\n    throw 'Calculator.copy not implemented';\n  },\n\n  /**\n   * Zeros out and returns it.\n   *\n   * @method zero\n   * @param {T} out\n   * @return {T}\n   */\n  zero: function(out)\n  {\n    throw 'Calculator.zero not implemented';\n  },\n\n  /**\n   * Clones the value and returns the clone.\n   *\n   * @method clone\n   * @param {T} clone\n   * @return {T}\n   */\n  clone: function(clone)\n  {\n    return this.copy( this.create(), clone );\n  },\n\n  /**\n   * Creates an empty value equivalent to zero.\n   *\n   * @method create\n   * @return {T}\n   */\n  create: function()\n  {\n    throw 'Calculator.create not implemented';\n  },\n\n  /**\n   * Scales out by the given scalar value and returns out.\n   *\n   * @method scale\n   * @param {T} out\n   * @param {Number} scale\n   * @return {T}\n   */\n  scale: function(out, scale)\n  {\n    return this.adds( out, out, scale - 1 );\n  },\n\n  /**\n   * Adds an amount to out and returns out.\n   *\n   * @method add\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  add: function(out, amount)\n  {\n    return this.adds( out, amount, 1 );\n  },\n\n  /**\n   * Adds an amount scaled by a scalar value to out and returns out.\n   *\n   * @method adds\n   * @param {T} out\n   * @param {T} amount\n   * @param {Number} amountScale\n   * @return {T}\n   */\n  adds: function(out, amount, amountScale)\n  {\n    throw 'Calculator.adds not implemented';\n  },\n\n  /**\n   * Subtracts an amount from out and returns out.\n   *\n   * @method sub\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  sub: function(out, amount)\n  {\n    return this.adds( out, amount, -1 );\n  },\n\n  /**\n   * Multiplies out by some amount and returns out.\n   *\n   * @method mul\n   * @param {T} out\n   * @param {T} scale\n   * @return {T}\n   */\n  mul: function(out, scale)\n  {\n    throw 'Calculator.mul not implemented';\n  },\n\n  /**\n   * Interpolates out between start & end given a delta value and returns out.\n   * A delta value typically lies between 0 and 1 inclusively.\n   *\n   * @method interpolate\n   * @param {T} out\n   * @param {T} start\n   * @param {T} end\n   * @param {Number} delta\n   * @return {T}\n   */\n  interpolate: function(out, start, end, delta)\n  {\n    out = this.zero( out );\n    out = this.adds( out, start, 1 - delta );\n    out = this.adds( out, end, delta );\n\n    return out;\n  },\n\n  /**\n   * Returns a random value between the given min and max.\n   *\n   * @method random\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  random: function(out, min, max)\n  {\n    return this.interpolate( out, min, max, Math.random() );\n  },\n\n  /**\n   * Calculates the distance between the two values.\n   *\n   * @method distance\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distance: function(a, b)\n  {\n    return Math.sqrt( this.distanceSq( a, b ) );\n  },\n\n  /**\n   * Calculates the squared distance between the two values.\n   *\n   * @method distanceSq\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distanceSq: function(a, b)\n  {\n    throw 'Calculator.distanceSq not implemented';\n  },\n\n  /**\n   * Returns the distance the given value is from zero.\n   *\n   * @method length\n   * @param {T} a\n   * @return {Number}\n   */\n  length: function(a)\n  {\n    return this.distance( a, this.ZERO );\n  },\n\n  /**\n   * Returns the squared distance the given value is from zero.\n   *\n   * @method lengthSq\n   * @param {T} a\n   * @return {Number}\n   */\n  lengthSq: function(a)\n  {\n    return this.distanceSq( a, this.ZERO );\n  },\n\n  /**\n   * Determines whether the given value is valid for this calculator.\n   *\n   * @method isValid\n   * @param {any} a\n   * @return {Boolean}\n   */\n  isValid: function(a)\n  {\n    throw 'Calculator.isValid not implemented';\n  },\n\n  /**\n   * Returns whether the given value is not a number or has a component which is\n   * not a number.\n   *\n   * @method isNaN\n   * @param {T} a\n   * @return {Boolean}\n   */\n  isNaN: function(a)\n  {\n    throw 'Calculator.isNaN not implemented';\n  },\n\n  /**\n   * Determines whether the given value is equivalent to zero given an\n   * acceptable distance from zero (epsilon).\n   *\n   * @method isZero\n   * @param {T} a\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isZero: function(a, epsilon)\n  {\n    throw 'Calculator.isZero not implemented';\n  },\n\n  /**\n   * Determines whether the given values are equivalent up to an acceptable\n   * distance apart.\n   *\n   * @method isEqual\n   * @param {T} a\n   * @param {T} b\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isEqual: function(a, b, epsilon)\n  {\n    throw 'Calculator.isEqual not implemented';\n  },\n\n  /**\n   * Sets out to the minimum value between the two values and returns out.\n   *\n   * @method min\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  min: function(out, a, b)\n  {\n    throw 'Calculator.min not implemented';\n  },\n\n  /**\n   * Sets out to the maximum value between two values and returns out.\n   *\n   * @method max\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  max: function(out, a, b)\n  {\n    throw 'Calculator.max not implemented';\n  },\n\n  /**\n   * Performs the dot product between two values.\n   *\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  dot: function(a, b)\n  {\n    throw 'Calculator.dot not implemented';\n  },\n\n  /**\n   * Clamps out between the given minimum and maximum values and returns out.\n   *\n   * @method clamp\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  clamp: function(out, min, max)\n  {\n    var distSq = this.distanceSq( out, this.ZERO );\n\n    if ( distSq < min * min )\n    {\n      return this.scale( out, min / Math.sqrt( distSq ) );\n    }\n    else if ( distSq > max * max )\n    {\n      return this.scale( out, max / Math.sqrt( distSq ) );\n    }\n\n    return out;\n  },\n\n  /**\n   * Sets the length of the given value and returns the new value.\n   *\n   * @param {T} out\n   * @param {Number} length\n   * @return {T}\n   */\n  setLength: function(out, length)\n  {\n    var lengthSq = this.lengthSq( out );\n\n    if ( lengthSq !== 0 )\n    {\n      return this.scale( out, length / Math.sqrt( lengthSq ) );\n    }\n\n    return out;\n  },\n\n  /**\n   * Determines whether the given value appears to be a relative value. Relative\n   * values are stored as strings starting with a plus or minus for positive or\n   * negative respectively.\n   *\n   * @method isRelative\n   * @param {Any} x\n   * @return {Boolean}\n   * @protected\n   */\n  isRelative: function(x)\n  {\n    return isString( x ) && ( x[0] === '-' || x[0] === '+' );\n  },\n\n  /**\n   * Returns the relative amount of the given relative value. If the value is\n   * not a valid relative value false is returned.\n   *\n   * @method getRelativeAmount\n   * @param {String} x\n   * @return {Number}\n   * @protected\n   */\n  getRelativeAmount: function(x)\n  {\n    var z = parseFloat( x );\n\n    return isNaN(z) ? false : z;\n  }\n\n});\n\n\n/**\n * Instantiates a Defer instance. Defer instances keep track of method calls\n * to call at a later time - after an event occurs. The first argument needs\n * to be a function which returns an instance of anim8.Defer when it's invoked.\n * The second argument is an array of methods that can be deferred.\n *\n * @param {Function} factory\n * @param {Array} methods\n * @class Defer\n * @constructor\n */\nfunction Defer(factory, methods)\n{\n  this.$factory = factory;\n\n  for (var i = 0; i < methods.length; i++)\n  {\n    this[ methods[i] ] = this.$push( methods[i] );\n  }\n}\n\nClass.define( Defer,\n{\n  /**\n   * Resets the defer instance.\n   *\n   * @method $reset\n   * @param {Object} eventable\n   * @param {Any} previous\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   */\n  $reset: function(eventable, previous, eventType, event, callback)\n  {\n    this.$eventable = eventable;\n    this.$previous = previous;\n    this.$eventType = eventType;\n    this.$event = event;\n    this.$callback = callback;\n    this.$calls = [];\n    this.$next = [];\n\n    if ( this.$isRoot() )\n    {\n      this.$register();\n    }\n  },\n\n  /**\n   * Determines whether this Defer instance is at the root.\n   *\n   * @method $isRoot\n   * @return {Boolean}\n   */\n  $isRoot: function()\n  {\n    return this.$eventable === this.$previous;\n  },\n\n  /**\n   * Registers this Defer instance with the eventable.\n   *\n   * @method $register\n   */\n  $register: function()\n  {\n    this.$eventable[ this.$eventType ]( this.$event, this.$run, this );\n  },\n\n  /**\n   * Creates a defered function which passes the method and arguments for\n   * any method call into an array of calls on this Defer instance.\n   *\n   * @method $push\n   * @param {String} methodName\n   * @return {Function}\n   */\n  $push: function(methodName)\n  {\n    return function()\n    {\n      this.$calls.push( [methodName, arguments] );\n\n      return this;\n    };\n  },\n\n  /**\n   * Executes all defered method calls and starts any child Defer instances.\n   *\n   * @method $run\n   */\n  $run: function()\n  {\n    // Invoke the callback if one was given.\n    if ( isFunction( this.$callback ) )\n    {\n      this.$callback.call( this.$eventable, this );\n    }\n\n    for (var i = 0; i < this.$calls.length; i++)\n    {\n      var call = this.$calls[ i ];\n\n      this.$eventable[ call[0] ].apply( this.$eventable, call[1] );\n    }\n\n    for (var k = 0; k < this.$next.length; k++)\n    {\n      this.$next[ k ].$register();\n    }\n  },\n\n  /**\n   * Returns the object before the defer statement.\n   *\n   * @method undefer\n   * @return {Any}\n   */\n  undefer: function()\n  {\n    return this.$previous;\n  },\n\n  /**\n   * Defers any following method calls to after the given event is triggered. A\n   * callback can be specified which is a function invoked after the event is\n   * triggered.\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   * @return {Defer}\n   */\n  defer: function(eventType, event, callback)\n  {\n    var next = new this.$factory( this.$eventable, this, eventType, event, callback );\n\n    this.$next.push( next );\n\n    return next;\n  }\n\n});\n\n\n/**\n * Provides the ability to defer method calls until certain events are triggered.\n *\n * @class DeferAnimator\n * @constructor\n * @extends Defer\n */\nfunction DeferAnimator(animator, previous, eventType, event)\n{\n  this.$reset( animator, previous, eventType, event );\n}\n\n/**\n * Creates the Defer prototype for the following Animator methods.\n */\nDeferAnimator.prototype = new Defer( DeferAnimator,\n[\n  /**\n   * Defers the {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'restore',\n\n  /**\n   * Defers the {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method placeAttrimator\n   */\n  'placeAttrimator',\n\n  /**\n   * Defers the {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method applyInitialState\n   */\n  'applyInitialState',\n\n  /**\n   * Defers the {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method preupdate\n   */\n  'preupdate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/update:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method update\n   */\n  'update',\n\n  /**\n   * Defers the {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method apply\n   */\n  'apply',\n\n  /**\n   * Defers the {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'trimAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/activate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'activate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'deactivate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'destroy',\n\n  /**\n   * Defers the {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'spring',\n\n  /**\n   * Defers the {{#crossLink \"Animator/play:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'play',\n\n  /**\n   * Defers the {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'playAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queue\n   */\n  'queue',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queueAttrimators\n   * @protected\n   */\n  'queueAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transition\n   */\n  'transition',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transitionAttrimators\n   * @protected\n   */\n  'transitionAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tween\n   */\n  'tween',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenTo\n   */\n  'tweenTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenMany\n   */\n  'tweenMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyTo\n   */\n  'tweenManyTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenFrom\n   */\n  'tweenFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyFrom\n   */\n  'tweenManyFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/move:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method move\n   */\n  'move',\n\n  /**\n   * Defers the {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method moveMany\n   */\n  'moveMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method follow\n   */\n  'follow',\n\n  /**\n   * Defers the {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method stop\n   */\n  'stop',\n\n  /**\n   * Defers the {{#crossLink \"Animator/end:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method end\n   */\n  'end',\n\n  /**\n   * Defers the {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method finish\n   */\n  'finish',\n\n  /**\n   * Defers the {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method nopeat\n   */\n  'nopeat',\n\n  /**\n   * Defers the {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method pause\n   */\n  'pause',\n\n  /**\n   * Defers the {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method resume\n   */\n  'resume',\n\n  /**\n   * Defers the {{#crossLink \"Animator/set:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method set\n   */\n  'set',\n\n  /**\n   * Defers the {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method unset\n   */\n  'unset',\n\n  /**\n   * Defers the {{#crossLink \"Animator/get:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method get\n   */\n  'get',\n\n  /**\n   * Defers the {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method invoke\n   */\n  'invoke',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleStart\n   */\n  'onCycleStart',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleEnd\n   */\n  'onCycleEnd'\n]);\n\n\nvar EasingTypes = {};\n\n/**\n * A collection of easing type functions. An easing type functions takes an\n * easing function as an argument and modifies it's input and output values.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.easingType\n */\n\n/**\n * Plays the animation forward normally.\n *\n * @method in\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['in'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum.\n *\n * @method out\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['out'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum halfway.\n *\n * @method inout\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['inout'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x ) * 0.5;\n    }\n    else\n    {\n      return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n    }\n  };\n};\n\n/**\n * Plays the aninmation forwards with the given easing, and backwards with the same easing momentum.\n *\n * @method yoyo\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['yoyo'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation forwards with the given easing, and backwards reflecting the easing's momentum.\n *\n * @method mirror\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['mirror'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return 1.0 - easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation backwards with using the same easing momentum.\n *\n * @method reverse\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['reverse'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation backwards by flipping the easing's momentum.\n *\n * @method flip\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['flip'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( x );\n  };\n};\n\n\n/**\n * A collection of easing functions. An easing functions takes a single number\n * as input that's between 0 and 1 inclusively and returns a number that\n * progresses from 0 to 1 but in-between values may return a number that's less\n * than 0 or greater than 1.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.Easings\n */\nvar Easings = {};\n\n\n/**\n * Returns true if the given string would result in returning an easing.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @method anim8.isEasingName\n * @for Core\n * @param {String} easing\n * @return {Boolean}\n */\nfunction isEasingName(easing)\n{\n  if ( easing in Easings )\n  {\n    return true;\n  }\n\n  var pair = easing.split('-');\n  var e = pair[0];\n  var t = pair[1];\n\n  if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n  {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method linear\n * @for anim8.easing\n */\nEasings['linear'] = function(x)\n{\n  return x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['quad'] = function(x)\n{\n  return x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDAuMyooMS14KSooMS14KSp4KSsoMy4wKigxLXgpKngqeCkrKHgqeCp4KSkqKDEteCkreCooMS0oMS14KSooMS14KSooMS14KSooMS14KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['ease'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n\n  return eq1 * i + eq2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method cubic\n * @for anim8.easing\n */\nEasings['cubic'] = function(x)\n{\n  return x * x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method quartic\n * @for anim8.easing\n */\nEasings['quartic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quintic\n * @for anim8.easing\n */\nEasings['quintic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KngpKyh4KngpLXgiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method back\n * @for anim8.easing\n */\nEasings['back'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  return x3 + x2 - x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzaW4oeCoxLjU3MDc5NjMyNjc5KSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method sine\n * @for anim8.easing\n */\nEasings['sine'] = function(x)\n{\n  return Math.sin( x * 1.57079632679 );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLXgqKDcuMC8xMCkpKngqKDEwLjAvMy4wKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method overshot\n * @for anim8.easing\n */\nEasings['overshot'] = function(x)\n{\n  return (1.0 - x * (7.0 / 10)) * x * (10.0 / 3.0);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KigoMi4wKngqeCp4KSt4KngtKDQuMCp4KSsyLjApKSotc2luKHgqMTAuOTk1NTc0Mjg3NikiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method elastic\n * @for anim8.easing\n */\nEasings['elastic'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n  var wave = -Math.sin(x * 10.9955742876);\n  return scale * wave;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJhYnMoeC1zaW4oeCozLjE0MTU5MjY1MzU5KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method revisit\n * @for anim8.easing\n */\nEasings['revisit'] = function(x)\n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWNvcyh4KngqeCozNi4wKSooMS4wLXgpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method lasso\n * @for anim8.easing\n */\nEasings['lasso'] = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgqeCkqY29zKHgqeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slowbounce\n * @for anim8.easing\n */\nEasings['slowbounce'] = function(x)\n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgpKmNvcyh4KngqMTQuODA0NDA2NjAxNikpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method bounce\n * @for anim8.easing\n */\nEasings['bounce'] = function(x)\n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method smallbounce\n * @for anim8.easing\n */\nEasings['smallbounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjcpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method tinybounce\n * @for anim8.easing\n */\nEasings['tinybounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoY29zKHgqeCoxMi4wKSp4KigxLjAteCkreCkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method hesitant\n * @for anim8.easing\n */\nEasings['hesitant'] = function(x)\n{\n  return (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzcXJ0KHgpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrt\n * @for anim8.easing\n */\nEasings['sqrt'] = function(x)\n{\n  return Math.sqrt( x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDEuMC0oMS14KSooMS14KSooMS14KSooMS14KSkreCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrtf\n * @for anim8.easing\n */\nEasings['sqrtf'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIobG9nKHgpKzIuMCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method log10\n * @for anim8.easing\n */\nEasings['log10'] = function(x)\n{\n  return (Math.log10(x + 0.01) + 2.0) * 0.5 / 1.0021606868913213;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeDwwLjc_KHgqLTAuMzU3KTooKCh4LTAuNykqKHgtMC43KSoyNy41LTAuNSkqMC41KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slingshot\n * @for anim8.easing\n */\nEasings['slingshot'] = function(x)\n{\n  if (x < 0.7) {\n    return (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIxLXNxcnQoMS14KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method circular\n * @for anim8.easing\n */\nEasings['circular'] = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMy4wKigxLjAteCkqeCp4KSsoeCp4KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method gentle\n * @for anim8.easing\n */\nEasings['gentle'] = function(x)\n{\n  return (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\n/**\n * Generates a bezier easing function given the two middle control points. The\n * first point is {0,0} and the last point is {1, 1}.\n *\n * @method bezier\n * @for anim8.easing\n * @param {Number} mX1\n * @param {Number} mY1\n * @param {Number} mX2\n * @param {Number} mY2\n * @return {Function}\n */\nEasings['bezier'] = function(mX1, mY1, mX2, mY2)\n{\n  // https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\n\n/**\n * Possible states an event can be in.\n *\n * @type {Object}\n */\nvar EventState =\n{\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  FINISHED: 8\n};\n\n/**\n * Instantiates a new Event which extends Attrimator.\n *\n * @param {String} attribute\n * @param {Path} path\n * @param {String|Number} duration\n * @param {String|Function|Array} easing\n * @param {String|Number} delay\n * @param {String|Number} sleep\n * @param {String|Number} offset\n * @param {String|Number} repeat\n * @param {Number} scale\n * @param {T|Number} scaleBase\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @param {Object} input\n * @param {Number} mergeId\n * @class Event\n * @constructor\n * @extends Attrimator\n */\nfunction Event(attribute, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, hasInitialState, builder, next, input, mergeId)\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The path the attribute will be animated along.\n   *\n   * @property {Path} path\n   */\n  this.path             = path;\n\n  /**\n   * The easing used to modify the delta value passed to the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n   *\n   * @property {Function} easing\n   */\n  this.easing           = $easing( easing );\n\n  /**\n   * The amount of time in milliseconds to animate an attribute over the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}}\n   *\n   * @property {Number} duration\n   */\n  this.duration         = $duration( duration );\n\n  /**\n   * If this event repeats more than once, this is a pause between animations.\n   *\n   * **See:** {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}}\n   *\n   * @property {Number} sleep\n   */\n  this.sleep            = $sleep( sleep );\n\n  /**\n   * The number of times to repeat the animation.\n   *\n   * **See:** {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}}\n   *\n   * @property {Number} repeat\n   */\n  this.repeat           = $repeat( repeat );\n\n  /**\n   * The amount to scale the value computed from the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}\n   *\n   * @property {T} scale\n   */\n  this.scale            = $scale( scale );\n\n  /**\n   * The base value from which to scale from. This is essentially this data\n   * types default value.\n   *\n   * @property {T} scaleBase\n   */\n  this.scaleBase        = path.calculator.parse( scaleBase, path.calculator.ZERO );\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.offset           = $offset( offset );\n\n  this.input            = input;\n  this.mergeId          = mergeId;\n}\n\nClass.extend( Event, Attrimator,\n{\n  /**\n   * Returns the computed value given a base value and a delta along the path.\n   *\n   * @method computeValue\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  computeValue: function(baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n\n    if ( value !== false && this.scale !== 1.0 )\n    {\n      var calc = this.path.calculator;\n      var baseValue = calc.clone( this.scaleBase );\n      var distance = calc.sub( baseValue, value );\n\n      value = calc.adds( value, distance, -this.scale );\n    }\n\n    return value;\n  },\n\n  /**\n   * Applies the value to the frame and returns true, otherwise returns false.\n   *\n   * @method applyValue\n   * @param {Object} frame\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = baseValue;\n\n    // TODO pull defaultValue from attribute\n    if (!this.path.calculator.isValid( baseValue ))\n    {\n      value = this.path.calculator.create();\n    }\n\n    value = this.computeValue( value, delta );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = value;\n    }\n\n    return value;\n  },\n\n  nopeat: function()\n  {\n    var newRepeat = clamp( Math.ceil( ( this.elapsed - this.delay ) / ( this.duration + this.sleep ) ), 0, this.repeat );\n\n    if ( newRepeat !== this.repeat )\n    {\n      this.repeat = newRepeat;\n      this.prestartNext( true );\n    }\n\n    return this;\n  },\n  finish: function(frame)\n  {\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = EventState.FINISHED;\n  },\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.state = this.delay ? EventState.DELAYED : EventState.ANIMATING;\n\n    if ( this.hasComputed() )\n    {\n      this.path = this.path.replaceComputed( this, animator );\n    }\n  },\n  startCycle: function(frame)\n  {\n    if ( this.hasInitialState )\n    {\n      this.applyValue( frame, frame[ this.attribute ], 0 );\n\n      return true;\n    }\n\n    return false;\n  },\n  update: function(elapsed, frame)\n  {\n    var updated = false;\n    var delay = this.delay;\n    var duration = this.duration;\n    var sleep = this.sleep;\n    var repeat = this.repeat;\n    var oldState = this.state;\n    var newState = this.state;\n    var delta = 0;\n\n    elapsed -= delay;\n\n    var cycle = duration + sleep;\n    var iteration = Math.floor( elapsed / cycle );\n\n    if ( iteration >= repeat )\n    {\n      newState = EventState.FINISHED;\n      delta = 1;\n    }\n    else\n    {\n      elapsed -= iteration * cycle;\n\n      if ( elapsed > duration )\n      {\n        newState = EventState.SLEEPING;\n        delta = 1;\n      }\n      else\n      {\n        newState = EventState.ANIMATING;\n        delta = elapsed / duration;\n      }\n    }\n\n    if ( newState === EventState.ANIMATING ||\n       ( newState !== EventState.ANIMATING && oldState === EventState.ANIMATING ) )\n    {\n      this.applyValue( frame, frame[ this.attribute ], delta );\n      updated = true;\n    }\n\n    this.state = newState;\n\n    return updated;\n  },\n  valueAt: function(time, out)\n  {\n    if ( time < this.delay && !this.hasInitialState )\n    {\n      return false;\n    }\n\n    var delta = 0;\n\n    if ( time >= this.delay )\n    {\n      var cycle = (this.duration + this.sleep);\n      var elapsed = (time - this.delay);\n      var iteration = Math.floor( elapsed / cycle );\n\n      if ( iteration >= this.repeat )\n      {\n        delta = 1.0;\n      }\n      else\n      {\n        delta = Math.min( 1.0, (elapsed % cycle) / this.duration );\n      }\n    }\n\n    return this.computeValue( out, delta );\n  },\n  totalTime: function()\n  {\n    return Math.min( this.stopTime, this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep) );\n  },\n  clone: function()\n  {\n    return new Event( this.attribute, this.path, this.duration, this.easing, this.delay, this.sleep, this.offset, this.repeat, this.scale, this.scaleBase, this.hasInitialState, this.builder, this.next ? this.next.clone() : null, this.input );\n  },\n  hasComputed: function()\n  {\n    return this.path.computed;\n  },\n  isInfinite: function()\n  {\n    return !isFinite( this.repeat ) && !isFinite( this.stopTime );\n  },\n  isFinished: function()\n  {\n    return (this.state === EventState.FINISHED);\n  }\n\n});\n\n/**\n * Returns an Event given the attribute, the path, and a parsed options object.\n *\n * **See:** {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method fromOptions\n * @for Event\n * @param  {String} attr\n * @param  {Path} path\n * @param  {Object} options\n * @return {Event}\n */\nEvent.fromOptions = function(attr, path, options)\n{\n  return new Event( attr, path, options.duration, options.easing, options.delay, options.sleep, options.offset, options.repeat, options.scale, options.scaleBase );\n};\n\n\n/**\n * A factory creates Animator instances for subjects.\n *\n * @class Factory\n * @constructor\n */\nfunction Factory()\n{\n  this.priority = 0;\n}\n\nClass.define( Factory,\n{\n\n  /**\n   * Determines whether the given subject is valid for this factory to create Animators for.\n   *\n   * @method is\n   * @param  {Any} subject\n   * @return {Boolean}\n   */\n  is: function(subject)\n  {\n    throw 'Factory.is not implemented';\n  },\n\n  /**\n   * Returns an animator given a subject.\n   *\n   * @method animatorFor\n   * @param  {Any} subject\n   * @return {Animator}\n   */\n  animatorFor: function(subject)\n  {\n    throw 'Factory.animatorFor not implemented';\n  },\n\n  /**\n   * Explodes the given subject to an array of Animators and adds them to the given array.\n   *\n   * @method animatorsFor\n   * @param {Any} subject\n   * @param {Array} animators\n   */\n  animatorsFor: function(subject, animators)\n  {\n    animators.push( this.animatorFor( subject ) );\n  },\n\n  /**\n   * Destroys the animator by unlinking the animator from the subject.\n   *\n   * @method destroy\n   * @param {Animator} animator\n   */\n  destroy: function(animator)\n  {\n\n  },\n\n  /**\n   * Returns the attribute descriptor for the given attribute. An attribute\n   * descriptor is an object with at least the following properties:\n   *\n   * - `name` = the name of the attribute (same as `attr`)\n   * - `calculatorName` = the name of the calculator for the attribute\n   * - `calculator` = the calculator for the attribute\n   * - `defaultValue` = the default value for the attribute\n   * - `parse` = a method to pass a value and have the calculator parse it and\n   *             return the defaultValue if it was invalid\n   * - `cloneDefault` = a method which returns a clone of the default value\n   *\n   * @method attribute\n   * @param {String} attr\n   * @return {Object}\n   */\n  attribute: function(attr)\n  {\n    throw 'Factory.attribute not implemented';\n  }\n\n});\n\n\n/**\n * A FastMap has the key-to-value benefits of a map and iteration benefits of an\n * array. This is especially beneficial when most of the time the contents of\n * the structure need to be iterated and order doesn't matter (since removal\n * performs a swap which breaks insertion order).\n *\n * @param {FastMap|Object} map\n * @class FastMap\n * @constructor\n */\nfunction FastMap(map)\n{\n  this.reset();\n\n  if ( map instanceof FastMap )\n  {\n    this.putMap( map );\n  }\n  else if ( isObject( map ) )\n  {\n    for (var prop in map)\n    {\n      this.put( prop, map[ prop ] );\n    }\n  }\n}\n\nClass.define( FastMap,\n{\n\n  /**\n   * Resets the map by initializing the values, keys, and indexes.\n   *\n   * @method reset\n   * @chainable\n   */\n  reset: function()\n  {\n    /**\n     * An array of the values in this map.\n     *\n     * @property {Array} values\n     */\n    this.values = [];\n\n    /**\n     * An array of the keys in this map.\n     *\n     * @property {Array} keys\n     */\n    this.keys = [];\n\n    /**\n     * An object of key to index mappings.\n     *\n     * @property {Object} indices\n     */\n    this.indices = {};\n\n    return this;\n  },\n\n  /**\n   * Puts the value in the map by the given key.\n   *\n   * @method put\n   * @param {String} key\n   * @param {V} value\n   * @chainable\n   */\n  put: function(key, value)\n  {\n    if ( key in this.indices )\n    {\n      this.values[ this.indices[ key ] ] = value;\n    }\n    else\n    {\n      this.indices[ key ] = this.values.length;\n      this.values.push( value );\n      this.keys.push( key );\n    }\n\n    return this;\n  },\n\n  /**\n   * Changes the given key to another.\n   *\n   * @method rekey\n   * @param {String} fromKey\n   * @param {String} toKey\n   * @chainable\n   */\n  rekey: function(fromKey, toKey)\n  {\n    if ( fromKey in this.indices )\n    {\n      var index = this.indices[ fromKey ];\n      this.keys[ index ] = toKey;\n      this.indices[ toKey ] = index;\n      delete this.indices[ fromKey ];\n    }\n\n    return this;\n  },\n\n  /**\n   * Puts all keys & values on the given map into this map overwriting any existing values mapped by similar keys.\n   *\n   * @method putMap\n   * @param {FastMap} map\n   * @chainable\n   */\n  putMap: function(map)\n  {\n    var keys = map.keys;\n    var values = map.values;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      this.put( keys[ i ], values[ i ] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the value mapped by the given key.\n   *\n   * @method get\n   * @param {String} key\n   * @return {V}\n   */\n  get: function(key)\n  {\n    return this.values[ this.indices[ key ] ];\n  },\n\n  /**\n   * Removes the value by a given key\n   *\n   * @method remove\n   * @param {String} key\n   * @chainable\n   */\n  remove: function(key)\n  {\n    var index = this.indices[ key ];\n\n    if ( isNumber( index ) )\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the value & key at the given index.\n   *\n   * @method removeAt\n   * @param {Number} index\n   * @chainable\n   */\n  removeAt: function(index)\n  {\n    var key = this.keys[ index ];\n    var lastValue = this.values.pop();\n    var lastKey = this.keys.pop();\n\n    if ( index < this.values.length )\n    {\n      this.values[ index ] = lastValue;\n      this.keys[ index ] = lastKey;\n      this.indices[ lastKey ] = index;\n    }\n\n    delete this.indices[ key ];\n\n    return this;\n  },\n\n  /**\n   * Returns the index of the value in the array given a key.\n   *\n   * @method indexOf\n   * @param {String} key\n   * @return {Number}\n   */\n  indexOf: function(key)\n  {\n    return coalesce( this.indices[ key ], -1 );\n  },\n\n  /**\n   * Returns whether this map has a value for the given key.\n   *\n   * @method has\n   * @param {String} key\n   * @return {Boolean}\n   */\n  has: function(key)\n  {\n    return key in this.indices;\n  },\n\n  /**\n   * Returns whether the given input has overlap with keys in this map.\n   *\n   * @method hasOverlap\n   * @param {FastMap|Object} map\n   * @return {Boolean}\n   */\n  hasOverlap: function(map)\n  {\n    var keys = this.keys;\n    var indices = map.indices;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      if ( keys[i] in indices )\n      {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Returns the number of elements in the map.\n   *\n   * @method size\n   * @return {Number}\n   */\n  size: function()\n  {\n    return this.values.length;\n  },\n\n  /**\n   * Clears all keys & values from the map.\n   *\n   * @method clear\n   * @chainable\n   */\n  clear: function()\n  {\n    this.values.length = 0;\n    this.keys.length = 0;\n    this.indices = {};\n\n    return this;\n  }\n\n});\n\n\n/**\n * Instantiates a new Oncer which extends Attrimator.\n *\n * @param {String} attribute\n * @param {T} value\n * @param {String|Number} delay\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @class Oncer\n * @constructor\n * @extends Attrimator\n */\nfunction Oncer( attribute, value, delay, hasInitialState, builder, next, input )\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The value that's set to the animator once.\n   *\n   * @property {T} value\n   */\n  this.value = value;\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.applied          = false;\n  this.input            = input;\n}\n\nClass.extend( Oncer, Attrimator,\n{\n  /**\n   * Computes the value of this Oncer.\n   *\n   * @method getValue\n   * @return {T}\n   */\n  getValue: function()\n  {\n    return isFunction( this.value ) ? this.value() : this.value;\n  },\n\n  finish: function(frame)\n  {\n    var update = !this.applied;\n\n    if ( update )\n    {\n      frame[ this.attribute ] = this.getValue();\n\n      this.applied = true;\n    }\n\n    return update;\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.value = animator.getAttribute( this.attribute ).parse( this.value );\n\n    if ( isComputed( this.value ) )\n    {\n      this.value = this.value( this, animator );\n    }\n\n    this.applied = false;\n  },\n\n  startCycle: function(frame)\n  {\n    return this.hasInitialState && this.finish( frame );\n  },\n\n  update: function(elapsed, frame)\n  {\n    return elapsed >= this.delay && this.finish( frame );\n  },\n\n  valueAt: function(time, out)\n  {\n    if ( time < this.delay )\n    {\n      return false;\n    }\n\n    return this.getValue();\n  },\n\n  totalTime: function()\n  {\n    return Math.min( this.stopTime, this.delay );\n  },\n\n  clone: function()\n  {\n    return new Oncer( this.attribute, this.value, this.delay, this.hasInitialState, this.builder, this.next ? this.next.clone() : null );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.value );\n  },\n\n  isInfinite: function()\n  {\n    return false;\n  },\n\n  isFinished: function()\n  {\n    return this.applied;\n  }\n  \n});\n\n\n/**\n * Path class computes a value given a delta value [0, 1].\n *\n * @class Path\n * @constructor\n */\nfunction Path()\n{\n}\n\nClass.define( Path,\n{\n\n  /**\n   * Resets the path with the given name, calculator, and points.\n   *\n   * @method reset\n   * @param {String|false} name\n   * @param {anim8.Calculator} calculator\n   * @param {Array} points\n   */\n  reset: function(calculator, points)\n  {\n    this.calculator = $calculator( calculator );\n    this.points = points;\n    this.computed = this.hasComputed();\n    this.deterministic = this.isDeterministic();\n  },\n\n  /**\n   * Computes a value at the given delta setting and returning out.\n   *\n   * @method compute\n   * @param {T} out\n   * @param {Number} delta\n   * @return {T}\n   */\n  compute: function(out, delta)\n  {\n    throw 'Path.compute not implemented';\n  },\n\n  /**\n   * Determines if this path has at least one computed value.\n   *\n   * **See:** {{#crossLink \"anim8.computed\"}}{{/crossLink}}\n   *\n   * @method hasComputed\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    return this.examinePoints( isComputed, true, false );\n  },\n\n  /**\n   * Determines if this path has at least one computed value.\n   *\n   * **See:** {{#crossLink \"anim8.computed\"}}{{/crossLink}}\n   *\n   * @method isDeterministic\n   * @return {Boolean}\n   */\n  isDeterministic: function()\n  {\n    return this.examinePoints( isFunction, false, true );\n  },\n\n  /**\n   * Examines the points in the path by passing each point to the examiner\n   * function. If the examiner function returns true then `returnOnTrue` true\n   * is returned immediately, otherwise `returnOnFalse` is returned.\n   *\n   * @method examinePoints\n   * @param {Function} examiner\n   * @param {Any} returnOnTrue\n   * @param {Any} returnOnFalse\n   * @return {Any}\n   */\n  examinePoints: function(examiner, returnOnTrue, returnOnFalse)\n  {\n    var ps = this.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( examiner( ps[ i ] ) )\n      {\n        return returnOnTrue;\n      }\n    }\n\n    return returnOnFalse;\n  },\n\n  /**\n   * Replaces any computed values in this path with the result from invoking\n   * the function and returns a clone of this path.\n   *\n   * @method replaceComputed\n   * @return {anim8.Path}\n   */\n  replaceComputed: function(event, animator)\n  {\n    var clone = this.copy();\n    var ps = clone.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( isComputed( ps[i] ) )\n      {\n        ps[i] = ps[i]( event, animator );\n      }\n    }\n\n    return clone;\n  },\n\n  /**\n   * Resolves and returns the point at the given index.\n   *\n   * @method resolvePoint\n   * @param {Number} i\n   * @return {T}\n   */\n  resolvePoint: function(i)\n  {\n    return resolve( this.points[ i ] );\n  },\n\n  /**\n   * Returns whether the path is linear. Linear paths go directly from point to\n   * point where curved paths do not. Linear paths can have their length\n   * calculated fairly easily however curves you must compute length with a\n   * given granularity.\n   *\n   * @method isLinear\n   * @return {Boolean}\n   */\n  isLinear: function()\n  {\n    return true;\n  },\n\n  /**\n   * Computes the length of the Path with a given granularity. Granularity is\n   * used for non-linear paths - it's the number of segments are calculated on\n   * the path where the length of the segments are summed and returned as the\n   * length.\n   *\n   * @method length\n   * @param {Number} granularity\n   * @return {Number}\n   */\n  length: function(granularity)\n  {\n    var distance = 0;\n    var calc = this.calculator;\n\n    if ( this.isLinear() )\n    {\n      var prev = this.resolvePoint( 0 );\n\n      for (var i = 1; i < this.points.length; i++)\n      {\n        var next = this.resolvePoint( i );\n\n        distance += calc.distance( prev, next );\n\n        prev = next;\n      }\n    }\n    else\n    {\n      var deltadelta = 1.0 / granularity;\n      var delta = deltadelta;\n      var prev = calc.clone( this.resolvePoint( 0 ) );\n      var temp = calc.create();\n\n      for (var i = 1; i <= granularity; i++)\n      {\n        var next = this.compute( temp, delta );\n\n        distance += calc.distance( prev, next );\n        delta += deltadelta;\n\n        temp = prev;\n        prev = next;\n      }\n    }\n\n    return distance;\n  }\n\n});\n\n\n/**\n * Animates a single attribute with a velocity and acceleration.\n *\n * @param {String} attribute\n * @param {Builder} builder\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} velocity\n * @param {T} acceleration\n * @param {Number} terminal\n * @param {Number} stopTime\n * @class Physics\n * @constructor\n * @extends Attrimator\n */\nfunction Physics( attribute, builder, calculator, position, velocity, acceleration, terminal, stopTime )\n{\n  this.reset( attribute, builder, null );\n\n  this.calculator   = calculator;\n  this.position     = position;\n  this.velocity     = velocity;\n  this.acceleration = acceleration;\n  this.terminal     = $number( terminal, Number.POSITIVE_INFINITY );\n  this.stopTime     = $time( stopTime, Number.POSITIVE_INFINITY );\n  this.finished     = false;\n}\n\nClass.extend( Physics, Attrimator,\n{\n  /**\n   * Parses a value for the animator given a default value.\n   *\n   * @method parseValue\n   * @param {anim8.Animator} animator.\n   * @param {T} value\n   * @param {T} defaultValue\n   * @return {T}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  },\n\n  /**\n   * Resolves the velocity to a value.\n   *\n   * @method resolveVelocity\n   * @return {T}\n   */\n  resolveVelocity: function()\n  {\n    return resolve( this.velocity );\n  },\n\n  /**\n   * Resolves the acceleration to a value.\n   *\n   * @method resolveAcceleration\n   * @return {T}\n   */\n  resolveAcceleration: function()\n  {\n    return resolve( this.acceleration );\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator     = calc;\n    this.position       = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.initalPosition = calc.clone( this.position );\n    this.velocity       = this.parseValue( animator, this.velocity, calc.ZERO );\n    this.acceleration   = this.parseValue( animator, this.acceleration, calc.ZERO );\n    this.temp           = calc.create();\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.position ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.acceleration );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var value = this.valueAt( elapsed, this.temp, true );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = this.position = value;\n\n      return true;\n    }\n\n    var calc = this.calculator;\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Physics.MAX_DT );\n    var vel = calc.copy( this.temp, this.resolveVelocity() );\n    var acc = this.resolveAcceleration();\n    var pos = this.position;\n\n    vel = calc.adds( vel, acc, dt );\n\n    if ( isFinite( this.terminal ) )\n    {\n      vel = calc.clamp( vel, 0, this.terminal );\n    }\n\n    pos = calc.adds( pos, vel, dt );\n\n    this.position = pos;\n\n    if ( !isFunction( this.velocity ) )\n    {\n      this.velocity = calc.copy( this.velocity, vel );\n    }\n\n    frame[ this.attribute ] = pos;\n\n    return true;\n  },\n\n  valueAt: function(time, out, usePosition)\n  {\n    if ( isFunction( this.velocity ) || isFunction( this.acceleration ) || this.terminal !== Number.POSITIVE_INFINITY )\n    {\n      return false;\n    }\n\n    time -= this.delay;\n    time *= 0.001;\n\n    var calc = this.calculator;\n    var value = usePosition ? calc.copy( this.position, this.initalPosition ) : calc.copy( out, this.initalPosition );\n    value = calc.adds( value, this.velocity, time );\n    value = calc.adds( value, this.acceleration, time * time );\n\n    return value;\n  },\n\n  clone: function()\n  {\n    return new Physics( this.attribute, this.builder, this.calculator, this.position, this.velocity, this.acceleration, this.terminal, this.stopTime );\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nPhysics.MAX_DT = 0.1;\n\n\n/**\n * Creates a seqeuence for the given animators offseting animations be the given\n * delay and easing.\n *\n * @param {Animators} animators\n * @param {String|Number} delay\n * @param {String|Array|Function} easing\n * @class Sequence\n * @constructor\n */\nfunction Sequence(animators, delay, easing)\n{\n  /**\n   * The animators to play a sequence of animations against.\n   *\n   * @property {Animators} animators\n   */\n  this.animators = animators;\n\n  /**\n   * The delay in milliseconds between animations.\n   *\n   * @property {Number} delay\n   */\n  this.delay = $delay( delay );\n\n  /**\n   * The easing function to use to calculate the delay offset for an animation.\n   *\n   * @property {Function} easing\n   */\n  this.easing = $easing( easing );\n}\n\nClass.define( Sequence,\n{\n  /**\n   * Returns the maximum delay for delaying generated attrimators.\n   *\n   * @method maxDelay\n   * @return {Number}\n   */\n  maxDelay: function()\n  {\n    return this.delay * (this.animators.length() - 1);\n  },\n\n  /**\n   * Creates an AttrimatorMap with the given options for the animator at the\n   * given index.\n   *\n   * @method createAttrimators\n   * @param {Animation} animation\n   * @param {Object} options\n   * @param {Number} i\n   * @return {AttrimatorMap}\n   */\n  createAttrimators: function(template, i)\n  {\n    var attrimatorMap = template.clone();\n    var attrimators = attrimatorMap.values;\n    var delta = i / (this.animators.length() - 1);\n    var delayOffset = this.easing( delta ) * this.maxDelay();\n\n    for (var k = attrimators.length - 1; k >= 0; k--)\n    {\n      attrimators[ k ].delay += delayOffset;\n    }\n\n    return attrimatorMap;\n  },\n\n  /**\n   * Reverses the sequence by reversing the underlying array of animators.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    this.animators.reverse();\n\n    return this;\n  },\n\n  /**\n   * Plays the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/play:method\"}}Animator.play{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.playAttrimators( attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Queues the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/queue:method\"}}Animator.queue{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n    var maxRemaining = 0;\n    var remaining = [];\n\n    this.animators.each(function(animator, i)\n    {\n      remaining[i] = animator.timeRemaining();\n      maxRemaining = Math.max( maxRemaining, remaining[i] );\n    });\n\n    this.animators.each(function(animator, i)\n    {\n      var delayOffset = maxRemaining - remaining[i];\n      var attrimatorMap = sequence.createAttrimators( template, i );\n      var attrimators = attrimatorMap.values;\n\n      for (var k = attrimators.length - 1; k >= 0; k--)\n      {\n        attrimators[ k ].delay += delayOffset;\n      }\n\n      animator.newCycle( attrimatorMap );\n      animator.queueAttrimators( attrimatorMap );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Transitions into the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/transition:method\"}}Animator.transition{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var template = $attrimatorsFor( animation, options, cache );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.transitionAttrimators( transition, attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Activates all animators in this sequence and returns this.\n   *\n   * **See:** {{#crossLink \"Animator/activate:method\"}}Animator.activate{{/crossLink}}\n   *\n   * @method add\n   * @chainable\n   */\n  add: function()\n  {\n    this.animators.activate();\n\n    return this;\n  }\n\n});\n\n\n/**\n * A spring has a resting point, a current position, and the velocity currently\n * enacting on the position based on the implementing classes logic.\n *\n * @class Spring\n * @constructor\n * @extends Attrimator\n */\nfunction Spring()\n{\n}\n\nClass.extend( Spring, Attrimator,\n{\n\n  /**\n   * Resets the spring's properties.\n   *\n   * @method set\n   * @param {String} attribute\n   * @param {Calculator|String} calculator\n   * @param {T|Function|true} rest\n   * @param {T|Function|true} position\n   * @param {T|Function|true} velocity\n   * @param {T|Function|true} gravity\n   * @param {Boolean} finishOnRest\n   */\n  set: function(attribute, calculator, rest, position, velocity, gravity, finishOnRest)\n  {\n    this.reset( attribute, null, null );\n\n    this.calculator   = calculator;\n    this.rest         = rest;\n    this.position     = position;\n    this.gravity      = gravity;\n    this.velocity     = velocity;\n    this.finishOnRest = finishOnRest;\n  },\n\n  /**\n   * Resolves the rest to the expected format.\n   *\n   * @method resolveRest\n   * @return {T}\n   */\n  resolveRest: function()\n  {\n    return resolve( this.rest );\n  },\n\n  /**\n   * Method that's invoked on each spring update.\n   *\n   * @method updateVelocity\n   * @param {Number} dt\n   */\n  updateVelocity: function(dt)\n  {\n    throw 'Spring.updateVelocity not implemented';\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator = calc;\n    this.rest       = this.parseValue( animator, this.rest, attribute.defaultValue );\n    this.position   = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.gravity    = this.parseValue( animator, this.gravity, calc.ZERO );\n    this.velocity   = this.parseValue( animator, this.velocity, calc.ZERO );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var calc = this.calculator;\n\n    // the number of elapsed seconds (maxed to avoid crazy behavior with low FPS)\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Spring.MAX_DT );\n\n    // keep track of the starting position to determine whether the position has updated.\n    var starting = calc.clone( this.position );\n\n    // call the update method which should update the position\n    this.updateVelocity( dt );\n    this.velocity = calc.adds( this.velocity, this.gravity, dt );\n    this.position = calc.adds( this.position, this.velocity, dt );\n\n    // track whether the attribute has updated so the animator knows if it needs to apply the attribute to the subject.\n    var updated = !calc.isEqual( starting, this.position, Spring.EPSILON );\n\n    if ( updated )\n    {\n      frame[ this.attribute ] = this.position;\n    }\n    else if ( this.finishOnRest && calc.isZero( this.velocity ) )\n    {\n      this.finished = true;\n    }\n\n    return updated;\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nSpring.MAX_DT = 0.1;\n\n/**\n * The value used to determine whether two positions in a spring are different.\n */\nSpring.EPSILON = 0.0001;\n\n\n/**\n * @module anim8\n * @class Core\n */\n\n/**\n * Converts a subject into an animator and returns it. If the subject\n * is already an animator it's returned immediately. If the subject can't be\n * animated then false is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.factoryFor:method\"}}{{/crossLink}}\n *\n * @param {Any} subject\n * @return {Animator|false}\n * @method anim8\n */\nfunction anim8(subject)\n{\n  if ( subject instanceof Animator )\n  {\n    return subject;\n  }\n\n  var factory = $factoryFor( subject, true );\n\n  if ( factory === false )\n  {\n    return false;\n  }\n\n  return factory.animatorFor( subject );\n}\n\n/**\n * Add events to the animation cycle: begin, end, finished, starting\n */\neventize( anim8 );\n\n/**\n * Converts an array of subjects into an array of Animators.\n *\n * @param {Array} subject\n * @return {Animators}\n * @method anim8s\n */\nfunction anim8s(subjects)\n{\n  var factory = $factoryFor( subjects, true );\n  var animators = [];\n\n  if ( factory !== false )\n  {\n    factory.animatorsFor( subjects, animators );\n\n    return new Animators( animators );\n  }\n\n  if ( !isArray( subjects ) )\n  {\n    subjects = [ subjects ];\n  }\n\n  var animators = [];\n\n  for (var i = 0; i < subjects.length; i++)\n  {\n    var animator = anim8( subjects[i] );\n\n    if ( animator !== false )\n    {\n      animators.push( animator );\n    }\n  }\n\n  return new Animators( animators );\n}\n\n/**\n * Whether the animation cycle is currently running. This is true\n * when where are active animators and anim8.run is being called\n * and false otherwise.\n *\n * @property {Boolean} anim8.running\n * @readOnly\n */\nvar running = false;\n\n/**\n * Live Mode keeps the animation cycles running even when there aren't\n * Animators. For highly interactive applications enabling this may\n * take up more resources but it will result in smoother animations. When\n * the animation cycle goes from stopped to running it takes a few frames\n * to smooth out when this is false.\n *\n * @property {Boolean} anim8.live\n */\nvar live = false;\n\n/**\n * The anim8 instance for all active animators.\n *\n * @property {Animators} anim8.animating\n * @readOnly\n */\nvar animating = new Animators();\n\n\nfunction isRunning()\n{\n  return running;\n}\n\nfunction isLive()\n{\n  return live;\n}\n\nfunction setLive(newLive)\n{\n  live = newLive;\n}\n\n/**\n * Adds an animator to the list of animating if it isn't there already. If the\n * animation loop isn't currently running it's started.\n *\n * @method anim8.add\n * @param {Animator} animator\n */\nfunction activateAnimator(animator)\n{\n  pushAnimator( animator );\n\n  activate();\n}\n\nfunction pushAnimator(animator)\n{\n  if ( !animator.active )\n  {\n    animator.active = true;\n    animating.push( animator );\n  }\n}\n\nfunction activate()\n{\n  if ( !running )\n  {\n    running = true;\n\n    anim8.trigger('starting');\n\n    requestRun( run );\n  }\n}\n\n/**\n * The function to call if animations need to be done.\n *\n * @method anim8.requestRun\n * @param {Function} callback\n */\nvar requestRun = (function()\n{\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n  var requestor = global.requestAnimationFrame;\n\n  for (var x = 0; x < vendors.length && !requestor; ++x)\n  {\n    requestor = global[ vendors[x] + 'RequestAnimationFrame' ];\n  }\n\n  if (!requestor)\n  {\n    var lastTime = 0;\n\n    return function(callback)\n    {\n      var currentTime = now();\n      var timeToCall = Math.max( Defaults.pauseTime, Defaults.frameRate - (currentTime - lastTime) );\n      var id = global.setTimeout( function() { callback( currentTime + timeToCall ); }, timeToCall );\n      lastTime = currentTime + timeToCall;\n      return id;\n    };\n  }\n\n  return function(callback)\n  {\n    requestor( callback );\n  };\n\n})();\n\n/**\n * Executes an animation loop cycle which consists of four operations:\n *\n * 1. Call preupdate on all Animators\n * 2. Call update on all Animators\n * 3. Call apply on all Animators\n * 4. Remove finished Animators\n *\n * When there are no more animating the loop cycle is stopped.\n *\n * @method anim8.run\n */\nfunction run()\n{\n  anim8.trigger('begin');\n\n  var currentTime = now();\n  var active = animating.length();\n\n  // notify animators that we're about to update\n  animating.preupdate( currentTime, active );\n\n  // update animating based on the current time\n  animating.update( currentTime, active );\n\n  // apply the attributes calculated\n  animating.apply( active );\n\n  // if the animator is done remove it\n  animating.filter( animating.handleFinished );\n\n  // The loop has ended!\n  anim8.trigger('end');\n\n  // if there are animators still remaining call me again!\n  if ( animating.length() || live )\n  {\n    requestRun( run );\n  }\n  else\n  {\n    running = false;\n\n    anim8.trigger('finished');\n  }\n}\n\n/**\n * Pauses all animators.\n *\n * **See:** {{#crossLink \"Animator/pause:method\"}}{{/crossLink}}\n *\n * @method anim8.pause\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction pause(attributes)\n{\n  animating.pause( attributes );\n\n  return anim8;\n}\n\n/**\n * Resumes all animators.\n *\n * **See:** {{#crossLink \"Animator/resume:method\"}}{{/crossLink}}\n *\n * @method anim8.resume\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction resume(attributes)\n{\n  animating.resume( attributes );\n\n  return anim8;\n}\n\n/**\n * Stops all animators.\n *\n * **See:** {{#crossLink \"Animator/stop:method\"}}{{/crossLink}}\n *\n * @method anim8.stop\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction stop(attributes)\n{\n  animating.stop( attributes );\n\n  return anim8;\n}\n\n/**\n * Ends all animators.\n *\n * **See:** {{#crossLink \"Animator/end:method\"}}{{/crossLink}}\n *\n * @method anim8.end\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction end(attributes)\n{\n  animating.end( attributes );\n\n  return anim8;\n}\n\n/**\n * Finishes all animators.\n *\n * **See:** {{#crossLink \"Animator/finish:method\"}}{{/crossLink}}\n *\n * @method anim8.finish\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction finish(attributes)\n{\n  animating.finish( attributes );\n\n  return anim8;\n}\n\n/**\n * Interrupts all animators from repeating currently running animations.\n *\n * **See:** {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}}\n *\n * @method anim8.nopeat\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction nopeat(attributes)\n{\n  animating.nopeat( attributes );\n\n  return anim8;\n}\n\n\n/**\n * Instantiates a new color given red, green, blue, and white components.\n * If a component is missed it's default value is either 255 (white) or\n * 1.0 (opaque).\n *\n * @method anim8.color\n * @for Core\n * @param {Number} [r=255]\n * @param {Number} [g=255]\n * @param {Number} [b=255]\n * @param {Number} [a=1]\n * @return {Object}\n */\nfunction Color(r, g, b, a)\n{\n  return {\n    r: coalesce( r, 255 ),\n    g: coalesce( g, 255 ),\n    b: coalesce( b, 255 ),\n    a: coalesce( a, 1.0 )\n  };\n}\n\n/**\n * The array of parsing methods to execute sequentally until a color is returned.\n */\nColor.parsers =\n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, parseInt, 255),\n          g: this.parseComponent(input.g, parseInt, 255),\n          b: this.parseComponent(input.b, parseInt, 255),\n          a: this.parseComponent(input.a, parseFloat, 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = parseFunction(t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  },\n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n/**\n * Parses a color from a string.\n *\n * @method anim8.color.parse\n * @for Core\n * @param {String} input\n * @return {Object|False}\n */\nColor.parse = function(input)\n{\n  var cp = Color.parsers;\n\n  for (var i = 0; i < cp.length; i++)\n  {\n    var parsed = cp[ i ].parse( input );\n\n    if (parsed !== false)\n    {\n      return parsed;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Formats a color to a string.\n *\n * @method anim8.color.format\n * @for Core\n * @param {Object} color\n * @return {String}\n */\nColor.format = function(color)\n{\n  var ca = clamp( coalesce( color.a, 1.0 ), 0, 1 );\n  var cr = Math.floor( clamp( coalesce( color.r, 255 ), 0, 255 ) );\n  var cg = Math.floor( clamp( coalesce( color.g, 255 ), 0, 255 ) );\n  var cb = Math.floor( clamp( coalesce( color.b, 255 ), 0, 255 ) );\n\n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n\n    if (r.length === 1) {\n      r = '0' + r;\n    }\n    if (g.length === 1) {\n      g = '0' + g;\n    }\n    if (b.length === 1) {\n      b = '0' + b;\n    }\n\n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n\n\n/**\n * A collection of computed functions. Computed functions are functions that\n * are invoked once at the start of an animation given the\n * {{#crossLink \"Attrimator\"}}{{/crossLink}} and\n * {{#crossLink \"Animator\"}}{{/crossLink}} and the result replaces the function.\n *\n * **See:** {{#crossLink \"anim8.computed/current:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/relative:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/random:method\"}}{{/crossLink}}\n *\n * @class anim8.computed\n */\nfunction computed(funcOrName, func)\n{\n  if ( isString( funcOrName ) && isFunction( func ) )\n  {\n    func.computed = true;\n\n    computed[ funcOrName ] = func;\n\n    return func;\n  }\n  else if ( isFunction( funcOrName ) )\n  {\n    funcOrName.computed = true;\n\n    return funcOrName;\n  }\n\n  throw funcOrName + ' and ' + func + ' are not valid parameters for creating a computed function.';\n}\n\n/**\n * Calculates and returns the current value for an\n * {{#crossLink \"Animator\"}}{{/crossLink}}. If the animator doesn't have a\n * current value the default value for the attribute is returned.\n *\n * @method current\n * @param {Attrimator} attrimator\n * @param {Animator} animator\n * @return {T}\n */\ncomputed('current', function(attrimator, animator)\n{\n  var attr = attrimator.attribute;\n  var attribute = animator.getAttribute( attr );\n\n  if ( attr in animator.frame )\n  {\n    return attribute.calculator.clone( animator.frame[ attr ] );\n  }\n  else\n  {\n    return attribute.cloneDefault();\n  }\n});\n\n/**\n * Calculates a value relative to the attribute value currently in the animator.\n * A mask can be used for mixed relative & absolute values in a single value\n * where 1 makes it relative and 0 makes it absolute.\n *\n * **Examples:**\n *\n *     anim8.computed.relative( 40 ); // returns function which adds 40 to current value\n *     anim8.computed.relative( 40, 0.5 ); // returns function which adds 40 to half of the current value\n *     anim8.computed.relative( {x: 20, y: 10}, {x: 1, y: 0} ); // returns function which adds 20 to the x of the current value and sets the y of the current value to 10\n *\n * @method relative\n * @param {T} relativeAmount\n * @param {T} mask\n * @return {Function}\n */\ncomputed('relative', function(relativeAmount, mask)\n{\n  // If the relativeAmount is already a computed value, return it.\n  if ( isComputed( relativeAmount ) )\n  {\n    return relativeAmount;\n  }\n\n  var relativeFunction = function(attrimator, animator)\n  {\n    var attr = attrimator.attribute;\n    var attribute = animator.getAttribute( attr );\n    var calc = attribute.calculator;\n    var current = null;\n\n    if ( attr in animator.frame )\n    {\n      current = calc.clone( animator.frame[ attr ] );\n    }\n    else\n    {\n      current = attribute.cloneDefault();\n    }\n\n    if ( mask )\n    {\n      current = calc.mul( current, mask );\n    }\n\n    return calc.add( current, relativeAmount );\n  };\n\n  // Marks the function as computed which is a signal to paths & events.\n  relativeFunction.computed = true;\n\n  // Place the input on the function if the user wants to modify it live\n  relativeFunction.relativeAmount = relativeAmount;\n  relativeFunction.mask = mask;\n\n  return relativeFunction;\n});\n\n/**\n * Returns a random value based on the given random selection.\n *\n * 1. If an array is given an item is randomly chosen from that array.\n * 2. If an instance of {{#crossLink \"Path\"}}{{/crossLink}} is given a point is randomly computed and returned.\n * 3. If an object with min & max values is given a random value between them is returned.\n *\n * **Examples:**\n *\n *     anim8.computed.random( [1, 2, 3] ); // returns function which returns a 1, 2, or 3\n *     anim8.computed.random( {min: 1, max: 5} ); // returns function which returns a value between 1 and 5\n *     anim8.computed.random( {min: {x: 0, y: 0}, max: {x: 100, y: 200}} ); // returns function which returns a point in the rectangle {0,0,100,200}\n *     anim8.computed.random( path ); // returns function which returns a value anywhere along the given path\n *\n * @method random\n * @param  {Array|Object|Path} randomSelection\n * @return {Function}\n */\ncomputed('random', function(randomSelection)\n{\n  var randomFunction = null;\n\n  if ( isArray( randomSelection ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var selected = randomSelection[ Math.floor( Math.random() * randomSelection.length ) ];\n\n      return calc.parse( selected, calc.ZERO );\n    };\n  }\n  else if ( randomSelection instanceof Path )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n\n      return randomSelection.compute( calc.create(), Math.random() );\n    };\n  }\n  else if ( isObject( randomSelection ) && isDefined( randomSelection.min ) && isDefined( randomSelection.max ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var resolvedMin = resolve( randomSelection.min );\n      var resolvedMax = resolve( randomSelection.max );\n      var min = calc.parse( resolvedMin, calc.ZERO );\n      var max = calc.parse( resolvedMax, calc.ZERO );\n\n      return calc.random( calc.create(), min, max );\n    };\n  }\n  else\n  {\n    throw 'Invalid random input: ' + randomSelection;\n  }\n\n  // Place the input on the function if the user wants to modify it live\n  randomFunction.randomSelection = randomSelection;\n\n  return computed( randomFunction );\n});\n\n/**\n * Determines whether the given value is a computed value. A computed value is\n * function with a variable 'computed' set to a true value.\n *\n * @param  {any} x\n * @return {Boolean}\n */\nfunction isComputed(x)\n{\n  return isFunction( x ) && x.computed;\n}\n\n\n/**\n * Creates a function which calls a method on all elements in the array or on\n * the first element.\n *\n * @method delegate\n * @param {String} functionName\n * @param {String} returning\n */\nfunction delegate(functionName, returning)\n{\n  switch (returning)\n  {\n  case DelegateTypes.THIS:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        array[i][functionName].apply( array[i], arguments );\n      }\n\n      return this;\n    };\n\n  case DelegateTypes.RESULTS:\n    return function()\n    {\n      var array = this.$ || this;\n      var results = [];\n\n      for (var i = 0; i < array.length; i++)\n      {\n        results.push( array[i][functionName].apply( array[i], arguments ) );\n      }\n\n      return results;\n    };\n\n  case DelegateTypes.FIRST:\n    return function()\n    {\n      var array = this.$ || this;\n\n      return array.length === 0 ? undefined : array[0][functionName].apply( array[0], arguments );\n    };\n\n  case DelegateTypes.TRUE:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        if ( array[i][functionName].apply( array[i], arguments ) )\n        {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n  }\n\n  return noop;\n}\n\n\n/**\n * Creates a composite dyanmic attribute which is an object of existing\n * attributes which takes advantage of an object based calculator.\n *\n * **Example:**\n *\n *     anim8.object.attribute.topLeft = {\n *       dynamic: anim8.composite({x:'left', y:'top'}),\n *       calculator:'2d',\n *       defaultValue: {x: 0, y: 0},\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'topLeft' being placed in left and top.\n *\n * @method anim8.composite\n * @param  {Object} map\n * @for Core\n * @return {Function}\n */\nfunction composite( map )\n{\n  return function( value, frame )\n  {\n    for ( var prop in map )\n    {\n      frame[ map[ prop ] ] = value[ prop ];\n    }\n  };\n}\n\n/**\n * Creates a partial dynamic attribute which is a value that's placed in a\n * sub-property of an attribute.\n *\n * **Example:**\n *\n *     anim8.object.attribute.x = {\n *       dynamic: anim8.partial( 'position', 'x' ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'x' being placed in position.x\n *\n * @method anim8.partial\n * @param {String} attribute\n * @param {String} subattribute\n * @for Core\n * @return {Function}\n */\nfunction partial( attribute, subattribute )\n{\n  return function( value, frame )\n  {\n    if ( !isObject( frame[ attribute ] ) )\n    {\n      frame[ attribute ] = {};\n    }\n\n    frame[ attribute ][ subattribute ] = value;\n  };\n}\n\n/**\n * Creates a dynamic attribute which spreads its value over several attributes.\n *\n * **Example:**\n *\n *     anim8.dom.attribute.padding = {\n *       dynamic: anim8.spread( ['paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom' ] ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the value in 'padding' being placed in paddingLeft, paddingTop,\n * paddingRight, and paddingBottom.\n *\n * @param  {Array} attributes\n * @return {Function}\n */\nfunction spread( attributes )\n{\n  return function( value, frame )\n  {\n    for ( var i = 0; i < attributes.length; i++ )\n    {\n      frame[ attributes[ i ] ] = value;\n    }\n  };\n}\n\n\n\n\n/**\n * Adds functions to the given object (or prototype) so you can listen for any\n * number of events on the given object, optionally once. Listeners can be\n * removed later.\n *\n * The following methods will be added to the given target:\n *\n *     target.on( events, callback, [context] )\n *     target.once( events, callback, [context] )\n *     target.off( events, callback )\n *     target.trigger( event, [argument] )\n *\n * Where...\n * - `events` is a string of space delimited events.\n * - `callback` is a function to invoke when the event is triggered.\n * - `context` is an object that should be the `this` when the callback is\n *   invoked. If no context is given the default value is the object which has\n *   the trigger function that was invoked.\n *\n * @method eventize\n * @for Core\n * @param {Object} target The object to add `on`, `once`, `off`, and `trigger`\n *    functions to.\n */\nfunction eventize(target)\n{\n  Class.defineProperty( target, 'on', on );\n  Class.defineProperty( target, 'once', once );\n  Class.defineProperty( target, 'off', off );\n  Class.defineProperty( target, 'trigger', trigger );\n}\n\n  // Adds a listener to $this\nfunction addListener($this, property, events, callback, context)\n{\n  var events = toArray( events, ' ' );\n\n  if ( !isDefined( $this[ property ] ) )\n  {\n    Class.defineProperty( $this, property, {} );\n  }\n\n  for (var i = 0; i < events.length; i++)\n  {\n    if ( !isDefined( $this[ property ][ events[i] ] ) )\n    {\n      $this[ property ][ events[i] ] = [];\n    }\n\n    $this[ property ][ events[i] ].push( [ callback, context || $this ] );\n  }\n}\n\n// Removes a listener from an array of listeners.\nfunction removeListeners(listeners, event, callback)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n\n    for (var k = eventListeners.length - 1; k >= 0; k--)\n    {\n      if (eventListeners[ k ][0] === callback)\n      {\n        eventListeners.splice( k, 1 );\n      }\n    }\n  }\n}\n\n// Deletes a property from the given object if it exists\nfunction deleteProperty(obj, prop)\n{\n  if ( obj && prop in obj )\n  {\n    delete obj[ prop ];\n  }\n}\n\n// Triggers listeneers for the given event\nfunction triggerListeners(listeners, event, argument, clear)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n    var max = eventListeners.length;\n\n    for (var i = 0; i < max; i++)\n    {\n      var callback = eventListeners[ i ];\n\n      callback[0].call( callback[1], argument );\n    }\n\n    if ( clear )\n    {\n      if ( eventListeners.length !== max )\n      {\n        listeners[ event ] = eventListeners.slice( max );\n      }\n      else\n      {\n        delete listeners[ event ];\n      }\n    }\n  }\n}\n\n/**\n * Listens for every occurrence of the given events and invokes the callback\n * each time any of them are triggered.\n *\n * @method on\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction on(events, callback, context)\n{\n  addListener( this, '$on', events, callback, context );\n\n  return this;\n}\n\n/**\n * Listens for the next occurrence for each of the given events and invokes\n * the callback when any of the events are triggered.\n *\n * @method once\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction once(events, callback, context)\n{\n  addListener( this, '$once', events, callback, context );\n\n  return this;\n}\n\n/**\n * Stops listening for a given callback for a given set of events.\n *\n * **Examples:**\n *\n *     target.off();           // remove all listeners\n *     target.off('a b');      // remove all listeners on events a & b\n *     target.off(['a', 'b']); // remove all listeners on events a & b\n *     target.off('a', x);     // remove listener x from event a\n *\n * @method off\n * @for eventize\n * @param {String|Array|Object} [events]\n * @param {Function} [callback]\n * @chainable\n */\nfunction off(events, callback)\n{\n  // Remove ALL listeners\n  if ( !isDefined( events ) )\n  {\n    delete this.$on;\n    delete this.$once;\n  }\n  else\n  {\n    var events = toArray( events, ' ' );\n\n    // Remove listeners for given events\n    if ( !isFunction( callback ) )\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        deleteProperty( this.$on, events[i] );\n        deleteProperty( this.$once, events[i] );\n      }\n    }\n    // Remove specific listener\n    else\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        removeListeners( this.$on, events[i], callback );\n        removeListeners( this.$once, events[i], callback );\n      }\n    }\n  }\n\n  return this;\n}\n\n/**\n * Triggers a single event optionally passing an argument to any listeners.\n *\n * @method trigger\n * @for eventize\n * @param {String} event\n * @param {Any} argument\n * @chainable\n */\nfunction trigger(event, argument)\n{\n  triggerListeners( this.$on, event, argument, false );\n  triggerListeners( this.$once, event, argument, true );\n\n  return this;\n}\n\n\nfunction gcd(a,b)\n{\n  if (a < 0)\n  {\n    a = -a;\n  }\n  if (b < 0)\n  {\n    b = -b;\n  }\n  if (b > a)\n  {\n    var temp = a;\n    a = b;\n    b = temp;\n  }\n\n  while (true)\n  {\n    if (b === 0)\n    {\n      return a;\n    }\n\n    a %= b;\n\n    if (a === 0)\n    {\n      return b;\n    }\n\n    b %= a;\n  }\n}\n\nfunction choose(n, m)\n{\n  var num = 1, den = 1, g;\n\n  if ( m > (n / 2) )\n  {\n    m = n - m;\n  }\n\n  while ( m >= 1 )\n  {\n    num *= n--;\n    den *= m--;\n    g = gcd( num, den );\n    num /= g;\n    den /= g;\n  }\n\n  return num;\n}\n\n/**\n * Returns a value between the given minimum and maximum.\n *\n * **Examples:**\n *\n *     anim8.clamp( 5, 1, 6 );   // 5\n *     anim8.clamp( 0, 1, 6 );   // 1\n *     anim8.clamp( 7, 1, 6 );   // 6\n *\n * @method anim8.clamp\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nfunction clamp(v, min, max)\n{\n  return (v < min) ? min : (v > max ? max : v);\n}\n\n\nvar Animations = {};\n\n/**\n * Options to modify the properties of the animations being saved.\n */\nvar SaveOptions =\n{\n  prefix: '',\n  options: {},\n  cache: false\n};\n\n/**\n * Saves an animation under the given name. It can be played, queued, and\n * transitioned into at a later time providing the name and optionally options\n * to override with.\n *\n * **See:** {{#crossLink \"Core/anim8.animation:method\"}}anim8.animation{{/crossLink}},\n *          {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method anim8.save\n * @for Core\n * @param {String} name\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n */\nfunction save( name, animation, options )\n{\n  var animation = $animation( animation, coalesce( options, SaveOptions.options ), SaveOptions.cache );\n  var qualifiedName = SaveOptions.prefix + name;\n  var key = qualifiedName.toLowerCase();\n\n  animation.name = qualifiedName;\n\n  Animations[ key ] = animation;\n}\n\n/**\n * Starts a save group with a prefix or an object containing a prefix and/or\n * default options to pass to the animations. The animations passed can be\n * an object or a function to call which contains save calls.\n *\n * @method anim8.saveGroup\n * @param {String|Object} prefixOrOptions\n * @param {Function|Object} animations\n */\nfunction saveGroup( prefixOrOptions, animations )\n{\n  var previousOptions = copy( SaveOptions );\n\n  if ( isString( prefixOrOptions ) )\n  {\n    SaveOptions.prefix += prefixOrOptions;\n  }\n  else if ( isObject( prefixOrOptions ) )\n  {\n    if ( isString( prefixOrOptions.prefix ) )\n    {\n      SaveOptions.prefix += prefixOrOptions.prefix;\n    }\n    if ( isDefined( prefixOrOptions.cache ) )\n    {\n      SaveOptions.cache = prefixOrOptions.cache;\n    }\n    if ( isDefined( prefixOrOptions.options ) )\n    {\n      var parsedOptions = $options( prefixOrOptions.options, SaveOptions.cache );\n\n      if ( parsedOptions !== Defaults.noOptions )\n      {\n        extend( SaveOptions.options, parsedOptions );\n      }\n    }\n  }\n\n  if ( isObject( animations ) )\n  {\n    for (var animationName in animations)\n    {\n      save( animationName, animations[ animationName ] );\n    }\n  }\n  else if ( isFunction( animations ) )\n  {\n    animations();\n  }\n\n  SaveOptions = previousOptions;\n}\n\n\nfunction translate(animation, mappings, saveAs, options, cache)\n{\n  var parsed = $animation(animation, options, cache);\n  var attrimators = parsed.newAttrimators();\n\n  for (var fromAttribute in mappings)\n  {\n    var toAttribute = mappings[ fromAttribute ];\n\n    attrimators.get( fromAttribute ).attribute = toAttribute;\n    attrimators.rekey( fromAttribute, toAttribute );\n  }\n\n  var translated = new Animation( saveAs, parsed.input, parsed.options, attrimators );\n\n  if ( isString( saveAs ) )\n  {\n    save( saveAs, translated );\n  }\n\n  return translated;\n}\n\n\n/*\n * A calculator for objects with an x and y component (number)\n *\n * @class Calculator2d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator2d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator2d, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x\n      };\n    }\n    // When an array is given, assume [x, y]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, defaultValue.x );\n      var cy = coalesce( x.y, defaultValue.y );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n\n      if ( rx !== false && ry !== false )\n      {\n        var parsed = { x: rx, y: ry };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n\n        if ( ix || iy )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // Relative values & left/right/middle/center/top/bottom aliases.\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the X & Y components evenly.\n      if ( this.isRelative( x ) )\n      {\n        var rx = this.getRelativeAmount( x );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { x: rx, y: rx } );\n        }\n      }\n\n      var aliases = {\n        'left':   0,\n        'right':  100,\n        'middle': 50,\n        'center': 50,\n        'top':    0,\n        'bottom': 100\n      };\n\n      if ( x.indexOf(' ') === -1 )\n      {\n        var _x = parseFloat( x );\n\n        if ( !isNaN(_x) || x in aliases )\n        {\n          return {\n            x: x in aliases ? aliases[x] : _x,\n            y: x in aliases ? aliases[x] : _x\n          };\n        }\n      }\n      else\n      {\n        var pair = x.split(' ');\n        var _x = parseFloat( pair[0] );\n        var _y = parseFloat( pair[1] );\n\n        if ((!isNaN(_x) || pair[0] in aliases) && (!isNaN(_y) || pair[1] in aliases))\n        {\n          return {\n            x: pair[0] in aliases ? aliases[pair[0]] : _x,\n            y: pair[1] in aliases ? aliases[pair[1]] : _y\n          };\n        }\n      }\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    return dx * dx + dy * dy;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, and z component (number)\n *\n * @class Calculator3d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator3d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator3d, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x,\n        z: x\n      };\n    }\n    // When an array is given, assume [x, y, z]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, defaultValue.x );\n      var cy = coalesce( x.y, defaultValue.y );\n      var cz = coalesce( x.z, defaultValue.z );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n      var rz = this.getRelativeAmount( cz );\n\n      if ( rx !== false && ry !== false && rz !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n        var iz = this.isRelative( cz );\n\n        if ( ix || iy || iz )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // If only a relative value is given it will modify the X, Y, & Z components evenly.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { x: rx, y: rx, z: rx } );\n      }\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for number primitives.\n *\n * @class CalculatorNumber\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorNumber()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorNumber, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // A raw number\n    if ( isNumber( x ) )\n    {\n      return x;\n    }\n    // A number in a string or a relative number.\n    if ( isString( x ) )\n    {\n      var amount = this.getRelativeAmount( x );\n\n      if ( amount !== false )\n      {\n        if ( this.isRelative( x ) )\n        {\n          return computed.relative( amount );\n        }\n        else\n        {\n          return amount;\n        }\n      }\n    }\n\n    return defaultValue;\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return 0.0;\n  },\n  zero: function(out)\n  {\n    return 0.0;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale)\n  {\n    return out *= scale;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return (end - start) * delta + start;\n  },\n  distanceSq: function(a, b)\n  {\n    var ab = a - b;\n    return ab * ab;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a - b );\n  },\n  length: function(a)\n  {\n    return Math.abs( a );\n  },\n  lengthSq: function(a)\n  {\n    return a * a;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'number';\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a - b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    return Math.min( a, b );\n  },\n  max: function(out, a, b)\n  {\n    return Math.max( a, b );\n  },\n  dot: function(a, b)\n  {\n    return a * b;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, z, and angle components.\n *\n * @class CalculatorQuaternion\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorQuaternion()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorQuaternion, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When only a number is given assume it's an angle around the Z-axis.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: 0,\n        y: 0,\n        z: 1,\n        angle: x\n      };\n    }\n    // When an array is given, assume [x, y, z, angle]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2], angle: x[3] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, defaultValue.x );\n      var cy = coalesce( x.y, defaultValue.y );\n      var cz = coalesce( x.z, defaultValue.z );\n      var ca = coalesce( x.angle, defaultValue.angle );\n      var rx = this.getRelativeAmount( cx );\n      var ry = this.getRelativeAmount( cy );\n      var rz = this.getRelativeAmount( cz );\n      var ra = this.getRelativeAmount( ca );\n\n      if ( rx !== false && ry !== false && rz !== false && ra !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz, angle: ra };\n        var ix = this.isRelative( cx );\n        var iy = this.isRelative( cy );\n        var iz = this.isRelative( cz );\n        var ia = this.isRelative( ca );\n\n        if ( ix || iy || iz || ia )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0,\n            angle: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed );\n        }\n\n        return parsed;\n      }\n    }\n    // When a relative value is given, assume it's for an angle around the Z-axis.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { x:0, y:0, z:1, angle: rx }, { x:0, y:0, z:0, angle:1 } );\n      }\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    out.angle = copy.angle;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    out.angle = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    out.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    out.angle *= scale.angle;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    out.angle = (end.angle - start.angle) * delta + start.angle;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    var da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon &&\n           Math.abs(a.z) < epsilon &&\n           Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon &&\n           Math.abs(a.angle - b.angle) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    out.angle = Math.min(a.angle, b.angle);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    out.angle = Math.max(a.angle, b.angle);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z + a.angle * b.angle;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    out.angle = (max.angle - min.angle) * Math.random() + min.angle;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n *\n * @class CalculatorRGB\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGB()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGB, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given a grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x\n      };\n    }\n    // When an array is given, assume [r, g, b]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, defaultValue.r );\n      var cg = coalesce( x.g, defaultValue.g );\n      var cb = coalesce( x.b, defaultValue.b );\n      var rr = this.getRelativeAmount( cr );\n      var rg = this.getRelativeAmount( cg );\n      var rb = this.getRelativeAmount( cb );\n\n      if ( rr !== false && rg !== false && rb !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb };\n        var ir = this.isRelative( cr );\n        var ig = this.isRelative( cg );\n        var ib = this.isRelative( cb );\n\n        if ( ir || ig || ib )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // If only a relative value is given it will modify the R, G, & B components.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { r: rx, g: rx, b: rx } );\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with r, g, & b components\n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n *\n * @class CalculatorRGBA\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGBA()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGBA, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // When a number is given an opaque grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x,\n        a: 1.0\n      };\n    }\n    // When an array is given, assume [r, g, b, a]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2], a: x[3] };\n    }\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, defaultValue.r );\n      var cg = coalesce( x.g, defaultValue.g );\n      var cb = coalesce( x.b, defaultValue.b );\n      var ca = coalesce( x.a, defaultValue.a );\n      var rr = this.getRelativeAmount( cr );\n      var rg = this.getRelativeAmount( cg );\n      var rb = this.getRelativeAmount( cb );\n      var ra = this.getRelativeAmount( ca );\n\n      if ( rr !== false && rg !== false && rb !== false && ra !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb, a: ra };\n        var ir = this.isRelative( cr );\n        var ig = this.isRelative( cg );\n        var ib = this.isRelative( cb );\n        var ia = this.isRelative( ca );\n\n        if ( ir || ig || ib || ia )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0,\n            a: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n    // If only a relative value is given it will modify the R, G, & B components.\n    if ( this.isRelative( x ) )\n    {\n      var rx = this.getRelativeAmount( x );\n\n      if ( rx !== false )\n      {\n        return computed.relative( { r: rx, g: rx, b: rx, a: 0 } );\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    // If no value was given but the default value was given, clone it.\n    if ( isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );\n    }\n\n    return false;\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    out.a = (end.a - start.a) * delta + start.a;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    var da = a.a - b.a;\n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon &&\n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon &&\n           Math.abs(a.a - b.a) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    out.a = Math.min(a.a, b.a);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    out.a = Math.max(a.a, b.a);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b + a.a * b.a;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    out.a = (max.a - min.a) * Math.random() + min.a;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for strings.\n *\n * @class CalculatorString\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorString()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorString, Calculator,\n{\n  parse: function(x, defaultValue)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n    // A raw string\n    if ( isString( x ) )\n    {\n      return x;\n    }\n\n    return defaultValue;\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return '';\n  },\n  zero: function(out)\n  {\n    return '';\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return amount;\n  },\n  mul: function(out, scale)\n  {\n    return scale;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return delta < 0.5 ? start : end;\n  },\n  distanceSq: function(a, b)\n  {\n    var d = Math.abs( a.length - b.length );\n    return d * d;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a.length - b.length );\n  },\n  length: function(a)\n  {\n    return a.length;\n  },\n  lengthSq: function(a)\n  {\n    return a.length * a.length;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'string';\n  },\n  isNaN: function(a)\n  {\n    return false;\n  },\n  isZero: function(a, epsilon)\n  {\n    return a.length <= epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return a === b;\n  },\n  min: function(out, a, b)\n  {\n    return a < b ? a : b;\n  },\n  max: function(out, a, b)\n  {\n    return a > b ? a : b;\n  },\n  dot: function(a, b)\n  {\n    return a.length * b.length;\n  }\n});\n\n\n/**\n * A factory for plain objects.\n *\n * @class FactoryObject\n * @constructor\n * @extends Factory\n */\nfunction FactoryObject()\n{\n  this.priority = 0;\n  this.attributes = {};\n}\n\nClass.extend( FactoryObject, Factory,\n{\n  is: function(subject)\n  {\n    return isObject( subject ) && !isArray( subject ); /* !isElement( subject ) && */\n  },\n  animatorFor: function(subject)\n  {\n    var animator = subject.$animator;\n\n    if ( !animator )\n    {\n      animator = new Animator( subject );\n      animator.factory = this;\n\n      subject.$animator = animator;\n    }\n\n    return animator;\n  },\n  destroy: function(animator)\n  {\n    delete animator.subject.$animator;\n  },\n  attribute: function(attr)\n  {\n    var attribute = this.attributes[ attr ];\n\n    if ( !attribute )\n    {\n      attribute = this.attributes[ attr ] = object.attribute( attr );\n\n      var calculatorName = attribute.calculator;\n      var calculator = $calculator( calculatorName );\n      var defaultValue = calculator.parse( attribute.defaultValue, calculator.ZERO );\n\n      attribute.calculatorName = calculatorName;\n      attribute.calculator = calculator;\n      attribute.defaultValue = defaultValue;\n      attribute.name = attr;\n      attribute.parse = function(value) {\n        return this.calculator.parse( value, this.defaultValue );\n      };\n      attribute.cloneDefault = function() {\n        return this.calculator.clone( this.defaultValue );\n      };\n    }\n\n    return attribute;\n  }\n});\n\n/**\n * The Object namespace.\n *\n * @type {Object}\n */\nvar object = {};\n\n/**\n * Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\n * returned immediately. If the input is a string the attribute with the given name is returned. Otherwise\n * the default attribute is returned.\n *\n * @param {Object|String} attr\n * @return {Object}\n */\nobject.attribute = function(attr)\n{\n  if ( isObject( attr ) && isDefined( attr.defaultValue ) )\n  {\n    return attr;\n  }\n  if ( isString( attr ) && attr in object.attribute )\n  {\n    return object.attribute[ attr ];\n  }\n\n  return object.attribute['default'];\n};\n\n/**\n * The default attribute.\n */\nobject.attribute['default']                 = {defaultValue: 0};\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderAnd\n * @constructor\n * @extends Builder\n */\nfunction BuilderAnd()\n{\n\n}\n\nClass.extend( BuilderAnd, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var and = animation.and;\n\n    and.factory = coalesce( and.factory, animation.factory );\n\n    attrimatorMap.putMap( $attrimatorsFor( and, options ) );\n  },\n  \n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.and, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'deltas' & 'values' animation type.\n *\n * @class BuilderDeltas\n * @constructor\n * @extends Builder\n */\nfunction BuilderDeltas()\n{\n\n}\n\nClass.extend( BuilderDeltas, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. If deltas wasn't specified, assume a uniform distribution of points\n    // 2. If deltas was an array, expand out into an object where the keys are attributes and the value is the delta array\n    // 3. Generate the attrimators\n\n    var mergeId = Builder.nextMergeId();\n    var factory = $factory( animation.factory );\n    var deltas = animation.deltas;\n    var values = animation.values;\n\n    if ( !isDefined( deltas ) )\n    {\n      deltas = {};\n    }\n    else if ( isArray( deltas ) )\n    {\n      var deltaObject = {};\n\n      for (var attr in values)\n      {\n        deltaObject[attr] = deltas;\n      }\n\n      deltas = deltaObject;\n    }\n\n    for (var attr in values)\n    {\n      var value = values[ attr ];\n      var valueMax = value.length - 1;\n      var delta = deltas[ attr ];\n      var attribute = factory.attribute( attr );\n\n      for (var k = 0; k <= valueMax; k++)\n      {\n        value[k] = attribute.parse( value[k] );\n      }\n\n      if ( !isArray( delta ) )\n      {\n        delta = [];\n\n        for (var i = 0; i <= valueMax; i++)\n        {\n          delta[i] = i / valueMax;\n        }\n      }\n\n      var path      = new PathDelta( attr, attribute.calculator, value, delta );\n      var event     = helper.parseEvent( attr, path, this, true );\n\n      event.mergeId = mergeId;\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'final' animation type.\n *\n * @class BuilderFinal\n * @constructor\n * @extends Builder\n */\nfunction BuilderFinal()\n{\n\n}\n\nClass.extend( BuilderFinal, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays and durations\n\n    var factory = $factory( animation.factory );\n    var values = animation.final;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = $delay( helper.parseDelay( attr ) );\n      var duration   = $duration( helper.parseDuration( attr ) );\n      var event      = new Oncer( attr, value, delay + duration, false, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay ) +\n              helper.mergeDuration( attr, e.duration );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'initial' animation type.\n *\n * @class BuilderInitial\n * @constructor\n * @extends Builder\n */\nfunction BuilderInitial()\n{\n\n}\n\nClass.extend( BuilderInitial, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays & scales\n\n    var factory    = $factory( animation.factory );\n    var values     = animation.initial;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = helper.parseDelay( attr );\n      var oncer      = new Oncer( attr, value, delay, true, this, null, animation );\n\n      attrimatorMap.put( attr, oncer );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'keyframe' animation type.\n *\n * @class BuilderKeyframe\n * @constructor\n * @extends Builder\n */\nfunction BuilderKeyframe()\n{\n\n}\n\nClass.extend( BuilderKeyframe, Builder,\n{\n  aliases: {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  },\n\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Normalize keys by converting aliases to the actual value\n    // 2. Split up keys that have commas into multiple entries\n    // 3. Validate keys and remove invalid ones - also calculate max key value\n    // 4. Sort frames by the key\n    // 5. Expand frames to generate delta arrays, value arrays, and easing arrays\n    // 6. Generate the attrimators\n\n    var factory = $factory( animation.factory );\n    var kframes = animation.keyframe;\n    var easings = animation.easings || {};\n    var teasing = $easing( coalesce( options.teasing, Defaults.teasing ) );\n\n    var sort = false;\n\n    // split up comma delimited times\n    for (var time in kframes)\n    {\n      if ( time in this.aliases )\n      {\n        kframes[ this.aliases[time] ] = kframes[ time ];\n\n        delete kframes[ time ];\n      }\n      else if ( time.indexOf(',') !== -1 )\n      {\n        var times = time.split(',');\n\n        for (var i = 0; i < times.length; i++)\n        {\n          kframes[times[i]] = kframes[time];\n        }\n\n        delete kframes[time];\n\n        sort = true;\n      }\n    }\n\n    var times = [];\n\n    // validate times\n    var lastTime = 0.0;\n    var maxTime = 0.0;\n\n    for (var time in kframes)\n    {\n      var t = parseFloat(time);\n\n      if (isNaN(t))\n      {\n        delete kframes[time];\n      }\n      else\n      {\n        if (t < lastTime)\n        {\n          sort = true;\n        }\n\n        times.push({\n          order: t,\n          key: time,\n          value: kframes[time]\n        });\n\n        lastTime = t;\n\n        maxTime = Math.max( maxTime, t );\n      }\n    }\n\n    // sort if necessary\n    if (sort)\n    {\n      times.sort(function(a, b)\n      {\n        return a.order - b.order;\n      });\n\n      kframes = {};\n\n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i].key] = times[i].value;\n      }\n    }\n\n    // split up into deltas and values\n    var deltas = {};\n    var values = {};\n    var pathEasings = {};\n    var attributes = {};\n\n    for (var i = 0; i < times.length; i++)\n    {\n      var frame = times[i];\n      var easing = coalesce( frame.value.easing, options.easing );\n\n      delete frame.value.easing;\n\n      for (var attr in frame.value)\n      {\n        if ( !(attr in deltas) )\n        {\n          deltas[attr] = [];\n          values[attr] = [];\n          pathEasings[attr] = [];\n          attributes[attr] = factory.attribute( attr );\n        }\n\n        deltas[attr].push( frame.order / maxTime );\n        values[attr].push( attributes[ attr ].parse( frame.value[ attr ] ) );\n        pathEasings[attr].push( $easing( coalesce( easings[ attr ], easing ) ) );\n      }\n    }\n\n    // create events & paths\n    for (var attr in deltas)\n    {\n      var duration  = helper.parseDuration( attr );\n      var delay     = helper.parseDelay( attr );\n      var sleep     = helper.parseSleep( attr );\n      var offset    = helper.parseOffset( attr );\n      var repeat    = helper.parseRepeat( attr );\n      var scale     = helper.parseScale( attr );\n      var scaleBase = helper.parseScaleBase( attr );\n      var path      = new PathKeyframe( attr, attributes[attr].calculator, values[attr], deltas[attr], pathEasings[attr] );\n      var event     = new Event( attr, path, duration, teasing, delay, sleep, offset, repeat, scale, scaleBase, true, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'move' animation type.\n *\n * @class BuilderMove\n * @constructor\n * @extends Builder\n */\nfunction BuilderMove()\n{\n\n}\n\nClass.extend( BuilderMove, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var move       = animation.move;\n\n    for (var attr in move)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( move[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, computed.relative( value ) );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'path' animation type.\n *\n * @class BuilderPath\n * @constructor\n * @extends Builder\n */\nfunction BuilderPath()\n{\n\n}\n\nClass.extend( BuilderPath, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory = $factory( animation.factory );\n    var path    = animation.path;\n\n    for (var attr in path)\n    {\n      var attribute  = factory.attribute( attr );\n      var pathDefinition = path[ attr ];\n\n      if ( !( pathDefinition instanceof Path ) )\n      {\n        pathDefinition.name = attr;\n        pathDefinition.calculator = attribute.calculator;\n      }\n\n      var parsedPath = $path( pathDefinition );\n      var event      = helper.parseEvent( attr, parsedPath, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'physics' animation type.\n *\n * @class BuilderPhysics\n * @constructor\n * @extends Builder\n */\nfunction BuilderPhysics()\n{\n\n}\n\nClass.extend( BuilderPhysics, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory );\n    var physics    = animation.physics;\n\n    for (var attr in physics)\n    {\n      var physic    = physics[ attr ];\n\n      var attrimator = new Physics(\n        attr,\n        this,\n        physic.calculator,\n        coalesce( physic.position, true ),\n        physic.velocity,\n        physic.acceleration,\n        physic.terminal,\n        physic.stopAt\n      );\n\n      attrimatorMap.put( attr, attrimator );\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderQueue\n * @constructor\n * @extends Builder\n */\nfunction BuilderQueue()\n{\n\n}\n\nClass.extend( BuilderQueue, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var queue = animation.queue;\n\n    queue.factory = coalesce( queue.factory, animation.factory );\n\n    attrimatorMap.queueMap( $attrimatorsFor( queue, options ) );\n  },\n\n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.queue, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'springs' animation type.\n *\n * @class BuilderSpring\n * @constructor\n * @extends Builder\n */\nfunction BuilderSpring()\n{\n\n}\n\nClass.extend( BuilderSpring, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory );\n    var springs    = animation.springs;\n\n    for (var attr in springs)\n    {\n      var spring     = springs[ attr ];\n\n      if ( !isDefined( spring.attribute ) )\n      {\n        spring.attribute = attr;\n      }\n\n      var parsed = $spring( spring );\n\n      if ( parsed !== false )\n      {\n        parsed.parser = this;\n\n        attrimatorMap.put( attr, parsed );\n      }\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'travel' animation type.\n *\n * @class BuilderTravel\n * @constructor\n * @extends Builder\n */\nfunction BuilderTravel()\n{\n\n}\n\nClass.extend( BuilderTravel, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var travel     = animation.travel;\n\n    /**\n     * The computed function which returns a function which returns a value pointing\n     * to a given target given the current position of the animator.\n     *\n     * @param  {Number}\n     * @param  {any}\n     * @param  {Number}\n     * @return {Function}\n     */\n    var pointing = function(amount, target, epsilon, subtractVelocity)\n    {\n      return computed(function pointingFunction(attrimator, animator)\n      {\n        var attribute = animator.getAttribute( attrimator.attribute );\n        var calc = attribute.calculator;\n        var targetValue = isComputed( target ) ? target( attrimator, animator ) : target;\n        var temp = calc.create();\n\n        return function()\n        {\n          var position   = attrimator.position;\n          var current    = calc.copy( temp, resolve( targetValue ) );\n          var difference = calc.sub( current, position );\n          var distance   = calc.distance( difference, calc.ZERO );\n\n          if ( distance < epsilon )\n          {\n            attrimator.stopIn( 0 );\n          }\n          else\n          {\n            difference = calc.scale( difference, amount / distance );\n          }\n\n          if ( subtractVelocity )\n          {\n            difference = calc.sub( difference, attrimator.resolveVelocity() );\n          }\n\n          return difference;\n        };\n      });\n    };\n\n    for (var attr in travel)\n    {\n      var traveling     = travel[ attr ];\n      var attribute     = factory.attribute( attr );\n      var fromParsed    = attribute.parse( coalesce( traveling.from, true ) );\n      var toParsed      = attribute.parse( coalesce( traveling.to, true ) );\n      var velocity      = $number( traveling.velocity, 0 );\n      var acceleration  = $number( traveling.acceleration, 0 );\n      var terminal      = $number( coalesce( traveling.terminal, traveling.velocity ), Number.POSITIVE_INFINITY );\n      var epsilon       = $number( traveling.epsilon, 0.001 );\n\n      if ( acceleration !== 0 )\n      {\n        acceleration = pointing( acceleration, toParsed, epsilon, true );\n      }\n\n      if ( velocity !== 0 )\n      {\n        velocity = pointing( velocity, toParsed, epsilon, false );\n      }\n\n      var traveler = new Physics(\n        attr,\n        this,\n        attribute.calculator,\n        fromParsed,\n        velocity,\n        acceleration,\n        terminal\n      );\n\n      attrimatorMap.put( attr, traveler );\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new builder for the 'tweenFrom' animation type.\n *\n * @class BuilderTweenFrom\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenFrom()\n{\n\n}\n\nClass.extend( BuilderTweenFrom, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var tweenFrom  = animation.tweenFrom;\n\n    for (var attr in tweenFrom)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenFrom[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, value, computed.current );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'tweenTo' animation type.\n *\n * @class BuilderTweenTo\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenTo()\n{\n\n}\n\nClass.extend( BuilderTweenTo, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory );\n    var tweenTo    = animation.tweenTo;\n\n    for (var attr in tweenTo)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenTo[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, value );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new PathDelta.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @class PathDelta\n * @constructor\n * @extends Path\n */\nfunction PathDelta(name, calculator, points, deltas)\n{\n  this.name = name;\n  this.set( calculator, points, deltas );\n}\n\nClass.extend( PathDelta, Path,\n{\n  set: function(calculator, points, deltas)\n  {\n    this.reset( calculator, points );\n    this.deltas = deltas;\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n\n    return this.calculator.interpolate( out, p0, p1, pd );\n  },\n\n  copy: function()\n  {\n    return new PathDelta( this.name, this.calculator, copy(this.points), copy(this.deltas) );\n  }\n});\n\n\n/**\n * Instantiates a new PathParametric.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @param {Array} matrix\n * @param {Number} weight\n * @class PathParametric\n * @constructor\n * @extends Path\n */\nfunction PathParametric(name, calculator, points, loop, matrix, weight, invert)\n{\n  this.name = name;\n  this.set( calculator, points, loop, matrix, weight, invert );\n}\n\nClass.extend( PathParametric, Path,\n{\n  set: function(calculator, points, loop, matrix, weight, invert)\n  {\n    this.reset( calculator, points );\n    this.loop = loop;\n    this.matrix = matrix;\n    this.weight = weight;\n    this.invert = invert;\n    this.temp = calculator.create();\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var temp = this.temp;\n    var matrix = this.matrix;\n    var n = this.points.length - 1;\n    var a = delta * n;\n    var i = clamp( Math.floor( a ), 0, n - 1 );\n    var d = a - i;\n\n    var p0 = this.resolvePoint( i - 1 );\n    var p1 = this.resolvePoint( i );\n    var p2 = this.resolvePoint( i + 1 );\n    var p3 = this.resolvePoint( i + 2 );\n\n    var d0, d1, d2, d3;\n    if (this.invert) {\n      d3 = 1;\n      d2 = d;\n      d1 = d * d2;\n      d0 = d * d1;\n    } else {\n      d0 = 1;\n      d1 = d;\n      d2 = d * d1;\n      d3 = d * d2;\n    }\n\n    out = calc.zero( out );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[0][0] );\n    temp = calc.adds( temp, p1, matrix[0][1] );\n    temp = calc.adds( temp, p2, matrix[0][2] );\n    temp = calc.adds( temp, p3, matrix[0][3] );\n    out = calc.adds( out, temp, d0 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[1][0] );\n    temp = calc.adds( temp, p1, matrix[1][1] );\n    temp = calc.adds( temp, p2, matrix[1][2] );\n    temp = calc.adds( temp, p3, matrix[1][3] );\n    out = calc.adds( out, temp, d1 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[2][0] );\n    temp = calc.adds( temp, p1, matrix[2][1] );\n    temp = calc.adds( temp, p2, matrix[2][2] );\n    temp = calc.adds( temp, p3, matrix[2][3] );\n    out = calc.adds( out, temp, d2 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[3][0] );\n    temp = calc.adds( temp, p1, matrix[3][1] );\n    temp = calc.adds( temp, p2, matrix[3][2] );\n    temp = calc.adds( temp, p3, matrix[3][3] );\n    out = calc.adds( out, temp, d3 );\n\n    out = calc.scale( out, this.weight );\n\n    return out;\n  },\n\n  resolvePoint: function(i)\n  {\n    var points = this.points;\n    var n = points.length;\n    var k = (this.loops ? (i + n) % n : clamp( i, 0, n - 1 ));\n\n    return resolve( points[ k ] );\n  },\n\n  copy: function()\n  {\n    return new PathParametric( this.name, this.calculator, copy(this.points), this.loop, this.matrix, this.weight );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathBasisSpline.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathBasisSpline\n * @constructor\n * @extends PathParametric\n */\nfunction PathBasisSpline(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathBasisSpline, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathBasisSpline.MATRIX, PathBasisSpline.WEIGHT, true );\n  },\n\n  copy: function()\n  {\n    return new PathBasisSpline( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                                 [-1, 3,-3, 1]   [p-1]\n * f(t) = [t^3, t^2, t, 1] * 1/6 * [ 3,-6, 3, 0] * [ p ]\n *                                 [-3, 0, 3, 0]   [p+1]\n *                                 [ 1, 4, 1, 0]   [p+2]\n */\n\nPathBasisSpline.WEIGHT = 1.0 / 6.0;\nPathBasisSpline.MATRIX = [\n  [-1, 3,-3, 1],\n  [ 3,-6, 3, 0],\n  [-3, 0, 3, 0],\n  [ 1, 4, 1, 0]\n];\n\n\n/**\n * Instantiates a new PathBezier.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathBezier\n * @constructor\n * @extends Path\n */\nfunction PathBezier(name, calculator, points, weights)\n{\n  this.name = name;\n  this.set( calculator, points, weights );\n}\n\nClass.extend( PathBezier, Path,\n{\n  set: function(calculator, points, weights)\n  {\n    this.reset( calculator, points );\n    this.weights = weights || PathBezier.computeWeights( points.length );\n    this.inverses = new Array( points.length );\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var inverses = this.inverses;\n    var weights = this.weights;\n    var n = this.points.length;\n    var x = 1;\n\n    inverses[n - 1] = 1;\n\n    for (var i = n - 2; i >= 0; i--)\n    {\n      inverses[i] = inverses[i + 1] * (1 - delta);\n    }\n\n    out = calc.zero( out );\n\n    for (var i = 0; i < n; i++)\n    {\n      out = calc.adds( out, this.resolvePoint( i ), weights[ i ] * inverses[ i ] * x );\n\n      x *= delta;\n    }\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathBezier( this.name, this.calculator, copy(this.points), this.weights );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\nPathBezier.computeWeights = function(n)\n{\n  var w = new Array( n-- );\n\n  for (var i = 0; i <= n; i++)\n  {\n    w[ i ] = choose( n, i );\n  }\n\n  return w;\n};\n\n\n/**\n * Instantiates a new PathCatmullRom.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathCatmullRom\n * @constructor\n * @extends PathParametric\n */\nfunction PathCatmullRom(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathCatmullRom, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathCatmullRom.MATRIX, PathCatmullRom.WEIGHT, false );\n  },\n\n  copy: function()\n  {\n    return new PathCatmullRom( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                                 [-1, 3,-3, 1]   [p-1]\n * f(t) = [1, t, t^2, t^3] * 1/2 * [ 3,-6, 3, 0] * [ p ]\n *                                 [-3, 0, 3, 0]   [p+1]\n *                                 [ 1, 4, 1, 0]   [p+2]\n */\n\nPathCatmullRom.WEIGHT = 0.5;\nPathCatmullRom.MATRIX = [\n  [ 0, 2, 0, 0],\n\t[-1, 0, 1, 0],\n\t[ 2,-5, 4,-1],\n\t[-1, 3,-3, 1]\n];\n\n\n/**\n * Instantiates a new PathCombo.\n *\n * @param {String|false} name\n * @param {Path[]} paths\n * @param {Boolean} [uniform]\n * @param {Number} [granularity]\n * @class PathCombo\n * @constructor\n * @extends Path\n */\nfunction PathCombo(name, paths, uniform, granularity)\n{\n  this.name = name;\n  this.set( paths, uniform, granularity );\n}\n\nClass.extend( PathCombo, Path,\n{\n  set: function(paths, uniform, granularity)\n  {\n    var pathCount = paths.length;\n    var calc = paths[0].calculator;\n    var points = [];\n    var deltas = [];\n    var linear = true;\n    var length = false;\n\n    for (var i = 0; i < pathCount; i++)\n    {\n      points.push.apply( points, paths[ i ].points );\n\n      deltas[ i ] = ( i + 1 ) / pathCount;\n\n      if ( !paths[ i ].isLinear() )\n      {\n        linear = false;\n      }\n    }\n\n    if ( uniform )\n    {\n      var lengthGranularity = coalesce( granularity, Defaults.comboPathUniformGranularity );\n      var lengthTotal = 0;\n      var lengths = [];\n\n      for (var i = 0; i < pathCount; i++)\n      {\n        lengths[ i ] = paths[ i ].length( lengthGranularity );\n        lengthTotal += lengths[ i ];\n      }\n\n      var lengthCurrent = 0;\n\n      for (var i = 0; i < pathCount; i++)\n      {\n        lengthCurrent += lengths[ i ];\n        deltas[ i ] = lengthCurrent / lengthTotal;\n      }\n\n      length = lengthTotal;\n    }\n\n    this.reset( calc, points );\n    this.paths = paths;\n    this.deltas = deltas;\n    this.uniform = uniform;\n    this.granularity = granularity;\n    this.linear = linear;\n    this.cachedLength = length;\n  },\n\n  isLinear: function()\n  {\n    return this.linear;\n  },\n\n  length: function(granularity)\n  {\n    return this.cachedLength !== false ? this.cachedLength : this._length( granularity );\n  },\n\n  compute: function(out, delta)\n  {\n    var paths = this.paths;\n    var deltas = this.deltas;\n    var previousDelta = 0;\n    var i = 0;\n\n    while ( i < paths.length - 1 && deltas[ i ] < delta )\n    {\n      previousDelta = deltas[ i ];\n      i++;\n    }\n\n    var deltaDistance = delta - previousDelta;\n    var deltaGap = deltas[ i ] - previousDelta;\n    var pathDelta = deltaDistance / deltaGap;\n\n    return paths[ i ].compute( out, pathDelta );\n  },\n\n  copy: function()\n  {\n    return new PathCombo( this.name, this.paths, this.uniform, this.granularity );\n  }\n});\n\n\n/**\n * Instantiates a new PathCompiled.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} pointCount\n * @class PathCompiled\n * @constructor\n * @extends Path\n */\nfunction PathCompiled(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathCompiled, Path,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var compiled = PathCompiled.compile( calc, path, pointCount );\n\n    this.reset( calc, compiled );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  compute: function(out, delta)\n  {\n    var n = this.points.length;\n    var a = Math.floor( delta * n );\n    var index = clamp( a, 0, n - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathCompiled( this.name, this, this.points.length );\n  }\n});\n\nPathCompiled.compile = function(calc, path, pointCount)\n{\n  if (path.points.length === pointCount)\n  {\n    return copy( path.points );\n  }\n\n  var points = [];\n\n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n\n  return points;\n};\n\n\n/**\n * Instantiates a new PathCubic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @param {T} p3\n * @class PathCubic\n * @constructor\n * @extends Path\n */\nfunction PathCubic(name, calculator, p0, p1, p2, p3)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2, p3 );\n}\n\nClass.extend( PathCubic, Path,\n{\n  set: function(calculator, p0, p1, p2, p3)\n  {\n    this.reset( calculator, [p0, p1, p2, p3] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var d3 = d1 * d2;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n    var i3 = i1 * i2;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i3 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 3 * i2 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), 3 * i1 * d2 );\n    out = calc.adds( out, this.resolvePoint( 3 ), d3 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathCubic( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathHermite.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} startTangent\n * @param {T} end\n * @param {T} endTangent\n * @class PathHermite\n * @constructor\n * @extends Path\n */\nfunction PathHermite(name, calculator, start, startTangent, end, endTangent)\n{\n  this.name = name;\n  this.set( calculator, start, startTangent, end, endTangent );\n}\n\nClass.extend( PathHermite, Path,\n{\n  set: function(calculator, start, startTangent, end, endTangent)\n  {\n    this.reset( calculator, [start, end] );\n    this.startTangent = startTangent;\n    this.endTangent = endTangent;\n  },\n\n  compute: function(out, d)\n  {\n    var calc = this.calculator;\n    var d2 = d * d;\n    var d3 = d2 * d;\n\n    out = calc.zero( out );\n    out = calc.adds( out, this.resolvePoint( 0 ), 2 * d3 - 3 * d2 + 1 );\n    out = calc.adds( out, this.resolvePoint( 1 ), -2 * d3 + 3 * d2 );\n    out = calc.adds( out, resolve( this.startTangent ), d3 - 2 * d2 + d );\n    out = calc.adds( out, resolve( this.endTangent ), d3 - d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathHermite( this.name, this.calculator, this.points[0], this.startTangent, this.points[1], this.endTangent );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathJump.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathJump\n * @constructor\n * @extends Path\n */\nfunction PathJump(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathJump, Path,\n{\n  set: function(calculator, points)\n  {\n    this.reset( calculator, points );\n  },\n\n  compute: function(out, delta)\n  {\n    var a = Math.floor( delta * this.points.length );\n    var index = Math.min( a, this.points.length - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathJump( this.name, this.calculator, copy(this.points) );\n  }\n});\n\n\n/**\n * Instantiates a new PathKeyframe.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @param {Array} easings\n * @class PathKeyframe\n * @constructor\n * @extends Path\n */\nfunction PathKeyframe(name, calculator, points, deltas, easings)\n{\n  this.name = name;\n  this.set( calculator, points, deltas, easings );\n}\n\nClass.extend( PathKeyframe, Path,\n{\n  set: function(calculator, points, deltas, easings)\n  {\n    this.reset( calculator, points );\n    this.deltas = deltas;\n    this.easings = easings;\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n\n    if ( delta < ds[0] ) {\n      return false;\n    }\n\n    if ( delta > ds[ds.length - 1] ) {\n      return this.points[ds.length - 1];\n    }\n\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n    var ea = this.easings[i];\n\n    return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n  },\n  copy: function()\n  {\n    return new PathKeyframe( this.name, this.calculator, copy(this.points), copy(this.deltas), copy(this.easings) );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathLinear(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathLinear, PathDelta,\n{\n  set: function(calculator, points)\n  {\n    var deltas = PathLinear.getTimes( calculator, points );\n\n    this._set( calculator, points, deltas );\n  },\n\n  copy: function()\n  {\n    return new PathLinear( this.name, this.calculator, copy(this.points) );\n  }\n});\n\nPathLinear.getTimes = function(calc, points)\n{\n  var n = points.length - 1;\n\tvar distances = [];\n\n\tdistances[ 0 ] = 0;\n\n\tfor (var i = 1; i <= n; i++)\n\t{\n\t\tdistances[ i ] = distances[ i - 1 ] + calc.distance( points[ i - 1 ], points[ i ] );\n\t}\n\n\tvar invlength = 1.0 / distances[ n ];\n\n\tfor (var i = 1; i < n; i++)\n\t{\n\t\tdistances[ i ] *= invlength;\n\t}\n\n  distances[ n ] = 1;\n\n\treturn distances;\n};\n\n\n/**\n * Instantiates a new PathQuadratic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @class PathQuadratic\n * @constructor\n * @extends Path\n */\nfunction PathQuadratic(name, calculator, p0, p1, p2)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2 );\n}\n\nClass.extend( PathQuadratic, Path,\n{\n  set: function(calculator, p0, p1, p2)\n  {\n    this.reset( calculator, [p0, p1, p2] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i2 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 2 * i1 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathQuadratic( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathQuadraticCorner.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Number} midpoint\n * @param {Boolean} loop\n * @class PathQuadraticCorner\n * @constructor\n * @extends Path\n */\nfunction PathQuadraticCorner(name, calculator, points, midpoint, loop)\n{\n  this.name = name;\n  this.set( calculator, points, midpoint, loop );\n}\n\nClass.extend( PathQuadraticCorner, Path,\n{\n  set: function(calculator, points, midpoint, loop)\n  {\n    this.reset( calculator, points );\n    this.midpoint = midpoint;\n    this.loop = loop;\n    this.temp0 = calculator.create();\n    this.temp1 = calculator.create();\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var temp0 = this.temp0;\n    var temp1 = this.temp1;\n    var midpoint = this.midpoint;\n    var negmidpoint = 1.0 - midpoint;\n    var halfmidpoint = midpoint * 0.5;\n    var n = this.points.length - (this.loops ? 0 : 1);\n    var a = delta * n;\n    var i = clamp( Math.floor( a ), 0, n - 1 );\n    var d = a - i;\n\n    var p0 = this.resolvePoint( i - 1 );\n    var p1 = this.resolvePoint( i );\n    var p2 = this.resolvePoint( i + 1 );\n    var p3 = this.resolvePoint( i + 2 );\n\n    if ( d < midpoint )\n    {\n      d = (d / midpoint);\n      temp0 = calc.interpolate( temp0, p0, p1, d * halfmidpoint + negmidpoint + halfmidpoint );\n      temp1 = calc.interpolate( temp1, p1, p2, d * halfmidpoint + halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5 + 0.5;\n    }\n    else if ( d > negmidpoint )\n    {\n      d = (d - negmidpoint) / midpoint;\n      temp0 = calc.interpolate( temp0, p1, p2, d * halfmidpoint + negmidpoint );\n      temp1 = calc.interpolate( temp1, p2, p3, d * halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5;\n    }\n\n    out = calc.interpolate( out, p1, p2, d );\n\n    return out;\n  },\n\n  resolvePoint: function(i)\n  {\n    var points = this.points;\n    var n = points.length;\n    var k = (this.loops ? (i + n) % n : clamp( i, 0, n - 1 ));\n\n    return resolve( points[ k ] );\n  },\n\n  copy: function()\n  {\n    return new PathQuadraticCorner( this.name, this.calculator, copy(this.points), this.midpoint, this.loop );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathSub.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} start\n * @param {Number} end\n * @class PathSub\n * @constructor\n * @extends Path\n */\nfunction PathSub(name, path, start, end)\n{\n  this.name = name;\n  this.set( path, start, end );\n}\n\nClass.extend( PathSub, Path,\n{\n  set: function(path, start, end)\n  {\n    this.reset( path.calculator, path.points );\n    this.path = path;\n    this.start = start;\n    this.end = end;\n  },\n\n  compute: function(out, delta)\n  {\n    return this.path.compute( out, (this.end - this.start) * delta + this.start );\n  },\n\n  copy: function()\n  {\n    return new PathSub( this.name, this.path, this.start, this.end );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathUniform(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathUniform, PathDelta,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var points = PathCompiled.compile( calc, path, pointCount );\n    var deltas = PathLinear.getTimes( calc, points );\n\n    this._set( calc, points, deltas );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  copy: function()\n  {\n    return new PathUniform( this.name, this.path, this.pointCount );\n  }\n});\n\n\n/**\n * Instantiates a new Tween.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} end\n * @class Tween\n * @constructor\n * @extends Path\n */\nfunction Tween(name, calculator, start, end)\n{\n  this.name = name;\n  this.set( calculator, start, end );\n}\n\nClass.extend( Tween, Path,\n{\n  set: function(calculator, start, end)\n  {\n    this.reset( calculator, [ start, end ] );\n  },\n\n  compute: function(out, delta)\n  {\n    return this.calculator.interpolate( out, this.resolvePoint( 0 ), this.resolvePoint( 1 ), delta );\n  },\n\n  copy: function()\n  {\n    return new Tween( this.name, this.calculator, this.points[0], this.points[1] );\n  }\n});\n\n\n/**\n * Instantiates a new SpringDistance.\n *\n * @param {String|false} attribute\n * @param {anim8.Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {Number} distance\n * @param {Number} damping\n * @param {Number} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringDistance\n * @constructor\n * @extends Spring\n */\nfunction SpringDistance(attribute, calculator, position, rest, distance, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.distance   = distance;\n  this.damping    = damping;\n  this.stiffness  = stiffness;\n  this.temp       = null;\n}\n\nClass.extend( SpringDistance, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    this.temp = this.calculator.create();\n  },\n\n  clone: function()\n  {\n    return new SpringDistance( this.attribute, this.calculator, this.position, this.rest, this.distance, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // d = DISTANCE( position, rest )\n    // velocity += ((position - rest) / d * stiffness * |distance - d| - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n    var rest = this.resolveRest();\n\n    var d = calc.distance( this.position, rest );\n\n    this.temp = calc.copy( this.temp, this.position );\n    this.temp = calc.sub( this.temp, rest );\n\n    if ( d !== 0 )\n    {\n      this.temp = calc.scale( this.temp, 1.0 / d );\n      this.temp = calc.scale( this.temp, (d - this.distance) * this.stiffness );\n    }\n\n    this.temp = calc.adds( this.temp, this.velocity, -this.damping );\n\n    this.velocity = calc.adds( this.velocity, this.temp, dt );\n  }\n\n});\n\n\n/**\n * Instantiates a new SpringLinear.\n *\n * @param {String|false} attribute\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {T} damping\n * @param {T} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringLinear\n * @constructor\n * @extends Spring\n */\nfunction SpringLinear(attribute, calculator, position, rest, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.damping      = damping;\n  this.stiffness    = stiffness;\n  this.temp0        = null;\n  this.temp1        = null;\n}\n\nClass.extend( SpringLinear, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = this.calculator;\n\n    this.damping      = this.parseValue( animator, this.damping, attribute.defaultValue );\n    this.stiffness    = this.parseValue( animator, this.stiffness, attribute.defaultValue );\n    this.temp0        = calc.create();\n    this.temp1        = calc.create();\n  },\n\n  clone: function()\n  {\n    return new SpringLinear( this.attribute, this.calculator, this.position, this.rest, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.damping ) ||\n           isComputed( this.stiffness );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // velocity += ((stiffness * (position - rest)) - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n\n    this.temp1 = calc.copy( this.temp1, this.damping );\n    this.temp1 = calc.mul( this.temp1, this.velocity );\n\n    this.temp0 = calc.copy( this.temp0, this.position );\n    this.temp0 = calc.sub( this.temp0, this.resolveRest() );\n    this.temp0 = calc.mul( this.temp0, this.stiffness );\n    this.temp0 = calc.sub( this.temp0, this.temp1 );\n\n    this.velocity = calc.adds( this.velocity, this.temp0, dt );\n  }\n\n});\n\n\nvar nextTimeline = (function()\n{\n  var id = 0;\n\n  return function() {\n    return ++id;\n  };\n\n})();\n\nfunction Movie(name)\n{\n  this.name = name;\n  this.currentTime = 0;\n  this.currentTimelines = [];\n  this.introduce = false;\n  this.timelines = new FastMap();\n  this.autoEnd = false;\n}\n\nClass.define( Movie,\n{\n  setAutoEnd: function(autoEnd)\n  {\n    this.autoEnd = autoEnd;\n\n    return this;\n  },\n  intro: function(subjects)\n  {\n    this.currentTimelines = this.getTimelines( subjects );\n    this.introduce = true;\n\n    return this;\n  },\n  with: function(subjects)\n  {\n    this.currentTimelines = this.getTimelines( subjects );\n\n    return this;\n  },\n  add: function(subjects)\n  {\n    var additional = this.getTimelines( subjects );\n\n    this.currentTimelines.push.apply( this.currentTimelines, additional );\n\n    return this;\n  },\n  getTimeline: function(animator)\n  {\n    var timelineId = animator.$timelineId;\n    var timeline = this.timelines.get( timelineId );\n\n    if ( !isDefined( timeline ) )\n    {\n      timelineId = nextTimeline();\n      timeline = new MovieTimeline( animator );\n      animator.$timelineId = timelineId;\n\n      this.timelines.put( timelineId, timeline );\n    }\n\n    return timeline;\n  },\n  getTimelines: function(subjects)\n  {\n    var animators = [];\n\n    if ( isArray( subjects ) )\n    {\n      for (var i = 0; i < subjects.length; i++)\n      {\n        var animator = anim8( subjects[ i ] );\n\n        if ( animator !== false )\n        {\n          animators.push( this.getTimeline( animator ) );\n        }\n      }\n    }\n    else\n    {\n      var animator = anim8( subjects );\n\n      if ( animator !== false )\n      {\n        animators.push( this.getTimeline( animator ) );\n      }\n    }\n\n    return animators;\n  },\n  at: function(time)\n  {\n    var at = $time( time, false );\n\n    if ( at === false )\n    {\n      throw 'Invalid time in Movie.at: ' + time;\n    }\n\n    this.currentTime = at;\n\n    return this;\n  },\n  seek: function(time)\n  {\n    var by = $time( time, false );\n\n    if ( by === false )\n    {\n      throw 'Invalid time in Movie.seek: ' + time;\n    }\n\n    return this.at( this.currentTime + by );\n  },\n  end: function()\n  {\n    return this.at( this.duration() );\n  },\n  play: function(animation, options, all)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options );\n    var timelines = this.timelines.values;\n\n    for (var i = 0; i < timelines.length; i++)\n    {\n      timelines[ i ].addAttrimators( attrimatorMap, all, this.currentTime, this.introduce );\n    }\n\n    this.introduce = false;\n\n    if ( this.autoEnd )\n    {\n      this.end();\n    }\n\n    return this;\n  },\n  duration: function()\n  {\n    var timelines = this.timelines.values;\n    var maxTime = 0;\n\n    for (var i = 0; i < timelines.length; i++)\n    {\n      maxTime = Math.max( maxTime, timelines[ i ].attrimators.timeRemaining() );\n    }\n\n    return maxTime;\n  }\n});\n\neventize( Movie.prototype );\n\n\nfunction MoviePlayer(movie)\n{\n  this.speed = 1.0;\n  this.time = 0;\n  this.currentTime = 0;\n  this.playing = false;\n  this.movie = movie;\n  this.duration = movie.duration();\n  this.run = this.runner( movie, this );\n}\n\nClass.define( MoviePlayer,\n{\n  reverse: function()\n  {\n    this.speed = -this.speed;\n\n    return this;\n  },\n  backward: function()\n  {\n    this.speed = -Math.abs( this.speed );\n\n    return this;\n  },\n  forward: function()\n  {\n    this.speed = Math.abs( this.speed );\n\n    return this;\n  },\n  start: function()\n  {\n    this.time = 0;\n\n    return this;\n  },\n  end: function()\n  {\n    this.time = this.duration;\n\n    return this;\n  },\n  play: function()\n  {\n    if ( !this.playing )\n    {\n      this.currentTime = now();\n      this.playing = true;\n\n      requestRun( this.run );\n    }\n\n    return this;\n  },\n  pause: function()\n  {\n    this.playing = false;\n\n    return this;\n  },\n  goto: function(time, applyNow, avoidApplyTrigger)\n  {\n    this.time = $time( time );\n\n    if ( applyNow )\n    {\n      this.apply( this.time, avoidApplyTrigger );\n    }\n\n    return this;\n  },\n  apply: function(applyTime, avoidApplyTrigger)\n  {\n    var time = coalesce( applyTime, this.time );\n    var timelines = this.movie.timelines.values;\n    var active = [];\n\n    for (var i = 0; i < timelines.length; i++)\n    {\n      var timeline = timelines[ i ];\n\n      if ( time >= timeline.start )\n      {\n        active.push( timeline );\n      }\n    }\n\n    for (var i = 0; i < active.length; i++)\n    {\n      active[ i ].preupdate( time );\n    }\n\n    for (var i = 0; i < active.length; i++)\n    {\n      active[ i ].update( time );\n    }\n\n    for (var i = 0; i < active.length; i++)\n    {\n      active[ i ].apply();\n    }\n\n    if ( !avoidApplyTrigger )\n    {\n      this.trigger( 'apply', [this, time] );\n    }\n\n    return this;\n  },\n  evaluatePlaying: function()\n  {\n    if ( this.playing )\n    {\n      if ( this.time < 0 )\n      {\n        this.time = 0;\n        this.playing = false;\n        this.trigger( 'start', [this] );\n      }\n      else if ( this.time > this.duration )\n      {\n        this.time = this.duration;\n        this.playing = false;\n        this.trigger( 'end', [this] );\n      }\n    }\n\n    return this;\n  },\n  runner: function(movie, player)\n  {\n    return function run()\n    {\n      var currentTime = now();\n      var elapsed = currentTime - player.currentTime;\n\n      player.time += elapsed * player.speed;\n      player.currentTime = currentTime;\n      player.apply();\n      player.evaluatePlaying();\n\n      if ( player.playing )\n      {\n        requestRun( player.run );\n      }\n    };\n  }\n});\n\neventize( MoviePlayer.prototype );\n\n\nfunction MovieTimeline(animator)\n{\n  this.animator = animator;\n  this.attrimators = new AttrimatorMap();\n  this.start = 0;\n}\n\nClass.define( MovieTimeline,\n{\n\n  addAttrimators: function(attrimatorMap, all, time, intro)\n  {\n    if ( this.attrimators.size() )\n    {\n      this.attrimators.playMapAt( attrimatorMap, all, time );\n    }\n    else if ( intro )\n    {\n      this.attrimators.putMap( attrimatorMap );\n      this.attrimators.delay( time );\n    }\n    else\n    {\n      this.start = time;\n      this.attrimators.putMap( attrimatorMap );\n      this.attrimators.delay( time );\n    }\n  },\n\n  preupdate: function(time)\n  {\n    var animator = this.animator;\n    var attrimators = this.attrimators.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = animator.attrimators.get( attr );\n      var attrimatorAt = attrimator.attrimatorAt( time );\n\n      if ( existing !== attrimatorAt )\n      {\n        if ( attrimatorAt )\n        {\n          animator.placeAttrimator( attrimatorAt );\n        }\n        else\n        {\n          animator.attrimators.remove( attr );\n        }\n      }\n    }\n\n    this.animator.preupdate( time );\n  },\n\n  update: function(time)\n  {\n    var animator = this.animator;\n    var attrimators = this.attrimators.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calculator = attribute.calculator;\n      var currentValue = animator.frame[ attr ];\n\n      if ( calculator.isValid( currentValue ) )\n      {\n        var valueAt = attrimator.valueAtSearch( time, currentValue );\n\n        if ( valueAt !== false )\n        {\n          animator.frame[ attr ] = valueAt;\n          animator.updated[ attr ] = true;\n        }\n      }\n    }\n  },\n\n  apply: function()\n  {\n    this.animator.apply();\n  }\n\n});\n\n\nvar Builders = {};\n\n/**\n * Register the builder.\n */\nBuilders['values'] = new BuilderDeltas();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      and: {\n *       ... more builders ...\n *      }\n *     });\n *\n *\n * @property {BuilderAnd} and\n * @for anim8.builder\n */\nBuilders['and'] = new BuilderAnd();\n\n/**\n * Register the builder.\n */\nBuilders['final'] = new BuilderFinal();\n\n\n/**\n * Register the builder.\n */\nBuilders['initial'] = new BuilderInitial();\n\n/**\n * Registers the builder.\n */\nBuilders['keyframe'] = new BuilderKeyframe();\n\n/**\n * Register the builder.\n */\nBuilders['move'] = new BuilderMove();\n\n/**\n * A builder which generates attrimators which follow a given path.\n *\n * **Examples:**\n *\n *     animator.play({\n *      path: {\n *       opacity: {\n *        type: 'quadratic',\n *        p0: 0,\n *        p1: 0.4,\n *        p2: 1.0\n *       }\n *      }\n *     });\n *\n *\n * @property {BuilderPath} path\n * @for anim8.builder\n */\nBuilders['path'] = new BuilderPath();\n\n/**\n * Register the builder.\n */\nBuilders['physics'] = new BuilderPhysics();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      queue: {\n *       ... more builders to play after the others ...\n *      }\n *     });\n *\n *\n * @property {BuilderQueue} queue\n * @for anim8.builder\n */\nBuilders['queue'] = new BuilderQueue();\n\n/**\n * Register the builder.\n */\nBuilders['springs'] = new BuilderSpring();\n\n/**\n * Register the builder.\n */\nBuilders['travel'] = new BuilderTravel();\n\n/**\n * Register the builder.\n */\nBuilders['tweenFrom'] = new BuilderTweenFrom();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      tweenTo: {\n *       opacity: 1.0,       // absolute value\n *       left: '+40'         // 40 more units from current value\n *      }\n *     });\n *\n *\n * @property {BuilderTweenTo} tweenTo\n * @for anim8.builder\n */\nBuilders['tweenTo'] = new BuilderTweenTo();\n\n\n/**\n * A collection of calculators. A calculator is responsible for performing\n * mathematical operations for a specific animatable data type.\n *\n * @class anim8.calculator\n */\nvar Calculators = {};\n\n/**\n * A calculator for numbers.\n *\n * @property {CalculatorNumber} number\n * @for anim8.Calculators\n */\nCalculators['number'] = new CalculatorNumber();\n\n/**\n * A calculator for 2d points; objects with x & y Number components.\n *\n * @property {Calculator2d} 2d\n * @for anim8.Calculators\n */\nCalculators['2d'] = new Calculator2d();\n\n/**\n * A calculator for 3d points; objects with x, y, & z Number components.\n *\n * @property {Calculator3d} 3d\n * @for anim8.Calculators\n */\nCalculators['3d'] = new Calculator3d();\n\n/**\n * A calculator for quaternions; objects with x, y, z, & angle Number components.\n *\n * @property {CalculatorQuaternion} quaternion\n * @for anim8.Calculators\n */\nCalculators['quaternion'] = new CalculatorQuaternion();\n\n/**\n * A calculator for opaque colors; objects with r, g, & b Number components.\n *\n * @property {CalculatorRGB} rgb\n * @for anim8.Calculators\n */\nCalculators['rgb'] = new CalculatorRGB();\n\n/**\n * A calculator for colors; objects with r, g, b, & a Number components.\n *\n * @property {CalculatorRGBA} rgba\n * @for anim8.Calculators\n */\nCalculators['rgba'] = new CalculatorRGBA();\n\n/**\n * A calculator for strings.\n *\n * @property {CalculatorString} string\n * @for anim8.Calculators\n */\nCalculators['string'] = new CalculatorString();\n\n/**\n * The default calculator.\n *\n * @property {CalculatorNumber} default\n * @for anim8.Calculators\n */\nCalculators['default'] = Calculators['number'];\n\n\nvar Factories = {};\n\n/**\n * Registers the object factory.\n */\nFactories['object'] = new FactoryObject();\n\n/**\n * Registers the default factory.\n */\nFactories['default'] = Factories['object'];\n\n\nvar Paths = {};\n\n/**\n * Parses an object for a combo path.\n *\n * @param {Object} path\n * @return {PathCombo}\n */\nPaths['combo'] = function(path)\n{\n  var paths = path.paths;\n\n  for (var i = 0; i < paths.length; i++)\n  {\n    paths[ i ] = $path( paths[ i ] );\n  }\n\n  return new PathCombo(\n    path.name,\n    paths,\n    path.uniform,\n    path.granularity\n  );\n};\n\n\n/**\n * Parses an object for a compiled path.\n *\n * @param {Object} path\n * @return {PathCompiled}\n */\nPaths['compiled'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathCompiled(\n    path.name,\n    parent,\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a cubic path.\n *\n * @param {Object} path\n * @return {PathCubic}\n */\nPaths['cubic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathCubic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue ),\n    calc.parse( path.p3, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a delta path.\n *\n * @param {Object} path\n * @return {PathDelta}\n */\nPaths['delta'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  return new PathDelta(\n    path.name,\n    calc,\n    calc.parseArry( path.points, path.points, path.defaultValue ),\n    path.deltas\n  );\n};\n\n/**\n * Parses an object for a jump path.\n *\n * @param {Object} path\n * @return {PathJump}\n */\nPaths['jump'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathJump(\n    path.name,\n    calc,\n    calc.parseArry( path.points, path.points, path.defaultValue )\n  );\n};\n\n/**\n * Parses an object for a keyframe path.\n *\n * @param {Object} path\n * @return {PathKeyframe}\n */\nPaths['keyframe'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  var defaultEasing = $easing( path.easings, null );\n\n  if ( !isDefined( path.easings ) || !isArray( path.easings ) || defaultEasing !== null )\n  {\n    path.easings = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.easings[ i ] = defaultEasing;\n    }\n  }\n\n  for (var i = 0; i < path.easings.length; i++)\n  {\n    path.easings[ i ] = $easing( path.easings[ i ] );\n  }\n\n  return new PathKeyframe(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.deltas,\n    path.easings\n  );\n};\n\n\n/**\n * Parses an object for a quadratic path.\n *\n * @param {Object} path\n * @return {PathQuadratic}\n */\nPaths['quadratic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathQuadratic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a tween path.\n *\n * @param {Object} path\n * @return {Tween}\n */\nPaths['tween'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new Tween(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.end, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a sub path.\n *\n * @param {Object} path\n * @return {PathSub}\n */\nPaths['sub'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathSub(\n    path.name,\n    parent,\n    coalesce( path.start, 0 ),\n    coalesce( path.end, 1 )\n  );\n};\n\n/**\n * Parses an object for a quadratic corner path.\n *\n * @param {Object} path\n * @return {PathQuadraticCorner}\n */\nPaths['quadratic-corner'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathQuadraticCorner(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.midpoint,\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a linear path.\n *\n * @param {Object} path\n * @return {PathLinear}\n */\nPaths['linear'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathLinear(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue )\n  );\n};\n\n\n/**\n * Parses an object for a uniform path.\n *\n * @param {Object} path\n * @return {PathUniform}\n */\nPaths['uniform'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathUniform(\n    path.name,\n    parent,\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a hermite path.\n *\n * @param {Object} path\n * @return {PathHermite}\n */\nPaths['hermite'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathHermite(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.startTangent, defaultValue ),\n    calc.parse( path.end, defaultValue ),\n    calc.parse( path.endTangent, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a bezier path.\n *\n * @param {Object} path\n * @return {PathBezier}\n */\nPaths['bezier'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathBezier(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.weights\n  );\n};\n\n/**\n * Parses an object for a parametric cubic curve path.\n *\n * @param {Object} path\n * @return {PathParametric}\n */\nPaths['parametric'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathParametric(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop,\n    path.matrix,\n    path.weight\n  );\n};\n\n/**\n * Parses an object for a parametric cubic curve path.\n *\n * @param {Object} path\n * @return {PathParametric}\n */\nPaths['catmull-rom'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathCatmullRom(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a basis spline path.\n *\n * @param {Object} path\n * @return {PathBasisSpline}\n */\nPaths['basis-spline'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathBasisSpline(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n\nvar Springs = {};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringDistance}\n */\nSprings['distance'] = function(spring)\n{\n  return new SpringDistance(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.distance,\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringLinear}\n */\nSprings['linear'] = function(spring)\n{\n  return new SpringLinear(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n\n/**\n * Returns an instance of {{#crossLink \"Animation\"}}{{/crossLink}} based on the\n * given input & options. If the input is a string the animation with that name\n * is returned. If the input is a string with an animation name and an option\n * string the animation with the given name modified by any additional options\n * is returned. Commas can be used to queue animation & option pairs one after\n * another. Ampersands can be used to play animations at the same time. If the\n * input is an object an anonymous animation is created. If no animation could\n * be determined then false is returned.\n *\n * **Examples:**\n *\n *     animation('wiggle');\n *     animation('wiggle ~1s 4s z40ms x5 !1.2');\n *     animation('wiggle', {...options...});\n *     animation('wiggle, tada ~50ms, fadeOut 2s');\n *     animation('wiggle & tada !3, fadeOut');\n *     animation({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method animation\n * @for Core\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n * @param {Boolean} [cache=false]\n * @return {Animation|False}\n * @throws {String} The animation string has an invalid animation name or the\n *    animation fails to create attrimators from the animation definition.\n */\nfunction $animation(animation, options, cache)\n{\n  var options = $options( options, cache );\n  var hasOptions = !isEmpty( options );\n\n  if ( animation instanceof Animation )\n  {\n    if ( hasOptions )\n    {\n      var attrimators = animation.newAttrimators();\n\n      animation.merge( options, attrimators );\n\n      return new Animation( false, animation.input, options, attrimators);\n    }\n\n    return animation;\n  }\n  if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    var attrimators = $attrimatorsFor( animation, options, cache );\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    return new Animation( false, {}, options, attrimators );\n  }\n  if ( isObject( animation ) )\n  {\n    var attrimators = $attrimatorsFor( animation, options, cache );\n\n    return new Animation( false, animation, options, attrimators );\n  }\n\n  return false;\n}\n\n\n\n/**\n * Generates an AttrimatorMap for the given animation and options. If the\n * animation given is an instance of {{#crossLink \"Animation\"}}{{/crossLink}}\n * then a copy of that animations attrimators is returned, and if options are\n * specified then they are merged into the generated attrimators. If the\n * animation given is an object it's properties are iterated and for each builder\n * with a matching name attrimators are generated. If the animation given is a\n * string of a cached or saved animation then it's handled as if an instance of\n * {{#crossLink \"Animation\"}}{{/crossLink}} was given. If the animation given\n * is a string which isn't saved or cached it goes through the following parsing\n * logic.\n *\n * - Split up the string into sections with `,` which queues animations.\n * - Split up each of the sections with `&` which enables animations to play\n *   simultaneously.\n * - For each of those sections, take the first word as the name of the\n *   animation and any remaining text as the options for that animation.\n *\n * If no attrimators could be parsed, an empty attrimator map is returned. If\n * the animation given is a string that specifies animations that don't exist\n * an error is thrown.\n *\n * **Examples:**\n *\n *     anim8.attrimatorsFor('wiggle');\n *     anim8.attrimatorsFor('wiggle ~1s 4s z40ms x5 !1.2');\n *     anim8.attrimatorsFor('wiggle', {...options...});\n *     anim8.attrimatorsFor('wiggle, tada ~50ms, fadeOut 2s');\n *     anim8.attrimatorsFor('wiggle & tada !3, fadeOut');\n *     anim8.attrimatorsFor({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method anim8.attrimatorsFor\n * @for Core\n * @param {Object|String} animation\n * @param {Object|String} [options]\n * @param {Boolean} [cache=false]\n * @return {AttrimatorMap}\n */\nfunction $attrimatorsFor( animation, options, cache )\n{\n  var parsedOptions = $options( options, cache );\n  var hasOptions = !isEmpty( parsedOptions );\n  var attrimators = new AttrimatorMap();\n\n  if ( animation instanceof Animation )\n  {\n    attrimators.putMap( animation.newAttrimators() );\n\n    if ( hasOptions )\n    {\n      animation.merge( parsedOptions, attrimators );\n    }\n  }\n  else if ( isObject( animation ) )\n  {\n    var helper = new BuilderHelper( animation, parsedOptions );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false )\n      {\n        builder.parse( animation, parsedOptions, attrimators, helper );\n      }\n    }\n  }\n  else if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n    var saved = Animations[ key ];\n    var cacheIt = coalesce( cache, Defaults.cache );\n\n    if ( saved )\n    {\n      attrimators.putMap( saved.newAttrimators() );\n\n      if ( hasOptions )\n      {\n        saved.merge( parsedOptions, attrimators );\n      }\n    }\n    else\n    {\n      var animationsQueued = animation.split( ',' );\n\n      for (var k = 0; k < animationsQueued.length; k++)\n      {\n        var animationsMerged = animationsQueued[ k ].split( '&' );\n        var base = new AttrimatorMap();\n\n        for (var j = 0; j < animationsMerged.length; j++)\n        {\n          var animationString = trim( animationsMerged[ j ].toLowerCase() );\n          var animationSplit = animationString.split( ' ' );\n          var parsedAnimation = Animations[ animationSplit[ 0 ] ];\n\n          if ( parsedAnimation )\n          {\n            var additionalOptions = $options( animationSplit.slice( 1 ), cache );\n            var hasAdditionalOptions = !isEmpty( additionalOptions );\n            var parsedAttrimators = parsedAnimation.newAttrimators();\n\n            if ( hasOptions && hasAdditionalOptions )\n            {\n              parsedAnimation.merge( extend( {}, parsedOptions, additionalOptions ), parsedAttrimators );\n            }\n            else if ( hasAdditionalOptions )\n            {\n              parsedAnimation.merge( additionalOptions, parsedAttrimators );\n            }\n            else if ( hasOptions )\n            {\n              parsedAnimation.merge( parsedOptions, parsedAttrimators );\n            }\n\n            base.putMap( parsedAttrimators );\n          }\n          else\n          {\n            throw animationString + ' is not a valid animation in \"' + animationsQueued[ k ] + '\"';\n          }\n        }\n\n        attrimators.queueMap( base );\n      }\n\n      if ( cacheIt && !hasOptions )\n      {\n        Animations[ key ] = new Animation( animation, {}, {}, attrimators );\n      }\n    }\n  }\n\n  return attrimators;\n}\n\n\n/**\n * A collection of {{#crossLink \"Builder\"}}builders{{/crossLink}} which takes\n * animation definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generates {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class anim8.builder\n */\n\n/**\n * Returns a builder based on the input. If the input is an instance of Builder\n * it's returned immediately. If the input is a string the builder with that name\n * is returned. If no builder could be determined then false is returned.\n *\n * **See:** {{#crossLink \"anim8.builder\"}}{{/crossLink}}\n *\n * @method anim8.builder\n * @for Core\n * @param {Builder|String} builderInput\n * @return {Builder|false}\n */\nfunction $builder(builderInput)\n{\n  if ( builderInput instanceof Builder )\n  {\n    return builderInput;\n  }\n  if ( isString( builderInput ) && builderInput in Builders )\n  {\n    return Builders[ builderInput ];\n  }\n\n  return false;\n}\n\n\n/**\n* Returns a calculator based on the input. If the input is an instance of\n* {{#crossLink \"Calculator\"}}{{/crossLink}} it is immediately returned. If the\n* input is a string the calculator with that name is returned. If no calculator\n* could be determined the default calculator is returned.\n*\n* @method anim8.calculator\n* @for Core\n* @param {Calculator|String} calculatorInput\n* @return {Calculator}\n*/\nfunction $calculator(calculatorInput)\n{\n if ( calculatorInput instanceof Calculator )\n {\n   return calculatorInput;\n }\n if ( isString( calculatorInput ) && calculatorInput in Calculators )\n {\n   return Calculators[ calculatorInput ];\n }\n\n return Calculators['default'];\n}\n\n\n\n/**\n * Parses delay from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/delay:property\"}}anim8.defaults.delay{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.delay\n * @param {String|Number} time\n */\nfunction $delay(time)\n{\n  return $time( time, Defaults.delay );\n}\n\n\n/**\n * Parses duration from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/duration:property\"}}anim8.defaults.duration{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.duration\n * @param {String|Number} time\n */\nfunction $duration(time)\n{\n  return $time( time, Defaults.duration );\n}\n\n\n/**\n * Returns an easing based on the given input. If the input is a function it's\n * assumed to be an easing function and is returned immediately. If the input is\n * a string the easing with that name is returned. If the input is a string in\n * the format 'easing-easingType' then an easing is returned that is a\n * combination of the easing with the given name and the easingType with the\n * given name. If the given input is an array with 4 elements it's assumed to be\n * a bezier path and one is created and returned. If no input is given the\n * default easing is returned. If an easing cannot be determined then an error\n * is thrown.\n *\n * **Examples:**\n *\n *     anim8.easing();               // anim8.defaults.easing\n *     anim8.easing( 'linear' );     // anim8.easing.linear\n *     anim8.easing( 'reverse' );    // anim8.easingType.reverse( anim8.defaults.easing )\n *     anim8.easing( 'ease-yoyo' );  // anim8.easingType.yoyo( anim8.easing.ease )\n *     anim8.easing( [0,0,1,1] );    // anim8.easing.bezier( 0, 0, 1, 1 )\n *     anim8.easing( 5, false );     // false\n *     anim8.easing( 'invalid', 1 ); // 1\n *     anim8.easing( [0,0,1], 1 );   // 1\n *\n * @method anim8.easing\n * @for Core\n * @param {Function|String|Array} easing\n * @param {E} [returnOnInvalid]\n * @return {Function|E}\n */\nfunction $easing(easing, returnOnInvalid)\n{\n  if ( isFunction( easing ) )\n  {\n    return easing;\n  }\n  if ( isString( easing ) )\n  {\n    if ( easing in Easings )\n    {\n      return Easings[ easing ];\n    }\n    if ( easing in EasingTypes )\n    {\n      return EasingTypes[ easing ]( $easing( Defaults.easing ) );\n    }\n\n    if ( easing.indexOf('-') !== -1 )\n    {\n      var pair = easing.split('-');\n      var e = pair[0];\n      var t = pair[1];\n\n      if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n      {\n        return EasingTypes[ t ]( Easings[ e ] );\n      }\n    }\n  }\n  if ( isArray( easing ) && easing.length === 4 && isNumber( easing[0] ) && isNumber( easing[1] ) && isNumber( easing[2] ) && isNumber( easing[3] ) )\n  {\n    return Easings.bezier.apply( null, easing );\n  }\n  if ( !isDefined( easing ) )\n  {\n    return $easing( Defaults.easing );\n  }\n\n  if ( isDefined( returnOnInvalid ) )\n  {\n    return returnOnInvalid;\n  }\n\n  throw easing + ' is not a valid easing';\n}\n\n\n/**\n * Returns an easing type based on the input. If the input is a function that\n * function is immediately returned. If the input is a string the easing type\n * with that name is returned. If no easing type could be determined an error is\n * thrown.\n *\n * @param {Function|String} easingType\n * @param [Boolean] optional\n * @return {Function|false}\n */\nfunction $easingType(easingType, optional)\n{\n  if ( isFunction( easingType ) )\n  {\n    return easingType;\n  }\n  if ( isString( easingType ) && easingType in EasingTypes )\n  {\n    return EasingTypes[ easingType ];\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw easingType + ' is not a valid easing type';\n}\n\n\n/**\n * Returns a factory given the input and returns the default if none is found.\n *\n * @method factory\n * @for Core\n * @param {String|Factory} [factory]\n * @return {Factory}\n */\nfunction $factory(factoryInput)\n{\n  if ( factoryInput instanceof Factory )\n  {\n    return factoryInput;\n  }\n  if ( isString( factoryInput ) && factoryInput in Factories )\n  {\n    return Factories[ factoryInput ];\n  }\n\n  return Factories['default'];\n}\n\n\n/**\n * Returns a factory for the given subject and optionally throws an error if no\n * factory exists.\n *\n * @method factoryFor\n * @for Core\n * @param {Any} subject\n * @param {Boolean} [optional]\n * @return {Factory}\n */\nfunction $factoryFor(subject, optional)\n{\n  var highestPriorityFactory = false;\n\n  for (var factoryName in Factories)\n  {\n    var factory = Factories[ factoryName ];\n\n    if ( factory.is( subject ) && (highestPriorityFactory === false || highestPriorityFactory.priority < factory.priority) )\n    {\n      highestPriorityFactory = factory;\n    }\n  }\n\n  if ( highestPriorityFactory )\n  {\n    return highestPriorityFactory;\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw 'No factory exists for subject ' + subject;\n}\n\n\n/**\n * Parses a number from the given input and if the input isn't a valid number\n * then returnOnInvalid is returned.\n *\n * **Examples:**\n *\n *     anim8.number( 5 );       // 5\n *     anim8.number( '5' );     // 5\n *     anim8.number( '5e4' );   // 50000\n *     anim8.number( 'x' );     // undefined\n *     anim8.number( 'x', 23 ); // 23\n *\n * @method anim8.number\n * @param {String|Number} value\n * @param {E} returnOnInvalid\n * @return {Number|E}\n */\nfunction $number(value, returnOnInvalid)\n{\n  var parsed = parseFloat( value );\n\n  return isNaN( parsed ) ? returnOnInvalid : parsed;\n}\n\n\n\n/**\n * Parses offset from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/offset:property\"}}anim8.defaults.offset{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.offset\n * @param {String|Number} time\n */\nfunction $offset(time)\n{\n  return $time( time, Defaults.offset );\n}\n\n\nvar Options = {};\n\n/**\n * Parses a value into an options object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [duration] x[repeat] z[sleep] ~[delay] @[offset] ![scale] [[easing][-easingType]]\n *\n * This is also a registry of options, you can add your own options that\n * can be used later with syntax like:\n *\n *     anim8.options['myOptions'] = anim8.options('1.5s x2 !2');\n *\n * So you can use 'myOptions' as the options input.\n *\n * You can also specify relative values & scaling values. If you have the\n * following options:\n *\n *     +2s x*2 ~-1s\n *\n * It will result in adding 2 seconds to the duration, repeating it twice as\n * much, and subtracting one second from the delay.\n *\n * For more information on acceptable values in options:\n *\n * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.delay:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}, and\n *          {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n *\n * @method anim8.options\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $options(options, cache)\n{\n  var originalInput = options;\n  var cacheIt = coalesce( cache, Defaults.cacheOptions );\n\n  if ( isString( options ) )\n  {\n    if ( options in Options )\n    {\n      return Options[ options ];\n    }\n\n    options = options.toLowerCase().split(/\\s+/);\n  }\n\n  if ( isArray( options ) )\n  {\n    var parsed = {};\n\n    for (var i = 0; i < options.length; i++)\n    {\n      var part = options[i];\n      var first = part.charAt( 0 );\n\n      // Repeats\n      if ( first === 'x' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n      }\n      // Sleeping\n      else if ( first === 'z' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'sleep', 'sleepAdd', 'sleepScale' );\n      }\n      // Delay\n      else if ( first === '~' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'delay', 'delayAdd', 'delayScale' );\n      }\n      // Scaling\n      else if ( first === '!' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $number, 'scale', 'scaleAdd', 'scaleScale' );\n      }\n      // Offset\n      else if ( first === '@' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'offset', 'offsetAdd', 'offsetScale' );\n      }\n      else\n      {\n        // Easing?\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          parsed.easing = easing;\n        }\n\n        // Duration?\n        var duration = parseOptionProperty( part, parsed, $time, 'duration', 'durationAdd', 'durationScale' );\n\n        if ( duration === false )\n        {\n          // If not a duration, might be an alternative repeat? (doesn't start with x)\n          parseOptionProperty( part, parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n        }\n      }\n    }\n\n    if ( isString( originalInput ) && cacheIt )\n    {\n      Options[ originalInput ] = parsed;\n    }\n\n    return parsed;\n  }\n\n  if ( isObject( options ) )\n  {\n    return options;\n  }\n\n  return Defaults.noOptions;\n}\n\nfunction parseOptionProperty(input, out, parseFunction, property, propertyAdd, propertyScale)\n{\n  var first = input.charAt( 0 );\n\n  if ( first === '*' )\n  {\n    parsed = $number( input.substring( 1 ), false );\n\n    if ( parsed !== false )\n    {\n      out[ propertyScale ] = parsed;\n    }\n  }\n  else\n  {\n    if ( first === '+' || first === '-' )\n    {\n      property = propertyAdd;\n      input = input.substring( 1 );\n    }\n\n    var parsed = parseFunction( input, false );\n\n    if ( parsed !== false )\n    {\n      out[ property ] = parsed;\n    }\n  }\n\n  return parsed;\n}\n\n\n/**\n * Parses a path given the input and returns an instance of anim8.Path or throws\n * an error if the path could not be parsed. If the input is an object and has\n * a type property with a value that maps to a path type the path's parsing\n * function is invoked with the object.\n *\n * @method anim8.path\n * @for Core\n * @param  {anim8.Path|String|Object} pathInput\n * @return {anim8.Path}\n * @throws {String} If the input is not a valid path.\n */\nfunction $path(pathInput)\n{\n  if ( pathInput instanceof Path )\n  {\n    return pathInput;\n  }\n  if ( isString( pathInput ) && pathInput in Paths )\n  {\n    return Paths[ pathInput ];\n  }\n  if ( isObject( pathInput ) && pathInput.type in Paths )\n  {\n    return Paths[ pathInput.type ]( pathInput );\n  }\n\n  throw pathInput + ' is not a valid path';\n}\n\n\n\n/**\n * Parses repeats from a string or number. If a valid repeat is not given then\n * `returnOnInvalid` is returned, if that is not given then\n * {{#crossLink \"anim8.defaults/repeat:property\"}}anim8.defaults.repeat{{/crossLink}}\n * is returned.\n *\n * **Examples:**\n *\n *     anim8.repeat( 5 );            // 5\n *     anim8.repeat( 'inf' );        // Infinity\n *     anim8.repeat( 'infinity' );   // Infinity\n *     anim8.repeat( 'infinite' );   // Infinity\n *     anim8.repeat( 'once' );       // 1\n *     anim8.repeat( 'twice' );      // 2\n *     anim8.repeat( 'thrice' );     // 3\n *     anim8.repeat( 'dozen' );      // 12\n *     anim8.repeat( 'random' );     // 4\n *     anim8.repeat( 'invalid', 6 ); // 6\n *     anim8.repeat( false, 7 );     // 7\n *     anim8.repeat();               // anim8.defaults.repeat\n *\n * @method anim8.repeat\n * @param {String|Number} time\n * @param {E} [returnOnInvalid]\n * @return {Number|E}\n */\nvar $repeat = (function()\n{\n  var conversions = {\n    inf:        Number.POSITIVE_INFINITY,\n    infinity:   Number.POSITIVE_INFINITY,\n    infinite:   Number.POSITIVE_INFINITY,\n    once:       1,\n    twice:      2,\n    thrice:     3,\n    dozen:      12,\n    random:     4 // chosen by fair dice roll. guaranteed to be random.\n  };\n\n  return function(repeat, returnOnInvalid)\n  {\n    if ( isNumber( repeat ) )\n    {\n      return repeat;\n    }\n    if ( isString( repeat ) )\n    {\n      repeat = repeat.toLowerCase();\n\n      if ( repeat in conversions )\n      {\n        return conversions[ repeat ];\n      }\n      else\n      {\n        var parsed = parseInt( repeat );\n\n        if ( !isNaN(parsed) )\n        {\n          return parsed;\n        }\n      }\n    }\n\n    return coalesce( returnOnInvalid, Defaults.repeat );\n  };\n\n})();\n\n\n/**\n * Parses scale from a string or number.\n *\n * **See:** {{#crossLink \"Core/anim8.number:method\"}}anim8.number{{/crossLink}}\n *\n * @method anim8.scale\n * @param {String|Number} scale\n * @return {Number}\n */\nfunction $scale(scale)\n{\n  return $number( scale, Defaults.scale );\n}\n\n\n\n/**\n * Parses sleep from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/sleep:property\"}}anim8.defaults.sleep{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.sleep\n * @param {String|Number} time\n */\nfunction $sleep(time)\n{\n  return $time( time, Defaults.sleep );\n}\n\n/**\n * Returns a spring if the provided argument is a spring, the name of a spring,\n * or an object with a spring type to be created. If none of these conditions\n * are true then an error is thrown.\n *\n * @method anim8.spring\n * @for Core\n * @param {Spring|String|Object} springInput\n * @return {Spring}\n */\nfunction $spring(springInput)\n{\n  if ( springInput instanceof Spring )\n  {\n    return springInput;\n  }\n  if ( isString( springInput ) && springInput in Springs )\n  {\n    return Springs[ springInput ];\n  }\n  if ( isObject( springInput ) && springInput.type in Springs )\n  {\n    return Springs[ springInput.type ]( springInput );\n  }\n\n  throw springInput + ' is not a valid spring';\n}\n\n\n/**\n * Parses milliseconds from a string or number. If a number is given it's\n * assumed to be milliseconds and is returned immediately. If a string is given\n * a unit is looked for to determine how to scale the number into milliseconds.\n * If the given time is invalid and returnOnInvalid is not given then zero is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.time( 45 );       // 45\n *     anim8.time( 45.9 );     // 45\n *     anim8.time( -4.1 );     // -5\n *     anim8.time( '5ms' );    // 5\n *     anim8.time( '23' );     // 23\n *     anim8.time( '5c' );     // 500\n *     anim8.time( '5cs' );    // 500\n *     anim8.time( '5jiffy' ); // 833\n *     anim8.time( '5third' ); // 833\n *     anim8.time( '10s' );    // 10000\n *     anim8.time( '10sec' );  // 10000\n *     anim8.time( '1.5m' );   // 90000\n *     anim8.time( '1.5min' ); // 90000\n *     anim8.time( '0.4h' );   // 144000\n *     anim8.time( '0.4hr' );  // 144000\n *\n * @method anim8.time\n * @param {String|Number} time\n * @param {Any} [returnOnInvalid]\n */\nvar $time = (function()\n{\n  var regex = /^(-?\\d*(\\.\\d+)|-?\\d+)(ms|s|c|cs|third|jiffy|sec|m|min|h|hr)?$/;\n\n  var conversions = {\n    ms:     1,\n    c:      100,\n    cs:     100,\n    jiffy:  1000 / 60,\n    third:  1000 / 60,\n    s:      1000,\n    sec:    1000,\n    m:      1000 * 60,\n    min:    1000 * 60,\n    h:      1000 * 60 * 60,\n    hr:     1000 * 60 * 60\n  };\n\n  return function(time, returnOnInvalid)\n  {\n    if ( isNumber( time ) )\n    {\n      // raw numbers are considered milliseconds\n      return Math.floor( time );\n    }\n    if ( isString( time ) )\n    {\n      var parsed = regex.exec( time );\n\n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n\n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n\n        return Math.floor( time );\n      }\n    }\n\n    return coalesce( returnOnInvalid, 0 );\n  };\n\n})();\n\n\nvar Transitions = {};\n\n/**\n * Parses a value into a transition object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [time] [easing[-easingType]] >[outro] <[intro] /[granularity] ^[lookup]\n *\n * This is also a registry of transitions, you can add your own transitions that\n * can be used later with syntax like:\n *\n *     anim8.transition['myTransition'] = anim8.transition('50ms 0.05 linear');\n *\n * So you can use 'myTransition' as the transition input.\n *\n *     animator.transition('myTransition', 'myAnimation');\n *\n * @method anim8.transition\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $transition(transition, cache)\n{\n  // 1. If it's a string, convert it into an array.\n  // 2. If it's an array, parse it and convert it into an object.\n  // 3. If it's an object, fill in any missing values with the defaults.\n\n  var originalInput = transition;\n\n  if ( isString( transition ) )\n  {\n    if ( transition in Transitions )\n    {\n      return Transitions[ transition ];\n    }\n\n    transition = transition.toLowerCase().split(/\\s+/);\n  }\n\n  if ( isArray( transition ) )\n  {\n    var transitionArray = transition;\n\n    transition = {};\n\n    for (var i = 0; i < transitionArray.length; i++)\n    {\n      var part = transitionArray[i];\n      var first = part.charAt( 0 );\n\n      // Introduction Time (into next event)\n      if ( first === '<' )\n      {\n        var intro = $time( part.substring(1), false );\n\n        if ( !isNaN( intro ) )\n        {\n          transition.intro = intro;\n        }\n      }\n      // Outroduction Time (out of current event)\n      else if ( first === '>' )\n      {\n        var outro = $time( part.substring(1), false );\n\n        if ( !isNaN( outro ) )\n        {\n          transition.outro = outro;\n        }\n      }\n      // Granularity (for velocity conscious transitions)\n      else if ( first === '/' )\n      {\n        var granularity = $number( part.substring(1), false );\n\n        if ( granularity !== false )\n        {\n          transition.granularity = granularity;\n        }\n      }\n      // Lookup (for velocity conscious transitions)\n      else if ( first === '^' )\n      {\n        var lookup = $time( part.substring(1), false );\n\n        if ( lookup !== false )\n        {\n          transition.lookup = lookup;\n        }\n      }\n      else\n      {\n        // Easing\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          transition.easing = easing;\n        }\n\n        // Time\n        var time = $time( part, false );\n\n        if ( time !== false )\n        {\n          transition.time = time;\n        }\n      }\n    }\n  }\n\n  if ( isObject( transition ) )\n  {\n    transition.time        = $time( transition.time, Defaults.transitionTime );\n    transition.outro       = $time( transition.outro, Defaults.transitionOutro );\n    transition.intro       = $time( transition.intro, Defaults.transitionIntro );\n    transition.easing      = $easing( coalesce( transition.easing, Defaults.transitionEasing ) );\n    transition.granularity = $number( transition.granularity, Defaults.transitionGranularity );\n    transition.lookup      = $time( transition.lookup, Defaults.transitionLookup );\n\n    if ( isString( originalInput ) && coalesce( cache, Defaults.cacheTransitions ) )\n    {\n      Transitions[ originalInput ] = transition;\n    }\n\n    return transition;\n  }\n\n  return Defaults.noTransition;\n}\n\n\n  // Add events to the animation cycle: begin, end, finished, starting\n  eventize( anim8 );\n\n  // anim8.js\n  anim8.anim8s = anim8s;\n  anim8.fn = Animator.prototype;\n  anim8s.fn = Animators.prototype;\n  anim8.isRunning = isRunning;\n  anim8.isLive = isLive;\n  anim8.setLive = setLive;\n  anim8.animating = animating;\n  anim8.requestRun = requestRun;\n  anim8.activateAnimator = activateAnimator;\n  anim8.pushAnimator = pushAnimator;\n  anim8.activate = activate;\n  anim8.run = run;\n  anim8.pause = pause;\n  anim8.resume = resume;\n  anim8.stop = stop;\n  anim8.end = end;\n  anim8.finish = finish;\n  anim8.nopeat = nopeat;\n\n  // Core\n  anim8.noop = noop;\n  anim8.isDefined = isDefined;\n  anim8.isFunction = isFunction;\n  anim8.isNumber = isNumber;\n  anim8.isBoolean = isBoolean;\n  anim8.isString = isString;\n  anim8.isArray = isArray;\n  anim8.isObject = isObject;\n  anim8.isEmpty = isEmpty;\n  anim8.now = now;\n  anim8.trim = trim;\n  anim8.toArray = toArray;\n  anim8.copy = copy;\n  anim8.extend = extend;\n  anim8.coalesce = coalesce;\n  anim8.constant = constant;\n  anim8.resolve = resolve;\n  anim8.id = id;\n  anim8.Class = Class;\n  anim8.Defaults = Defaults;\n\n  // Math\n  anim8.clamp = clamp;\n  anim8.gcd = gcd;\n  anim8.choose = choose;\n\n  // Registries\n  anim8.Animations = Animations;\n  anim8.Calculators = Calculators;\n  anim8.Factories = Factories;\n  anim8.Builders = Builder;\n  anim8.Paths = Paths;\n  anim8.Springs = Springs;\n  anim8.Easings = Easings;\n  anim8.EasingTypes = EasingTypes;\n  anim8.Options = Options;\n  anim8.Transitions = Transitions;\n\n  // Parsing\n  anim8.animation = $animation;\n  anim8.attrimatorsFor = $attrimatorsFor;\n  anim8.calculator = $calculator;\n  anim8.delay = $delay;\n  anim8.duration = $duration;\n  anim8.easing = $easing;\n  anim8.easingType = $easingType;\n  anim8.factory = $factory;\n  anim8.factoryFor = $factoryFor;\n  anim8.number = $number;\n  anim8.offset = $offset;\n  anim8.options = $options;\n  anim8.builder = $builder;\n  anim8.path = $path;\n  anim8.repeat = $repeat;\n  anim8.scale = $scale;\n  anim8.sleep = $sleep;\n  anim8.spring = $spring;\n  anim8.time = $time;\n  anim8.transition = $transition;\n\n  // Modules\n  // - color.js\n  anim8.Color = Color;\n  // - computed.js\n  anim8.computed = computed;\n  anim8.isComputed = isComputed;\n  // - dynamic.js\n  anim8.composite = composite;\n  anim8.partial = partial;\n  anim8.spread = spread;\n  // - eventize.js\n  anim8.eventize = eventize;\n  // - save.js\n  anim8.save = save;\n  anim8.saveGroup = saveGroup;\n  anim8.SaveOptions = SaveOptions;\n  // - translate.js\n  anim8.translate = translate;\n\n  // Classes\n  anim8.Aninmation = Animation;\n  anim8.Animator = Animator;\n  anim8.Animators = Animators;\n  anim8.Attrimator = Attrimator;\n  anim8.AttrimatorMap = AttrimatorMap;\n  anim8.Calculator = Calculator;\n  anim8.Defer = Defer;\n  anim8.DeferAnimator = DeferAnimator;\n  anim8.Event = Event;\n  anim8.EventState = EventState;\n  anim8.Factory = Factory;\n  anim8.FastMap = FastMap;\n  anim8.Oncer = Oncer;\n  anim8.Builder = Builder;\n  anim8.Path = Path;\n  anim8.Physics = Physics;\n  anim8.Sequence = Sequence;\n  anim8.Spring = Spring;\n\n  // Movie\n  anim8.Movie = Movie;\n  anim8.MoviePlayer = MoviePlayer;\n  anim8.MovieTimeline = MovieTimeline;\n\n  // Calculators\n  anim8.Calculator2d = Calculator2d;\n  anim8.Calculator3d = Calculator3d;\n  anim8.CalculatorNumber = CalculatorNumber;\n  anim8.CalculatorQuaternion = CalculatorQuaternion;\n  anim8.CalculatorRGB = CalculatorRGB;\n  anim8.CalculatorRGBA = CalculatorRGBA;\n  anim8.CalculatorString = CalculatorString;\n\n  // Factories\n  anim8.object = object;\n  anim8.FactoryObject = FactoryObject;\n\n  // Builders\n  anim8.BuilderAnd = BuilderAnd;\n  anim8.BuilderDeltas = BuilderDeltas;\n  anim8.BuilderFinal = BuilderFinal;\n  anim8.BuilderInitial = BuilderInitial;\n  anim8.BuilderKeyframe = BuilderKeyframe;\n  anim8.BuilderMove = BuilderMove;\n  anim8.BuilderPath = BuilderPath;\n  anim8.BuilderPhysics = BuilderPhysics;\n  anim8.BuilderQueue = BuilderQueue;\n  anim8.BuilderSpring = BuilderSpring;\n  anim8.BuilderTravel = BuilderTravel;\n  anim8.BuilderTweenFrom = BuilderTweenFrom;\n  anim8.BuilderTweenTo = BuilderTweenTo;\n\n  // Paths\n  anim8.PathBasisSpline = PathBasisSpline;\n  anim8.PathBezier = PathBezier;\n  anim8.PathCatmullRom = PathCatmullRom;\n  anim8.PathCombo = PathCombo;\n  anim8.PathCompiled = PathCompiled;\n  anim8.PathCubic = PathCubic;\n  anim8.PathDelta = PathDelta;\n  anim8.PathHermite = PathHermite;\n  anim8.PathJump = PathJump;\n  anim8.PathKeyframe = PathKeyframe;\n  anim8.PathLinear = PathLinear;\n  anim8.PathParametric = PathParametric;\n  anim8.PathQuadratic = PathQuadratic;\n  anim8.PathQuadraticCorner = PathQuadraticCorner;\n  anim8.PathSub = PathSub;\n  anim8.PathUniform = PathUniform;\n  anim8.PathTween = Tween;\n\n  // Springs\n  anim8.SpringDistance = SpringDistance;\n  anim8.SpringLinear = SpringLinear;\n\n  return anim8;\n\n}));\n"],"sourceRoot":"/source/"}