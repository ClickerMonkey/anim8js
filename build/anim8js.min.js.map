{"version":3,"sources":["anim8js.min.js"],"names":["root","factory","define","amd","module","exports","global","m8","anim8","m8s","anim8s","this","noop","isDefined","x","isFunction","constructor","call","apply","isNumber","isBoolean","isString","isArray","Array","isObject","isEmpty","length","prop","toArray","split","props","push","copy","copied","i","p","extend","out","arguments","o","coalesce","a","b","c","d","constant","variable","resolve","Animation","name","input","options","attrimators","Animator","e","reset","Animators","$","fill","Attrimator","AttrimatorMap","Builder","BuilderHelper","oldOptions","newOptions","forObject","prepareSpecifics","Calculator","Defer","methods","$factory","$push","DeferAnimator","animator","previous","eventType","event","$reset","Event","attribute","path","duration","easing","delay","sleep","offset","repeat","scale","scaleBase","parameters","hasInitialState","builder","next","mergeId","$easing","$duration","$sleep","$repeat","$scale","calculator","parse","ZERO","$delay","$offset","Factory","priority","FastMap","map","putMap","put","Oncer","value","applied","Path","Physics","position","velocity","acceleration","terminal","stopTime","$number","Number","POSITIVE_INFINITY","$time","finished","Sequence","animators","Spring","subject","$factoryFor","animatorFor","subjects","animatorsFor","isRunning","running","isLive","live","setLive","newLive","activateAnimator","pushAnimator","activate","active","animating","trigger","requestRun","run","currentTime","now","preupdate","update","filter","handleFinished","pause","attributes","resume","stop","end","finish","nopeat","Color","r","g","computed","funcOrName","func","isRelative","test","isComputed","resolveComputed","attrimator","parser","delegate","functionName","returning","DelegateTypes","THIS","array","RESULTS","results","FIRST","undefined","TRUE","composite","frame","partial","subattribute","spread","eventize","target","Class","defineProperty","on","once","off","addListener","$this","property","events","callback","context","removeListeners","listeners","eventListeners","k","splice","deleteProperty","obj","triggerListeners","argument","clear","max","slice","$on","$once","gcd","temp","choose","n","m","num","den","clamp","v","min","clamper","toDegrees","radians","RADIANS_TO_DEGREES","toRadians","degrees","DEGREES_TO_RADIANS","modder","divisor","param","paramName","paramCalculator","paramDefaultValue","getCalculator","parseValue","$calculator","defaultValue","getAttribute","paramFactory","computer","Parameters","parent","handleCalculation","newCalculator","calc","save","animation","$animation","SaveOptions","cache","qualifiedName","prefix","key","toLowerCase","Animations","saveGroup","prefixOrOptions","animations","previousOptions","parsedOptions","$options","Defaults","noOptions","parsedFactory","animationName","translate","mappings","saveAs","parsed","newAttrimators","fromAttribute","toAttribute","get","rekey","translated","Calculator2d","createConstants","Calculator3d","CalculatorNumber","CalculatorQuaternion","CalculatorRGB","CalculatorRGBA","CalculatorString","FactoryObject","BuilderAnd","BuilderDeltas","BuilderFinal","BuilderInitial","BuilderKeyframe","BuilderMove","BuilderPath","BuilderPhysics","BuilderPoint","BuilderQueue","BuilderSpring","BuilderTravel","BuilderTweenFrom","BuilderTweenTo","PathDelta","points","deltas","set","PathParametric","loop","matrix","weight","invert","PathBasisSpline","PathBezier","weights","PathCatmullRom","PathCombo","paths","uniform","granularity","PathCompiled","pointCount","PathCubic","p0","p1","p2","p3","PathHermite","start","startTangent","endTangent","PathJump","PathKeyframe","easings","PathLinear","PathPoint","point","PathQuadratic","PathQuadraticCorner","midpoint","PathSub","PathUniform","Tween","SpringDistance","rest","distance","damping","stiffness","gravity","finishOnRest","SpringLinear","temp0","temp1","Movie","currentTimelines","sequenceDelay","sequenceEasing","Easings","linear","introduce","timelines","autoEnd","MoviePlayer","movie","speed","time","playing","runner","MovieTimeline","hasOptions","merge","$attrimatorsFor","helper","builderName","$builder","saved","cacheIt","animationsQueued","animationsMerged","base","j","animationString","trim","animationSplit","parsedAnimation","additionalOptions","hasAdditionalOptions","parsedAttrimators","queueMap","builderInput","Builders","calculatorInput","Calculators","$deltas","clone","Math","invertMax","returnOnInvalid","result","scaleIndex","indexOf","parseFloat","substring","EasingTypes","pair","t","isFinite","bezier","$easingType","easingType","optional","factoryInput","Factories","highestPriorityFactory","factoryName","is","isNaN","originalInput","cacheOptions","Options","part","first","charAt","paramSplit","paramValue","parseOptionProperty","parseFunction","propertyAdd","propertyScale","$path","pathInput","Paths","type","$spring","springInput","Springs","$transition","transition","Transitions","transitionArray","intro","outro","lookup","transitionTime","transitionOutro","transitionIntro","transitionEasing","transitionGranularity","transitionLookup","cacheTransitions","noTransition","superPrefix","construct","parentConstructor","properties","F","prototype","Object","enumerable","configurable","writable","teasing","frameRate","pauseTime","comboPathUniformGranularity","calculatorNumber","calculator2d","y","calculator3d","z","calculatorQuaternion","angle","calculatorRGB","calculatorRGBA","calculatorString","Date","getTime","String","replace","id","_id","attrimatorMap","attrimatorsAdded","updated","cycleCurrent","cycleNext","cycleEnded","newCycle","applyCycle","cycle","applyCurrentCycle","values","attr","startCycle","endCurrentCycle","restore","applyInitialState","aa","setDefault","cloneDefault","wasFinished","minCycle","setTime","isFinished","placeAttrimator","existing","trimAttrimators","removeAt","deactivate","destroy","spring","play","all","playAttrimators","finishNotPresent","unplay","unplayAttrimators","startings","transitionAttrimators","queue","queueAttrimators","insert","insertAttrimators","insertMap","transitionMap","transitionGetValue","transitionGetValueAt","transitionStopAttrimator","relativeTime","valueAt","getElapsed","stopIn","tweenTo","current","fromOptions","tweenManyTo","targets","tweenFrom","starting","tweenManyFrom","tween","starts","ends","tweenMany","move","amount","relative","moveMany","amounts","ref","request","follow","attrimatorsFor","keys","resulting","remove","unset","timeRemaining","hasAttrimators","size","getSubject","wrapper","invoke","args","defer","onCycleStart","onCycleEnd","at","index","each","iterator","filterer","alive","getSubjects","reverse","last","mid","floor","e0","e1","sequence","maxRemaining","startTime","elapsed","paused","prestart","prestartNext","overrideNext","totalTime","milliseconds","stopAt","valueAtSearch","attrimatorAt","hasComputed","isInfinite","totalPausedTime","isPaused","getBuilder","nextAt","setGroup","groupId","force","deep","onNewAttribute","hasCallback","mapOffset","timeOffset","unqueueAt","playMapAt","stopNotPresentAt","playAttrimatorAt","getValue","getValueAt","stopAttrimator","hasOverlap","curr","currValue","create","pastLookahead","pastVelocity","sub","pastNegativeVelocity","past","add","outTime","outPoint","outNext","inTime","inPoint","inNext","outVelocity","outPerMillis","inVelocity","inPerMillis","compiled","lastPoint","totalDistance","distances","requiredTime","timeDelta","transitionEvent","has","indices","returnInfinity","Infinity","nextCycle","currentDepth","nextDepth","iterate","depth","nextMergeId","mergeAttrimator","mergeEasing","mergeRepeat","mergeDelay","mergeSleep","mergeDuration","mergeOffset","mergeScale","mergeScaleBase","mergeParameters","submerge","specifics","parseEasing","parseFirst","parseRepeat","parseNumber","parseDelay","parseSleep","parseDuration","parseOffset","parseScale","parseScaleBase","option","parseEvent","parseParameters","parseOptionFunction","optionAdd","optionScale","baseRaw","mergeFirst","mergeNumber","specific","ONE","INFINITY","parseArray","output","parsedDefault","zero","convert","adds","mul","div","interpolate","delta","random","sqrt","distanceSq","lengthSq","isValid","isZero","isEqual","dot","distSq","setLength","eventable","$eventable","$previous","$eventType","$event","$callback","$calls","$next","$isRoot","$register","$run","methodName","undefer","i2","x2","eq1","eq2","x3","sin","wave","abs","cos","inv","log10","inner","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","EventState","DELAYED","ANIMATING","SLEEPING","FINISHED","computeValue","baseValue","compute","applyValue","newRepeat","ceil","state","replaceComputed","oldState","newState","iteration","sleepTime","animateTime","fromKey","toKey","lastValue","pop","lastKey","deterministic","isDeterministic","examinePoints","examiner","returnOnTrue","returnOnFalse","ps","resolvePoint","isLinear","prev","deltadelta","resolveVelocity","resolveAcceleration","initalPosition","dt","MAX_DT","vel","acc","pos","usePosition","maxDelay","createAttrimators","template","delayOffset","remaining","resolveRest","updateVelocity","EPSILON","vendors","requestor","requestAnimationFrame","lastTime","timeToCall","setTimeout","parsers","color","parseComponent","parseInt","vparsed","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","named","regex","matches","exec","cp","format","ca","cr","cg","cb","toString","relativeAmount","mask","relativeFunction","randomSelection","randomFunction","selected","resolvedMin","resolvedMax","numbers","numberCalculator","combinerFunction","combined","PI","valueResolve","scalar","calcScalar","scalarResolve","neg","truncate","denominator","calcDenominator","denominatorResolve","mod","calcDivisor","calcClamp","minResolve","maxResolve","converter","round","cosDegrees","sinDegrees","tanDegrees","propertyName","vector","vectorCalculator","yaw","pitch","vectorDegrees","aliases","left","right","middle","center","top","bottom","ignoreRelative","def","cx","cy","rx","ry","ix","iy","parseString","amountScale","dx","dy","epsilon","cz","rz","iz","dz","ab","ra","ia","da","rr","rg","rb","ir","ig","ib","dr","dg","db","$animator","object","calculatorName","and","deltaObject","valueMax","initial","oncer","from","half","to","kframes","keyframe","sort","times","maxTime","order","pathEasings","pathDefinition","parsedPath","physics","physic","springs","travel","traveling","fromParsed","toParsed","pointing","traveler","subtractVelocity","pointingFunction","targetValue","difference","ds","d0","d1","pd","d2","d3","loops","_set","MATRIX","WEIGHT","computeWeights","inverses","w","pathCount","lengthGranularity","lengthTotal","lengths","lengthCurrent","cachedLength","_length","previousDelta","deltaDistance","deltaGap","pathDelta","compile","i1","i3","ea","getTimes","invlength","negmidpoint","halfmidpoint","_start","nextTimeline","setAutoEnd","getTimelines","with","additional","getTimeline","timelineId","$timelineId","timeline","seek","by","eachCurrentTimeline","onTimeline","timeGap","backward","forward","applyNow","avoidApplyTrigger","goto","applyTime","evaluatePlaying","player","currentValue","defaultEasing","conversions","inf","infinity","infinite","twice","thrice","dozen","ms","cs","jiffy","third","s","sec","h","hr","unit","fn","factoryFor","number","Aninmation","PathTween"],"mappings":"CAEC,SAAUA,EAAMC,GAEO,kBAAXC,SAAyBA,OAAOC,IAGzCD,OAAO,WAAa,WAClB,MAAOD,GAAQD,KAGQ,gBAAXI,SAAuBA,OAAOC,QAK5CD,OAAOC,QAAUJ,EAAQK,SAKzBN,EAAKO,GAAKP,EAAKQ,MAAQP,EAAQD,GAC/BA,EAAKS,IAAMT,EAAKU,OAASV,EAAKQ,MAAME,SAEtCC,KAAM,SAASL,GA0VjB,QAASM,MAeT,QAASC,GAAUC,GAEjB,MAAoB,mBAANA,GAUhB,QAASC,GAAWD,GAElB,SAAUA,GAAKA,EAAEE,aAAeF,EAAEG,MAAQH,EAAEI,OAkB9C,QAASC,GAASL,GAEhB,MAAoB,gBAANA,GAmBhB,QAASM,GAAUN,GAEjB,MAAoB,iBAANA,GAiBhB,QAASO,GAASP,GAEhB,MAAoB,gBAANA,GAkBhB,QAASQ,GAAQR,GAEf,MAAOA,aAAaS,OAmBtB,QAASC,GAASV,GAEhB,MAAoB,gBAANA,IAAwB,OAANA,EAmElC,QAASW,GAAQX,GAEf,GAAKQ,EAASR,IAAOO,EAAUP,GAE7B,MAAoB,KAAbA,EAAEY,MAEN,IAAW,OAANZ,EAER,OAAO,CAEJ,IAAKU,EAAUV,GAElB,IAAK,GAAIa,KAAQb,GAEf,OAAO,MAGN,IAAKK,EAAUL,GAElB,MAAa,KAANA,CAGT,QAAO,EAoBT,QAASc,GAASd,EAAGe,GAEnB,GAAKR,EAAUP,GAEb,MAAOe,GAAQf,EAAEe,MAAOA,IAAYf,EAEjC,IAAKQ,EAAUR,GAElB,MAAOA,EAEJ,IAAKU,EAAUV,GACpB,CACE,GAAIgB,KAEJ,KAAM,GAAIH,KAAQb,GAEhBgB,EAAMC,KAAMJ,EAGd,OAAOG,GAEJ,MAAKjB,GAAWC,IAEVA,MAgBb,QAASkB,GAAKlB,GAEZ,GAAKQ,EAAQR,GACb,CAGE,IAAK,GAFDmB,MAEKC,EAAI,EAAGA,EAAIpB,EAAEY,OAAQQ,IAE5BD,EAAOF,KAAMC,EAAMlB,EAAEoB,IAGvBpB,GAAImB,MAED,IAAKT,EAASV,GACnB,CACE,GAAImB,KAEJ,KAAK,GAAIE,KAAKrB,GAEZmB,EAAOE,GAAKH,EAAMlB,EAAEqB,GAGtBrB,GAAImB,EAGN,MAAOnB,GAWT,QAASsB,GAAOC,GAEd,IAAK,GAAIH,GAAI,EAAGA,EAAII,UAAUZ,OAAQQ,IACtC,CACE,GAAIK,GAAID,UAAWJ,EAEnB,IAAKV,EAAUe,GAEb,IAAK,GAAIZ,KAAQY,GAERZ,IAAQU,KAEbA,EAAIV,GAAQY,EAAEZ,IAMtB,MAAOU,GAcT,QAASG,GAASC,EAAGC,EAAGC,EAAGC,GAEzB,MAAI/B,GAAU4B,GACLA,EAEL5B,EAAU6B,GACLA,EAEL7B,EAAU8B,GACLA,EAEFC,EAcT,QAASC,GAASC,GAEhB,MAAO,YAEL,MAAOA,IAkBX,QAASC,GAAQD,GAEf,MAAO/B,GAAY+B,GAAaA,IAAaA,EAiC/C,QAASE,GAAUC,EAAMC,EAAOC,EAASC,GAOvCzC,KAAKsC,KAAOA,EAOZtC,KAAKuC,MAAQA,EAObvC,KAAKwC,QAAUA,EAOfxC,KAAKyC,YAAcA,EAsDrB,QAASC,GAASC,GAEhB3C,KAAK4C,MAAOD,GAu9Cd,QAASE,GAAUN,GAEjBvC,KAAK8C,KAEAnC,EAAS4B,IAEZvC,KAAK+C,KAAMR,GAksBf,QAASS,MAqjBT,QAASC,KAEPjD,KAAK4C,QAknBP,QAASM,MA8HT,QAASC,GAAeZ,EAAOa,EAAYC,EAAYC,GAErDtD,KAAKuC,MAAQA,EACbvC,KAAKoD,WAAaA,MAClBpD,KAAKqD,WAAaA,MAClBrD,KAAKsD,UAAYA,EAEjBtD,KAAKuD,iBAAkB,WACvBvD,KAAKuD,iBAAkB,WACvBvD,KAAKuD,iBAAkB,UACvBvD,KAAKuD,iBAAkB,UACvBvD,KAAKuD,iBAAkB,aACvBvD,KAAKuD,iBAAkB,WACvBvD,KAAKuD,iBAAkB,UACvBvD,KAAKuD,iBAAkB,cACvBvD,KAAKuD,iBAAkB,cAqXzB,QAASC,MA+aT,QAASC,GAAMnE,EAASoE,GAEtB1D,KAAK2D,SAAWrE,CAEhB,KAAK,GAAIiC,GAAI,EAAGA,EAAImC,EAAQ3C,OAAQQ,IAElCvB,KAAM0D,EAAQnC,IAAOvB,KAAK4D,MAAOF,EAAQnC,IA0I7C,QAASsC,GAAcC,EAAUC,EAAUC,EAAWC,GAEpDjE,KAAKkE,OAAQJ,EAAUC,EAAUC,EAAWC,GA41B9C,QAASE,GAAMC,EAAWC,EAAMC,EAAUC,EAAQC,EAAOC,EAAOC,EAAQC,EAAQC,EAAOC,EAAWC,EAAYC,EAAiBC,EAASC,EAAM1C,EAAO2C,GAEnJlF,KAAK4C,MAAOwB,EAAWY,EAASC,GAOhCjF,KAAKqE,KAAmBA,EASxBrE,KAAKuE,OAAmBY,GAASZ,GASjCvE,KAAKsE,SAAmBc,GAAWd,GASnCtE,KAAKyE,MAAmBY,GAAQZ,GAShCzE,KAAK2E,OAAmBW,GAASX,GASjC3E,KAAK4E,MAAmBW,GAAQX,GAQhC5E,KAAK6E,UAAmBR,EAAKmB,WAAWC,MAAOZ,EAAWR,EAAKmB,WAAWE,MAO1E1F,KAAK8E,WAAmBA,EASxB9E,KAAK+E,gBAAmBlD,EAAUkD,GAAiB,GAEnD/E,KAAKwE,MAAmBmB,GAAQnB,GAChCxE,KAAK0E,OAAmBkB,GAASlB,GAEjC1E,KAAKuC,MAAmBA,EACxBvC,KAAKkF,QAAmBA,EAgO1B,QAASW,KAEP7F,KAAK8F,SAAW,EAuFlB,QAASC,GAAQC,GAIf,GAFAhG,KAAK4C,QAEAoD,YAAeD,GAElB/F,KAAKiG,OAAQD,OAEV,IAAKnF,EAAUmF,GAElB,IAAK,GAAIhF,KAAQgF,GAEfhG,KAAKkG,IAAKlF,EAAMgF,EAAKhF,IA0P3B,QAASmF,GAAO/B,EAAWgC,EAAO5B,EAAOO,EAAiBC,EAASC,EAAM1C,GAEvEvC,KAAK4C,MAAOwB,EAAWY,EAASC,GAOhCjF,KAAKoG,MAAQA,EASbpG,KAAK+E,gBAAmBlD,EAAUkD,GAAiB,GAEnD/E,KAAKwE,MAAmBmB,GAAQnB,GAChCxE,KAAKqG,SAAmB,EACxBrG,KAAKuC,MAAmBA,EAkG1B,QAAS+D,MA6MT,QAASC,GAASnC,EAAWY,EAASQ,EAAYgB,EAAUC,EAAUC,EAAcC,EAAUC,GAE5F5G,KAAK4C,MAAOwB,EAAWY,EAAS,MAEhChF,KAAKwF,WAAeA,EACpBxF,KAAKwG,SAAeA,EACpBxG,KAAKyG,SAAeA,EACpBzG,KAAK0G,aAAeA,EACpB1G,KAAK2G,SAAeE,GAASF,EAAUG,OAAOC,mBAC9C/G,KAAK4G,SAAeI,GAAOJ,EAAUE,OAAOC,mBAC5C/G,KAAKiH,UAAe,EAkKtB,QAASC,GAASC,EAAW3C,EAAOD,GAOlCvE,KAAKmH,UAAYA,EAOjBnH,KAAKwE,MAAQmB,GAAQnB,GAOrBxE,KAAKuE,OAASY,GAASZ,GAwNzB,QAAS6C,MAkJT,QAASvH,GAAMwH,GAEb,GAAKA,YAAmB3E,GAEtB,MAAO2E,EAGT,IAAI/H,GAAUgI,GAAaD,GAAS,EAEpC,OAAK/H,MAAY,GAER,EAGFA,EAAQiI,YAAaF,GAe9B,QAAStH,GAAOyH,GAEd,GAAIlI,GAAUgI,GAAaE,GAAU,GACjCL,IAEJ,IAAK7H,KAAY,EAIf,MAFAA,GAAQmI,aAAcD,EAAUL,GAEzB,GAAItE,GAAWsE,EAGlBxG,GAAS6G,KAEbA,GAAaA,GAKf,KAAK,GAFDL,MAEK5F,EAAI,EAAGA,EAAIiG,EAASzG,OAAQQ,IACrC,CACE,GAAIuC,GAAWjE,EAAO2H,EAASjG,GAE1BuC,MAAa,GAEhBqD,EAAU/F,KAAM0C,GAIpB,MAAO,IAAIjB,GAAWsE,GAiCxB,QAASO,KAEP,MAAOC,IAGT,QAASC,KAEP,MAAOC,IAGT,QAASC,GAAQC,GAEfF,GAAOE,EAUT,QAASC,GAAiBlE,GAExBmE,EAAcnE,GAEdoE,IAGF,QAASD,GAAanE,GAEdA,EAASqE,SAEbrE,EAASqE,QAAS,EAClBC,GAAUhH,KAAM0C,IAIpB,QAASoE,KAEDP,KAEJA,IAAU,EAEV9H,EAAMwI,QAAQ,YAEdC,GAAYC,IAqDhB,QAASA,KAEP1I,EAAMwI,QAAQ,QAEd,IAAIG,GAAcC,KACdN,EAASC,GAAUrH,QAGvBqH,IAAUM,UAAWF,EAAaL,GAGlCC,GAAUO,OAAQH,EAAaL,GAG/BC,GAAU7H,MAAO4H,GAGjBC,GAAUQ,OAAQR,GAAUS,gBAG5BhJ,EAAMwI,QAAQ,OAGTD,GAAUrH,UAAY8G,GAEzBS,GAAYC,IAIZZ,IAAU,EAEV9H,EAAMwI,QAAQ,aAalB,QAASS,GAAMC,GAIb,MAFAX,IAAUU,MAAOC,GAEVlJ,EAYT,QAASmJ,GAAOD,GAId,MAFAX,IAAUY,OAAQD,GAEXlJ,EAYT,QAASoJ,GAAKF,GAIZ,MAFAX,IAAUa,KAAMF,GAETlJ,EAYT,QAASqJ,GAAIH,GAIX,MAFAX,IAAUc,IAAKH,GAERlJ,EAYT,QAASsJ,GAAOJ,GAId,MAFAX,IAAUe,OAAQJ,GAEXlJ,EAYT,QAASuJ,GAAOL,GAId,MAFAX,IAAUgB,OAAQL,GAEXlJ,EAiBT,QAASwJ,GAAMC,EAAGC,EAAGxH,EAAGD,GAEtB,OACEwH,EAAGzH,EAAUyH,EAAG,KAChBC,EAAG1H,EAAU0H,EAAG,KAChBxH,EAAGF,EAAUE,EAAG,KAChBD,EAAGD,EAAUC,EAAG,IA0VpB,QAAS0H,GAASC,EAAYC,GAE5B,GAAKhJ,EAAU+I,IAAgBrJ,EAAYsJ,GAMzC,MAJAA,GAAKF,UAAW,EAEhBA,EAAUC,GAAeC,EAElBA,CAEJ,IAAKtJ,EAAYqJ,GAIpB,MAFAA,GAAWD,UAAW,EAEfC,CAGT,MAAMA,GAAa,QAAUC,EAAO,8DAsFtC,QAASC,GAAWxJ,GAElB,MAAOO,GAAUP,IAAO,kBAAkByJ,KAAMzJ,GAoHlD,QAAS0J,GAAW1J,GAElB,MAAOC,GAAYD,IAAOA,EAAEqJ,SAG9B,QAASM,GAAgBC,EAAYjG,EAAUsC,EAAO4D,GAWpD,MATKA,aAAkBxG,GAErB4C,EAAQ4D,EAAOvE,MAAOW,GAEdhG,EAAY4J,KAEpB5D,EAAQ4D,EAAQD,EAAYjG,EAAUsC,IAGnCyD,EAAYzD,GAERA,EAAO2D,EAAYjG,GAGrB1B,EAASgE,GAYlB,QAAS6D,IAASC,EAAcC,GAE9B,OAAQA,GAER,IAAKC,IAAcC,KACjB,MAAO,YAIL,IAAK,GAFDC,GAAQtK,KAAK8C,GAAK9C,KAEbuB,EAAI,EAAGA,EAAI+I,EAAMvJ,OAAQQ,IAEhC+I,EAAM/I,GAAG2I,GAAc3J,MAAO+J,EAAM/I,GAAII,UAG1C,OAAO3B,MAGX,KAAKoK,IAAcG,QACjB,MAAO,YAKL,IAAK,GAHDD,GAAQtK,KAAK8C,GAAK9C,KAClBwK,KAEKjJ,EAAI,EAAGA,EAAI+I,EAAMvJ,OAAQQ,IAEhCiJ,EAAQpJ,KAAMkJ,EAAM/I,GAAG2I,GAAc3J,MAAO+J,EAAM/I,GAAII,WAGxD,OAAO6I,GAGX,KAAKJ,IAAcK,MACjB,MAAO,YAEL,GAAIH,GAAQtK,KAAK8C,GAAK9C,IAEtB,OAAwB,KAAjBsK,EAAMvJ,OAAe2J,OAAYJ,EAAM,GAAGJ,GAAc3J,MAAO+J,EAAM,GAAI3I,WAGpF,KAAKyI,IAAcO,KACjB,MAAO,YAIL,IAAK,GAFDL,GAAQtK,KAAK8C,GAAK9C,KAEbuB,EAAI,EAAGA,EAAI+I,EAAMvJ,OAAQQ,IAEhC,GAAK+I,EAAM/I,GAAG2I,GAAc3J,MAAO+J,EAAM/I,GAAII,WAE3C,OAAO,CAIX,QAAO,GAKX,MAAO1B,GAwBT,QAAS2K,IAAW5E,GAElB,MAAO,UAAUI,EAAOyE,GAEtB,IAAM,GAAI7J,KAAQgF,GAEhB6E,EAAO7E,EAAKhF,IAAWoF,EAAOpF,IA0BpC,QAAS8J,IAAS1G,EAAW2G,GAE3B,MAAO,UAAU3E,EAAOyE,GAEhBhK,EAAUgK,EAAOzG,MAErByG,EAAOzG,OAGTyG,EAAOzG,GAAa2G,GAAiB3E,GAsBzC,QAAS4E,IAAQjC,GAEf,MAAO,UAAU3C,EAAOyE,GAEtB,IAAM,GAAItJ,GAAI,EAAGA,EAAIwH,EAAWhI,OAAQQ,IAEtCsJ,EAAO9B,EAAYxH,IAAQ6E,GAgCjC,QAAS6E,IAASC,GAEhBC,GAAMC,eAAgBF,EAAQ,KAAMG,IACpCF,GAAMC,eAAgBF,EAAQ,OAAQI,IACtCH,GAAMC,eAAgBF,EAAQ,MAAOK,IACrCJ,GAAMC,eAAgBF,EAAQ,UAAW7C,IAI3C,QAASmD,IAAYC,EAAOC,EAAUC,EAAQC,EAAUC,GAEtD,GAAIF,GAAS1K,EAAS0K,EAAQ,IAExBzL,GAAWuL,EAAOC,KAEtBP,GAAMC,eAAgBK,EAAOC,KAG/B,KAAK,GAAInK,GAAI,EAAGA,EAAIoK,EAAO5K,OAAQQ,IAE3BrB,EAAWuL,EAAOC,GAAYC,EAAOpK,OAEzCkK,EAAOC,GAAYC,EAAOpK,QAG5BkK,EAAOC,GAAYC,EAAOpK,IAAKH,MAAQwK,EAAUC,GAAWJ,IAKhE,QAASK,IAAgBC,EAAW9H,EAAO2H,GAEzC,GAAIG,GAAa9H,IAAS8H,GAIxB,IAAK,GAFDC,GAAiBD,EAAW9H,GAEvBgI,EAAID,EAAejL,OAAS,EAAGkL,GAAK,EAAGA,IAE1CD,EAAgBC,GAAI,KAAOL,GAE7BI,EAAeE,OAAQD,EAAG,GAOlC,QAASE,IAAeC,EAAKpL,GAEtBoL,GAAOpL,IAAQoL,UAEXA,GAAKpL,GAKhB,QAASqL,IAAiBN,EAAW9H,EAAOqI,EAAUC,GAEpD,GAAIR,GAAa9H,IAAS8H,GAC1B,CAIE,IAAK,GAHDC,GAAiBD,EAAW9H,GAC5BuI,EAAMR,EAAejL,OAEhBQ,EAAI,EAAOiL,EAAJjL,EAASA,IACzB,CACE,GAAIqK,GAAWI,EAAgBzK,EAE/BqK,GAAS,GAAGtL,KAAMsL,EAAS,GAAIU,GAG5BC,IAEEP,EAAejL,SAAWyL,EAE7BT,EAAW9H,GAAU+H,EAAeS,MAAOD,SAIpCT,GAAW9H,KAiB1B,QAASoH,IAAGM,EAAQC,EAAUC,GAI5B,MAFAL,IAAaxL,KAAM,MAAO2L,EAAQC,EAAUC,GAErC7L,KAcT,QAASsL,IAAKK,EAAQC,EAAUC,GAI9B,MAFAL,IAAaxL,KAAM,QAAS2L,EAAQC,EAAUC,GAEvC7L,KAmBT,QAASuL,IAAII,EAAQC,GAGnB,GAAM1L,EAAWyL,GAMjB,CACE,GAAIA,GAAS1K,EAAS0K,EAAQ,IAG9B,IAAMvL,EAAYwL,GAWhB,IAAK,GAAIrK,GAAI,EAAGA,EAAIoK,EAAO5K,OAAQQ,IAEjCuK,GAAiB9L,KAAK0M,IAAKf,EAAOpK,GAAIqK,GACtCE,GAAiB9L,KAAK2M,MAAOhB,EAAOpK,GAAIqK,OAZ1C,KAAK,GAAIrK,GAAI,EAAGA,EAAIoK,EAAO5K,OAAQQ,IAEjC4K,GAAgBnM,KAAK0M,IAAKf,EAAOpK,IACjC4K,GAAgBnM,KAAK2M,MAAOhB,EAAOpK,eAbhCvB,MAAK0M,UACL1M,MAAK2M,KA0Bd,OAAO3M,MAYT,QAASqI,IAAQpE,EAAOqI,GAKtB,MAHAD,IAAkBrM,KAAK0M,IAAKzI,EAAOqI,GAAU,GAC7CD,GAAkBrM,KAAK2M,MAAO1I,EAAOqI,GAAU,GAExCtM,KAIT,QAAS4M,IAAI9K,EAAEC,GAUb,GARQ,EAAJD,IAEFA,GAAKA,GAEC,EAAJC,IAEFA,GAAKA,GAEHA,EAAID,EACR,CACE,GAAI+K,GAAO/K,CACXA,GAAIC,EACJA,EAAI8K,EAGN,OACA,CACE,GAAU,IAAN9K,EAEF,MAAOD,EAKT,IAFAA,GAAKC,EAEK,IAAND,EAEF,MAAOC,EAGTA,IAAKD,GAIT,QAASgL,IAAOC,EAAGC,GAEjB,GAAsBzD,GAAlB0D,EAAM,EAAGC,EAAM,CAOnB,KALKF,EAAKD,EAAI,IAEZC,EAAID,EAAIC,GAGFA,GAAK,GAEXC,GAAOF,IACPG,GAAOF,IACPzD,EAAIqD,GAAKK,EAAKC,GACdD,GAAO1D,EACP2D,GAAO3D,CAGT,OAAO0D,GAkBT,QAASE,IAAMC,EAAGC,EAAKb,GAErB,MAAYa,GAAJD,EAAWC,EAAOD,EAAIZ,EAAMA,EAAMY,EAG5C,QAASE,IAAQD,EAAKb,GAEpB,MAAO,UAASY,GAEd,MAAOD,IAAOC,EAAGC,EAAKb,IAO1B,QAASe,IAAUC,GAEjB,MAAOA,GAAUC,GAGnB,QAASC,IAAUC,GAEjB,MAAOA,GAAUC,GAGnB,QAASC,IAAOC,GAEd,MAAO,UAASV,GAEd,MAAOA,GAAIU,GAKf,QAASC,IAAMC,EAAWC,EAAiBC,GAEzC,GAAIC,GAAeC,CAEnB,IAAKH,EACL,CACE,GAAIzI,GAAa6I,GAAaJ,GAC1BK,EAAe9I,EAAWC,MAAOyI,EAErCC,GAAgB,WAEd,MAAO3I,IAET4I,EAAa,SAASrE,EAAYjG,EAAUsC,GAE1C,MAAOZ,GAAWC,MAAOW,EAAOkI,GAAc,QAKhDH,GAAgB,SAASpE,EAAYjG,GAEnC,MAAOA,GAASyK,aAAcxE,EAAW3F,WAAYoB,YAEvD4I,EAAa,SAASrE,EAAYjG,EAAUsC,GAE1C,MAAOtC,GAASyK,aAAcxE,EAAW3F,WAAYqB,MAAOW,GAAO,GAIvE,OAAOoI,IAAaL,EAAeC,EAAY,SAASrE,EAAYjG,GAElE,MAAOgG,GAAiBC,EAAYjG,EAAUiG,EAAWjF,WAAYkJ,GAAaI,KAItF,QAASI,IAAaL,EAAeC,EAAYK,GAO/C,MALAhN,GAAQgN,EAAUC,IAElBD,EAASN,cAAgBA,EACzBM,EAASL,WAAaA,EAEf5E,EAAUiF,GAGnB,QAASR,IAAgBU,EAAQC,EAAmBC,GAElD,GAAIV,GAAgBQ,EAAOR,cACvBC,EAAaO,EAAOP,UAiBxB,OAfKS,KAEHA,EAAgBR,GAAaQ,GAE7BV,EAAgB,WAEd,MAAOU,IAGTT,EAAa,SAASrE,EAAYjG,EAAUsC,GAE1C,MAAOyI,GAAcpJ,MAAOW,EAAOsE,QAAW,KAI3C8D,GAAaL,EAAeC,EAAY,SAASrE,EAAYjG,GAElE,GAAIgL,GAAOX,EAAepE,EAAYjG,EAEtC,OAAO8K,GAAmB7E,EAAYjG,EAAU6K,EAAQG,KAgW5D,QAASC,IAAMzM,EAAM0M,EAAWxM,GAE9B,GAAIwM,GAAYC,GAAYD,EAAWnN,EAAUW,EAAS0M,GAAY1M,SAAW0M,GAAYC,MAAOD,GAAY5L,WAC5G8L,EAAgBF,GAAYG,OAAS/M,EACrCgN,EAAMF,EAAcG,aAExBP,GAAU1M,KAAO8M,EAEjBI,GAAYF,GAAQN,EAYtB,QAASS,IAAWC,EAAiBC,GAEnC,GAAIC,GAAkBvO,EAAM6N,GAE5B,IAAKxO,EAAUgP,GAEbR,GAAYG,QAAUK,MAEnB,IAAK7O,EAAU6O,GACpB,CASE,GARKhP,EAAUgP,EAAgBL,UAE7BH,GAAYG,QAAUK,EAAgBL,QAEnCnP,EAAWwP,EAAgBP,SAE9BD,GAAYC,MAAQO,EAAgBP,OAEjCjP,EAAWwP,EAAgBlN,SAChC,CACE,GAAIqN,GAAgBC,GAAUJ,EAAgBlN,QAAS0M,GAAYC,MAE9DU,KAAkBE,GAASC,WAE9BvO,EAAQyN,GAAY1M,QAASqN,GAOjC,GAJK3P,EAAWwP,EAAgBpM,aAE9B4L,GAAY5L,UAAYoM,EAAgBpM,WAErCpD,EAAWwP,EAAgBpQ,SAChC,CACE,GAAI2Q,GAAgBtM,GAAU+L,EAAgBpQ,QAEzC2Q,KAEHf,GAAY5L,UAAY2M,IAK9B,GAAKpP,EAAU8O,GAEb,IAAK,GAAIO,KAAiBP,GAExBZ,GAAMmB,EAAeP,EAAYO,QAG3B9P,GAAYuP,IAEpBA,GAGFT,IAAcU,EAIhB,QAASO,IAAUnB,EAAWoB,EAAUC,EAAQ7N,EAAS2M,GAEvD,GAAImB,GAASrB,GAAWD,EAAWxM,EAAS2M,GACxC1M,EAAc6N,EAAOC,gBAEzB,KAAK,GAAIC,KAAiBJ,GAC1B,CACE,GAAIK,GAAcL,EAAUI,EAE5B/N,GAAYiO,IAAKF,GAAgBpM,UAAYqM,EAC7ChO,EAAYkO,MAAOH,EAAeC,GAGpC,GAAIG,GAAa,GAAIvO,GAAWgO,EAAQC,EAAO/N,MAAO+N,EAAO9N,QAASC,EAOtE,OALK/B,GAAU2P,IAEbtB,GAAMsB,EAAQO,GAGTA,EAWT,QAASC,MAEP7Q,KAAK8Q,kBA4MP,QAASC,MAEP/Q,KAAK8Q,kBAkNP,QAASE,MAEPhR,KAAK8Q,kBA0IP,QAASG,MAEPjR,KAAK8Q,kBAsOP,QAASI,MAEPlR,KAAK8Q,kBA2NP,QAASK,MAEPnR,KAAK8Q,kBA6OP,QAASM,MAEPpR,KAAK8Q,kBAwHP,QAASO,MAEPrR,KAAK8F,SAAW,EAChB9F,KAAK+I,cAiGP,QAASuI,OA8BT,QAASC,OA0ET,QAASC,OAwCT,QAASC,OAsCT,QAASC,OAoKT,QAASC,OAkCT,QAASC,OAuCT,QAASC,OA0CT,QAASC,OAgCT,QAASC,OA8BT,QAASC,OA2CT,QAASC,OA0GT,QAASC,OAkCT,QAASC,OAsCT,QAASC,IAAU9P,EAAMkD,EAAY6M,EAAQC,GAE3CtS,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6M,EAAQC,GAgDhC,QAASE,IAAelQ,EAAMkD,EAAY6M,EAAQI,EAAMC,EAAQC,EAAQC,GAEtE5S,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6M,EAAQI,EAAMC,EAAQC,EAAQC,GA8GtD,QAASC,IAAgBvQ,EAAMkD,EAAY6M,EAAQI,GAEjDzS,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6M,EAAQI,GA2ChC,QAASK,IAAWxQ,EAAMkD,EAAY6M,EAAQU,GAE5C/S,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6M,EAAQU,GA0EhC,QAASC,IAAe1Q,EAAMkD,EAAY6M,EAAQI,GAEhDzS,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6M,EAAQI,GA4ChC,QAASQ,IAAU3Q,EAAM4Q,EAAOC,EAASC,GAEvCpT,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAKW,EAAOC,EAASC,GAyG5B,QAASC,IAAa/Q,EAAM+B,EAAMiP,GAEhCtT,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAKlO,EAAMiP,GA6DlB,QAASC,IAAUjR,EAAMkD,EAAYgO,EAAIC,EAAIC,EAAIC,GAE/C3T,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAYgO,EAAIC,EAAIC,EAAIC,GAqDpC,QAASC,IAAYtR,EAAMkD,EAAYqO,EAAOC,EAAc5K,EAAK6K,GAE/D/T,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAYqO,EAAOC,EAAc5K,EAAK6K,GAiDlD,QAASC,IAAS1R,EAAMkD,EAAY6M,GAElCrS,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6M,GAqCxB,QAAS4B,IAAa3R,EAAMkD,EAAY6M,EAAQC,EAAQ4B,GAEtDlU,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6M,EAAQC,EAAQ4B,GAuDxC,QAASC,IAAW7R,EAAMkD,EAAY6M,GAEpCrS,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6M,GAqDxB,QAAS+B,IAAU9R,EAAMkD,EAAY6O,GAEnCrU,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6O,GAkCxB,QAASC,IAAchS,EAAMkD,EAAYgO,EAAIC,EAAIC,GAE/C1T,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAYgO,EAAIC,EAAIC,GAiDhC,QAASa,IAAoBjS,EAAMkD,EAAY6M,EAAQmC,EAAU/B,GAE/DzS,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAY6M,EAAQmC,EAAU/B,GAwF1C,QAASgC,IAAQnS,EAAM+B,EAAMwP,EAAO3K,GAElClJ,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAKlO,EAAMwP,EAAO3K,GAmCzB,QAASwL,IAAYpS,EAAM+B,EAAMiP,GAE/BtT,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAKlO,EAAMiP,GAkClB,QAASqB,IAAMrS,EAAMkD,EAAYqO,EAAO3K,GAEtClJ,KAAKsC,KAAOA,EACZtC,KAAKuS,IAAK/M,EAAYqO,EAAO3K,GAuC/B,QAAS0L,IAAexQ,EAAWoB,EAAYgB,EAAUqO,EAAMC,EAAUC,EAASC,EAAWvO,EAAUwO,EAASC,GAE9GlV,KAAKuS,IAAKnO,EAAWoB,EAAYqP,EAAMrO,EAAUC,EAAUwO,EAASC,GAEpElV,KAAK8U,SAAaA,EAClB9U,KAAK+U,QAAaA,EAClB/U,KAAKgV,UAAaA,EAClBhV,KAAK6M,KAAa,KA8DpB,QAASsI,IAAa/Q,EAAWoB,EAAYgB,EAAUqO,EAAME,EAASC,EAAWvO,EAAUwO,EAASC,GAElGlV,KAAKuS,IAAKnO,EAAWoB,EAAYqP,EAAMrO,EAAUC,EAAUwO,EAASC,GAEpElV,KAAK+U,QAAeA,EACpB/U,KAAKgV,UAAeA,EACpBhV,KAAKoV,MAAe,KACpBpV,KAAKqV,MAAe,KAiEtB,QAASC,IAAMhT,GAEbtC,KAAKsC,KAAOA,EACZtC,KAAKwI,YAAc,EACnBxI,KAAKuV,oBACLvV,KAAKwV,cAAgB,EACrBxV,KAAKyV,eAAiBC,GAAQC,OAC9B3V,KAAK4V,WAAY,EACjB5V,KAAK6V,UAAY,GAAI9P,GACrB/F,KAAK8V,SAAU,EA8MjB,QAASC,IAAYC,GAEnBhW,KAAKiW,MAAQ,EACbjW,KAAKkW,KAAO,EACZlW,KAAKwI,YAAc,EACnBxI,KAAKmW,SAAU,EACfnW,KAAKgW,MAAQA,EACbhW,KAAKsE,SAAW0R,EAAM1R,WACtBtE,KAAKuI,IAAMvI,KAAKoW,OAAQJ,EAAOhW,MA2JjC,QAASqW,IAAcvS,GAErB9D,KAAK8D,SAAWA,EAChB9D,KAAKyC,YAAc,GAAIQ,GACvBjD,KAAK6T,MAAQ,EAuyBf,QAAS5E,IAAWD,EAAWxM,EAAS2M,EAAO7L,GAE7C,GAAId,GAAUsN,GAAUtN,EAAS2M,GAC7BmH,GAAcxV,EAAS0B,EAE3B,IAAKwM,YAAqB3M,GAC1B,CACE,GAAKiU,EACL,CACE,GAAI7T,GAAcuM,EAAUuB,gBAI5B,OAFAvB,GAAUuH,MAAO/T,EAASC,GAEnB,GAAIJ,IAAW,EAAO2M,EAAUzM,MAAOC,EAASC,GAGzD,MAAOuM,GAET,GAAKtO,EAAUsO,GACf,CACE,GAAIM,GAAMN,EAAUO,aAEpB,IAAKD,IAAOE,MAAe8G,EAEzB,MAAO9G,IAAYF,EAGrB,IAAI7M,GAAc+T,GAAiBxH,EAAWxM,EAAS2M,EAEvD,OAAKG,KAAOE,MAAe8G,EAElB9G,GAAYF,GAGd,GAAIjN,IAAW,KAAWG,EAASC,GAE5C,GAAK5B,EAAUmO,GACf,CACE,GAAIvM,GAAc+T,GAAiBxH,EAAWxM,EAAS2M,EAAO7L,EAE9D,OAAO,IAAIjB,IAAW,EAAO2M,EAAWxM,EAASC,GAGnD,OAAO,EAiDT,QAAS+T,IAAiBxH,EAAWxM,EAAS2M,EAAO7L,GAEnD,GAAIuM,GAAgBC,GAAUtN,EAAS2M,GACnCmH,GAAcxV,EAAS+O,GACvBpN,EAAc,GAAIQ,EAEtB,IAAK+L,YAAqB3M,GAExBI,EAAYwD,OAAQ+I,EAAUuB,kBAEzB+F,GAEHtH,EAAUuH,MAAO1G,EAAepN,OAG/B,IAAK5B,EAAUmO,GACpB,CACE,GAAIyH,GAAS,GAAItT,GAAe6L,EAAWa,KAAmBvM,EAE9D,KAAK,GAAIoT,KAAe1H,GACxB,CACE,GAAIhK,GAAU2R,GAAUD,EAEnB1R,MAAY,GAEfA,EAAQS,MAAOuJ,EAAWa,EAAepN,EAAagU,QAIvD,IAAK/V,EAAUsO,GACpB,CACE,GAAIM,GAAMN,EAAUO,cAChBqH,EAAQpH,GAAYF,GACpBuH,EAAUhV,EAAUsN,EAAOY,GAASZ,MAExC,IAAKyH,EAEHnU,EAAYwD,OAAQ2Q,EAAMrG,kBAErB+F,GAEHM,EAAML,MAAO1G,EAAepN,OAIhC,CAGE,IAAK,GAFDqU,GAAmB9H,EAAU9N,MAAO,WAE/B+K,EAAI,EAAGA,EAAI6K,EAAiB/V,OAAQkL,IAC7C,CAIE,IAAK,GAHD8K,GAAmBD,EAAkB7K,GAAI/K,MAAO,WAChD8V,EAAO,GAAI/T,GAENgU,EAAI,EAAGA,EAAIF,EAAiBhW,OAAQkW,IAC7C,CACE,GAAIC,GAAkBC,GAAMJ,EAAkBE,GAAI1H,eAC9C6H,EAAiBF,EAAgBhW,MAAO,OACxCmW,EAAkB7H,GAAY4H,EAAgB,GAElD,KAAKC,EAuBH,KAAMH,GAAkB,iCAAmCJ,EAAkB7K,GAAM,GArBnF,IAAIqL,GAAoBxH,GAAUsH,EAAe3K,MAAO,GAAK0C,GACzDoI,GAAwBzW,EAASwW,GACjCE,EAAoBH,EAAgB9G,gBAEnC+F,IAAciB,EAEjBF,EAAgBd,MAAO9U,KAAYoO,EAAeyH,GAAqBE,GAE/DD,EAERF,EAAgBd,MAAOe,EAAmBE,GAElClB,GAERe,EAAgBd,MAAO1G,EAAe2H,GAGxCR,EAAK/Q,OAAQuR,GAQjB/U,EAAYgV,SAAUT,GAGnBH,IAAYP,IAEf9G,GAAYF,GAAQ,GAAIjN,GAAW2M,QAAmBvM,KAK5D,MAAOA,GAwBT,QAASkU,IAASe,GAEhB,MAAKA,aAAwBxU,GAEpBwU,EAEJhX,EAAUgX,IAAkBA,IAAgBC,IAExCA,GAAUD,IAGZ,EAeT,QAASrJ,IAAYuJ,GAEpB,MAAKA,aAA2BpU,GAEvBoU,EAEJlX,EAAUkX,IAAqBA,IAAmBC,IAE9CA,GAAaD,GAGfC,GAAY,WAepB,QAASlS,IAAOuQ,GAEd,MAAOlP,IAAOkP,EAAMnG,GAASvL,OAa/B,QAASsT,IAAQxF,EAAQyF,GAIvB,IAAK,GAFDvL,GAAM8F,EAAQ,GAET/Q,EAAI,EAAGA,EAAI+Q,EAAOvR,OAAQQ,IAEjCiL,EAAMwL,KAAKxL,IAAKA,EAAK8F,EAAQ/Q,GAM/B,KAAK,GAHD2J,GAAS6M,KAAazF,EACtB2F,EAAY,EAAMzL,EAEbjL,EAAI,EAAGA,EAAI+Q,EAAOvR,OAAQQ,IAEjC2J,EAAQ3J,GAAM+Q,EAAQ/Q,GAAM0W,CAG9B,OAAO/M,GAcT,QAAS9F,IAAU8Q,GAEjB,MAAOlP,IAAOkP,EAAMnG,GAASzL,UAgC/B,QAASa,IAAQZ,EAAQ2T,GAEvB,GAAK9X,EAAYmE,GAEf,MAAOA,EAET,IAAK7D,EAAU6D,GACf,CACE,GAAI4T,GAAS,KACTvT,EAAQ,EAERwT,EAAa7T,EAAO8T,QAAQ,IAQhC,IANoB,KAAfD,IAEHxT,EAAQ0T,WAAY/T,EAAOgU,UAAWH,EAAa,IACnD7T,EAASA,EAAOgU,UAAW,EAAGH,IAG3B7T,IAAUmR,IAEbyC,EAASzC,GAASnR,OAEf,IAAKA,IAAUiU,IAElBL,EAASK,GAAajU,GAAUY,GAAS4K,GAASxL,aAE/C,IAA6B,KAAxBA,EAAO8T,QAAQ,KACzB,CACE,GAAII,GAAOlU,EAAOrD,MAAM,KACpByB,EAAI8V,EAAK,GACTC,EAAID,EAAK,EAERA,GAAK1X,QAAU,GAAK4B,IAAK+S,KAAWgD,IAAKF,MAE5CL,EAASK,GAAaE,GAAKhD,GAAS/S,KASxC,GALgB,OAAXwV,GAAmBQ,SAAU/T,IAAqB,IAAVA,IAE3CuT,EAASzC,GAAQ9Q,MAAOA,EAAOuT,IAGjB,OAAXA,EAEH,MAAOA,GAGX,GAAKxX,EAAS4D,IAA8B,IAAlBA,EAAOxD,QAAgBP,EAAU+D,EAAO,KAAQ/D,EAAU+D,EAAO,KAAQ/D,EAAU+D,EAAO,KAAQ/D,EAAU+D,EAAO,IAE3I,MAAOmR,IAAQkD,OAAOrY,MAAO,KAAMgE,EAErC,KAAMrE,EAAWqE,GAEf,MAAOY,IAAS4K,GAASxL,OAG3B,IAAKrE,EAAWgY,GAEd,MAAOA,EAGT,MAAM3T,GAAS,yBAcjB,QAASsU,IAAYC,EAAYC,GAE/B,GAAK3Y,EAAY0Y,GAEf,MAAOA,EAET,IAAKpY,EAAUoY,IAAgBA,IAAcN,IAE3C,MAAOA,IAAaM,EAGtB,IAAKC,EAEH,OAAO,CAGT,MAAMD,GAAa,8BAYrB,QAASnV,IAASqV,EAAc1V,GAE9B,GAAK0V,YAAwBnT,GAE3B,MAAOmT,EAET,IAAKtY,EAAUsY,IAAkBA,IAAgBC,IAE/C,MAAOA,IAAWD,EAEpB,IAAK1V,EACL,CACE,GAAKA,YAAqBuC,GAExB,MAAOvC,EAaT,IAVKA,YAAqB4D,KAExB5D,EAAYA,EAAU6D,WAGnB7D,YAAqBT,KAExBS,EAAYA,EAAUR,EAAE,IAGrBQ,YAAqBZ,IAAYY,EAAUhE,QAE9C,MAAOgE,GAAUhE,QAIrB,MAAO2Z,IAAU,WAcnB,QAAS3R,IAAYD,EAAS0R,GAE5B,GAAIG,IAAyB,CAE7B,KAAK,GAAIC,KAAeF,IACxB,CACE,GAAI3Z,GAAU2Z,GAAWE,EAEpB7Z,GAAQ8Z,GAAI/R,KAAc6R,KAA2B,GAASA,EAAuBpT,SAAWxG,EAAQwG,YAE3GoT,EAAyB5Z,GAI7B,GAAK4Z,EAEH,MAAOA,EAGT,IAAKH,EAEH,OAAO,CAGT,MAAM,iCAAmC1R,EAqB3C,QAASR,IAAQT,EAAO8R,GAEtB,GAAI5H,GAASgI,WAAYlS,EAEzB,OAAOiT,OAAO/I,GAAW4H,EAAkB5H,EAe7C,QAAS1K,IAAQsQ,GAEf,MAAOlP,IAAOkP,EAAMnG,GAASrL,QA0C/B,QAASoL,IAAStN,EAAS2M,GAEzB,GAAImK,GAAgB9W,EAChBqU,EAAUhV,EAAUsN,EAAOY,GAASwJ,aAExC,IAAK7Y,EAAU8B,GACf,CACE,GAAKA,IAAWgX,IAEd,MAAOA,IAAShX,EAGlBA,GAAUA,EAAQ+M,cAAcrO,MAAM,OAGxC,GAAKP,EAAS6B,GACd,CAGE,IAAK,GAFD8N,MAEK/O,EAAI,EAAGA,EAAIiB,EAAQzB,OAAQQ,IACpC,CACE,GAAIkY,GAAOjX,EAAQjB,GACfmY,EAAQD,EAAKE,OAAQ,GACrBC,EAAaH,EAAKpB,QAAS,IAG/B,IAAoB,KAAfuB,EACL,CACE,GAAI5L,GAAYyL,EAAKlB,UAAW,EAAGqB,GAC/BC,EAAaJ,EAAKlB,UAAWqB,EAAa,EAExCtJ,GAAOxL,aAEXwL,EAAOxL,eAGTwL,EAAOxL,WAAYkJ,GAAc6L,MAG9B,IAAe,MAAVH,EAERI,GAAqBL,EAAKlB,UAAU,GAAIjI,EAAQhL,GAAS,SAAU,YAAa,mBAG7E,IAAe,MAAVoU,EAERI,GAAqBL,EAAKlB,UAAU,GAAIjI,EAAQtJ,GAAO,QAAS,WAAY,kBAGzE,IAAe,MAAV0S,EAERI,GAAqBL,EAAKlB,UAAU,GAAIjI,EAAQtJ,GAAO,QAAS,WAAY,kBAGzE,IAAe,MAAV0S,EAERI,GAAqBL,EAAKlB,UAAU,GAAIjI,EAAQzJ,GAAS,QAAS,WAAY,kBAG3E,IAAe,MAAV6S,EAERI,GAAqBL,EAAKlB,UAAU,GAAIjI,EAAQtJ,GAAO,SAAU,YAAa,mBAGhF,CAEE,GAAIzC,GAASY,GAASsU,GAAM,EAEvBlV,MAAW,IAEd+L,EAAO/L,OAASA,EAIlB,IAAID,GAAWwV,GAAqBL,EAAMnJ,EAAQtJ,GAAO,WAAY,cAAe,gBAE/E1C,MAAa,GAGhBwV,GAAqBL,EAAMnJ,EAAQhL,GAAS,SAAU,YAAa,gBAUzE,MALK5E,GAAU4Y,IAAmBzC,IAEhC2C,GAASF,GAAkBhJ,GAGtBA,EAGT,MAAKzP,GAAU2B,GAENA,EAGFuN,GAASC,UAGlB,QAAS8J,IAAoBvX,EAAOb,EAAKqY,EAAerO,EAAUsO,EAAaC,GAE7E,GAAIP,GAAQnX,EAAMoX,OAAQ,EAE1B,IAAe,MAAVD,EAEHpJ,EAASzJ,GAAStE,EAAMgW,UAAW,IAAK,GAEnCjI,KAAW,IAEd5O,EAAKuY,GAAkB3J,OAI3B,EACiB,MAAVoJ,GAA2B,MAAVA,KAEpBhO,EAAWsO,EACXzX,EAAQA,EAAMgW,UAAW,GAG3B,IAAIjI,GAASyJ,EAAexX,GAAO,EAE9B+N,MAAW,IAEd5O,EAAKgK,GAAa4E,GAItB,MAAOA,GAgBT,QAAS4J,IAAMC,GAEb,GAAKA,YAAqB7T,GAExB,MAAO6T,EAET,IAAKzZ,EAAUyZ,IAAeA,IAAaC,IAEzC,MAAOA,IAAOD,EAEhB,IAAKtZ,EAAUsZ,IAAeA,EAAUE,OAAQD,IAE9C,MAAOA,IAAOD,EAAUE,MAAQF,EAGlC,MAAMA,GAAY,uBAoFpB,QAAS5U,IAAOX,GAEd,MAAOiC,IAASjC,EAAOmL,GAASnL,OAelC,QAASS,IAAO6Q,GAEd,MAAOlP,IAAOkP,EAAMnG,GAAStL,OAa/B,QAAS6V,IAAQC,GAEf,GAAKA,YAAuBnT,GAE1B,MAAOmT,EAET,IAAK7Z,EAAU6Z,IAAiBA,IAAeC,IAE7C,MAAOA,IAASD,EAElB,IAAK1Z,EAAU0Z,IAAiBA,EAAYF,OAAQG,IAElD,MAAOA,IAASD,EAAYF,MAAQE,EAGtC,MAAMA,GAAc,yBAyGtB,QAASE,IAAYC,EAAYvL,GAM/B,GAAImK,GAAgBoB,CAEpB,IAAKha,EAAUga,GACf,CACE,GAAKA,IAAcC,IAEjB,MAAOA,IAAaD,EAGtBA,GAAaA,EAAWnL,cAAcrO,MAAM,OAG9C,GAAKP,EAAS+Z,GACd,CACE,GAAIE,GAAkBF,CAEtBA,KAEA,KAAK,GAAInZ,GAAI,EAAGA,EAAIqZ,EAAgB7Z,OAAQQ,IAC5C,CACE,GAAIkY,GAAOmB,EAAgBrZ,GACvBmY,EAAQD,EAAKE,OAAQ,EAGzB,IAAe,MAAVD,EACL,CACE,GAAImB,GAAQ7T,GAAOyS,EAAKlB,UAAU,IAAI,EAEhCc,OAAOwB,KAEXH,EAAWG,MAAQA,OAIlB,IAAe,MAAVnB,EACV,CACE,GAAIoB,GAAQ9T,GAAOyS,EAAKlB,UAAU,IAAI,EAEhCc,OAAOyB,KAEXJ,EAAWI,MAAQA,OAIlB,IAAe,MAAVpB,EACV,CACE,GAAItG,GAAcvM,GAAS4S,EAAKlB,UAAU,IAAI,EAEzCnF,MAAgB,IAEnBsH,EAAWtH,YAAcA,OAIxB,IAAe,MAAVsG,EACV,CACE,GAAIqB,GAAS/T,GAAOyS,EAAKlB,UAAU,IAAI,EAElCwC,MAAW,IAEdL,EAAWK,OAASA,OAIxB,CAEE,GAAIxW,GAASY,GAASsU,GAAM,EAEvBlV,MAAW,IAEdmW,EAAWnW,OAASA,EAItB,IAAI2R,GAAOlP,GAAOyS,GAAM,EAEnBvD,MAAS,IAEZwE,EAAWxE,KAAOA,KAM1B,MAAKrV,GAAU6Z,IAEbA,EAAWxE,KAAclP,GAAO0T,EAAWxE,KAAMnG,GAASiL,gBAC1DN,EAAWI,MAAc9T,GAAO0T,EAAWI,MAAO/K,GAASkL,iBAC3DP,EAAWG,MAAc7T,GAAO0T,EAAWG,MAAO9K,GAASmL,iBAC3DR,EAAWnW,OAAcY,GAAStD,EAAU6Y,EAAWnW,OAAQwL,GAASoL,mBACxET,EAAWtH,YAAcvM,GAAS6T,EAAWtH,YAAarD,GAASqL,uBACnEV,EAAWK,OAAc/T,GAAO0T,EAAWK,OAAQhL,GAASsL,kBAEvD3a,EAAU4Y,IAAmBzX,EAAUsN,EAAOY,GAASuL,oBAE1DX,GAAarB,GAAkBoB,GAG1BA,GAGF3K,GAASwL,aAnjelB,GAAIpQ,KAEFqQ,YAAa,IAEb/Z,OAAQ,SAASga,EAAWC,EAAmBC,GAE7C,QAASC,MAETA,EAAEC,UAAYH,EAAkBG,UAEhCJ,EAAUI,UAAY,GAAID,GAErB/a,EAAU8a,IAEb3b,KAAKT,OAAQkc,EAAWE,IAI5Bpc,OAAQ,SAASkc,EAAWE,GAE1B,GAAIzQ,GAASuQ,EAAUI,SAEvB,KAAK,GAAI7a,KAAQ2a,GAEV3a,IAAQkK,IAEXlL,KAAKoL,eAAgBF,EAAQlL,KAAKwb,YAAcxa,EAAMkK,EAAQlK,IAGhEhB,KAAKoL,eAAgBF,EAAQlK,EAAM2a,EAAY3a,KAInDoK,eAAgB,SAASF,EAAQQ,EAAUtF,GAEpC0V,OAAO1Q,eAEV0Q,OAAO1Q,eAAgBF,EAAQQ,GAC7BqQ,YAAY,EACZC,cAAc,EACdC,UAAU,EACV7V,MAAOA,IAKT8E,EAAQQ,GAAatF,IAYvB2J,IAUFzL,SAAU,IASVC,OAAQ,OAUR2X,QAAS,SAST1X,MAAO,EASPC,MAAO,EASPE,OAAQ,EAURC,MAAO,EASPF,OAAQ,EASRsW,eAAgB,IAShBC,gBAAiB,IASjBC,gBAAiB,IASjBC,iBAAkB,SAalBC,sBAAuB,EASvBC,iBAAkB,GAalBlM,OAAO,EAYPoK,cAAc,EAYd+B,kBAAkB,EASlBtL,aASAuL,gBAUAY,UAAW,GAUXC,UAAW,EAUXC,4BAA6B,IAE7BC,iBAAkB,EAElBC,cAAepc,EAAG,EAAGqc,EAAG,GAExBC,cAAetc,EAAG,EAAGqc,EAAG,EAAGE,EAAG,GAE9BC,sBAAuBxc,EAAG,EAAGqc,EAAG,EAAGE,EAAG,EAAGE,MAAO,GAEhDC,eAAgBvT,EAAG,EAAGC,EAAG,EAAGxH,EAAG,GAE/B+a,gBAAiBxT,EAAG,EAAGC,EAAG,EAAGxH,EAAG,EAAGD,EAAG,GAEtCib,iBAAkB,IAIhB3S,IASFC,KAAM,OAQNE,QAAS,UAQTE,MAAO,QAQPE,KAAM,QA0JJlC,GAAM,WAER,MAAOuU,MAAKvU,IAAMuU,KAAKvU,IAAM,WAE3B,OAAO,GAAIuU,OAAOC,cAqBlB9F,GAAO,WAET,MAAI+F,QAAOrB,UAAU1E,KACZ,SAAShX,GACd,MAAOA,GAAEgX,QAGN,SAAShX,GACd,MAAOA,GAAEgd,QAAQ,qBAAsB,QAwOvCC,GAAK,WAEP,GAAIC,GAAM,CACV,OAAO,YACL,QAASA,KAmDblS,IAAM5L,OAAQ8C,GASZkO,eAAgB,WAEd,MAAOvQ,MAAKyC,YAAYsV,SAY1BxB,MAAO,SAAS/T,EAAS8a,GAEvB,GAAI7G,GAAS,GAAItT,GAAenD,KAAKuC,MAAOvC,KAAKwC,QAASA,EAE1D,KAAK,GAAIkU,KAAe1W,MAAKuC,MAC7B,CACE,GAAIyC,GAAU2R,GAAUD,EAEnB1R,MAAY,GAASA,EAAQuR,OAEhCvR,EAAQuR,MAAOvW,KAAKuC,MAAOC,EAASxC,KAAKwC,QAAS8a,EAAe7G,GAIrE,MAAO6G,MA+EXnS,GAAM5L,OAAQmD,GAWZE,MAAO,SAASyE,GAoFd,MA7EArH,MAAKqH,QAAUA,EAOfrH,KAAKyC,YAAc,GAAIQ,GASvBjD,KAAKud,oBAOLvd,KAAK6K,SAOL7K,KAAKwd,WAOLxd,KAAKiH,UAAW,EAOhBjH,KAAKV,QAAU,KAOfU,KAAKmI,QAAS,EAQdnI,KAAKyd,aAAe,EAQpBzd,KAAK0d,UAAY,EAQjB1d,KAAK2d,WAAa,EAEX3d,MAYT4d,SAAU,SAASnb,GAajB,MAXAzC,MAAK0d,YAEAjb,YAAuBQ,GAE1BjD,KAAK0d,UAAYjb,EAAYob,WAAY7d,KAAK0d,WAEtCjb,YAAuBO,KAE/BP,EAAYqb,MAAQ9d,KAAK0d,WAGpB1d,MAWT+d,kBAAmB,WAKjB,IAAK,GAHDD,GAAQ9d,KAAKyd,aACbhb,EAAczC,KAAKyC,YAAYub,OAE1Bzc,EAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAC7C,CACE,GAAIwI,GAAatH,EAAalB,GAC1B0c,EAAOlU,EAAW3F,SAEjB2F,GAAW+T,QAAUA,IAExB9d,KAAKwd,QAASS,GAAUlU,EAAWmU,WAAYle,KAAK6K,UAAY,GAAU7K,KAAKwd,QAASS,IAI5F,MAAOje,OAUTme,gBAAiB,WAEVne,KAAKyd,aAAezd,KAAK2d,aAE5B3d,KAAK2d,WAAa3d,KAAKyd,aACvBzd,KAAKqI,QAAS,YAAcrI,KAAKyd,aAAczd,KAAKyd,gBAWxDlP,aAAc,SAAS0P,GAErB,MAAOje,MAAKV,QAAQ8E,UAAW6Z,IAUjCG,QAAS,WAEP,MAAOpe,OASTqe,kBAAmB,WAEjB,GAAI7V,GAAcC,IAMlB,OAJAzI,MAAK0I,UAAWF,GAChBxI,KAAK2I,OAAQH,GACbxI,KAAKO,QAEEP,MAYT0I,UAAW,SAASD,GAMlB,GAAI6V,GAAKte,KAAKud,gBACd,IAAKe,EAAGvd,OACR,CACE,IAAK,GAAIQ,GAAI,EAAGA,EAAI+c,EAAGvd,OAAQQ,IAC/B,CACE,GAAIwI,GAAauU,EAAI/c,GACjB0c,EAAOlU,EAAW3F,SAEjB6Z,KAAQje,MAAKqH,QAEhBrH,KAAK6K,MAAOoT,GAASje,KAAKqH,QAAS4W,GAInCje,KAAKue,WAAYN,GAGnBlU,EAAW8J,MAAOpL,EAAKzI,MAGzBse,EAAGvd,OAAS,EAKd,MAFAf,MAAKqI,QAAQ,aAENrI,MAWTue,WAAY,SAASN,GAEZA,IAAQje,MAAK6K,QAElB7K,KAAK6K,MAAOoT,GAASje,KAAKuO,aAAc0P,GAAOO,iBAWnD7V,OAAQ,SAASF,GAEfzI,KAAKye,YAAcze,KAAKiH,SACxBjH,KAAKiH,UAAW,CAKhB,KAAK,GAHDxE,GAAczC,KAAKyC,YAAYub,OAC/BU,EAAW1e,KAAK0d,UAEXnc,EAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAC7C,CACE,GAAIwI,GAAatH,EAAalB,GAC1B0c,EAAOlU,EAAW3F,SAEtBpE,MAAKwd,QAASS,GAASlU,EAAW4U,QAASlW,EAAKzI,KAAK6K,OAErD7K,KAAKiH,SAAWjH,KAAKiH,UAAY8C,EAAW6U,aAE5CF,EAAW1G,KAAK3K,IAAKqR,EAAU3U,EAAW+T,OAG5C,GAAK9d,KAAKyd,aAAeiB,EACzB,CACE,KAAQ1e,KAAKyd,aAAeiB,GAE1B1e,KAAKme,kBACLne,KAAKyd,cAGPzd,MAAKyd,aAAeiB,EACpB1e,KAAK+d,oBACL/d,KAAKqI,QAAS,cAAgBrI,KAAKyd,aAAczd,KAAKyd,cAUxD,OAPMzd,KAAKye,aAAeze,KAAKiH,UAE7BjH,KAAKme,kBAGPne,KAAKqI,QAAQ,UAENrI,MAaT6e,gBAAiB,SAAS9U,GAExB,GAAIkU,GAAOlU,EAAW3F,UAClB0a,EAAW9e,KAAKyC,YAAYiO,IAAKuN,EAOrC,OALAje,MAAKyC,YAAYyD,IAAK+X,EAAMlU,GAC5B/J,KAAKud,iBAAiBnc,KAAM2I,GAE5B/J,KAAKiH,UAAW,EAET6X,GAUTve,MAAO,WAEL,IAAK,GAAI0d,KAAQje,MAAK6K,MAEf7K,KAAKwd,QAASS,KAEjBje,KAAKqH,QAAS4W,GAASje,KAAK6K,MAAOoT,GACnCje,KAAKwd,QAASS,IAAS,EAQ3B,OAJAje,MAAKqI,QAAQ,SAEbrI,KAAK+e,kBAEE/e,MAYT+e,gBAAiB,WAIf,IAAK,GAFDtc,GAAczC,KAAKyC,YAAYub,OAE1Bzc,EAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAC7C,CACE,GAAIwI,GAAatH,EAAalB,EAEzBwI,GAAW6U,eAET7U,EAAW9E,KAEdjF,KAAK6e,gBAAiB9U,EAAW9E,MAIjCjF,KAAKyC,YAAYuc,SAAUzd,IAUjC,OALMvB,KAAKye,aAAeze,KAAKiH,UAE7BjH,KAAKqI,QAAS,WAAYrI,MAGrBA,MAWToG,MAAO,SAAS6X,GAEd,MAAOje,MAAK6K,MAAOoT,IAUrB/V,SAAU,WAIR,MAFAF,GAAkBhI,MAEXA,MAUTif,WAAY,WAIV,MAFAjf,MAAKqI,QAAQ,aAAcrI,MAEpBA,MAWTkf,QAAS,WAQP,MANAlf,MAAKiH,UAAW,EAEhBjH,KAAKV,QAAQ4f,QAASlf,MAEtBA,KAAKqI,QAAQ,aAENrI,MAYTmf,OAAQ,SAASA,GAEf,GAAIA,GAAS7E,GAAS6E,EAEtB,OAAKA,MAAW,GAEP,GAGTnf,KAAK4d,SAAUuB,GACfnf,KAAK6e,gBAAiBM,GAEtBnf,KAAKkI,WAEEiX,IAmBTC,KAAM,SAASpQ,EAAWxM,EAAS6c,EAAKlQ,GAEtC,GAAImO,GAAgB9G,GAAiBxH,EAAWxM,EAAS2M,EAAOnP,KAKhE,OAHAA,MAAK4d,SAAUN,GACftd,KAAKsf,gBAAiBhC,EAAe+B,GAE9Brf,KAAKkI,YAgBdoX,gBAAiB,SAAShC,EAAe+B,GAElCA,GAEHrf,KAAKyC,YAAY8c,iBAAkBjC,EAAe,EAKpD,KAAK,GAFD7a,GAAc6a,EAAcU,OAEvBzc,EAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAE3CvB,KAAK6e,gBAAiBpc,EAAYlB,GAGpC,OAAOvB,OAoBTwf,OAAQ,SAASxQ,EAAW0L,EAAYlY,EAAS6c,EAAKlQ,GAEpD,GAAIuL,GAAaD,GAAaC,GAC1B4C,EAAgB9G,GAAiBxH,EAAWxM,EAAS2M,EAAOnP,KAIhE,OAFAA,MAAKyf,kBAAmBnC,EAAe5C,EAAY2E,GAE5Crf,KAAKkI,YAiBduX,kBAAmB,SAASnC,EAAe5C,EAAY2E,GAMrD,IAAK,GAJDI,GAAoB,GAAIxc,GACxBR,EAAc6a,EAAcU,OAC5B0B,KAEKne,EAAI,EAAGA,EAAIkB,EAAY1B,OAAQQ,IACxC,CACE,GAAIwI,GAAatH,EAAalB,GAC1B0c,EAAOlU,EAAW3F,SAEjB2F,GAAWmU,WAAYwB,IAE1BD,EAAkBvZ,IAAK+X,EAAM,GAAI9X,GAAO8X,EAAMyB,EAAWzB,GAAQ,GAAG,IAOxE,MAHAje,MAAK4d,SAAU6B,GACfzf,KAAK2f,sBAAuBjF,EAAY+E,EAAmBJ,GAEpDrf,MAkBT4f,MAAO,SAAS5Q,EAAWxM,EAAS2M,GAElC,GAAImO,GAAgB9G,GAAiBxH,EAAWxM,EAAS2M,EAAOnP,KAKhE,OAHAA,MAAK4d,SAAUN,GACftd,KAAK6f,iBAAkBvC,GAEhBtd,KAAKkI,YAcd2X,iBAAkB,SAASvC,GAIzB,MAFAtd,MAAKyC,YAAYgV,SAAU6F,EAAe,EAAGtd,KAAK6e,gBAAiB7e,MAE5DA,MAoBT8f,OAAQ,SAAS9Q,EAAWxM,EAAS2M,GAEnC,GAAImO,GAAgB9G,GAAiBxH,EAAWxM,EAAS2M,EAAOnP,KAKhE,OAHAA,MAAK4d,SAAUN,GACftd,KAAK+f,kBAAmBzC,GAEjBtd,KAAKkI,YAiBd6X,kBAAmB,SAASzC,GAI1B,MAFAtd,MAAKyC,YAAYud,UAAW1C,EAAetd,KAAK6e,gBAAiB7e,MAE1DA,MA6BT0a,WAAY,SAASA,EAAY1L,EAAWxM,EAAS6c,EAAKlQ,GAExD,GAAIuL,GAAaD,GAAaC,GAC1B4C,EAAgB9G,GAAiBxH,EAAWxM,EAAS2M,EAAOnP,KAKhE,OAHAA,MAAK4d,SAAUN,GACftd,KAAK2f,sBAAuBjF,EAAY4C,EAAe+B,GAEhDrf,KAAKkI,YAyBdyX,sBAAuB,SAASjF,EAAY4C,EAAe+B,GAkBzD,MAhBKA,IAEHrf,KAAKyC,YAAY8c,iBAAkBjC,EAAe5C,EAAWxE,MAG/DlW,KAAKyC,YAAYwd,cACfvF,EACA4C,EACAtd,KAAKkgB,mBACLlgB,KAAKuO,aACLvO,KAAK6e,gBACL7e,KAAKmgB,qBACLngB,KAAKogB,yBACLpgB,MAGKA,MAGTkgB,mBAAoB,SAASjC,GAE3B,MAAOje,MAAK6K,MAAOoT,IAGrBkC,qBAAsB,SAASpW,EAAYsW,EAAc3e,GAEvD,MAAOqI,GAAWuW,QAASvW,EAAWwW,aAAeF,EAAc3e,IAGrE0e,yBAA0B,SAASrW,EAAYsW,GAE7CtW,EAAWyW,OAAQH,IAerBI,QAAS,SAASxC,EAAM/S,EAAQ1I,EAAS2M,GAEvC,GAAI3M,GAAYsN,GAAUtN,EAAS2M,GAC/B/K,EAAYpE,KAAKuO,aAAc0P,GAC/B/U,EAAY9E,EAAUqB,MAAOyF,GAC7B7G,EAAY,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYgE,EAASkX,QAASxX,GACrEjF,EAAYE,EAAMwc,YAAa1C,EAAM5Z,EAAM7B,EAK/C,OAHAxC,MAAK4d,SAAU3Z,GACfjE,KAAK6e,gBAAiB5a,GAEfjE,KAAKkI,YAcd0Y,YAAa,SAASC,EAASre,EAAS2M,GAEtC,GAAI3M,GAAUsN,GAAUtN,EAAS2M,EAEjCnP,MAAK4d,UAEL,KAAM,GAAIK,KAAQ4C,GAClB,CACE,GAAIzc,GAAYpE,KAAKuO,aAAc0P,GAC/B/U,EAAY9E,EAAUqB,MAAOob,EAAS5C,IACtC5Z,EAAY,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYgE,EAASkX,QAASxX,GACrEjF,EAAYE,EAAMwc,YAAa1C,EAAM5Z,EAAM7B,EAE/CyB,GAAM6Z,MAAQ9d,KAAK0d,UACnB1d,KAAK6e,gBAAiB5a,GAGxB,MAAOjE,MAAKkI,YAed4Y,UAAW,SAAS7C,EAAM8C,EAAUve,EAAS2M,GAE3C,GAAI3M,GAAYsN,GAAUtN,EAAS2M,GAC/B/K,EAAYpE,KAAKuO,aAAc0P,GAC/BpK,EAAYzP,EAAUqB,MAAOsb,GAC7B1c,EAAY,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYqO,EAAOrK,EAASkX,SACnEzc,EAAYE,EAAMwc,YAAa1C,EAAM5Z,EAAM7B,EAK/C,OAHAxC,MAAK4d,SAAU3Z,GACfjE,KAAK6e,gBAAiB5a,GAEfjE,KAAKkI,YAad8Y,cAAe,SAAStB,EAAWld,GAEjC,GAAIA,GAAUsN,GAAUtN,EAExBxC,MAAK4d,UAEL,KAAM,GAAIK,KAAQyB,GAClB,CACE,GAAItb,GAAYpE,KAAKuO,aAAc0P,GAC/BpK,EAAYzP,EAAUqB,MAAOia,EAAWzB,IACxC5Z,EAAY,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYqO,EAAOrK,EAASkX,SACnEzc,EAAYE,EAAMwc,YAAa1C,EAAM5Z,EAAM7B,EAE/CyB,GAAM6Z,MAAQ9d,KAAK0d,UACnB1d,KAAK6e,gBAAiB5a,GAGxB,MAAOjE,MAAKkI,YAgBd+Y,MAAO,SAAShD,EAAMiD,EAAQC,EAAM3e,EAAS2M,GAE3C,GAAI3M,GAAYsN,GAAUtN,EAAS2M,GAC/B/K,EAAYpE,KAAKuO,aAAc0P,GAC/BpK,EAAYzP,EAAUqB,MAAOyb,GAC7BhY,EAAY9E,EAAUqB,MAAO0b,GAC7B9c,EAAY,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYqO,EAAO3K,GAC1DjF,EAAYE,EAAMwc,YAAa1C,EAAM5Z,EAAM7B,EAK/C,OAHAxC,MAAK4d,SAAU3Z,GACfjE,KAAK6e,gBAAiB5a,GAEfjE,KAAKkI,YAedkZ,UAAW,SAASF,EAAQC,EAAM3e,EAAS2M,GAEzC,GAAI3M,GAAUsN,GAAUtN,EAAS2M,EAEjCnP,MAAK4d,UAEL,KAAM,GAAIK,KAAQiD,GAClB,CACE,GAAI9c,GAAYpE,KAAKuO,aAAc0P,GAC/BpK,EAAYzP,EAAUqB,MAAOyb,EAAQjD,IACrC/U,EAAY9E,EAAUqB,MAAO0b,EAAMlD,IACnC5Z,EAAY,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYqO,EAAO3K,GAC1DjF,EAAYE,EAAMwc,YAAa1C,EAAM5Z,EAAM7B,EAE/CyB,GAAM6Z,MAAQ9d,KAAK0d,UACnB1d,KAAK6e,gBAAiB5a,GAGxB,MAAOjE,MAAKkI,YAedmZ,KAAM,SAASpD,EAAMqD,EAAQ9e,EAAS2M,GAEpC,GAAI3M,GAAYsN,GAAUtN,EAAS2M,GAC/B/K,EAAYpE,KAAKuO,aAAc0P,GAC/BsD,EAAYnd,EAAUqB,MAAO6b,GAC7BzN,EAAYrK,EAASkX,QACrBxX,EAAYW,EAAY0X,GAAaA,EAAW/X,EAAS+X,SAAUA,GACnEld,EAAY,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYqO,EAAO3K,GAC1DjF,EAAYE,EAAMwc,YAAa1C,EAAM5Z,EAAM7B,EAK/C,OAHAxC,MAAK4d,SAAU3Z,GACfjE,KAAK6e,gBAAiB5a,GAEfjE,KAAKkI,YAcdsZ,SAAU,SAASC,EAASjf,EAAS2M,GAEnC,GAAI3M,GAAUsN,GAAUtN,EAAS2M,EAEjCnP,MAAK4d,UAEL,KAAM,GAAIK,KAAQwD,GAClB,CACE,GAAIrd,GAAYpE,KAAKuO,aAAc0P,GAC/BsD,EAAYnd,EAAUqB,MAAOgc,EAASxD,IACtCpK,EAAYrK,EAASkX,QACrBxX,EAAYW,EAAY0X,GAAaA,EAAW/X,EAAS+X,SAAUA,GACnEld,EAAY,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYqO,EAAO3K,GAC1DjF,EAAYE,EAAMwc,YAAa1C,EAAM5Z,EAAM7B,EAE/CyB,GAAM6Z,MAAQ9d,KAAK0d,UACnB1d,KAAK6e,gBAAiB5a,GAGxB,MAAOjE,MAAKkI,YAYdwZ,IAAK,SAASzD,GAEZ,GAAIna,GAAW9D,KACXoE,EAAYpE,KAAKuO,aAAc0P,GAC/B0D,IAEJ,OAAO,YAEL,GAAK1D,IAAQna,GAAS+G,MAEpB,MAAO/G,GAAS+G,MAAOoT,EAGzB0D,GAAS1D,IAAS,CAElB,IAAIyC,GAAU5c,EAAS4M,IAAKiR,EAE5B,OAAKzhB,GAAWwgB,EAASzC,IAEhByC,EAASzC,GAGX7Z,EAAUkK,eAgBrBsT,OAAQ,SAAS3D,EAAM5Z,EAAM7B,EAAS2M,GAEpC,GAAI3M,GAAUsN,GAAUtN,EAAS2M,GAC7B9K,EAAU6V,GAAO7V,GACjBJ,EAAUE,EAAMwc,YAAa1C,EAAM5Z,EAAM7B,EAK7C,OAHAxC,MAAK4d,SAAU3Z,GACfjE,KAAK6e,gBAAiB5a,GAEfjE,KAAKkI,YAcd2Z,eAAgB,SAAS9Y,EAAY6C,GAOnC,IAAK,GALD0R,GAAgBtd,KAAKyC,YACrBsG,EAAa9H,EAASY,EAAUkH,EAAYuU,EAAcwE,MAAQ,KAClEC,GAAa3hB,EAAYwL,GACzBpB,KAEKjJ,EAAIwH,EAAWhI,OAAS,EAAGQ,GAAK,EAAGA,IAC5C,CACE,GAAI0c,GAAOlV,EAAYxH,GACnBwI,EAAauT,EAAc5M,IAAKuN,EAE/BlU,KAEEgY,EAEHvX,EAAQpJ,KAAM2I,GAId6B,EAAStL,KAAMN,KAAM+J,EAAYkU,IAKvC,MAAO8D,GAAYvX,EAAUxK,MAY/BiJ,KAAM,SAASF,GAEb,MAAO/I,MAAK6hB,eAAgB9Y,EAAY,SAASgB,EAAYkU,GAE3Dje,KAAKyC,YAAYuf,OAAQ/D,MAe7B/U,IAAK,SAASH,GAEZ,MAAO/I,MAAK6hB,eAAgB9Y,EAAY,SAASgB,GAE/C,KAAOA,EAAW9E,MAEhB8E,EAAaA,EAAW9E,IAG1B8E,GAAWZ,OAAQnJ,KAAK6K,UAa5B1B,OAAQ,SAASJ,GAEf,MAAO/I,MAAK6hB,eAAgB9Y,EAAY,SAASgB,GAE/CA,EAAWZ,OAAQnJ,KAAK6K,UAe5BzB,OAAQ,SAASL,GAEf,MAAO/I,MAAK6hB,eAAgB9Y,EAAY,SAASgB,GAE/CA,EAAWX,YAafN,MAAO,SAASC,GAEd,MAAO/I,MAAK6hB,eAAgB9Y,EAAY,SAASgB,GAE/CA,EAAWjB,WAafE,OAAQ,SAASD,GAEf,MAAO/I,MAAK6hB,eAAgB9Y,EAAY,SAASgB,GAE/CA,EAAWf,YAWfuJ,IAAK,SAASxJ,GAEZ,IAAK,GAAIkV,KAAQlV,GAEf/I,KAAK6K,MAAOoT,GAASlV,EAAYkV,GACjCje,KAAKwd,QAASS,IAAS,CAKzB,OAFAje,MAAKO,QAEEP,MAYTiiB,MAAO,SAASlZ,GAId,IAAK,GAFDA,GAAa9H,EAASY,EAAUkH,EAAY/I,KAAK6K,OAAS,KAErDtJ,EAAIwH,EAAWhI,OAAS,EAAGQ,GAAK,EAAGA,IAC5C,CACE,GAAI0c,GAAOlV,EAAYxH,EAEvBvB,MAAKyC,YAAYuf,OAAQ/D,SAElBje,MAAK6K,MAAOoT,GAGrB,MAAOje,OAWT0Q,IAAK,SAAS3H,GAEZ,GAAIrH,KAEJ,KAAK,GAAIuc,KAAQlV,GAEfrH,EAAKuc,GAASje,KAAK6K,MAAOoT,EAG5B,OAAOvc,IAWTwgB,cAAe,WAEb,MAAOliB,MAAKyC,YAAYyf,iBAS1BC,eAAgB,WAEd,MAAOniB,MAAKyC,YAAY2f,OAAS,GAWnCC,WAAY,SAASC,GAEnB,GAAIjb,GAAUrH,KAAKqH,OAOnB,OALKjH,GAAYkiB,KAEfjb,EAAUib,EAASjb,IAGdA,GAcTkb,OAAQ,SAAS7Y,EAAMmC,EAAS2W,GAO9B,MALKpiB,GAAYsJ,IAEfA,EAAKnJ,MAAOsL,GAAW7L,KAAMwiB,OAGxBxiB,MAcTyiB,MAAO,SAASze,EAAWC,EAAO2H,GAEhC,MAAO,IAAI/H,GAAe7D,KAAMA,KAAMgE,EAAWC,EAAO2H,IAY1D8W,aAAc,SAAS9W,EAAUC,GAI/B,MAFA7L,MAAKsL,KAAM,cAAgBtL,KAAK0d,UAAW9R,EAAUC,GAE9C7L,MAYT2iB,WAAY,SAAS/W,EAAUC,GAI7B,MAFA7L,MAAKsL,KAAM,YAActL,KAAK0d,UAAW9R,EAAUC,GAE5C7L,QAQXiL,GAAUvI,EAASmZ,WAwBnB1Q,GAAM5L,OAAQsD,GASZzB,KAAM,SAAS0C,GAIb,MAFA9D,MAAK8C,EAAE1B,KAAM0C,GAEN9D,MAQTe,OAAQ,WAEN,MAAOf,MAAK8C,EAAE/B,QAShB6hB,GAAI,SAASC,GAEX,MAAO7iB,MAAK8C,EAAG+f,IAWjBC,KAAM,SAASC,EAAUlX,GAIvB,IAAK,GAFDvB,GAAQtK,KAAK8C,EAERvB,EAAI,EAAGA,EAAI+I,EAAMvJ,QAEnBgiB,EAASziB,KAAMuL,GAAWvB,EAAM/I,GAAI+I,EAAM/I,GAAIA,MAAQ,EAF3BA,KAQlC,MAAOvB,OAUT+C,KAAM,SAASoE,GAEb,IAAK,GAAI5F,GAAI,EAAGA,EAAI4F,EAAUpG,OAAQQ,IAEpCvB,KAAKoB,KAAM+F,EAAU5F,GAGvB,OAAOvB,OAWT4I,OAAQ,SAASoa,GAKf,IAAK,GAHD1Y,GAAQtK,KAAK8C,EACbmgB,EAAQ,EAEH1hB,EAAI,EAAGA,EAAI+I,EAAMvJ,OAAQQ,IAClC,CACE,GAAIygB,GAASgB,EAAU1Y,EAAM/I,GAEvBygB,KAEJ1X,EAAM2Y,KAAW3Y,EAAM/I,IAM3B,MAFA+I,GAAMvJ,OAASkiB,EAERjjB,MAWTkjB,YAAa,SAASZ,GAKpB,IAAK,GAHDhY,GAAQtK,KAAK8C,EACb0E,KAEKjG,EAAI,EAAGA,EAAI+I,EAAMvJ,OAAQQ,IAEhCiG,EAASpG,KAAMkJ,EAAM/I,GAAG8F,QAQ1B,OALKjH,GAAYkiB,KAEf9a,EAAW8a,EAAS9a,IAGfA,GASTkS,MAAO,WAEL,MAAO1Z,MAAK8C,EAAE,IAShBqgB,QAAS,WAMP,IAAK,GAJD7Y,GAAQtK,KAAK8C,EACbsgB,EAAO9Y,EAAMvJ,OAAS,EACtBsiB,EAAMrL,KAAKsL,MAAOhZ,EAAMvJ,OAAS,GAE5BQ,EAAI,EAAO8hB,EAAJ9hB,EAASA,IACzB,CACE,GAAIgiB,GAAKjZ,EAAO/I,GACZiiB,EAAKlZ,EAAO8Y,EAAO7hB,EAEvB+I,GAAO/I,GAAMiiB,EACblZ,EAAO8Y,EAAO7hB,GAAMgiB,EAGtB,MAAOvjB,OASTkI,SAAU,WAIR,IAAK,GAFDoC,GAAQtK,KAAK8C,EAERvB,EAAI,EAAGA,EAAI+I,EAAMvJ,OAAQQ,IAEhC0G,EAAcqC,EAAM/I,GAKtB,OAFA2G,KAEOlI,MAWTyjB,SAAU,SAASjf,EAAOD,GAExB,MAAO,IAAI2C,GAAUlH,KAAMwE,EAAOD,IAWpC2d,cAAe,WAKb,IAAK,GAHD5X,GAAQtK,KAAK8C,EACb4gB,EAAe,EAEVniB,EAAI,EAAGA,EAAI+I,EAAMvJ,OAAQQ,IAEhCmiB,EAAe1L,KAAKxL,IAAKkX,EAAcpZ,EAAO/I,GAAI2gB,gBAGpD,OAAOwB,IAUThb,UAAW,SAASD,EAAK+D,GAKvB,IAAK,GAHDlC,GAAQtK,KAAK8C,EACb/B,EAASyL,GAAOlC,EAAMvJ,OAEjBQ,EAAI,EAAOR,EAAJQ,EAAYA,IAE1B+I,EAAO/I,GAAImH,UAAWD,EAGxB,OAAOzI,OAUT2I,OAAQ,SAASF,EAAK+D,GAKpB,IAAK,GAHDlC,GAAQtK,KAAK8C,EACb/B,EAASyL,GAAOlC,EAAMvJ,OAEjBQ,EAAI,EAAOR,EAAJQ,EAAYA,IAE1B+I,EAAO/I,GAAIoH,OAAQF,EAGrB,OAAOzI,OAUTO,MAAO,SAASiM,GAKd,IAAK,GAHDlC,GAAQtK,KAAK8C,EACb/B,EAASyL,GAAOlC,EAAMvJ,OAEjBQ,EAAI,EAAOR,EAAJQ,EAAYA,IAE1B+I,EAAO/I,GAAIhB,OAGb,OAAOP,OAWT6I,eAAgB,SAAS/E,GAQvB,MANKA,GAASmD,WAEZnD,EAASmb,aACTnb,EAASqE,QAAS,GAGbrE,EAASmD,UAUlBmX,QAAwBnU,GAAU,UAAWG,GAAcC,MAS3DwU,gBAAwB5U,GAAU,kBAAmBG,GAAcC,MASnEgU,kBAAwBpU,GAAU,oBAAqBG,GAAcC,MASrE0U,gBAAwB9U,GAAU,kBAAmBG,GAAcC,MASnE4U,WAAwBhV,GAAU,aAAcG,GAAcC,MAS9D6U,QAAwBjV,GAAU,UAAWG,GAAcC,MAS3D8U,OAAwBlV,GAAU,SAAUG,GAAcG,SAS1D6U,KAAwBnV,GAAU,OAAQG,GAAcC,MASxDmV,OAAwBvV,GAAU,SAAUG,GAAcC,MAU1DiV,gBAAwBrV,GAAU,kBAAmBG,GAAcC,MASnEuV,MAAwB3V,GAAU,QAASG,GAAcC,MAUzDwV,iBAAwB5V,GAAU,mBAAoBG,GAAcC,MASpEyV,OAAwB7V,GAAU,SAAUG,GAAcC,MAU1D0V,kBAAwB9V,GAAU,oBAAqBG,GAAcC,MASrEqQ,WAAwBzQ,GAAU,aAAcG,GAAcC,MAU9DsV,sBAAwB1V,GAAU,wBAAyBG,GAAcC,MASzE4W,MAAwBhX,GAAU,QAASG,GAAcC,MASzDoW,QAAwBxW,GAAU,UAAWG,GAAcC,MAS3DyW,UAAwB7W,GAAU,YAAaG,GAAcC,MAS7D+W,UAAwBnX,GAAU,YAAaG,GAAcC,MAS7DuW,YAAwB3W,GAAU,cAAeG,GAAcC,MAS/D2W,cAAwB/W,GAAU,gBAAiBG,GAAcC,MASjEgX,KAAwBpX,GAAU,OAAQG,GAAcC,MASxDmX,SAAwBvX,GAAU,WAAYG,GAAcC,MAS5DuX,OAAwB3X,GAAU,SAAUG,GAAcC,MAS1DwX,eAAwB5X,GAAU,iBAAkBG,GAAcG,SASlEtB,KAAwBgB,GAAU,OAAQG,GAAcC,MASxDnB,IAAwBe,GAAU,MAAOG,GAAcC,MASvDlB,OAAwBc,GAAU,SAAUG,GAAcC,MAS1DjB,OAAwBa,GAAU,SAAUG,GAAcC,MAS1DvB,MAAwBmB,GAAU,QAASG,GAAcC,MASzDrB,OAAwBiB,GAAU,SAAUG,GAAcC,MAS1DkI,IAAwBtI,GAAU,MAAOG,GAAcC,MASvD4X,MAAwBhY,GAAU,QAASG,GAAcC,MASzDqG,IAAwBzG,GAAU,MAAOG,GAAcK,OASvD0X,eAAwBlY,GAAU,iBAAkBG,GAAcO,MASlE4X,OAAwBtY,GAAU,SAAUG,GAAcC,MAS1DqY,aAAwBzY,GAAU,eAAgBG,GAAcC,MAShEsY,WAAwB1Y,GAAU,aAAcG,GAAcC,MAS9DgB,GAAwBpB,GAAU,KAAMG,GAAcC,MAStDiB,KAAwBrB,GAAU,OAAQG,GAAcC,MASxDkB,IAAwBtB,GAAU,MAAOG,GAAcC,MASvDhC,QAAwB4B,GAAU,UAAWG,GAAcC,QAgB7Dc,GAAM5L,OAAQyD,GAWZJ,MAAO,SAASwB,EAAWY,EAASC,GAOlCjF,KAAKoE,UAAYA,EAOjBpE,KAAKgF,QAAUA,EAOfhF,KAAKiF,KAAOA,EAOZjF,KAAK2jB,UAAY,EAOjB3jB,KAAKoc,UAAY,EAOjBpc,KAAK4jB,QAAU,EAOf5jB,KAAK4G,SAAWE,OAAOC,kBAOvB/G,KAAK6jB,QAAS,EAOd7jB,KAAK8d,MAAQ,EAOb9d,KAAKwE,MAAQ,EAObxE,KAAK0E,OAAS,GAWhBof,SAAU,SAASrb,GAEO,IAAnBzI,KAAK2jB,YAER3jB,KAAK2jB,UAAYlb,EAAMzI,KAAK0E,OAC5B1E,KAAK4jB,QAAU5jB,KAAK0E,OACpB1E,KAAKiH,UAAW,EAChBjH,KAAK+jB,iBAUTA,aAAc,SAAUC,GAGtB,GAAKhkB,KAAKiF,MAA2B,IAAnBjF,KAAK2jB,YAGhBK,IAEHhkB,KAAKiF,KAAK0e,UAAY,GAIK,IAAxB3jB,KAAKiF,KAAK0e,WACf,CACE,GAAIM,GAAYjkB,KAAKikB,WAGhBtL,UAAUsL,IAEbjkB,KAAKiF,KAAK6e,SAAU9jB,KAAK2jB,UAAYM,KAe7CpQ,MAAO,SAASpL,GAEdzI,KAAK8jB,SAAUrb,IAWjByV,WAAY,WAEV,OAAO,GAaTS,QAAS,SAASlW,EAAKoC,GAErB,GAAK7K,KAAK6jB,OAER,OAAO,CAGT,IAAIrG,IAAU,EACVoG,EAAUnb,EAAMzI,KAAK2jB,SAazB,OAXKC,GAAU5jB,KAAK4G,SAElB4W,EAAUxd,KAAKmJ,OAAQ0B,GAEf+Y,GAAW5jB,KAAKwE,QAExBgZ,EAAUxd,KAAK2I,OAAQib,EAAS/Y,IAGlC7K,KAAK4jB,QAAUA,EAERpG,GAYT7U,OAAQ,WAEN,KAAM,qCASR4X,WAAY,WAEV,MAAOvgB,MAAK4jB,SAUdpD,OAAQ,SAAS0D,GAIf,MAFAlkB,MAAK4G,SAAW5G,KAAKugB,aAAe2D,EAE7BlkB,MAWTmkB,OAAQ,SAASjO,GAEf,GAAI+N,GAAYjkB,KAAKikB,WAcrB,OAZK/N,GAAO+N,EAELjkB,KAAKiF,MAERjF,KAAKiF,KAAKkf,OAAQjO,EAAO+N,GAK3BjkB,KAAK4G,SAAWsP,EAGXlW,MASToJ,OAAQ,WAEN,MAAOpJ,OAYTsgB,QAAS,WAEP,OAAO,GAaT8D,cAAe,SAASlO,EAAMxU,GAE5B,GAAIuiB,GAAYjkB,KAAKikB,WAErB,OAAK/N,GAAO+N,EAEHjkB,KAAKiF,KAAOjF,KAAKiF,KAAKmf,cAAelO,EAAO+N,EAAWviB,IAAQ,EAGjE1B,KAAKsgB,QAASpK,EAAMxU,IAU7B2iB,aAAc,SAASnO,GAErB,GAAI+N,GAAYjkB,KAAKikB,WAErB,OAAK/N,GAAO+N,EAEHjkB,KAAKiF,KAAOjF,KAAKiF,KAAKof,aAAcnO,EAAO+N,GAAc,KAG3DjkB,MAUTikB,UAAW,WAET,MAAOjkB,MAAK4G,UAUdsb,cAAe,WAEb,MAAOliB,MAAKikB,YAAcjkB,KAAK4jB,SAAY5jB,KAAKiF,KAAOjF,KAAKiF,KAAKid,gBAAkB,IASrFnK,MAAO,WAEL,KAAM,2CAURuM,YAAa,WAEX,OAAO,GASTC,WAAY,WAEV,OAAQ5L,SAAU3Y,KAAK4G,WASzBkC,MAAO,WAQL,MANM9I,MAAK6jB,SAET7jB,KAAKoc,UAAY3T,KACjBzI,KAAK6jB,QAAS,GAGT7jB,MAUTgJ,OAAQ,WAEN,GAAKhJ,KAAK6jB,OACV,CAIE,IAHA,GAAIW,GAAkB/b,KAAQzI,KAAKoc,UAC/B5X,EAAQxE,KAEJwE,GAA6B,IAApBA,EAAMmf,WAErBnf,EAAMmf,WAAaa,EACnBhgB,EAAQA,EAAMS,IAGhBjF,MAAK6jB,QAAS,EAGhB,MAAO7jB,OASTykB,SAAU,WAER,MAAOzkB,MAAK6jB,QAWd1a,OAAQ,WAEN,OAAO,GASTyV,WAAY,WAEV,OAAO,GAST8F,WAAY,WAEV,MAAO1kB,MAAKgF,SAWd4a,MAAO,SAAS3a,GAYd,MAVKjF,MAAKiF,KAERjF,KAAKiF,KAAK2a,MAAO3a,IAIjBjF,KAAKiF,KAAOA,EACZjF,KAAK+jB,gBAGA/jB,MAMT2kB,OAAQ,SAAS1f,EAAMiR,GAErB,GAAI+N,GAAYjkB,KAAKikB,WAiBrB,OAfYA,GAAP/N,GAEHlW,KAAK4G,SAAWsP,EAChBlW,KAAKiF,KAAOA,GAEJjF,KAAKiF,KAEbjF,KAAKiF,KAAK0f,OAAQ1f,EAAMiR,EAAO+N,IAI/Bhf,EAAKT,OAAS0R,EAAO+N,EACrBjkB,KAAKiF,KAAOA,GAGPjF,MAYToO,WAAY,SAAStK,EAAUsC,EAAOkI,GAEpC,GAAIgC,GAAStQ,KAAKwF,WAAWC,MAAOW,EAAOkI,EAO3C,OALKzE,GAAYyG,KAEdA,EAASA,EAAQtQ,KAAM8D,IAGnBwM,KAkBXnF,GAAM1J,OAAQwB,EAAe8C,GAc3B6e,SAAU,SAASC,EAASC,EAAOC,GAIjC,IAAK,GAFD/G,GAAShe,KAAKge,OAETzc,EAAIyc,EAAOjd,OAAS,EAAGQ,GAAK,EAAGA,IACxC,CACE,GAAIwI,GAAaiU,EAAQzc,EAEzB,KAEQwI,EAAW8a,SAAWC,KAE1B/a,EAAW8a,QAAUA,GAGvB9a,EAAaA,EAAW9E,WAEhB8f,GAAQhb,KAWtBvF,MAAO,SAAS0R,GAId,IAAK,GAFDzT,GAAczC,KAAKge,OAEdzc,EAAI,EAAGA,EAAIkB,EAAY1B,OAAQQ,IAEtCkB,EAAalB,GAAIiD,OAAS0R,CAG5B,OAAOlW,OAaT4f,MAAO,SAAS7V,GAEd,GAAIkU,GAAOlU,EAAW3F,UAClBsc,EAAU1gB,KAAK0Q,IAAKuN,EAWxB,OATKyC,GAEHA,EAAQd,MAAO7V,GAIf/J,KAAKkG,IAAK+X,EAAMlU,GAGX2W,GAgBTjJ,SAAU,SAASzR,EAAKtB,EAAQsgB,EAAgBnZ,GAQ9C,IAAK,GAND6X,GAAe1jB,KAAKkiB,gBACpBzf,EAAcuD,EAAIgY,OAClBiH,EAAc7kB,EAAY4kB,GAC1BE,EAAYrjB,EAAU6C,EAAQ,GAC9BygB,EAAazB,EAAewB,EAEvB3jB,EAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAC7C,CACE,GAAIwI,GAAatH,EAAalB,GAC1B0c,EAAOlU,EAAW3F,UAClB0a,EAAW9e,KAAK0Q,IAAKuN,EAEpBa,IAEEA,EAASyF,aAEZzF,EAAS0B,OAAQzW,EAAWvF,MAAQ2gB,GAIpCpb,EAAWvF,OAAU2gB,EAAarG,EAASoD,gBAG7CpD,EAASc,MAAO7V,KAIhBA,EAAWvF,OAAS2gB,EAEpBnlB,KAAKkG,IAAK+X,EAAMlU,GAEXkb,GAEHD,EAAe1kB,KAAMuL,GAAW7L,KAAM+J,IAK5C,MAAO/J,OAcTggB,UAAW,SAASha,EAAKgf,EAAgBnZ,GAMvC,IAAK,GAJDpJ,GAAcuD,EAAIgY,OAClB1Z,EAAW0B,EAAIkc,gBACf+C,EAAc7kB,EAAY4kB,GAErBzjB,EAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAC7C,CACE,GAAIwI,GAAatH,EAAalB,GAC1B0c,EAAOlU,EAAW3F,UAClB0a,EAAW9e,KAAK0Q,IAAKuN,EAEzBje,MAAKkG,IAAK+X,EAAMlU,GAEX+U,IAEE/U,EAAWwa,aAEdxa,EAAWyW,OAAQlc,GAInBwa,EAASta,OAAUF,EAAWyF,EAAWmY,gBAG3CnY,EAAW6V,MAAOd,IAGfmG,GAEHD,EAAe1kB,KAAMuL,GAAW7L,KAAM+J,GAI1C,MAAO/J,OAWTolB,UAAW,SAASvC,GAElB,GAAInC,GAAU1gB,KAAKge,OAAQ6E,EAW3B,OATKnC,GAAQzb,KAEXjF,KAAKge,OAAQ6E,GAAUnC,EAAQzb,KAI/BjF,KAAKgf,SAAU6D,GAGV7iB,MAaTqlB,UAAW,SAAS/H,EAAe+B,EAAKnJ,GAEjCmJ,GAEHrf,KAAKslB,iBAAkBhI,EAAepH,EAKxC,KAAK,GAFDzT,GAAc6a,EAAcU,OAEvBzc,EAAI,EAAGA,EAAIkB,EAAY1B,OAAQQ,IAEtCvB,KAAKulB,iBAAkB9iB,EAAalB,GAAK2U,EAG3C,OAAOlW,OAGTulB,iBAAkB,SAASxb,EAAYmM,GAErC,GAAI+H,GAAOlU,EAAW3F,UAClB0a,EAAW9e,KAAK0Q,IAAKuN,EAEpBa,GAEHA,EAAS6F,OAAQ5a,EAAYmM,IAI7BnM,EAAWvF,OAAS0R,EAEpBlW,KAAKkG,IAAK+X,EAAMlU,KAIpBkW,cAAe,SAASvF,EAAY4C,EAAekI,EAAUjX,EAAcsQ,EAAiB4G,EAAYC,EAAgB7Z,GAoBtH,GAAIpJ,GAAc6a,EAAcU,MAEhC,IAAKhe,KAAK2lB,WAAYrI,GAEpB,IAAK,GAAI/b,GAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAC7C,CACE,GAAI0D,GAAOxC,EAAalB,GACpB0c,EAAOhZ,EAAKb,UACZwhB,EAAO5lB,KAAK0Q,IAAKuN,GACjB4H,EAAYL,EAASllB,KAAMuL,EAASoS,EAExC,IAAK2H,GAAQ1lB,EAAW2lB,GACxB,CACE,GAAIzhB,GAAYmK,EAAajO,KAAMuL,EAASoS,GACxCnP,EAAO1K,EAAUoB,WAEjBkO,EAAKzO,EAAKqb,QAAS,EAAGxR,EAAKgX,SAE/B,IAAKpS,KAAO,EACZ,CACE,GAAIsH,GAAiBN,EAAWxE,KAC5B1C,EAAK1E,EAAKiJ,MAAO8N,GACjBpS,EAAKiH,EAAWI,MAAQ2K,EAAWnlB,KAAMuL,EAAS+Z,EAAMlL,EAAWI,MAAOhM,EAAKgX,WAAa,EAC5FnS,EAAK+G,EAAWG,MAAQ5V,EAAKqb,QAAS5F,EAAWG,MAAO/L,EAAKgX,WAAa,EAC1EzhB,EAAO,IAIX,IAAKsP,KAAO,GAAS+G,EAAWG,MAAQ,GAAKH,EAAWK,OAAS,EACjE,CACE,GAAIgL,GAAgB9gB,EAAKqb,QAAS5F,EAAWK,OAAQjM,EAAKgX,UACtDE,EAAelX,EAAKmX,IAAKF,EAAerS,EAE5C,IAAKsS,KAAiB,EACtB,CACE,GAAIE,GAAuBpX,EAAKlK,MAAOohB,EAActL,EAAWG,MAAQH,EAAWK,QAC/EoL,EAAOrX,EAAKsX,IAAKF,EAAsBxS,EAE3CC,GAAKD,EACLA,EAAKyS,GA0BT,GAnBE9hB,EAFGoP,KAAO,GAASE,KAAO,EAEnB,GAAIgB,IAAOsJ,EAAMnP,EAAM0E,EAAIE,GAE1BD,KAAO,EAER,GAAIa,IAAe2J,EAAMnP,EAAM0E,EAAIE,EAAIC,GAEtCA,KAAO,EAER,GAAIW,IAAe2J,EAAMnP,EAAM0E,EAAIC,EAAIC,GAIvC,GAAIH,IAAW0K,EAAMnP,EAAM0E,EAAIC,EAAIC,EAAIC,GAO3C+G,EAAWtH,YAAc,GAAKsH,EAAWK,OAAS,EACvD,CACE,GAAIsL,GAAW5S,KAAO,EAAQ,EAAIiH,EAAWI,MACzCwL,EAAW7S,KAAO,EAAQD,EAAKC,EAC/B8S,EAAWd,EAAWnlB,KAAMuL,EAAS+Z,EAAMS,EAAU3L,EAAWK,OAAQjM,EAAKgX,UAE7EU,EAAW7S,KAAO,EAAQ,EAAI+G,EAAWG,MACzC4L,EAAW9S,KAAO,EAAQD,EAAKC,EAC/B+S,EAAWzhB,EAAKqb,QAASkG,EAAS9L,EAAWK,OAAQjM,EAAKgX,SAI9D,IAAKS,KAAY,GAASG,KAAW,EACrC,CAaE,IAAK,GAZDC,GAAe7X,EAAKmX,IAAKnX,EAAKiJ,MAAOwO,GAAWD,GAChDM,EAAe9X,EAAK/N,OAAQ4lB,GAAgBjM,EAAWK,OAEvD8L,EAAe/X,EAAKmX,IAAKnX,EAAKiJ,MAAO2O,GAAUD,GAC/CK,EAAehY,EAAK/N,OAAQ8lB,GAAenM,EAAWK,OAEtDgM,EAAW,GAAI1T,IAAc4K,EAAM5Z,EAAMqW,EAAWtH,aACpDf,EAAS0U,EAAS1U,OAClB2U,EAAY3U,EAAOtR,OAAS,EAC5BkmB,EAAgB,EAChBC,KAEKjb,EAAI,EAAO+a,EAAJ/a,EAAeA,IAE7Bib,EAAWjb,GAAMgb,EACjBA,GAAiBnY,EAAKgG,SAAUzC,EAAQpG,GAAKoG,EAAQpG,EAAI,GAI3D,IAFAib,EAAWF,GAAcC,GAEnB5N,MAAO4N,GACb,CAME,IAAK,GALDE,GAAe,EAAMF,GAAiBL,EAAeE,GACrDpgB,EAAe,IAAOogB,EAAcF,GAAgBO,EACpDC,EAAYD,EAAeH,EAC3B1U,KAEKrG,EAAI,EAAO+a,EAAJ/a,EAAeA,IAC/B,CACE,GAAIiK,GAAOjK,EAAImb,EACX5gB,EAAWogB,EAAe1Q,EAAOxP,EAAewP,EAAOA,CAE3D5D,GAAQrG,GAAMzF,EAAWygB,EAE3B3U,EAAQ0U,GAAc,EAEtB3iB,EAAO,GAAI+N,IAAW6L,EAAMnP,EAAMuD,EAAQC,GAC1C0I,EAAiBmM,IAKvB,GAAIE,GAAkB,GAAIljB,GAAO8Z,EAAM5Z,EAAM2W,EAAgBN,EAAWnW,OAAQ,EAAG,EAAG,EAAG,EAEzF8iB,GAAgBpiB,KAAOA,EACvBoiB,EAAgBvJ,MAAQ7Y,EAAK6Y,MAE7B7Y,EAAKP,OAASgW,EAAWG,MAEzBgE,EAAgBve,KAAMuL,EAASwb,OAI/B3B,GAAeplB,KAAMuL,EAAS+Z,EAAMlL,EAAWxE,KAAOjR,EAAKT,OAE3DohB,EAAKhG,MAAO3a,GACZA,EAAKT,MAAQ,MAKfS,GAAKT,OAASkW,EAAWxE,KAEzB2I,EAAgBve,KAAMuL,EAAS5G,OAOnC,KAAK,GAAI1D,GAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAE3Csd,EAAgBve,KAAMuL,EAASpJ,EAAalB,GAIhD,OAAOvB,OAaTuf,iBAAkB,SAASjC,EAAe9Y,GAKxC,IAAK,GAHD/B,GAAczC,KAAKge,OACnBwC,EAAShc,GAAS,EAEbjD,EAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAC7C,CACE,GAAIwI,GAAatH,EAAalB,EAExB+b,GAAcgK,IAAKvd,EAAW3F,YAElC2F,EAAWyW,OAAQA,GAIvB,MAAOxgB,OAaTslB,iBAAkB,SAAShI,EAAepH,GAIxC,IAAK,GAFDzT,GAAczC,KAAKge,OAEdzc,EAAIkB,EAAY1B,OAAS,EAAGQ,GAAK,EAAGA,IAC7C,CACE,GAAIwI,GAAatH,EAAalB,EAExB+b,GAAcgK,IAAKvd,EAAW3F,YAElC2F,EAAWoa,OAAQjO,GAIvB,MAAOlW,OAST+X,MAAO,WAML,IAAK,GAJDiG,GAAShe,KAAKge,OACd8D,EAAO9hB,KAAK8hB,KACZ/J,EAAQ,GAAI9U,GAEP1B,EAAIyc,EAAOjd,OAAS,EAAGQ,GAAK,EAAGA,IAEtCwW,EAAMiG,OAAOzc,GAAKyc,EAAOzc,GAAGwW,QAC5BA,EAAM+J,KAAKvgB,GAAKugB,EAAKvgB,GACrBwW,EAAMwP,QAASzF,EAAKvgB,IAAOA,CAG7B;MAAOwW,IAUTmK,cAAe,SAASsF,GAKtB,IAAK,GAHD9D,GAAe,EACf1F,EAAShe,KAAKge,OAETzc,EAAIyc,EAAOjd,OAAS,EAAGQ,GAAK,EAAGA,IACxC,CACE,GAAIwI,GAAaiU,EAAOzc,EAExB,IAAMwI,EAAWwa,cAIZ,GAAKiD,EAER,MAAO1gB,QAAO2gB,aAJd/D,GAAe1L,KAAKxL,IAAKkX,EAAc3Z,EAAWmY,iBAQtD,MAAOwB,IAYT7F,WAAY,SAAS6J,GAKnB,IAHA,GAAIC,GAAe3nB,KAAKge,OACpB4J,EAAY,KAERD,EAAa5mB,QACrB,CACE6mB,IAEA,KAAK,GAAIrmB,GAAIomB,EAAa5mB,OAAS,EAAGQ,GAAK,EAAGA,IAC9C,CACE,GAAIwI,GAAa4d,EAAcpmB,EAE/BwI,GAAW+T,MAAQ4J,EAEd3d,EAAW9E,MAEd2iB,EAAUxmB,KAAM2I,EAAW9E,MAI1B2iB,EAAU7mB,QAEb2mB,IAGFC,EAAeC,EAGjB,MAAOF,IAWTG,QAAS,SAASjc,EAAUC,GAI1B,IAAK,GAFDmS,GAAShe,KAAKge,OAETzc,EAAIyc,EAAOjd,OAAS,EAAGQ,GAAK,EAAGA,IAMtC,IAJA,GAAIwI,GAAaiU,EAAOzc,GACpBwC,EAAW,KACX+jB,EAAQ,EAEJ/d,GAEN6B,EAAStL,KAAMuL,GAAW7L,KAAM+J,EAAY+d,IAAS/jB,GAErDgG,GAAchG,EAAWgG,GAAY9E,IAIzC,OAAOjF,SAgCXkD,EAAQ6kB,YAAc,WAEpB,GAAI3K,GAAK,CACT,OAAO,YACL,MAAOA,SAIXjS,GAAM5L,OAAQ2D,GAaZuC,MAAO,WAEL,KAAM,iCAmBR8Q,MAAO,SAAUvH,EAAW3L,EAAYD,EAAYka,EAAe7G,GAEjE,GAAIzR,GAAUhF,KACVV,EAAUqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,UAElDga,GAAcuK,QAAQ,SAASllB,GAExBA,EAAE+hB,eAAiB1f,GAEtBA,EAAQgjB,gBAAiBrlB,EAAGA,EAAEyB,UAAWqS,EAAQnX,MAcvD0oB,gBAAiB,SAAUrlB,EAAGsb,EAAMxH,EAAQnX,GAE1CqD,EAAE4B,OAAckS,EAAOwR,YAAahK,EAAMtb,EAAE4B,QAC5C5B,EAAEgC,OAAc8R,EAAOyR,YAAajK,EAAMtb,EAAEgC,QAC5ChC,EAAE6B,MAAciS,EAAO0R,WAAYlK,EAAMtb,EAAE6B,OAC3C7B,EAAE8B,MAAcgS,EAAO2R,WAAYnK,EAAMtb,EAAE8B,OAC3C9B,EAAE2B,SAAcmS,EAAO4R,cAAepK,EAAMtb,EAAE2B,UAC9C3B,EAAE+B,OAAc+R,EAAO6R,YAAarK,EAAMtb,EAAE+B,QAC5C/B,EAAEiC,MAAc6R,EAAO8R,WAAYtK,EAAMtb,EAAEiC,OAC3CjC,EAAEkC,UAAc4R,EAAO+R,eAAgBvK,EAAMtb,EAAEkC,UAAWvF,GAC1DqD,EAAEmC,WAAc2R,EAAOgS,gBAAiB9lB,EAAEmC,aAa5C4jB,SAAU,SAAU1Z,EAAW3L,EAAYD,EAAYka,GAErD,GAAI7G,GAAS,GAAItT,GAAe6L,EAAW5L,EAAYC,EAAYrD,KAAKsD,UAExE,KAAK,GAAIoT,KAAe1H,GACxB,CACE,GAAIhK,GAAU2R,GAAUD,EAEnB1R,MAAY,GAASA,EAAQuR,OAEhCvR,EAAQuR,MAAOvH,EAAW3L,EAAYD,EAAYka,EAAe7G,OAkCzEtL,GAAM5L,OAAQ4D,GASZI,iBAAkB,SAASolB,GAEnB9nB,EAAUb,KAAKuC,MAAOomB,MAE1B3oB,KAAKuC,MAAOomB,QAahBC,YAAa,SAAS3K,GAEpB,MAAOje,MAAK6oB,WAAY5K,EAAM,SAAU,YAU1C6K,YAAa,SAAS7K,GAEpB,MAAOje,MAAK+oB,YAAa9K,EAAM3Y,GAASA,GAAS,SAAU,YAAa,cAAe,YAUzF0jB,WAAY,SAAS/K,GAEnB,MAAOje,MAAK+oB,YAAa9K,EAAMtY,GAAQqB,GAAO,QAAS,WAAY,aAAc,WAUnFiiB,WAAY,SAAShL,GAEnB,MAAOje,MAAK+oB,YAAa9K,EAAM5Y,GAAQ2B,GAAO,QAAS,WAAY,aAAc,WAUnFkiB,cAAe,SAASjL,GAEtB,MAAOje,MAAK+oB,YAAa9K,EAAM7Y,GAAW4B,GAAO,WAAY,cAAe,gBAAiB,cAU/FmiB,YAAa,SAASlL,GAEpB,MAAOje,MAAK+oB,YAAa9K,EAAMrY,GAASoB,GAAO,SAAU,YAAa,cAAe,YAUvFoiB,WAAY,SAASnL,GAEnB,MAAOje,MAAK+oB,YAAa9K,EAAM1Y,GAAQsB,GAAS,QAAS,WAAY,aAAc,WAUrFwiB,eAAgB,SAASpL,GAEvB,MAAOje,MAAK6oB,WAAY5K,EAAM,YAAa,eAY7C4K,WAAY,SAAS5K,EAAMqL,EAAQX,GAEjC,MAAO9mB,GAAU7B,KAAKuC,MAAOomB,GAAa1K,GAAQje,KAAKoD,WAAYkmB,KAarEC,WAAY,SAAStL,EAAM5Z,EAAMW,EAASD,GAExC,GAAIT,GAAatE,KAAKkpB,cAAejL,GACjC1Z,EAAavE,KAAK4oB,YAAa3K,GAC/BzZ,EAAaxE,KAAKgpB,WAAY/K,GAC9BxZ,EAAazE,KAAKipB,WAAYhL,GAC9BtZ,EAAa3E,KAAK8oB,YAAa7K,GAC/BvZ,EAAa1E,KAAKmpB,YAAalL,GAC/BrZ,EAAa5E,KAAKopB,WAAYnL,GAC9BpZ,EAAa7E,KAAKqpB,eAAgBpL,GAClCnZ,EAAa9E,KAAKwpB,kBAClBvlB,EAAa,GAAIE,GAAO8Z,EAAM5Z,EAAMC,EAAUC,EAAQC,EAAOC,EAAOC,EAAQC,EAAQC,EAAOC,EAAWC,EAAYC,EAAiBC,EAAS,KAAMhF,KAAKuC,MAE3J,OAAO0B,IAgBT8kB,YAAa,SAAS9K,EAAMlE,EAAe0P,EAAqBH,EAAQI,EAAWC,EAAahB,GAE9F,GAAIiB,GAAU/nB,EAAU7B,KAAKuC,MAAOomB,GAAa1K,GAAQje,KAAKoD,WAAYkmB,IACtEtS,EAAO+C,EAAe6P,GACtBxD,EAAMqD,EAAqBzpB,KAAKoD,WAAYsmB,GAAa,GACzD9kB,EAAQ/C,EAAU7B,KAAKoD,WAAYumB,GAAe,EAEtD,OAAgB,KAARvD,GAAuB,IAAVxhB,EAAeglB,GAAW5S,EAAOoP,GAAOxhB,GAS/D4kB,gBAAiB,WAEf,MAAO/nB,MAAYzB,KAAKuC,MAAMuC,WAAY9E,KAAKoD,aAajD6kB,YAAa,SAAShK,EAAMyC,GAE1B,MAAO1gB,MAAK6pB,WAAY5L,EAAMyC,EAASvb,GAAS,SAAU,YAW5D+iB,YAAa,SAASjK,EAAMyC,GAE1B,MAAO1gB,MAAK8pB,YAAa7L,EAAMyC,EAASpb,GAAS,SAAU,YAAa,cAAe,YAWzF6iB,WAAY,SAASlK,EAAMyC,GAEzB,MAAO1gB,MAAK8pB,YAAa7L,EAAMyC,EAAS1Z,GAAO,QAAS,WAAY,aAAc,WAWpFohB,WAAY,SAASnK,EAAMyC,GAEzB,MAAO1gB,MAAK8pB,YAAa7L,EAAMyC,EAAS1Z,GAAO,QAAS,WAAY,aAAc,WAWpFqhB,cAAe,SAASpK,EAAMyC,GAE5B,MAAO1gB,MAAK8pB,YAAa7L,EAAMyC,EAAS1Z,GAAO,WAAY,cAAe,gBAAiB,cAW7FshB,YAAa,SAASrK,EAAMyC,GAE1B,MAAO1gB,MAAK8pB,YAAa7L,EAAMyC,EAAS1Z,GAAO,SAAU,YAAa,cAAe,YAWvFuhB,WAAY,SAAStK,EAAMyC,GAEzB,MAAO1gB,MAAK8pB,YAAa7L,EAAMyC,EAAS7Z,GAAS,QAAS,WAAY,aAAc,WAatF2hB,eAAgB,SAASvK,EAAMyC,EAASphB,GAEtC,GAAIwP,GAAOxP,EAAQ8E,UAAW6Z,GAAOzY,WAEjCuU,EAAgB,SAAS3T,EAAOkI,GAClC,MAAOQ,GAAKrJ,MAAOW,EAAOkI,GAG5B,OAAOtO,MAAK6pB,WAAY5L,EAAMyC,EAAS3G,EAAe,YAAa,eAUrE0O,gBAAiB,SAAS/H,GAExB,MAAOjf,MAAYzB,KAAKqD,WAAWyB,WAAY4b,IAejDmJ,WAAY,SAAS5L,EAAMyC,EAAS+I,EAAqBH,EAAQX,GAE/D,GAAIoB,GAAW/pB,KAAKuC,MAAOomB,GAAa1K,GACpC7X,EAAQvE,EAAUkoB,EAAU/pB,KAAKqD,WAAYimB,GAAUtpB,KAAKoD,WAAYkmB,GAE5E,OAAOG,GAAqBrjB,EAAOsa,IAiBrCoJ,YAAa,SAAS7L,EAAMyC,EAAS+I,EAAqBH,EAAQI,EAAWC,EAAahB,GAExF,GAAIiB,GAAU/nB,EAAU7B,KAAKuC,MAAOomB,GAAa1K,GAAQje,KAAKqD,WAAYimB,GAAUtpB,KAAKoD,WAAYkmB,IACjGtS,EAAOyS,EAAqBG,EAASlJ,GACrC0F,EAAMqD,EAAqB5nB,EAAU7B,KAAKqD,WAAYqmB,GAAa1pB,KAAKoD,WAAYsmB,IAAe,GACnG9kB,EAAQ/C,EAAU7B,KAAKqD,WAAYsmB,GAAe3pB,KAAKoD,WAAYumB,GAAe,EAEtF,QAAQ3S,EAAOoP,GAAOxhB,KAmB1BuG,GAAM5L,OAAQiE,GAQZsN,gBAAiB,WAEf9Q,KAAK0F,KAAO1F,KAAK8lB,SACjB9lB,KAAKgqB,IAAMhqB,KAAKyF,MAAO,EAAKzF,KAAK0F,MACjC1F,KAAKiqB,SAAWjqB,KAAKyF,MAAOqB,OAAOC,kBAAmB/G,KAAK0F,OAY7DD,MAAO,WAEL,KAAM,oCAWRykB,WAAY,SAAS3nB,EAAO4nB,EAAQ7b,GAE9B/L,EAAMxB,SAAWopB,EAAOppB,SAE1BopB,EAAOppB,OAASwB,EAAMxB,OAKxB,KAAK,GAFDqpB,GAAgBpqB,KAAKyF,MAAO6I,EAActO,KAAK0F,MAE1CnE,EAAI,EAAGA,EAAIgB,EAAMxB,OAAQQ,IAEhC4oB,EAAQ5oB,GAAMvB,KAAKyF,MAAOlD,EAAOhB,GAAK6oB,EAGxC,OAAOD,IAWT9oB,KAAM,WAEJ,KAAM,mCAURgpB,KAAM,WAEJ,KAAM,mCAORC,QAAS,WAEP,KAAM,sCAURvS,MAAO,SAASA,GAEd,MAAO/X,MAAKqB,KAAMrB,KAAK8lB,SAAU/N,IASnC+N,OAAQ,WAEN,KAAM,qCAWRlhB,MAAO,SAASlD,EAAKkD,GAEnB,MAAO5E,MAAKuqB,KAAM7oB,EAAKA,EAAKkD,EAAQ,IAWtCwhB,IAAK,SAAS1kB,EAAK4f,GAEjB,MAAOthB,MAAKuqB,KAAM7oB,EAAK4f,EAAQ,IAYjCiJ,KAAM,WAEJ,KAAM,mCAWRtE,IAAK,SAASvkB,EAAK4f,GAEjB,MAAOthB,MAAKuqB,KAAM7oB,EAAK4f,EAAQ,KAWjCkJ,IAAK,WAEH,KAAM,kCAWRC,IAAK,WAEH,KAAM,kCAcRC,YAAa,SAAShpB,EAAKmS,EAAO3K,EAAKyhB,GAMrC,MAJAjpB,GAAM1B,KAAKqqB,KAAM3oB,GACjBA,EAAM1B,KAAKuqB,KAAM7oB,EAAKmS,EAAO,EAAI8W,GACjCjpB,EAAM1B,KAAKuqB,KAAM7oB,EAAKwH,EAAKyhB,IAc7BC,OAAQ,SAASlpB,EAAK2L,EAAKb,GAEzB,MAAOxM,MAAK0qB,YAAahpB,EAAK2L,EAAKb,EAAKwL,KAAK4S,WAW/C9V,SAAU,SAAShT,EAAGC,GAEpB,MAAOiW,MAAK6S,KAAM7qB,KAAK8qB,WAAYhpB,EAAGC,KAWxC+oB,WAAY,WAEV,KAAM,yCAUR/pB,OAAQ,SAASe,GAEf,MAAO9B,MAAK8U,SAAUhT,EAAG9B,KAAK0F,OAUhCqlB,SAAU,SAASjpB,GAEjB,MAAO9B,MAAK8qB,WAAYhpB,EAAG9B,KAAK0F,OAUlCslB,QAAS,WAEP,KAAM,sCAWR3R,MAAO,WAEL,KAAM,oCAYR4R,OAAQ,WAEN,KAAM,qCAaRC,QAAS,WAEP,KAAM,sCAYR7d,IAAK,WAEH,KAAM,kCAYRb,IAAK,WAEH,KAAM,kCAUR2e,IAAK,WAEH,KAAM,kCAYRhe,MAAO,SAASzL,EAAK2L,EAAKb,GAExB,GAAI4e,GAASprB,KAAK8qB,WAAYppB,EAAK1B,KAAK0F,KAExC,OAAc2H,GAAMA,EAAf+d,EAEIprB,KAAK4E,MAAOlD,EAAK2L,EAAM2K,KAAK6S,KAAMO,IAEjCA,EAAS5e,EAAMA,EAEhBxM,KAAK4E,MAAOlD,EAAK8K,EAAMwL,KAAK6S,KAAMO,IAGpC1pB,GAUT2pB,UAAW,SAAS3pB,EAAKX,GAEvB,GAAIgqB,GAAW/qB,KAAK+qB,SAAUrpB,EAE9B,OAAkB,KAAbqpB,EAEI/qB,KAAK4E,MAAOlD,EAAKX,EAASiX,KAAK6S,KAAME,IAGvCrpB,KA2BXyJ,GAAM5L,OAAQkE,GAYZS,OAAQ,SAASonB,EAAWvnB,EAAUC,EAAWC,EAAO2H,GAEtD5L,KAAKurB,WAAaD,EAClBtrB,KAAKwrB,UAAYznB,EACjB/D,KAAKyrB,WAAaznB,EAClBhE,KAAK0rB,OAASznB,EACdjE,KAAK2rB,UAAY/f,EACjB5L,KAAK4rB,UACL5rB,KAAK6rB,SAEA7rB,KAAK8rB,WAER9rB,KAAK+rB,aAUTD,QAAS,WAEP,MAAO9rB,MAAKurB,aAAevrB,KAAKwrB,WAQlCO,UAAW,WAET/rB,KAAKurB,WAAYvrB,KAAKyrB,YAAczrB,KAAK0rB,OAAQ1rB,KAAKgsB,KAAMhsB,OAW9D4D,MAAO,SAASqoB,GAEd,MAAO,YAIL,MAFAjsB,MAAK4rB,OAAOxqB,MAAO6qB,EAAYtqB,YAExB3B,OASXgsB,KAAM,WAGC5rB,EAAYJ,KAAK2rB,YAEpB3rB,KAAK2rB,UAAUrrB,KAAMN,KAAKurB,WAAYvrB,KAGxC,KAAK,GAAIuB,GAAI,EAAGA,EAAIvB,KAAK4rB,OAAO7qB,OAAQQ,IACxC,CACE,GAAIjB,GAAON,KAAK4rB,OAAQrqB,EAExBvB,MAAKurB,WAAYjrB,EAAK,IAAKC,MAAOP,KAAKurB,WAAYjrB,EAAK,IAG1D,IAAK,GAAI2L,GAAI,EAAGA,EAAIjM,KAAK6rB,MAAM9qB,OAAQkL,IAErCjM,KAAK6rB,MAAO5f,GAAI8f,aAUpBG,QAAS,WAEP,MAAOlsB,MAAKwrB,WAcd/I,MAAO,SAASze,EAAWC,EAAO2H,GAEhC,GAAI3G,GAAO,GAAIjF,MAAK2D,SAAU3D,KAAKurB,WAAYvrB,KAAMgE,EAAWC,EAAO2H,EAIvE,OAFA5L,MAAK6rB,MAAMzqB,KAAM6D,GAEVA,KAqBXpB,EAAcgY,UAAY,GAAIpY,GAAOI,GAOnC,UAOA,kBAOA,oBAOA,YAOA,SAOA,QAQA,kBAOA,WAOA,aAOA,UAOA,SAOA,OAQA,kBAOA,QAQA,mBAOA,SAQA,oBAOA,aAQA,wBAOA,QAOA,UAOA,YAOA,cAOA,YAOA,gBAOA,OAOA,WAOA,SAOA,OAOA,MAOA,SAOA,SAOA,QAOA,SAOA,MAOA,QAOA,MAOA,SAOA,eAOA,cAIF,IAAI2U,MAmBJA,IAAY,MAAQ,SAASjU,GAE3B,MAAO,UAASpE,GAEd,MAAOoE,GAAQpE,KAYnBqY,GAAiB,IAAI,SAASjU,GAE5B,MAAO,UAASpE,GAEd,MAAO,GAAMoE,EAAQ,EAAMpE,KAY/BqY,GAAmB,MAAI,SAASjU,GAE9B,MAAO,UAASpE,GAEd,MAAS,GAAJA,EAEwB,GAApBoE,EAAQ,EAAMpE,GAId,EAAiC,GAA1BoE,EAAQ,EAAM,EAAMpE,KAaxCqY,GAAkB,KAAI,SAASjU,GAE7B,MAAO,UAASpE,GAEd,MAESoE,GAFA,GAAJpE,EAEY,EAAMA,EAIN,EAAM,EAAMA,KAajCqY,GAAoB,OAAI,SAASjU,GAE/B,MAAO,UAASpE,GAEd,MAAS,GAAJA,EAEIoE,EAAQ,EAAMpE,GAId,EAAMoE,EAAQ,EAAM,EAAMpE,KAavCqY,GAAqB,QAAI,SAASjU,GAEhC,MAAO,UAASpE,GAEd,MAAOoE,GAAQ,EAAMpE,KAYzBqY,GAAkB,KAAI,SAASjU,GAE7B,MAAO,UAASpE,GAEd,MAAO,GAAMoE,EAAQpE,IAezB,IAAIuV,MAsCJA,IAAgB,OAAI,SAASvV,GAE3B,MAAOA,IASTuV,GAAc,KAAI,SAASvV,GAEzB,MAAOA,GAAIA,GASbuV,GAAc,KAAI,SAASvV,GAEzB,GAAIoB,GAAK,EAAMpB,EACXgsB,EAAK5qB,EAAIA,EACT6qB,EAAKjsB,EAAIA,EACTksB,EAAO,GAAMF,EAAKhsB,EAAM,EAAMoB,EAAI6qB,EAAOA,EAAKjsB,EAC9CmsB,EAAM,EAAMH,EAAKA,CAErB,OAAOE,GAAM9qB,EAAI+qB,EAAMnsB,GASzBuV,GAAe,MAAI,SAASvV,GAE1B,MAAOA,GAAIA,EAAIA,GASjBuV,GAAiB,QAAI,SAASvV,GAE5B,GAAIisB,GAAKjsB,EAAIA,CACb,OAAOisB,GAAKA,GASd1W,GAAiB,QAAI,SAASvV,GAE5B,GAAIisB,GAAKjsB,EAAIA,CACb,OAAOisB,GAAKA,EAAKjsB,GASnBuV,GAAc,KAAI,SAASvV,GAEzB,GAAIisB,GAAKjsB,EAAIA,EACTosB,EAAKH,EAAKjsB,CACd,OAAOosB,GAAKH,EAAKjsB,GASnBuV,GAAc,KAAI,SAASvV,GAEzB,MAAO6X,MAAKwU,IAAS,cAAJrsB,IASnBuV,GAAkB,SAAI,SAASvV,GAE7B,OAAQ,EAAU,GAAJA,GAAkBA,GAAK,GAAO,IAS9CuV,GAAiB,QAAI,SAASvV,GAE5B,GAAIisB,GAAKjsB,EAAIA,EACTosB,EAAKH,EAAKjsB,EACVyE,EAAQwnB,GAAO,EAAMG,EAAMH,EAAM,EAAMjsB,EAAK,GAC5CssB,GAAQzU,KAAKwU,IAAQ,cAAJrsB,EACrB,OAAOyE,GAAQ6nB,GASjB/W,GAAiB,QAAI,SAASvV,GAE5B,MAAO6X,MAAK0U,IAAKvsB,EAAI6X,KAAKwU,IAAQ,cAAJrsB,KAShCuV,GAAe,MAAI,SAASvV,GAE1B,MAAQ,GAAM6X,KAAK2U,IAAIxsB,EAAIA,EAAIA,EAAI,KAAS,EAAMA,IASpDuV,GAAoB,WAAI,SAASvV,GAE/B,GAAIisB,GAAKjsB,EAAIA,CACb,OAAQ,GAAM6X,KAAK0U,KAAK,EAAMN,GAAMpU,KAAK2U,IAAIP,EAAKjsB,EAAI,iBASxDuV,GAAgB,OAAI,SAASvV,GAE3B,MAAQ,GAAM6X,KAAK0U,KAAK,EAAMvsB,GAAK6X,KAAK2U,IAAIxsB,EAAIA,EAAI,iBAStDuV,GAAqB,YAAI,SAASvV,GAEhC,GAAIysB,GAAM,EAAMzsB,CAChB,OAAQ,GAAM6X,KAAK0U,IAAIE,EAAMA,EAAM5U,KAAK2U,IAAIxsB,EAAIA,EAAI,iBAStDuV,GAAoB,WAAI,SAASvV,GAE/B,GAAIysB,GAAM,EAAMzsB,CAChB,OAAQ,GAAM6X,KAAK0U,IAAIE,EAAMA,EAAM5U,KAAK2U,IAAIxsB,EAAIA,EAAI,KAStDuV,GAAkB,SAAI,SAASvV,GAE7B,MAAQ6X,MAAK2U,IAAIxsB,EAAIA,EAAI,IAAQA,GAAK,EAAMA,GAAKA,GASnDuV,GAAc,KAAI,SAASvV,GAEzB,MAAO6X,MAAK6S,KAAM1qB,IASpBuV,GAAe,MAAI,SAASvV,GAE1B,GAAIoB,GAAK,EAAMpB,EACXgsB,EAAK5qB,EAAIA,CACb,OAA+B,IAAtB,EAAM4qB,EAAKA,EAAMhsB,IAS5BuV,GAAe,MAAI,SAASvV,GAE1B,MAAsC,IAA9B6X,KAAK6U,MAAM1sB,EAAI,KAAQ,GAAa,oBAS9CuV,GAAmB,UAAI,SAASvV,GAE9B,GAAQ,GAAJA,EACF,MAAQA,IAAK,IAEb,IAAI8B,GAAI9B,EAAI,EACZ,OAA+B,IAAtB8B,EAAIA,EAAI,KAAO,KAU5ByT,GAAkB,SAAI,SAASvV,GAE7B,MAAO,GAAM6X,KAAK6S,KAAM,EAAI1qB,EAAIA,IASlCuV,GAAgB,OAAI,SAASvV,GAE3B,MAAQ,IAAO,EAAMA,GAAKA,EAAIA,EAAMA,EAAIA,EAAIA,GAS9CuV,GAAe,MAAI,SAAS9Q,EAAOL,GAEjC,GAAIuoB,GAAQ3nB,GAASZ,EAErB,OAAO,UAAUpE,GAEf,GAAIoB,GAAIurB,EAAO3sB,EACf,OAAOyE,GAAQrD,GAAK,EAAIqD,GAASzE,IAgBrCuV,GAAgB,OAAI,SAASqX,EAAKC,EAAKC,EAAKC,GAG1C,QAASC,GAAEC,EAAKC,GAAO,MAAO,GAAM,EAAMA,EAAM,EAAMD,EACtD,QAASE,GAAEF,EAAKC,GAAO,MAAO,GAAMA,EAAM,EAAMD,EAChD,QAASG,GAAEH,GAAY,MAAO,GAAMA,EAGpC,QAASI,GAAWC,EAAIL,EAAKC,GAC3B,QAASF,EAAEC,EAAKC,GAAKI,EAAKH,EAAEF,EAAKC,IAAMI,EAAKF,EAAEH,IAAMK,EAItD,QAASC,GAASD,EAAIL,EAAKC,GACzB,MAAO,GAAMF,EAAEC,EAAKC,GAAKI,EAAGA,EAAK,EAAMH,EAAEF,EAAKC,GAAOI,EAAKF,EAAEH,GAG9D,QAASO,GAASC,GAGhB,IAAK,GADDC,GAAUD,EACLrsB,EAAI,EAAO,EAAJA,IAASA,EAAG,CAC1B,GAAIusB,GAAeJ,EAASG,EAASd,EAAKE,EAC1C,IAAqB,IAAjBa,EACF,MAAOD,EAET,IAAIE,GAAWP,EAAWK,EAASd,EAAKE,GAAOW,CAC/CC,IAAWE,EAAWD,EAExB,MAAOD,GAGT,MAAO,UAAS1tB,GACd,MAAOqtB,GAAYG,EAAUxtB,GAAK6sB,EAAKE,IAU3C,IAAIc,KAEFC,QAAS,EACTC,UAAW,EACXC,SAAU,EACVC,SAAU,EAgHZjjB,IAAM1J,OAAQ0C,EAAOnB,GAUnBqrB,aAAc,SAASC,EAAW3D,GAEhC,GAAIvkB,GAAQpG,KAAKqE,KAAKkqB,QAASD,EAAWtuB,KAAKuE,OAAQomB,GAEvD,IAAKvkB,KAAU,GAAwB,IAAfpG,KAAK4E,MAC7B,CACE,GAAIkK,GAAO9O,KAAKqE,KAAKmB,WACjB8oB,EAAYxf,EAAKiJ,MAAO/X,KAAK6E,WAC7BiQ,EAAWhG,EAAKmX,IAAKqI,EAAWloB,EAEpCA,GAAQ0I,EAAKyb,KAAMnkB,EAAO0O,GAAW9U,KAAK4E,OAG5C,MAAOwB,IAYTooB,WAAY,SAAS3jB,EAAOyjB,EAAW3D,GAErC,GAAIvkB,GAAQkoB,CAeZ,OAZKtuB,MAAKqE,KAAKmB,WAAWwlB,QAASsD,KAEjCloB,EAAQpG,KAAKqE,KAAKmB,WAAWsgB,UAG/B1f,EAAQpG,KAAKquB,aAAcjoB,EAAOukB,GAE7BvkB,KAAU,IAEbyE,EAAO7K,KAAKoE,WAAcgC,GAGrBA,GAGTgD,OAAQ,WAEN,GAAIqlB,GAAYthB,GAAO6K,KAAK0W,MAAQ1uB,KAAK4jB,QAAU5jB,KAAKwE,QAAYxE,KAAKsE,SAAWtE,KAAKyE,QAAW,EAAGzE,KAAK2E,OAQ5G,OANK8pB,KAAczuB,KAAK2E,SAEtB3E,KAAK2E,OAAS8pB,EACdzuB,KAAK+jB,cAAc,IAGd/jB,MAETmJ,OAAQ,SAAS0B,GAEf7K,KAAKwuB,WAAY3jB,EAAO7K,KAAKqE,KAAKmB,WAAWsgB,SAAU,GACvD9lB,KAAK2uB,MAAQX,GAAWI,UAE1Bva,MAAO,SAASpL,EAAK3E,GAEnB9D,KAAK8jB,SAAUrb,GAEfzI,KAAK2uB,MAAQ3uB,KAAKwE,MAAQwpB,GAAWC,QAAUD,GAAWE,UAErDluB,KAAKskB,gBAERtkB,KAAKqE,KAAOrE,KAAKqE,KAAKuqB,gBAAiB5uB,KAAM8D,KAGjDoa,WAAY,SAASrT,GAEnB,MAAK7K,MAAK+E,iBAER/E,KAAKwuB,WAAY3jB,EAAOA,EAAO7K,KAAKoE,WAAa,IAE1C,IAGF,GAETuE,OAAQ,SAASib,EAAS/Y,GAExB,GAAI2S,IAAU,EACVhZ,EAAQxE,KAAKwE,MACbF,EAAWtE,KAAKsE,SAChBG,EAAQzE,KAAKyE,MACbE,EAAS3E,KAAK2E,OACdkqB,EAAW7uB,KAAK2uB,MAChBG,EAAW9uB,KAAK2uB,MAChBhE,EAAQ,CAEZ/G,IAAWpf,CAEX,IAAIsZ,GAAQxZ,EAAWG,EACnBsqB,EAAY/W,KAAKsL,MAAOM,EAAU9F,EAgCtC,OA9BKiR,IAAapqB,GAEhBmqB,EAAWd,GAAWI,SACtBzD,EAAQ,IAIR/G,GAAWmL,EAAYjR,EAElB8F,EAAUtf,GAEbwqB,EAAWd,GAAWG,SACtBxD,EAAQ,IAIRmE,EAAWd,GAAWE,UACtBvD,EAAQ/G,EAAUtf,KAIjBwqB,IAAad,GAAWE,WACxBY,IAAad,GAAWE,WAAaW,IAAab,GAAWE,aAEhEluB,KAAKwuB,WAAY3jB,EAAOA,EAAO7K,KAAKoE,WAAaumB,GACjDnN,GAAU,GAGZxd,KAAK2uB,MAAQG,EAENtR,GAET8C,QAAS,SAASpK,EAAMxU,GAItB,GAFAwU,GAAQlW,KAAK0E,OAERwR,EAAOlW,KAAKwE,QAAUxE,KAAK+E,gBAE9B,OAAO,CAGT,IAAI4lB,GAAQ,CAEZ,IAAKzU,GAAQlW,KAAKwE,MAClB,CACE,GAAIsZ,GAAS9d,KAAKsE,SAAWtE,KAAKyE,MAC9Bmf,EAAW1N,EAAOlW,KAAKwE,MACvBuqB,EAAY/W,KAAKsL,MAAOM,EAAU9F,EAIpC6M,GAFGoE,GAAa/uB,KAAK2E,OAEb,EAIAqT,KAAK3K,IAAK,EAAMuW,EAAU9F,EAAS9d,KAAKsE,UAIpD,MAAOtE,MAAKquB,aAAc3sB,EAAKipB,IAEjC1G,UAAW,WAET,GAAI+K,GAAYhvB,KAAKyE,OAAUzE,KAAK2E,OAAS,GAAK3E,KAAKyE,MAAS,EAC5DwqB,EAAejvB,KAAK2E,OAAS3E,KAAKsE,QAEtC,OAAO0T,MAAK3K,IAAKrN,KAAK4G,SAAU5G,KAAKwE,MAAQyqB,EAAcD,EAAYhvB,KAAK0E,SAE9EqT,MAAO,WAEL,MAAO,IAAI5T,GAAOnE,KAAKoE,UAAWpE,KAAKqE,KAAMrE,KAAKsE,SAAUtE,KAAKuE,OAAQvE,KAAKwE,MAAOxE,KAAKyE,MAAOzE,KAAK0E,OAAQ1E,KAAK2E,OAAQ3E,KAAK4E,MAAO5E,KAAK6E,UAAW7E,KAAK8E,WAAY9E,KAAK+E,gBAAiB/E,KAAKgF,QAAShF,KAAKiF,KAAOjF,KAAKiF,KAAK8S,QAAU,KAAM/X,KAAKuC,QAEzP+hB,YAAa,WAEX,MAAOtkB,MAAKqE,KAAKmF,UAEnB+a,WAAY,WAEV,OAAQ5L,SAAU3Y,KAAK2E,UAAagU,SAAU3Y,KAAK4G,WAErDgY,WAAY,WAEV,MAAQ5e,MAAK2uB,QAAUX,GAAWI,YAiBtCjqB,EAAMwc,YAAc,SAAS1C,EAAM5Z,EAAM7B,GAEvC,MAAO,IAAI2B,GAAO8Z,EAAM5Z,EAAM7B,EAAQ8B,SAAU9B,EAAQ+B,OAAQ/B,EAAQgC,MAAOhC,EAAQiC,MAAOjC,EAAQkC,OAAQlC,EAAQmC,OAAQnC,EAAQoC,MAAOpC,EAAQqC,UAAWrC,EAAQsC,aAe1KqG,GAAM5L,OAAQsG,GAUZuT,GAAI,WAEF,KAAM,8BAUR7R,YAAa,WAEX,KAAM,uCAURE,aAAc,SAASJ,EAASF,GAE9BA,EAAU/F,KAAMpB,KAAKuH,YAAaF,KASpC6X,QAAS,aAqBT9a,UAAW,WAET,KAAM,uCAiCV+G,GAAM5L,OAAQwG,GASZnD,MAAO,WAuBL,MAhBA5C,MAAKge,UAOLhe,KAAK8hB,QAOL9hB,KAAKunB,WAEEvnB,MAWTkG,IAAK,SAASoJ,EAAKlJ,GAajB,MAXKkJ,KAAOtP,MAAKunB,QAEfvnB,KAAKge,OAAQhe,KAAKunB,QAASjY,IAAUlJ,GAIrCpG,KAAKunB,QAASjY,GAAQtP,KAAKge,OAAOjd,OAClCf,KAAKge,OAAO5c,KAAMgF,GAClBpG,KAAK8hB,KAAK1gB,KAAMkO,IAGXtP,MAWT2Q,MAAO,SAASue,EAASC,GAEvB,GAAKD,IAAWlvB,MAAKunB,QACrB,CACE,GAAI1E,GAAQ7iB,KAAKunB,QAAS2H,EAC1BlvB,MAAK8hB,KAAMe,GAAUsM,EACrBnvB,KAAKunB,QAAS4H,GAAUtM,QACjB7iB,MAAKunB,QAAS2H,GAGvB,MAAOlvB,OAUTiG,OAAQ,SAASD,GAKf,IAAK,GAHD8b,GAAO9b,EAAI8b,KACX9D,EAAShY,EAAIgY,OAERzc,EAAI,EAAGA,EAAIugB,EAAK/gB,OAAQQ,IAE/BvB,KAAKkG,IAAK4b,EAAMvgB,GAAKyc,EAAQzc,GAG/B,OAAOvB,OAUT0Q,IAAK,SAASpB,GAEZ,MAAOtP,MAAKge,OAAQhe,KAAKunB,QAASjY,KAUpC0S,OAAQ,SAAS1S,GAEf,GAAIuT,GAAQ7iB,KAAKunB,QAASjY,EAO1B,OALK9O,GAAUqiB,IAEb7iB,KAAKgf,SAAU6D,GAGV7iB,MAUTgf,SAAU,SAAS6D,GAEjB,GAAIvT,GAAMtP,KAAK8hB,KAAMe,GACjBuM,EAAYpvB,KAAKge,OAAOqR,MACxBC,EAAUtvB,KAAK8hB,KAAKuN,KAWxB,OATKxM,GAAQ7iB,KAAKge,OAAOjd,SAEvBf,KAAKge,OAAQ6E,GAAUuM,EACvBpvB,KAAK8hB,KAAMe,GAAUyM,EACrBtvB,KAAKunB,QAAS+H,GAAYzM,SAGrB7iB,MAAKunB,QAASjY,GAEdtP,MAUTqY,QAAS,SAAS/I,GAEhB,MAAOzN,GAAU7B,KAAKunB,QAASjY,GAAO,KAUxCgY,IAAK,SAAShY,GAEZ,MAAOA,KAAOtP,MAAKunB,SAUrB5B,WAAY,SAAS3f,GAKnB,IAAK,GAHD8b,GAAO9hB,KAAK8hB,KACZyF,EAAUvhB,EAAIuhB,QAEThmB,EAAI,EAAGA,EAAIugB,EAAK/gB,OAAQQ,IAE/B,GAAKugB,EAAKvgB,IAAMgmB,GAEd,OAAO,CAIX,QAAO,GASTnF,KAAM,WAEJ,MAAOpiB,MAAKge,OAAOjd,QASrBwL,MAAO,WAML,MAJAvM,MAAKge,OAAOjd,OAAS,EACrBf,KAAK8hB,KAAK/gB,OAAS,EACnBf,KAAKunB,WAEEvnB,QA4CXmL,GAAM1J,OAAQ0E,EAAOnD,GAQnBwiB,SAAU,WAER,MAAOplB,GAAYJ,KAAKoG,OAAUpG,KAAKoG,QAAUpG,KAAKoG,OAGxD+C,OAAQ,SAAS0B,GAEf,GAAIlC,IAAU3I,KAAKqG,OASnB,OAPKsC,KAEHkC,EAAO7K,KAAKoE,WAAcpE,KAAKwlB,WAE/BxlB,KAAKqG,SAAU,GAGVsC,GAGTkL,MAAO,SAASpL,EAAK3E,GAEnB9D,KAAK8jB,SAAUrb,GAEfzI,KAAKoG,MAAQtC,EAASyK,aAAcvO,KAAKoE,WAAYqB,MAAOzF,KAAKoG,OAE5DyD,EAAY7J,KAAKoG,SAEpBpG,KAAKoG,MAAQpG,KAAKoG,MAAOpG,KAAM8D,IAGjC9D,KAAKqG,SAAU,GAGjB6X,WAAY,SAASrT,GAEnB,MAAO7K,MAAK+E,iBAAmB/E,KAAKmJ,OAAQ0B,IAG9ClC,OAAQ,SAASib,EAAS/Y,GAExB,MAAO+Y,IAAW5jB,KAAKwE,OAASxE,KAAKmJ,OAAQ0B,IAG/CyV,QAAS,SAASpK,GAEhB,MAAKA,GAAOlW,KAAKwE,OAER,EAGFxE,KAAKwlB,YAGdvB,UAAW,WAET,MAAOjM,MAAK3K,IAAKrN,KAAK4G,SAAU5G,KAAKwE,QAGvCuT,MAAO,WAEL,MAAO,IAAI5R,GAAOnG,KAAKoE,UAAWpE,KAAKoG,MAAOpG,KAAKwE,MAAOxE,KAAK+E,gBAAiB/E,KAAKgF,QAAShF,KAAKiF,KAAOjF,KAAKiF,KAAK8S,QAAU,OAGhIuM,YAAa,WAEX,MAAOza,GAAY7J,KAAKoG,QAG1Bme,WAAY,WAEV,OAAO,GAGT3F,WAAY,WAEV,MAAO5e,MAAKqG,WAgBhB8E,GAAM5L,OAAQ+G,GAWZ1D,MAAO,SAAS4C,EAAY6M,GAE1BrS,KAAKwF,WAAa6I,GAAa7I,GAC/BxF,KAAKqS,OAASA,EACdrS,KAAKwJ,SAAWxJ,KAAKskB,cACrBtkB,KAAKuvB,cAAgBvvB,KAAKwvB,mBAW5BjB,QAAS,WAEP,KAAM,gCAWRjK,YAAa,WAEX,MAAOtkB,MAAKyvB,cAAe5lB,GAAY,GAAM,IAW/C2lB,gBAAiB,WAEf,MAAOxvB,MAAKyvB,cAAervB,GAAY,GAAO,IAchDqvB,cAAe,SAASC,EAAUC,EAAcC,GAI9C,IAAK,GAFDC,GAAK7vB,KAAKqS,OAEL9Q,EAAI,EAAGA,EAAIsuB,EAAG9uB,OAAQQ,IAE7B,GAAKmuB,EAAUG,EAAItuB,IAEjB,MAAOouB,EAIX,OAAOC,IAUThB,gBAAiB,SAAS3qB,EAAOH,GAK/B,IAAK,GAHDiU,GAAQ/X,KAAKqB,OACbwuB,EAAK9X,EAAM1F,OAEN9Q,EAAI,EAAGA,EAAIsuB,EAAG9uB,OAAQQ,IAExBsI,EAAYgmB,EAAGtuB,MAElBsuB,EAAGtuB,GAAKsuB,EAAGtuB,GAAI0C,EAAOH,GAI1B,OAAOiU,IAUT+X,aAAc,SAASvuB,GAErB,MAAOa,GAASpC,KAAKqS,OAAQ9Q,KAY/BwuB,SAAU,WAER,OAAO,GAaThvB,OAAQ,SAASqS,GAEf,GAAI0B,GAAW,EACXhG,EAAO9O,KAAKwF,UAEhB,IAAKxF,KAAK+vB,WAIR,IAAK,GAFDC,GAAOhwB,KAAK8vB,aAAc,GAErBvuB,EAAI,EAAGA,EAAIvB,KAAKqS,OAAOtR,OAAQQ,IACxC,CACE,GAAI0D,GAAOjF,KAAK8vB,aAAcvuB,EAE9BuT,IAAYhG,EAAKgG,SAAUkb,EAAM/qB,GAEjC+qB,EAAO/qB,MAUT,KAAK,GALDgrB,GAAa,EAAM7c,EACnBuX,EAAQsF,EACRD,EAAOlhB,EAAKiJ,MAAO/X,KAAK8vB,aAAc,IACtCjjB,EAAOiC,EAAKgX,SAEPvkB,EAAI,EAAQ6R,GAAL7R,EAAkBA,IAClC,CACE,GAAI0D,GAAOjF,KAAKuuB,QAAS1hB,EAAM8d,EAE/B7V,IAAYhG,EAAKgG,SAAUkb,EAAM/qB,GACjC0lB,GAASsF,EAETpjB,EAAOmjB,EACPA,EAAO/qB,EAIX,MAAO6P,MAkCX3J,GAAM1J,OAAQ8E,EAASvD,GAWrBoL,WAAY,SAAStK,EAAUsC,EAAOkI,GAEpC,GAAIgC,GAAStQ,KAAKwF,WAAWC,MAAOW,EAAOkI,EAO3C,OALKzE,GAAYyG,KAEdA,EAASA,EAAQtQ,KAAM8D,IAGnBwM,GAST4f,gBAAiB,WAEf,MAAO9tB,GAASpC,KAAKyG,WASvB0pB,oBAAqB,WAEnB,MAAO/tB,GAASpC,KAAK0G,eAGvBmN,MAAO,SAASpL,EAAK3E,GAEnB9D,KAAK8jB,SAAUrb,EAEf,IAAIrE,GAAYN,EAASyK,aAAcvO,KAAKoE,WACxC0K,EAAOT,GAAaxM,EAAU7B,KAAKwF,WAAYpB,EAAUoB,YAE7DxF,MAAKwF,WAAiBsJ,EACtB9O,KAAKwG,SAAiBxG,KAAKoO,WAAYtK,EAAU9D,KAAKwG,SAAUpC,EAAUkK,cAC1EtO,KAAKowB,eAAiBthB,EAAKiJ,MAAO/X,KAAKwG,UACvCxG,KAAKyG,SAAiBzG,KAAKoO,WAAYtK,EAAU9D,KAAKyG,SAAUqI,EAAKpJ,MACrE1F,KAAK0G,aAAiB1G,KAAKoO,WAAYtK,EAAU9D,KAAK0G,aAAcoI,EAAKpJ,MACzE1F,KAAK6M,KAAiBiC,EAAKgX,UAG7BxB,YAAa,WAEX,MAAOza,GAAY7J,KAAKwG,WACjBqD,EAAY7J,KAAKyG,WACjBoD,EAAY7J,KAAK0G,eAG1BiC,OAAQ,SAASib,EAAS/Y,GAExB,GAAIzE,GAAQpG,KAAKsgB,QAASsD,EAAS5jB,KAAK6M,MAAM,EAE9C,IAAKzG,KAAU,EAIb,MAFAyE,GAAO7K,KAAKoE,WAAcpE,KAAKwG,SAAWJ,GAEnC,CAGT,IAAI0I,GAAO9O,KAAKwF,WACZ6qB,EAAKrY,KAAK3K,IAAgC,MAA1BuW,EAAU5jB,KAAK4jB,SAAkBrd,EAAQ+pB,QACzDC,EAAMzhB,EAAKzN,KAAMrB,KAAK6M,KAAM7M,KAAKkwB,mBACjCM,EAAMxwB,KAAKmwB,sBACXM,EAAMzwB,KAAKwG,QAoBf,OAlBA+pB,GAAMzhB,EAAKyb,KAAMgG,EAAKC,EAAKH,GAEtB1X,SAAU3Y,KAAK2G,YAElB4pB,EAAMzhB,EAAK3B,MAAOojB,EAAK,EAAGvwB,KAAK2G,WAGjC8pB,EAAM3hB,EAAKyb,KAAMkG,EAAKF,EAAKF,GAE3BrwB,KAAKwG,SAAWiqB,EAEVrwB,EAAYJ,KAAKyG,YAErBzG,KAAKyG,SAAWqI,EAAKzN,KAAMrB,KAAKyG,SAAU8pB,IAG5C1lB,EAAO7K,KAAKoE,WAAcqsB,GAEnB,GAGTnQ,QAAS,SAASpK,EAAMxU,EAAKgvB,GAE3B,GAAKtwB,EAAYJ,KAAKyG,WAAcrG,EAAYJ,KAAK0G,eAAkB1G,KAAK2G,WAAaG,OAAOC,kBAE9F,OAAO,CAGTmP,IAAQlW,KAAKwE,MACb0R,GAAQ,IAER,IAAIpH,GAAO9O,KAAKwF,WACZY,EAAQsqB,EAAc5hB,EAAKzN,KAAMrB,KAAKwG,SAAUxG,KAAKowB,gBAAmBthB,EAAKzN,KAAMK,EAAK1B,KAAKowB,eAIjG,OAHAhqB,GAAQ0I,EAAKyb,KAAMnkB,EAAOpG,KAAKyG,SAAUyP,GACzC9P,EAAQ0I,EAAKyb,KAAMnkB,EAAOpG,KAAK0G,aAAcwP,EAAOA,IAKtD6B,MAAO,WAEL,MAAO,IAAIxR,GAASvG,KAAKoE,UAAWpE,KAAKgF,QAAShF,KAAKwF,WAAYxF,KAAKwG,SAAUxG,KAAKyG,SAAUzG,KAAK0G,aAAc1G,KAAK2G,SAAU3G,KAAK4G,WAG1IuC,OAAQ,WAIN,MAFAnJ,MAAKiH,UAAW,GAET,GAGT2X,WAAY,WAEV,MAAO5e,MAAKiH,YAShBV,EAAQ+pB,OAAS,GAqCjBnlB,GAAM5L,OAAQ2H,GAQZypB,SAAU,WAER,MAAO3wB,MAAKwE,OAASxE,KAAKmH,UAAUpG,SAAW,IAajD6vB,kBAAmB,SAASC,EAAUtvB,GAOpC,IAAK,GALD+b,GAAgBuT,EAAS9Y,QACzBtV,EAAc6a,EAAcU,OAC5B2M,EAAQppB,GAAKvB,KAAKmH,UAAUpG,SAAW,GACvC+vB,EAAc9wB,KAAKuE,OAAQomB,GAAU3qB,KAAK2wB,WAErC1kB,EAAIxJ,EAAY1B,OAAS,EAAGkL,GAAK,EAAGA,IAE3CxJ,EAAawJ,GAAIzH,OAASssB,CAG5B,OAAOxT,IAST6F,QAAS,WAIP,MAFAnjB,MAAKmH,UAAUgc,UAERnjB,MAiBTof,KAAM,SAASpQ,EAAWxM,EAAS6c,EAAKlQ,GAEtC,GAAI0hB,GAAWra,GAAiBxH,EAAWxM,EAAS2M,EAAOnP,MACvDyjB,EAAWzjB,IAUf,OARAA,MAAKmH,UAAU2b,KAAK,SAAShf,EAAUvC,GAErC,GAAIkB,GAAcghB,EAASmN,kBAAmBC,EAAUtvB,EAExDuC,GAAS8Z,SAAUnb,GACnBqB,EAASwb,gBAAiB7c,EAAa4c,KAGlCrf,KAAKomB,OAgBdxG,MAAO,SAAS5Q,EAAWxM,EAAS2M,GAElC,GAAI0hB,GAAWra,GAAiBxH,EAAWxM,EAAS2M,EAAOnP,MACvDyjB,EAAWzjB,KACX0jB,EAAe,EACfqN,IAuBJ,OArBA/wB,MAAKmH,UAAU2b,KAAK,SAAShf,EAAUvC,GAErCwvB,EAAUxvB,GAAKuC,EAASoe,gBACxBwB,EAAe1L,KAAKxL,IAAKkX,EAAcqN,EAAUxvB,MAGnDvB,KAAKmH,UAAU2b,KAAK,SAAShf,EAAUvC,GAMrC,IAAK,GAJDuvB,GAAcpN,EAAeqN,EAAUxvB,GACvC+b,EAAgBmG,EAASmN,kBAAmBC,EAAUtvB,GACtDkB,EAAc6a,EAAcU,OAEvB/R,EAAIxJ,EAAY1B,OAAS,EAAGkL,GAAK,EAAGA,IAE3CxJ,EAAawJ,GAAIzH,OAASssB,CAG5BhtB,GAAS8Z,SAAUN,GACnBxZ,EAAS+b,iBAAkBvC,KAGtBtd,KAAKomB,OAgBdtG,OAAQ,SAAS9Q,EAAWxM,EAAS2M,GAEnC,GAAI0hB,GAAWra,GAAiBxH,EAAWxM,EAAS2M,EAAOnP,MACvDyjB,EAAWzjB,IAUf,OARAA,MAAKmH,UAAU2b,KAAK,SAAShf,EAAUvC,GAErC,GAAIkB,GAAcghB,EAASmN,kBAAmBC,EAAUtvB,EAExDuC,GAAS8Z,SAAUnb,GACnBqB,EAASic,kBAAmBtd,KAGvBzC,KAAKomB,OAmBd1L,WAAY,SAASA,EAAY1L,EAAWxM,EAAS6c,EAAKlQ,GAExD,GAAIuL,GAAaD,GAAaC,GAC1BmW,EAAWra,GAAiBxH,EAAWxM,EAAS2M,EAAOnP,MACvDyjB,EAAWzjB,IAUf,OARAA,MAAKmH,UAAU2b,KAAK,SAAShf,EAAUvC,GAErC,GAAIkB,GAAcghB,EAASmN,kBAAmBC,EAAUtvB,EAExDuC,GAAS8Z,SAAUnb,GACnBqB,EAAS6b,sBAAuBjF,EAAYjY,EAAa4c,KAGpDrf,KAAKomB,OAWdA,IAAK,WAIH,MAFApmB,MAAKmH,UAAUe,WAERlI,QAkBXmL,GAAM1J,OAAQ2F,EAAQpE,GAepBuP,IAAK,SAASnO,EAAWoB,EAAYqP,EAAMrO,EAAUC,EAAUwO,EAASC,GAEtElV,KAAK4C,MAAOwB,EAAW,KAAM,MAE7BpE,KAAKwF,WAAeA,EACpBxF,KAAK6U,KAAeA,EACpB7U,KAAKwG,SAAeA,EACpBxG,KAAKiV,QAAeA,EACpBjV,KAAKyG,SAAeA,EACpBzG,KAAKkV,aAAeA,GAStB8b,YAAa,WAEX,MAAO5uB,GAASpC,KAAK6U,OASvBoc,eAAgB,WAEd,KAAM,yCAGRpd,MAAO,SAASpL,EAAK3E,GAEnB9D,KAAK8jB,SAAUrb,EAEf,IAAIrE,GAAYN,EAASyK,aAAcvO,KAAKoE,WACxC0K,EAAOT,GAAaxM,EAAU7B,KAAKwF,WAAYpB,EAAUoB,YAE7DxF,MAAKwF,WAAasJ,EAClB9O,KAAK6U,KAAa7U,KAAKoO,WAAYtK,EAAU9D,KAAK6U,KAAMzQ,EAAUkK,cAClEtO,KAAKwG,SAAaxG,KAAKoO,WAAYtK,EAAU9D,KAAKwG,SAAUpC,EAAUkK,cACtEtO,KAAKiV,QAAajV,KAAKoO,WAAYtK,EAAU9D,KAAKiV,QAASnG,EAAKpJ,MAChE1F,KAAKyG,SAAazG,KAAKoO,WAAYtK,EAAU9D,KAAKyG,SAAUqI,EAAKpJ,OAGnE4e,YAAa,WAEX,MAAOza,GAAY7J,KAAK6U,OACjBhL,EAAY7J,KAAKwG,WACjBqD,EAAY7J,KAAKiV,UACjBpL,EAAY7J,KAAKyG,WAG1BkC,OAAQ,SAASib,EAAS/Y,GAExB,GAAIiE,GAAO9O,KAAKwF,WAGZ6qB,EAAKrY,KAAK3K,IAAgC,MAA1BuW,EAAU5jB,KAAK4jB,SAAkBxc,EAAOkpB,QAGxDvP,EAAWjS,EAAKiJ,MAAO/X,KAAKwG,SAGhCxG,MAAKixB,eAAgBZ,GACrBrwB,KAAKyG,SAAWqI,EAAKyb,KAAMvqB,KAAKyG,SAAUzG,KAAKiV,QAASob,GACxDrwB,KAAKwG,SAAWsI,EAAKyb,KAAMvqB,KAAKwG,SAAUxG,KAAKyG,SAAU4pB,EAGzD,IAAI7S,IAAW1O,EAAKoc,QAASnK,EAAU/gB,KAAKwG,SAAUY,EAAO8pB,QAW7D,OATK1T,GAEH3S,EAAO7K,KAAKoE,WAAcpE,KAAKwG,SAEvBxG,KAAKkV,cAAgBpG,EAAKmc,OAAQjrB,KAAKyG,YAE/CzG,KAAKiH,UAAW,GAGXuW,GAGTrU,OAAQ,WAIN,MAFAnJ,MAAKiH,UAAW,GAET,GAGT2X,WAAY,WAEV,MAAO5e,MAAKiH,YAQhBG,EAAOkpB,OAAS,GAKhBlpB,EAAO8pB,QAAU,KAuCjBjmB,GAAUpL,EAiDV,IAAI8H,KAAU,EAWVE,IAAO,EAQPO,GAAY,GAAIvF,GA2DhByF,GAAa,WAKf,IAAK,GAHD6oB,IAAW,KAAM,MAAO,SAAU,KAClCC,EAAYzxB,EAAO0xB,sBAEdlxB,EAAI,EAAGA,EAAIgxB,EAAQpwB,SAAWqwB,IAAajxB,EAElDixB,EAAYzxB,EAAQwxB,EAAQhxB,GAAK,wBAGnC,KAAKixB,EACL,CACE,GAAIE,GAAW,CAEf,OAAO,UAAS1lB,GAEd,GAAIpD,GAAcC,KACd8oB,EAAavZ,KAAKxL,IAAKuD,GAASqM,UAAWrM,GAASoM,WAAa3T,EAAc8oB,IAC/ElU,EAAKzd,EAAO6xB,WAAY,WAAa5lB,EAAUpD,EAAc+oB,IAAiBA,EAElF,OADAD,GAAW9oB,EAAc+oB,EAClBnU,GAIX,MAAO,UAASxR,GAEdwlB,EAAWxlB,MA+KfvC,GAAMooB,UAGFhsB,MAAO,SAASlD,GACd,GAAqB,gBAAVA,GAAoB,CAC7B,GAAImvB,IACFpoB,EAAGtJ,KAAK2xB,eAAepvB,EAAM+G,EAAGsoB,SAAU,KAC1CroB,EAAGvJ,KAAK2xB,eAAepvB,EAAMgH,EAAGqoB,SAAU,KAC1C7vB,EAAG/B,KAAK2xB,eAAepvB,EAAMR,EAAG6vB,SAAU,KAC1C9vB,EAAG9B,KAAK2xB,eAAepvB,EAAMT,EAAGwW,WAAY,GAE9C,OAAOoZ,GAET,OAAO,GAETC,eAAgB,SAAS3vB,EAAG+X,EAAevN,GACzC,GAAIkM,SAAW1W,GACXoL,EAAIZ,CACR,IAAU,WAANkM,EAAgB,CAClB,GAAImZ,GAAU9X,EAAcrB,EAAG,GAC1BW,OAAMwY,KACTzkB,EAAIykB,OAGO,WAANnZ,IACPtL,EAAIpL,EAQN,OANIoL,GAAIZ,IACNY,EAAIZ,GAEE,EAAJY,IACFA,EAAI,GAECA,KAIT0kB,OACEC,aAAazoB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACjCkwB,WAAW1oB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/BmwB,cAAc3oB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAClCowB,MAAM5oB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACxBqwB,YAAY7oB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAChCswB,OAAO9oB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC3BuwB,OAAO/oB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC3BwwB,QAAQhpB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC5BywB,OAAOjpB,EAAE,EAAEC,EAAE,EAAExH,EAAE,EAAED,EAAE,GACrB0wB,gBAAgBlpB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACpC2wB,MAAMnpB,EAAE,EAAEC,EAAE,EAAExH,EAAE,IAAID,EAAE,GACtB4wB,YAAYppB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,IAAID,EAAE,GAC/B6wB,OAAOrpB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,GAAGD,EAAE,GACzB8wB,WAAWtpB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/B+wB,WAAWvpB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9BgxB,YAAYxpB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GAC9BixB,WAAWzpB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAC9BkxB,OAAO1pB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAC1BmxB,gBAAgB3pB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACpCoxB,UAAU5pB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9BqxB,SAAS7pB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,GAAGD,EAAE,GAC3BsxB,MAAM9pB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACxBuxB,UAAU/pB,EAAE,EAAEC,EAAE,EAAExH,EAAE,IAAID,EAAE,GAC1BwxB,UAAUhqB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC5ByxB,eAAejqB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAClC0xB,UAAUlqB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9B2xB,WAAWnqB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GAC3B4xB,WAAWpqB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/B6xB,aAAarqB,EAAE,IAAIC,EAAE,EAAExH,EAAE,IAAID,EAAE,GAC/B8xB,gBAAgBtqB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAClC+xB,YAAYvqB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GAC9BgyB,YAAYxqB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,IAAID,EAAE,GAC/BiyB,SAASzqB,EAAE,IAAIC,EAAE,EAAExH,EAAE,EAAED,EAAE,GACzBkyB,YAAY1qB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAChCmyB,cAAc3qB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAClCoyB,eAAe5qB,EAAE,GAAGC,EAAE,GAAGxH,EAAE,IAAID,EAAE,GACjCqyB,eAAe7qB,EAAE,GAAGC,EAAE,GAAGxH,EAAE,GAAGD,EAAE,GAChCsyB,eAAe9qB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACjCuyB,YAAY/qB,EAAE,IAAIC,EAAE,EAAExH,EAAE,IAAID,EAAE,GAC9BwyB,UAAUhrB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,IAAID,EAAE,GAC7ByyB,aAAajrB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/B0yB,SAASlrB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC7B2yB,YAAYnrB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/B4yB,UAAUprB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9B6yB,WAAWrrB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,GAAGD,EAAE,GAC7B8yB,aAAatrB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACjC+yB,aAAavrB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAC/BgzB,SAASxrB,EAAE,IAAIC,EAAE,EAAExH,EAAE,IAAID,EAAE,GAC3BizB,WAAWzrB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/BkzB,YAAY1rB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAChCmzB,MAAM3rB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GACxBozB,WAAW5rB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAC9BqzB,MAAM7rB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC1BszB,OAAO9rB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GACvBuzB,aAAa/rB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAChCwzB,UAAUhsB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9ByzB,SAASjsB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC7B0zB,WAAWlsB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,GAAGD,EAAE,GAC7B2zB,QAAQnsB,EAAE,GAAGC,EAAE,EAAExH,EAAE,IAAID,EAAE,GACzB4zB,OAAOpsB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC3B6zB,OAAOrsB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC3B8zB,UAAUtsB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9B+zB,eAAevsB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACnCg0B,WAAWxsB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GAC7Bi0B,cAAczsB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAClCk0B,WAAW1sB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/Bm0B,YAAY3sB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAChCo0B,WAAW5sB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/Bq0B,sBAAsB7sB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC1Cs0B,WAAW9sB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/Bu0B,YAAY/sB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAChCw0B,WAAWhtB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/By0B,aAAajtB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACjC00B,eAAeltB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAClC20B,cAAcntB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAClC40B,gBAAgBptB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACpC60B,gBAAgBrtB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACpC80B,gBAAgBttB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACpC+0B,aAAavtB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACjCg1B,MAAMxtB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GACtBi1B,WAAWztB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAC7Bk1B,OAAO1tB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC3Bm1B,SAAS3tB,EAAE,IAAIC,EAAE,EAAExH,EAAE,IAAID,EAAE,GAC3Bo1B,QAAQ5tB,EAAE,IAAIC,EAAE,EAAExH,EAAE,EAAED,EAAE,GACxBq1B,kBAAkB7tB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACtCs1B,YAAY9tB,EAAE,EAAEC,EAAE,EAAExH,EAAE,IAAID,EAAE,GAC5Bu1B,cAAc/tB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,IAAID,EAAE,GACjCw1B,cAAchuB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAClCy1B,gBAAgBjuB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACnC01B,iBAAiBluB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACrC21B,mBAAmBnuB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACrC41B,iBAAiBpuB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACpC61B,iBAAiBruB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,IAAID,EAAE,GACpC81B,cAActuB,EAAE,GAAGC,EAAE,GAAGxH,EAAE,IAAID,EAAE,GAChC+1B,WAAWvuB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/Bg2B,WAAWxuB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/Bi2B,UAAUzuB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9Bk2B,aAAa1uB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACjCm2B,MAAM3uB,EAAE,EAAEC,EAAE,EAAExH,EAAE,IAAID,EAAE,GACtBo2B,SAAS5uB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC7Bq2B,OAAO7uB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GACzBs2B,WAAW9uB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAC9Bu2B,QAAQ/uB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GAC1Bw2B,WAAWhvB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,EAAED,EAAE,GAC5By2B,QAAQjvB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC5B02B,eAAelvB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACnC22B,WAAWnvB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/B42B,eAAepvB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACnC62B,eAAervB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACnC82B,YAAYtvB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAChC+2B,WAAWvvB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/Bg3B,MAAMxvB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GACzBi3B,MAAMzvB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC1Bk3B,MAAM1vB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC1Bm3B,YAAY3vB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAChCo3B,QAAQ5vB,EAAE,IAAIC,EAAE,EAAExH,EAAE,IAAID,EAAE,GAC1Bq3B,KAAK7vB,EAAE,IAAIC,EAAE,EAAExH,EAAE,EAAED,EAAE,GACrBs3B,WAAW9vB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/Bu3B,WAAW/vB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9Bw3B,aAAahwB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,GAAGD,EAAE,GAC/By3B,QAAQjwB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC5B03B,YAAYlwB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAC/B23B,UAAUnwB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,GAC5B43B,UAAUpwB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9B63B,QAAQrwB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,GAAGD,EAAE,GAC1B83B,QAAQtwB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC5B+3B,SAASvwB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC7Bg4B,WAAWxwB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,IAAID,EAAE,GAC9Bi4B,WAAWzwB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/Bk4B,MAAM1wB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC1Bm4B,aAAa3wB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC/Bo4B,WAAW5wB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9Bq4B,KAAK7wB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACzBs4B,MAAM9wB,EAAE,EAAEC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GACxBu4B,SAAS/wB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC7Bw4B,QAAQhxB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,GAAGD,EAAE,GAC1By4B,WAAWjxB,EAAE,GAAGC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC9B04B,QAAQlxB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC5B24B,WAAWnxB,EAAE,IAAIC,EAAE,GAAGxH,EAAE,IAAID,EAAE,GAC9B44B,OAAOpxB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC3B64B,OAAOrxB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAC3B84B,YAAYtxB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,IAAID,EAAE,GAChC+4B,QAAQvxB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,EAAED,EAAE,GAC1Bg5B,aAAaxxB,EAAE,IAAIC,EAAE,IAAIxH,EAAE,GAAGD,EAAE,IAElC2D,MAAO,SAASlD,GACd,GAAqB,gBAAVA,KACTA,EAAQA,EAAMgN,cACVhN,IAASvC,MAAK8xB,OAAO,CACvB,GAAIiJ,GAAQ/6B,KAAK8xB,MAAMvvB,EACvB,QACE+G,EAAGyxB,EAAMzxB,EACTC,EAAGwxB,EAAMxxB,EACTxH,EAAGg5B,EAAMh5B,EACTD,EAAGi5B,EAAMj5B,GAIf,OAAO,KAITk5B,MAAO,sCACPv1B,MAAO,SAASlD,GACd,GAAI04B,GAAUj7B,KAAKg7B,MAAME,KAAK34B,EAC9B,OAAgB,QAAZ04B,GAEA3xB,EAAGsoB,SAASqJ,EAAQ,GAAKA,EAAQ,GAAI,IACrC1xB,EAAGqoB,SAASqJ,EAAQ,GAAKA,EAAQ,GAAI,IACrCl5B,EAAG6vB,SAASqJ,EAAQ,GAAKA,EAAQ,GAAI,IACrCn5B,EAAG,IAGA,KAITk5B,MAAO,+CACPv1B,MAAO,SAASlD,GACd,GAAI04B,GAAUj7B,KAAKg7B,MAAME,KAAK34B,EAC9B,OAAgB,QAAZ04B,GAEA3xB,EAAGsoB,SAASqJ,EAAQ,GAAI,IACxB1xB,EAAGqoB,SAASqJ,EAAQ,GAAI,IACxBl5B,EAAG6vB,SAASqJ,EAAQ,GAAI,IACxBn5B,EAAG,IAGA,KAITk5B,MAAO,4DACPv1B,MAAO,SAASlD,GACd,GAAI04B,GAAUj7B,KAAKg7B,MAAME,KAAK34B,EAC9B,OAAgB,QAAZ04B,GAEA3xB,EAAG0O,KAAK3K,IAAI,IAAKukB,SAASqJ,EAAQ,GAAI,KACtC1xB,EAAGyO,KAAK3K,IAAI,IAAKukB,SAASqJ,EAAQ,GAAI,KACtCl5B,EAAGiW,KAAK3K,IAAI,IAAKukB,SAASqJ,EAAQ,GAAI,KACtCn5B,EAAG,IAGA,KAITk5B,MAAO,kFACPv1B,MAAO,SAASlD,GACd,GAAI04B,GAAUj7B,KAAKg7B,MAAME,KAAK34B,EAC9B,OAAgB,QAAZ04B,GAEA3xB,EAAG0O,KAAK3K,IAAI,IAAKukB,SAASqJ,EAAQ,GAAI,KACtC1xB,EAAGyO,KAAK3K,IAAI,IAAKukB,SAASqJ,EAAQ,GAAI,KACtCl5B,EAAGiW,KAAK3K,IAAI,IAAKukB,SAASqJ,EAAQ,GAAI,KACtCn5B,EAAGkW,KAAK3K,IAAI,EAAKiL,WAAW2iB,EAAQ,OAGjC,KAab5xB,EAAM5D,MAAQ,SAASlD,GAIrB,IAAK,GAFD44B,GAAK9xB,EAAMooB,QAENlwB,EAAI,EAAGA,EAAI45B,EAAGp6B,OAAQQ,IAC/B,CACE,GAAI+O,GAAS6qB,EAAI55B,GAAIkE,MAAOlD,EAE5B,IAAI+N,KAAW,EAEb,MAAOA,GAIX,OAAO,GAWTjH,EAAM+xB,OAAS,SAAS1J,GAEtB,GAAI2J,GAAKluB,GAAOtL,EAAU6vB,EAAM5vB,EAAG,GAAO,EAAG,GACzCw5B,EAAKtjB,KAAKsL,MAAOnW,GAAOtL,EAAU6vB,EAAMpoB,EAAG,KAAO,EAAG,MACrDiyB,EAAKvjB,KAAKsL,MAAOnW,GAAOtL,EAAU6vB,EAAMnoB,EAAG,KAAO,EAAG,MACrDiyB,EAAKxjB,KAAKsL,MAAOnW,GAAOtL,EAAU6vB,EAAM3vB,EAAG,KAAO,EAAG,KAEzD,IAAW,IAAPs5B,EACJ,CACE,GAAI/xB,GAAIgyB,EAAGG,SAAU,IACjBlyB,EAAIgyB,EAAGE,SAAU,IACjB15B,EAAIy5B,EAAGC,SAAU,GAYrB,OAViB,KAAbnyB,EAAEvI,SACJuI,EAAI,IAAMA,GAEK,IAAbC,EAAExI,SACJwI,EAAI,IAAMA,GAEK,IAAbxH,EAAEhB,SACJgB,EAAI,IAAMA,GAGL,IAAMuH,EAAIC,EAAIxH,EAIrB,MAAO,QAAUu5B,EAAK,IAAMC,EAAK,IAAMC,EAAK,IAAMH,EAAK,KAgD3D7xB,EAAS,UAAW,SAASO,EAAYjG,GAEvC,GAAIma,GAAOlU,EAAW3F,UAClBA,EAAYN,EAASyK,aAAc0P,EAEvC,OAAKA,KAAQna,GAAS+G,MAEbzG,EAAUoB,WAAWuS,MAAOjU,EAAS+G,MAAOoT,IAI5C7Z,EAAUoa,iBAoBrBhV,EAAS,WAAY,SAASkyB,EAAgBC,GAG5C,GAAK9xB,EAAY6xB,GAEf,MAAOA,EAGT,IAAIE,GAAmB,SAAS7xB,EAAYjG,GAE1C,GAAIma,GAAOlU,EAAW3F,UAClBA,EAAYN,EAASyK,aAAc0P,GACnCnP,EAAO1K,EAAUoB,WACjBkb,EAAU,IAgBd,OAZEA,GAFGzC,IAAQna,GAAS+G,MAEViE,EAAKiJ,MAAOjU,EAAS+G,MAAOoT,IAI5B7Z,EAAUoa,eAGjBmd,IAEHjb,EAAU5R,EAAK0b,IAAK9J,EAASib,IAGxB7sB,EAAKsX,IAAK1F,EAASgb,GAU5B,OANAE,GAAiBpyB,UAAW,EAG5BoyB,EAAiBF,eAAiBA,EAClCE,EAAiBD,KAAOA,EAEjBC,IA0BTpyB,EAAS,SAAU,SAASqyB,GAE1B,GAAIC,GAAiB,IAErB,IAAKn7B,EAASk7B,GAEZC,EAAiB,SAAS/xB,EAAYjG,GAEpC,GAAIma,GAAOlU,EAAW3F,UAClBA,EAAYN,EAASyK,aAAc0P,GACnCnP,EAAO1K,EAAUoB,WACjBu2B,EAAWF,EAAiB7jB,KAAKsL,MAAOtL,KAAK4S,SAAWiR,EAAgB96B,QAE5E,OAAO+N,GAAKrJ,MAAOs2B,EAAUjtB,EAAKpJ,WAGjC,IAAKm2B,YAA2Bv1B,GAEnCw1B,EAAiB,SAAS/xB,EAAYjG,GAEpC,GAAIma,GAAOlU,EAAW3F,UAClBA,EAAYN,EAASyK,aAAc0P,GACnCnP,EAAO1K,EAAUoB,UAErB,OAAOq2B,GAAgBtN,QAASzf,EAAKgX,SAAU9N,KAAK4S,eAGnD,CAAA,KAAK/pB,EAAUg7B,IAAqB37B,EAAW27B,EAAgBxuB,MAASnN,EAAW27B,EAAgBrvB,MAiBtG,KAAM,yBAA2BqvB,CAfjCC,GAAiB,SAAS/xB,EAAYjG,GAEpC,GAAIma,GAAOlU,EAAW3F,UAClBA,EAAYN,EAASyK,aAAc0P,GACnCnP,EAAO1K,EAAUoB,WACjBw2B,EAAc55B,EAASy5B,EAAgBxuB,KACvC4uB,EAAc75B,EAASy5B,EAAgBrvB,KACvCa,EAAMyB,EAAKrJ,MAAOu2B,EAAaltB,EAAKpJ,MACpC8G,EAAMsC,EAAKrJ,MAAOw2B,EAAantB,EAAKpJ,KAExC,OAAOoJ,GAAK8b,OAAQ9b,EAAKgX,SAAUzY,EAAKb,IAW5C,MAFAsvB,GAAeD,gBAAkBA,EAE1BryB,EAAUsyB,KAenBtyB,EAAS,WAAY,SAAS0yB,GAE5B,GAAIC,GAAmB9tB,GAAY,UAE/B+tB,EAAmB,SAASryB,EAAYjG,GAK1C,IAAK,GAHDM,GAAYN,EAASyK,aAAcxE,EAAW3F,WAC9Ci4B,KAEK96B,EAAI,EAAGA,EAAI26B,EAAQn7B,OAAQQ,IAElC86B,EAASj7B,KAAM0I,EAAiBC,EAAYjG,EAAUo4B,EAAS36B,GAAK46B,GAGtE,OAAO/3B,GAAUqB,MAAO42B,GAM1B,OAFAD,GAAiBF,QAAUA,EAEpB1yB,EAAU4yB,IAkfnB,IAAI3uB,IAAqB,IAAMuK,KAAKskB,GAChC1uB,GAAqBoK,KAAKskB,GAAK,IA+F/B5tB,IAEF0X,IAAK,SAAShgB,GAEZ,GAAIwI,GAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1By4B,EAAezyB,EAAiBC,EAAYjG,EAAUsC,EAAOuI,EAAOP,WAExE,OAAOU,GAAKsX,IAAK1kB,EAAK66B,GAGxB,OAAOtuB,IAAiBjO,KAAM4O,IAGhCqX,IAAK,SAAS7f,GAEZ,GAAIwI,GAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1By4B,EAAezyB,EAAiBC,EAAYjG,EAAUsC,EAAOuI,EAAOP,WAExE,OAAOU,GAAKmX,IAAKvkB,EAAK66B,GAGxB,OAAOtuB,IAAiBjO,KAAM4O,IAGhC4b,IAAK,SAASpkB,GAEZ,GAAIwI,GAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1By4B,EAAezyB,EAAiBC,EAAYjG,EAAUsC,EAAOuI,EAAOP,WAExE,OAAOU,GAAK0b,IAAK9oB,EAAK66B,GAGxB,OAAOtuB,IAAiBjO,KAAM4O,IAGhC6b,IAAK,SAASrkB,GAEZ,GAAIwI,GAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1By4B,EAAezyB,EAAiBC,EAAYjG,EAAUsC,EAAOuI,EAAOP,WAExE,OAAOU,GAAK2b,IAAK/oB,EAAK66B,GAGxB,OAAOtuB,IAAiBjO,KAAM4O,IAGhChK,MAAO,SAAS43B,GAEd,GAAIC,GAAapuB,GAAY,UAEzBO,EAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1B44B,EAAgB5yB,EAAiBC,EAAYjG,EAAU04B,EAAQC,EAEnE,OAAO3tB,GAAKlK,MAAOlD,EAAKg7B,GAG1B,OAAOzuB,IAAiBjO,KAAM4O,IAGhC2b,KAAM,SAASnkB,EAAOo2B,GAEpB,GAAIC,GAAapuB,GAAY,UAEzBO,EAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1By4B,EAAezyB,EAAiBC,EAAYjG,EAAUsC,EAAOuI,EAAOP,YACpEsuB,EAAgB5yB,EAAiBC,EAAYjG,EAAU04B,EAAQC,EAEnE,OAAO3tB,GAAKyb,KAAM7oB,EAAK66B,EAAcG,GAGvC,OAAOzuB,IAAiBjO,KAAM4O,IAGhC+tB,IAAK,WAEH,GAAI/tB,GAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,EAE9B,OAAOgL,GAAKlK,MAAOlD,EAAK,IAG1B,OAAOuM,IAAiBjO,KAAM4O,IAGhCvB,IAAK,SAASjH,GAEZ,GAAIwI,GAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1By4B,EAAezyB,EAAiBC,EAAYjG,EAAUsC,EAAOuI,EAAOP,WAExE,OAAOU,GAAKzB,IAAK3L,EAAKA,EAAK66B,GAG7B,OAAOtuB,IAAiBjO,KAAM4O,IAGhCpC,IAAK,SAASpG,GAEZ,GAAIwI,GAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1By4B,EAAezyB,EAAiBC,EAAYjG,EAAUsC,EAAOuI,EAAOP,WAExE,OAAOU,GAAKtC,IAAK9K,EAAKA,EAAK66B,GAG7B,OAAOtuB,IAAiBjO,KAAM4O,IAGhCguB,SAAU,SAASC,GAEjB,GAAIC,GAAkBzuB,GAAY,UAE9BO,EAAoB,SAAS7E,EAAYjG,EAAU6K,GAErD,GAAIjN,GAAMiN,EAAQ5E,EAAYjG,GAC1Bi5B,EAAqBjzB,EAAiBC,EAAYjG,EAAU+4B,EAAaC,EAE7E,OAAO9kB,MAAKsL,MAAO5hB,EAAMq7B,GAAuBA,EAGlD,OAAO9uB,IAAiBjO,KAAM4O,IAGhCouB,IAAK,SAASlvB,GAEZ,GAAImvB,GAAc5uB,GAAY,UAE1BO,EAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,CAAA,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,EACTgG,GAAiBC,EAAYjG,EAAUgK,EAASmvB,GAErE,MAAOnuB,GAAKwb,QAAS5oB,EAAKmM,GAAQC,IAGpC,OAAOG,IAAiBjO,KAAM4O,IAGhCzB,MAAO,SAASE,EAAKb,GAEnB,GAAI0wB,GAAY7uB,GAAY,UAExBO,EAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1Bq5B,EAAarzB,EAAiBC,EAAYjG,EAAUuJ,EAAK6vB,GACzDE,EAAatzB,EAAiBC,EAAYjG,EAAU0I,EAAK0wB,EAE7D,OAAOpuB,GAAKwb,QAAS5oB,EAAK4L,GAAS6vB,EAAYC,IAGjD,OAAOnvB,IAAiBjO,KAAM4O,IAGhC0b,QAAS,SAAS+S,GAEhB,GAAIzuB,GAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,EAE9B,OAAOgL,GAAKwb,QAAS5oB,EAAK27B,GAG5B,OAAOpvB,IAAiBjO,KAAM4O,IAGhC8d,IAAK,WAEH,MAAO1sB,MAAKsqB,QAAStS,KAAK0U,MAG5B7B,KAAM,WAEJ,MAAO7qB,MAAKsqB,QAAStS,KAAK6S,OAG5BvH,MAAO,WAEL,MAAOtjB,MAAKsqB,QAAStS,KAAKsL,QAG5BoL,KAAM,WAEJ,MAAO1uB,MAAKsqB,QAAStS,KAAK0W,OAG5B4O,MAAO,WAEL,MAAOt9B,MAAKsqB,QAAStS,KAAKslB,QAG5B/vB,UAAW,WAET,MAAOvN,MAAKsqB,QAAS/c,KAGvBG,UAAW,WAET,MAAO1N,MAAKsqB,QAAS5c,KAGvBif,IAAK,WAEH,MAAO3sB,MAAKsqB,QAAStS,KAAK2U,MAG5BH,IAAK,WAEH,MAAOxsB,MAAKsqB,QAAStS,KAAKwU,MAG5B2N,IAAK,WAEH,MAAOn6B,MAAKsqB,QAAStS,KAAKmiB,MAG5BoD,WAAY,WAEV,MAAOv9B,MAAK0N,YAAYif,OAG1B6Q,WAAY,WAEV,MAAOx9B,MAAK0N,YAAY8e,OAG1BiR,WAAY,WAEV,MAAOz9B,MAAK0N,YAAYysB,OAG1BrlB,SAAU,SAAS1O,GAEjB,GAAIwI,GAAoB,SAAS7E,EAAYjG,EAAU6K,EAAQG,GAE7D,GAAIpN,GAAMiN,EAAQ5E,EAAYjG,GAC1By4B,EAAezyB,EAAiBC,EAAYjG,EAAUsC,EAAOuI,EAAOP,WAExE,OAAOU,GAAKgG,SAAUpT,EAAK66B,GAG7B,OAAOtuB,IAAiBjO,KAAM4O,EAAmB,WAGnDlD,SAAU,SAASgyB,EAAcpvB,GAE/B,GAAIM,GAAoB,SAAS7E,EAAYjG,EAAU6K,GAErD,GAAIjN,GAAMiN,EAAQ5E,EAAYjG,EAE9B,OAAOjD,GAAUa,GAAQA,EAAKg8B,GAAiBpvB,EAGjD,OAAOL,IAAiBjO,KAAM4O,EAAmB,WAGnD+uB,OAAQ,SAASn4B,GAEf,GAAIo4B,GAAmB/7B,EAAU2D,EAAY,MAEzCoJ,EAAoB,SAAS7E,EAAYjG,EAAU6K,GAErD,GAAIiO,GAAQjO,EAAQ5E,EAAYjG,EAEhC,QAAQ85B,GACN,IAAK,KACH,OACEz9B,EAAG6X,KAAK2U,IAAK/P,GACbJ,EAAGxE,KAAKwU,IAAK5P,GAEjB,KAAK,KACH,GAAIihB,GAAMjhB,EAAMzc,EACZ29B,EAAQlhB,EAAMJ,CAClB,QACErc,EAAG6X,KAAK2U,IAAKkR,GAAQ7lB,KAAK2U,IAAKmR,GAC/BthB,EAAGxE,KAAKwU,IAAKqR,GAAQ7lB,KAAK2U,IAAKmR,GAC/BphB,EAAG1E,KAAKwU,IAAKsR,IAInB,MAAOlhB,GAGT,OAAO3O,IAAiBjO,KAAM4O,EAAmBgvB,IAGnDG,cAAe,SAAS1jB,GAEtB,MAAOra,MAAK0N,YAAYiwB,OAAQtjB,IAGlCkH,SAAU,SAASoa,GAEjB,GAAI/sB,GAAoB,SAAS7E,EAAYjG,EAAU6K,GAErD,GAAIjN,GAAMiN,EAAQ5E,EAAYjG,EAE9B,OAAO0F,GAAS+X,SAAU7f,EAAKi6B,GAAQ5xB,EAAYjG,GAGrD,OAAOmK,IAAiBjO,KAAM4O,KAM9BY,MAKAN,IAEFG,OAAQ,GACR7M,WACA2M,OAAO,EACP7L,UAAW,KAmIb6H,IAAM1J,OAAQoP,GAAcrN,GAE1Bw6B,SACEC,KAAU,EACVC,MAAU,IACVC,OAAU,GACVC,OAAU,GACVC,IAAU,EACVC,OAAU,KAEZ74B,MAAO,SAAStF,EAAGmO,EAAciwB,GAG/B,GAAKn+B,EAAYD,GAEf,MAAOA,EAIT,IAAKA,KAAM,EAET,MAAOqJ,GAASkX,OAIlB,IAAKlgB,EAAUL,GAEb,OACEA,EAAGA,EACHqc,EAAGrc,EAKFQ,GAASR,KAEZA,GAAMA,EAAGA,EAAE,GAAIqc,EAAGrc,EAAE,IAItB,IAAIq+B,GAAM38B,EAAUyM,EAAcyB,GAASwM,aAG3C,IAAK1b,EAAUV,GACf,CACE,GAAIs+B,GAAK58B,EAAU1B,EAAEA,EAAGq+B,EAAIr+B,GACxBu+B,EAAK78B,EAAU1B,EAAEqc,EAAGgiB,EAAIhiB,GACxBmiB,EAAK93B,GAAS43B,GAAI,GAClBG,EAAK/3B,GAAS63B,GAAI,EAEtB,IAAKC,KAAO,GAASC,KAAO,EAC5B,CACE,GAAItuB,IAAWnQ,EAAGw+B,EAAIniB,EAAGoiB,GACrBC,EAAKl1B,EAAY80B,GACjBK,EAAKn1B,EAAY+0B,EAErB,KAAMH,IAAmBM,GAAMC,GAC/B,CACE,GAAInD,IACFx7B,EAAG0+B,EAAK,EAAI,EACZriB,EAAGsiB,EAAK,EAAI,EAGd,OAAOt1B,GAAS+X,SAAUjR,EAAQqrB,GAGpC,MAAOrrB,IAKX,GAAK5P,EAAUP,GACf,CAEE,IAAMo+B,GAAkB50B,EAAYxJ,GACpC,CACE,GAAIw+B,GAAK93B,GAAS1G,GAAG,EAErB,IAAKw+B,KAAO,EAEV,MAAOn1B,GAAS+X,UAAYphB,EAAGw+B,EAAIniB,EAAGmiB,IAI1C,GAAIlmB,GAAOtY,EAAEe,MAAM,SAEnB,QACEf,EAAGH,KAAK++B,YAAatmB,EAAK,GAAI+lB,EAAIr+B,GAClCqc,EAAGxc,KAAK++B,YAAal9B,EAAS4W,EAAK,GAAIA,EAAK,IAAK+lB,EAAIhiB,IAKzD,MAAOxc,MAAK+X,MAAOymB,IAErBO,YAAa,SAAS5+B,EAAGmO,GAEvB,MAAOnO,KAAKH,MAAKg+B,QAAUh+B,KAAKg+B,QAAS79B,GAAM0G,GAAS1G,EAAGmO,IAE7DjN,KAAM,SAASK,EAAKL,GAIlB,MAFAK,GAAIvB,EAAIkB,EAAKlB,EACbuB,EAAI8a,EAAInb,EAAKmb,EACN9a,GAETokB,OAAQ,WAEN,OAAQ3lB,EAAG,EAAKqc,EAAG,IAErB6N,KAAM,SAAS3oB,GAIb,MAFAA,GAAIvB,EAAI,EACRuB,EAAI8a,EAAI,EACD9a,GAET4oB,QAAS,SAAS5oB,EAAK27B,GAIrB,MAFA37B,GAAIvB,EAAIk9B,EAAW37B,EAAIvB,GACvBuB,EAAI8a,EAAI6gB,EAAW37B,EAAI8a,GAChB9a,GAET6oB,KAAM,SAAS7oB,EAAK4f,EAAQ0d,GAI1B,MAFAt9B,GAAIvB,GAAKmhB,EAAOnhB,EAAI6+B,EACpBt9B,EAAI8a,GAAK8E,EAAO9E,EAAIwiB,EACbt9B,GAET8oB,IAAK,SAAS9oB,EAAKkD,GAIjB,MAFAlD,GAAIvB,GAAKyE,EAAMzE,EACfuB,EAAI8a,GAAK5X,EAAM4X,EACR9a,GAET+oB,IAAK,SAAS/oB,EAAKm7B,GAIjB,MAFAn7B,GAAIvB,EAAI08B,EAAY18B,EAAIuB,EAAIvB,EAAI08B,EAAY18B,EAAI,EAChDuB,EAAI8a,EAAIqgB,EAAYrgB,EAAI9a,EAAI8a,EAAIqgB,EAAYrgB,EAAI,EACzC9a,GAETgpB,YAAa,SAAShpB,EAAKmS,EAAO3K,EAAKyhB,GAIrC,MAFAjpB,GAAIvB,GAAK+I,EAAI/I,EAAI0T,EAAM1T,GAAKwqB,EAAQ9W,EAAM1T,EAC1CuB,EAAI8a,GAAKtT,EAAIsT,EAAI3I,EAAM2I,GAAKmO,EAAQ9W,EAAM2I,EACnC9a,GAETopB,WAAY,SAAShpB,EAAGC,GAEtB,GAAIk9B,GAAKn9B,EAAE3B,EAAI4B,EAAE5B,EACb++B,EAAKp9B,EAAE0a,EAAIza,EAAEya,CACjB,OAAOyiB,GAAKA,EAAKC,EAAKA,GAExBlU,QAAS,SAASlpB,GAEhB,MAAoB,gBAANA,IAAkB,KAAOA,IAAK,KAAOA,IAErDuX,MAAO,SAASvX,GAEd,MAAOuX,OAAMvX,EAAE3B,IAAMkZ,MAAMvX,EAAE0a,IAE/ByO,OAAQ,SAASnpB,EAAGq9B,GAElB,MAAOnnB,MAAK0U,IAAI5qB,EAAE3B,GAAKg/B,GAChBnnB,KAAK0U,IAAI5qB,EAAE0a,GAAK2iB,GAEzBjU,QAAS,SAASppB,EAAGC,EAAGo9B,GAEtB,MAAOnnB,MAAK0U,IAAI5qB,EAAE3B,EAAI4B,EAAE5B,GAAKg/B,GACtBnnB,KAAK0U,IAAI5qB,EAAE0a,EAAIza,EAAEya,GAAK2iB,GAE/B9xB,IAAK,SAAS3L,EAAKI,EAAGC,GAIpB,MAFAL,GAAIvB,EAAI6X,KAAK3K,IAAIvL,EAAE3B,EAAG4B,EAAE5B,GACxBuB,EAAI8a,EAAIxE,KAAK3K,IAAIvL,EAAE0a,EAAGza,EAAEya,GACjB9a,GAET8K,IAAK,SAAS9K,EAAKI,EAAGC,GAIpB,MAFAL,GAAIvB,EAAI6X,KAAKxL,IAAI1K,EAAE3B,EAAG4B,EAAE5B,GACxBuB,EAAI8a,EAAIxE,KAAKxL,IAAI1K,EAAE0a,EAAGza,EAAEya,GACjB9a,GAETypB,IAAK,SAASrpB,EAAGC,GAEf,MAAOD,GAAE3B,EAAI4B,EAAE5B,EAAI2B,EAAE0a,EAAIza,EAAEya,GAE7BoO,OAAQ,SAASlpB,EAAK2L,EAAKb,GAIzB,MAFA9K,GAAIvB,GAAKqM,EAAIrM,EAAIkN,EAAIlN,GAAK6X,KAAK4S,SAAWvd,EAAIlN,EAC9CuB,EAAI8a,GAAKhQ,EAAIgQ,EAAInP,EAAImP,GAAKxE,KAAK4S,SAAWvd,EAAImP,EACvC9a;IAiBXyJ,GAAM1J,OAAQsP,GAAcvN,GAE1BiC,MAAO,SAAStF,EAAGmO,EAAciwB,GAG/B,GAAKn+B,EAAYD,GAEf,MAAOA,EAIT,IAAKA,KAAM,EAET,MAAOqJ,GAASkX,OAIlB,IAAKlgB,EAAUL,GAEb,OACEA,EAAGA,EACHqc,EAAGrc,EACHuc,EAAGvc,EAKFQ,GAASR,KAEZA,GAAMA,EAAGA,EAAE,GAAIqc,EAAGrc,EAAE,GAAIuc,EAAGvc,EAAE,IAI/B,IAAIq+B,GAAM38B,EAAUyM,EAAcyB,GAAS0M,aAG3C,IAAK5b,EAAUV,GACf,CACE,GAAIs+B,GAAK58B,EAAU1B,EAAEA,EAAGq+B,EAAIr+B,GACxBu+B,EAAK78B,EAAU1B,EAAEqc,EAAGgiB,EAAIhiB,GACxB4iB,EAAKv9B,EAAU1B,EAAEuc,EAAG8hB,EAAI9hB,GACxBiiB,EAAK93B,GAAS43B,GAAI,GAClBG,EAAK/3B,GAAS63B,GAAI,GAClBW,EAAKx4B,GAASu4B,GAAI,EAEtB,IAAKT,KAAO,GAASC,KAAO,GAASS,KAAO,EAC5C,CACE,GAAI/uB,IAAWnQ,EAAGw+B,EAAIniB,EAAGoiB,EAAIliB,EAAG2iB,GAC5BR,EAAKl1B,EAAY80B,GACjBK,EAAKn1B,EAAY+0B,GACjBY,EAAK31B,EAAYy1B,EAErB,KAAMb,IAAmBM,GAAMC,GAAMQ,GACrC,CACE,GAAI3D,IACFx7B,EAAG0+B,EAAK,EAAI,EACZriB,EAAGsiB,EAAK,EAAI,EACZpiB,EAAG4iB,EAAK,EAAI,EAGd,OAAO91B,GAAS+X,SAAUjR,EAAQqrB,GAGpC,MAAOrrB,IAIX,GAAK5P,EAAUP,GACf,CAEE,IAAMo+B,GAAkB50B,EAAYxJ,GACpC,CACE,GAAIw+B,GAAK93B,GAAS1G,GAAG,EAErB,IAAKw+B,KAAO,EAEV,MAAOn1B,GAAS+X,UAAYphB,EAAGw+B,EAAIniB,EAAGmiB,EAAIjiB,EAAGiiB,IAIjD,GAAIlmB,GAAOtY,EAAEe,MAAM,SAEnB,QACEf,EAAG0G,GAAS4R,EAAK,GAAI+lB,EAAIr+B,GACzBqc,EAAG3V,GAAS4R,EAAK,GAAI+lB,EAAIhiB,GACzBE,EAAG7V,GAAS4R,EAAK,GAAI+lB,EAAI9hB,IAK7B,MAAO1c,MAAK+X,MAAOymB,IAErBn9B,KAAM,SAASK,EAAKL,GAKlB,MAHAK,GAAIvB,EAAIkB,EAAKlB,EACbuB,EAAI8a,EAAInb,EAAKmb,EACb9a,EAAIgb,EAAIrb,EAAKqb,EACNhb,GAETokB,OAAQ,WAEN,OAAQ3lB,EAAG,EAAKqc,EAAE,EAAKE,EAAE,IAE3B2N,KAAM,SAAS3oB,GAKb,MAHAA,GAAIvB,EAAI,EACRuB,EAAI8a,EAAI,EACR9a,EAAIgb,EAAI,EACDhb,GAET4oB,QAAS,SAAS5oB,EAAK27B,GAKrB,MAHA37B,GAAIvB,EAAIk9B,EAAW37B,EAAIvB,GACvBuB,EAAI8a,EAAI6gB,EAAW37B,EAAI8a,GACvB9a,EAAIgb,EAAI2gB,EAAW37B,EAAIgb,GAChBhb,GAET6oB,KAAM,SAAS7oB,EAAK4f,EAAQ0d,GAK1B,MAHAt9B,GAAIvB,GAAKmhB,EAAOnhB,EAAI6+B,EACpBt9B,EAAI8a,GAAK8E,EAAO9E,EAAIwiB,EACpBt9B,EAAIgb,GAAK4E,EAAO5E,EAAIsiB,EACbt9B,GAET8oB,IAAK,SAAS9oB,EAAKkD,GAKjB,MAHAlD,GAAIvB,GAAKyE,EAAMzE,EACfuB,EAAI8a,GAAK5X,EAAM4X,EACf9a,EAAIgb,GAAK9X,EAAM8X,EACRhb,GAET+oB,IAAK,SAAS/oB,EAAKm7B,GAKjB,MAHAn7B,GAAIvB,EAAI08B,EAAY18B,EAAIuB,EAAIvB,EAAI08B,EAAY18B,EAAI,EAChDuB,EAAI8a,EAAIqgB,EAAYrgB,EAAI9a,EAAI8a,EAAIqgB,EAAYrgB,EAAI,EAChD9a,EAAIgb,EAAImgB,EAAYngB,EAAIhb,EAAIgb,EAAImgB,EAAYngB,EAAI,EACzChb,GAETgpB,YAAa,SAAShpB,EAAKmS,EAAO3K,EAAKyhB,GAKrC,MAHAjpB,GAAIvB,GAAK+I,EAAI/I,EAAI0T,EAAM1T,GAAKwqB,EAAQ9W,EAAM1T,EAC1CuB,EAAI8a,GAAKtT,EAAIsT,EAAI3I,EAAM2I,GAAKmO,EAAQ9W,EAAM2I,EAC1C9a,EAAIgb,GAAKxT,EAAIwT,EAAI7I,EAAM6I,GAAKiO,EAAQ9W,EAAM6I,EACnChb,GAETopB,WAAY,SAAShpB,EAAGC,GAEtB,GAAIk9B,GAAKn9B,EAAE3B,EAAI4B,EAAE5B,EACb++B,EAAKp9B,EAAE0a,EAAIza,EAAEya,EACb+iB,EAAKz9B,EAAE4a,EAAI3a,EAAE2a,CACjB,OAAOuiB,GAAKA,EAAKC,EAAKA,EAAKK,EAAKA,GAElCvU,QAAS,SAASlpB,GAEhB,MAAoB,gBAANA,IAAkB,KAAOA,IAAK,KAAOA,IAAK,KAAOA,IAEjEuX,MAAO,SAASvX,GAEd,MAAOuX,OAAMvX,EAAE3B,IAAMkZ,MAAMvX,EAAE0a,IAAMnD,MAAMvX,EAAE4a,IAE7CuO,OAAQ,SAASnpB,EAAGq9B,GAElB,MAAOnnB,MAAK0U,IAAI5qB,EAAE3B,GAAKg/B,GAChBnnB,KAAK0U,IAAI5qB,EAAE0a,GAAK2iB,GAAWnnB,KAAK0U,IAAI5qB,EAAE4a,GAAKyiB,GAEpDjU,QAAS,SAASppB,EAAGC,EAAGo9B,GAEtB,MAAOnnB,MAAK0U,IAAI5qB,EAAE3B,EAAI4B,EAAE5B,GAAKg/B,GACtBnnB,KAAK0U,IAAI5qB,EAAE0a,EAAIza,EAAEya,GAAK2iB,GACtBnnB,KAAK0U,IAAI5qB,EAAE4a,EAAI3a,EAAE2a,GAAKyiB,GAE/B9xB,IAAK,SAAS3L,EAAKI,EAAGC,GAKpB,MAHAL,GAAIvB,EAAI6X,KAAK3K,IAAIvL,EAAE3B,EAAG4B,EAAE5B,GACxBuB,EAAI8a,EAAIxE,KAAK3K,IAAIvL,EAAE0a,EAAGza,EAAEya,GACxB9a,EAAIgb,EAAI1E,KAAK3K,IAAIvL,EAAE4a,EAAG3a,EAAE2a,GACjBhb,GAET8K,IAAK,SAAS9K,EAAKI,EAAGC,GAKpB,MAHAL,GAAIvB,EAAI6X,KAAKxL,IAAI1K,EAAE3B,EAAG4B,EAAE5B,GACxBuB,EAAI8a,EAAIxE,KAAKxL,IAAI1K,EAAE0a,EAAGza,EAAEya,GACxB9a,EAAIgb,EAAI1E,KAAKxL,IAAI1K,EAAE4a,EAAG3a,EAAE2a,GACjBhb,GAETypB,IAAK,SAASrpB,EAAGC,GAEf,MAAOD,GAAE3B,EAAI4B,EAAE5B,EAAI2B,EAAE0a,EAAIza,EAAEya,EAAI1a,EAAE4a,EAAI3a,EAAE2a,GAEzCkO,OAAQ,SAASlpB,EAAK2L,EAAKb,GAKzB,MAHA9K,GAAIvB,GAAKqM,EAAIrM,EAAIkN,EAAIlN,GAAK6X,KAAK4S,SAAWvd,EAAIlN,EAC9CuB,EAAI8a,GAAKhQ,EAAIgQ,EAAInP,EAAImP,GAAKxE,KAAK4S,SAAWvd,EAAImP,EAC9C9a,EAAIgb,GAAKlQ,EAAIkQ,EAAIrP,EAAIqP,GAAK1E,KAAK4S,SAAWvd,EAAIqP,EACvChb,KAkBXyJ,GAAM1J,OAAQuP,GAAkBxN,GAE9BiC,MAAO,SAAStF,EAAGmO,EAAciwB,GAG/B,GAAKn+B,EAAYD,GAEf,MAAOA,EAIT,IAAKA,KAAM,EAET,MAAOqJ,GAASkX,OAUlB,IANK/f,EAASR,KAEZA,EAAIA,EAAG,IAIJK,EAAUL,GAEb,MAAOA,EAIT,IAAKO,EAAUP,GACf,CACE,GAAImhB,GAASza,GAAS1G,GAAG,EAEzB,IAAKmhB,KAAW,EAEd,OAAMid,GAAkB50B,EAAYxJ,GAE3BqJ,EAAS+X,SAAUD,GAInBA,EAKb,MAAOza,IAASyH,EAAcyB,GAASuM,mBAEzCjb,KAAM,SAASK,EAAKL,GAElB,MAAOA,IAETykB,OAAQ,WAEN,MAAO,IAETuE,KAAM,WAEJ,MAAO,IAETC,QAAS,SAAS5oB,EAAK27B,GAErB,MAAOA,GAAW37B,IAEpB6oB,KAAM,SAAS7oB,EAAK4f,EAAQ0d,GAE1B,MAAOt9B,IAAO4f,EAAS0d,GAEzBxU,IAAK,SAAS9oB,EAAKkD,GAEjB,MAAOlD,IAAOkD,GAEhB6lB,IAAK,SAAS/oB,EAAKm7B,GAEjB,MAAOA,GAAcn7B,EAAMm7B,EAAc,GAE3CnS,YAAa,SAAShpB,EAAKmS,EAAO3K,EAAKyhB,GAErC,OAAQzhB,EAAM2K,GAAS8W,EAAQ9W,GAEjCiX,WAAY,SAAShpB,EAAGC,GAEtB,GAAIy9B,GAAK19B,EAAIC,CACb,OAAOy9B,GAAKA,GAEd1qB,SAAU,SAAShT,EAAGC,GAEpB,MAAOiW,MAAK0U,IAAK5qB,EAAIC,IAEvBhB,OAAQ,SAASe,GAEf,MAAOkW,MAAK0U,IAAK5qB,IAEnBipB,SAAU,SAASjpB,GAEjB,MAAOA,GAAIA,GAEbkpB,QAAS,SAASlpB,GAEhB,MAAoB,gBAANA,IAEhBuX,MAAO,SAASvX,GAEd,MAAOuX,OAAMvX,IAEfmpB,OAAQ,SAASnpB,EAAGq9B,GAElB,MAAOnnB,MAAK0U,IAAI5qB,GAAKq9B,GAEvBjU,QAAS,SAASppB,EAAGC,EAAGo9B,GAEtB,MAAOnnB,MAAK0U,IAAI5qB,EAAIC,GAAKo9B,GAE3B9xB,IAAK,SAAS3L,EAAKI,EAAGC,GAEpB,MAAOiW,MAAK3K,IAAKvL,EAAGC,IAEtByK,IAAK,SAAS9K,EAAKI,EAAGC,GAEpB,MAAOiW,MAAKxL,IAAK1K,EAAGC,IAEtBopB,IAAK,SAASrpB,EAAGC,GAEf,MAAOD,GAAIC,KAiBfoJ,GAAM1J,OAAQwP,GAAsBzN,GAElCiC,MAAO,SAAStF,EAAGmO,EAAciwB,GAG/B,GAAKn+B,EAAYD,GAEf,MAAOA,EAIT,IAAKA,KAAM,EAET,MAAOqJ,GAASkX,OAIlB,IAAKlgB,EAAUL,GAEb,OACEA,EAAG,EACHqc,EAAG,EACHE,EAAG,EACHE,MAAOzc,EAKNQ,GAASR,KAEZA,GAAMA,EAAGA,EAAE,GAAIqc,EAAGrc,EAAE,GAAIuc,EAAGvc,EAAE,GAAIyc,MAAOzc,EAAE,IAI5C,IAAIq+B,GAAM38B,EAAUyM,EAAcyB,GAAS4M,qBAG3C,IAAK9b,EAAUV,GACf,CACE,GAAIs+B,GAAK58B,EAAU1B,EAAEA,EAAGq+B,EAAIr+B,GACxBu+B,EAAK78B,EAAU1B,EAAEqc,EAAGgiB,EAAIhiB,GACxB4iB,EAAKv9B,EAAU1B,EAAEuc,EAAG8hB,EAAI9hB,GACxB2e,EAAKx5B,EAAU1B,EAAEyc,MAAO4hB,EAAI5hB,OAC5B+hB,EAAK93B,GAAS43B,GAAI,GAClBG,EAAK/3B,GAAS63B,GAAI,GAClBW,EAAKx4B,GAASu4B,GAAI,GAClBK,EAAK54B,GAASw0B,GAAI,EAEtB,IAAKsD,KAAO,GAASC,KAAO,GAASS,KAAO,GAASI,KAAO,EAC5D,CACE,GAAInvB,IAAWnQ,EAAGw+B,EAAIniB,EAAGoiB,EAAIliB,EAAG2iB,EAAIziB,MAAO6iB,GACvCZ,EAAKl1B,EAAY80B,GACjBK,EAAKn1B,EAAY+0B,GACjBY,EAAK31B,EAAYy1B,GACjBM,EAAK/1B,EAAY0xB,EAErB,KAAMkD,IAAmBM,GAAMC,GAAMQ,GAAMI,GAC3C,CAQE,MAAOl2B,GAAS+X,SAAUjR,GAG5B,MAAOA,IAKX,GAAK5P,EAAUP,GACf,CACE,GAAKwJ,EAAYxJ,GACjB,CACE,GAAIw+B,GAAK93B,GAAS1G,GAAG,EAErB,KAAMo+B,GAAkBI,KAAO,EAE7B,MAAOn1B,GAAS+X,UAAYphB,EAAE,EAAGqc,EAAE,EAAGE,EAAE,EAAGE,MAAO+hB,IAAQx+B,EAAE,EAAGqc,EAAE,EAAGE,EAAE,EAAGE,MAAM,IAInF,GAAInE,GAAOtY,EAAEe,MAAM,SAEnB,QACEf,EAAQ0G,GAAS4R,EAAK,GAAI+lB,EAAIr+B,GAC9Bqc,EAAQ3V,GAAS4R,EAAK,GAAI+lB,EAAIhiB,GAC9BE,EAAQ7V,GAAS4R,EAAK,GAAI+lB,EAAI9hB,GAC9BE,MAAQ/V,GAAS4R,EAAK,GAAI+lB,EAAI5hB,QAKlC,MAAO5c,MAAK+X,MAAOymB,IAErBn9B,KAAM,SAASK,EAAKL,GAMlB,MAJAK,GAAIvB,EAAIkB,EAAKlB,EACbuB,EAAI8a,EAAInb,EAAKmb,EACb9a,EAAIgb,EAAIrb,EAAKqb,EACbhb,EAAIkb,MAAQvb,EAAKub,MACVlb,GAETokB,OAAQ,WAEN,OAAQ3lB,EAAG,EAAKqc,EAAE,EAAKE,EAAE,EAAKE,MAAM,IAEtCyN,KAAM,SAAS3oB,GAMb,MAJAA,GAAIvB,EAAI,EACRuB,EAAI8a,EAAI,EACR9a,EAAIgb,EAAI,EACRhb,EAAIkb,MAAQ,EACLlb,GAET4oB,QAAS,SAAS5oB,EAAK27B,GAMrB,MAJA37B,GAAIvB,EAAIk9B,EAAW37B,EAAIvB,GACvBuB,EAAI8a,EAAI6gB,EAAW37B,EAAI8a,GACvB9a,EAAIgb,EAAI2gB,EAAW37B,EAAIgb,GACvBhb,EAAIkb,MAAQygB,EAAW37B,EAAIkb,OACpBlb,GAET6oB,KAAM,SAAS7oB,EAAK4f,EAAQ0d,GAM1B,MAJAt9B,GAAIvB,GAAKmhB,EAAOnhB,EAAI6+B,EACpBt9B,EAAI8a,GAAK8E,EAAO9E,EAAIwiB,EACpBt9B,EAAIgb,GAAK4E,EAAO5E,EAAIsiB,EACpBt9B,EAAIkb,OAAS0E,EAAO1E,MAAQoiB,EACrBt9B,GAET8oB,IAAK,SAAS9oB,EAAKkD,GAMjB,MAJAlD,GAAIvB,GAAKyE,EAAMzE,EACfuB,EAAI8a,GAAK5X,EAAM4X,EACf9a,EAAIgb,GAAK9X,EAAM8X,EACfhb,EAAIkb,OAAShY,EAAMgY,MACZlb,GAET+oB,IAAK,SAAS/oB,EAAKm7B,GAMjB,MAJAn7B,GAAIvB,EAAI08B,EAAY18B,EAAIuB,EAAIvB,EAAI08B,EAAY18B,EAAI,EAChDuB,EAAI8a,EAAIqgB,EAAYrgB,EAAI9a,EAAI8a,EAAIqgB,EAAYrgB,EAAI,EAChD9a,EAAIgb,EAAImgB,EAAYngB,EAAIhb,EAAIgb,EAAImgB,EAAYngB,EAAI,EAChDhb,EAAIkb,MAAQigB,EAAYjgB,MAAQlb,EAAIkb,MAAQigB,EAAYjgB,MAAQ,EACzDlb,GAETgpB,YAAa,SAAShpB,EAAKmS,EAAO3K,EAAKyhB,GAMrC,MAJAjpB,GAAIvB,GAAK+I,EAAI/I,EAAI0T,EAAM1T,GAAKwqB,EAAQ9W,EAAM1T,EAC1CuB,EAAI8a,GAAKtT,EAAIsT,EAAI3I,EAAM2I,GAAKmO,EAAQ9W,EAAM2I,EAC1C9a,EAAIgb,GAAKxT,EAAIwT,EAAI7I,EAAM6I,GAAKiO,EAAQ9W,EAAM6I,EAC1Chb,EAAIkb,OAAS1T,EAAI0T,MAAQ/I,EAAM+I,OAAS+N,EAAQ9W,EAAM+I,MAC/Clb,GAETopB,WAAY,SAAShpB,EAAGC,GAEtB,GAAIk9B,GAAKn9B,EAAE3B,EAAI4B,EAAE5B,EACb++B,EAAKp9B,EAAE0a,EAAIza,EAAEya,EACb+iB,EAAKz9B,EAAE4a,EAAI3a,EAAE2a,EACbijB,EAAK79B,EAAE8a,MAAQ7a,EAAE6a,KACrB,OAAOqiB,GAAKA,EAAKC,EAAKA,EAAKK,EAAKA,EAAKI,EAAKA,GAE5C3U,QAAS,SAASlpB,GAEhB,MAAoB,gBAANA,IAAkB,KAAOA,IAAK,KAAOA,IAAK,KAAOA,IAAK,SAAWA,IAEjFuX,MAAO,SAASvX,GAEd,MAAOuX,OAAMvX,EAAE3B,IAAMkZ,MAAMvX,EAAE0a,IAAMnD,MAAMvX,EAAE4a,IAAMrD,MAAMvX,EAAE8a,QAE3DqO,OAAQ,SAASnpB,EAAGq9B,GAElB,MAAOnnB,MAAK0U,IAAI5qB,EAAE3B,GAAKg/B,GAChBnnB,KAAK0U,IAAI5qB,EAAE0a,GAAK2iB,GAChBnnB,KAAK0U,IAAI5qB,EAAE4a,GAAKyiB,GAChBnnB,KAAK0U,IAAI5qB,EAAE8a,OAASuiB,GAE7BjU,QAAS,SAASppB,EAAGC,EAAGo9B,GAEtB,MAAOnnB,MAAK0U,IAAI5qB,EAAE3B,EAAI4B,EAAE5B,GAAKg/B,GACtBnnB,KAAK0U,IAAI5qB,EAAE0a,EAAIza,EAAEya,GAAK2iB,GACtBnnB,KAAK0U,IAAI5qB,EAAE4a,EAAI3a,EAAE2a,GAAKyiB,GACtBnnB,KAAK0U,IAAI5qB,EAAE8a,MAAQ7a,EAAE6a,OAASuiB,GAEvC9xB,IAAK,SAAS3L,EAAKI,EAAGC,GAMpB,MAJAL,GAAIvB,EAAI6X,KAAK3K,IAAIvL,EAAE3B,EAAG4B,EAAE5B,GACxBuB,EAAI8a,EAAIxE,KAAK3K,IAAIvL,EAAE0a,EAAGza,EAAEya,GACxB9a,EAAIgb,EAAI1E,KAAK3K,IAAIvL,EAAE4a,EAAG3a,EAAE2a,GACxBhb,EAAIkb,MAAQ5E,KAAK3K,IAAIvL,EAAE8a,MAAO7a,EAAE6a,OACzBlb,GAET8K,IAAK,SAAS9K,EAAKI,EAAGC,GAMpB,MAJAL,GAAIvB,EAAI6X,KAAKxL,IAAI1K,EAAE3B,EAAG4B,EAAE5B,GACxBuB,EAAI8a,EAAIxE,KAAKxL,IAAI1K,EAAE0a,EAAGza,EAAEya,GACxB9a,EAAIgb,EAAI1E,KAAKxL,IAAI1K,EAAE4a,EAAG3a,EAAE2a,GACxBhb,EAAIkb,MAAQ5E,KAAKxL,IAAI1K,EAAE8a,MAAO7a,EAAE6a,OACzBlb,GAETypB,IAAK,SAASrpB,EAAGC,GAEf,MAAOD,GAAE3B,EAAI4B,EAAE5B,EAAI2B,EAAE0a,EAAIza,EAAEya,EAAI1a,EAAE4a,EAAI3a,EAAE2a,EAAI5a,EAAE8a,MAAQ7a,EAAE6a,OAEzDgO,OAAQ,SAASlpB,EAAK2L,EAAKb,GAMzB,MAJA9K,GAAIvB,GAAKqM,EAAIrM,EAAIkN,EAAIlN,GAAK6X,KAAK4S,SAAWvd,EAAIlN,EAC9CuB,EAAI8a,GAAKhQ,EAAIgQ,EAAInP,EAAImP,GAAKxE,KAAK4S,SAAWvd,EAAImP,EAC9C9a,EAAIgb,GAAKlQ,EAAIkQ,EAAIrP,EAAIqP,GAAK1E,KAAK4S,SAAWvd,EAAIqP,EAC9Chb,EAAIkb,OAASpQ,EAAIoQ,MAAQvP,EAAIuP,OAAS5E,KAAK4S,SAAWvd,EAAIuP,MACnDlb,KAkBXyJ,GAAM1J,OAAQyP,GAAe1N,GAE3BiC,MAAO,SAAStF,EAAGmO,EAAciwB,GAG/B,GAAKn+B,EAAYD,GAEf,MAAOA,EAIT,IAAKA,KAAM,EAET,MAAOqJ,GAASkX,OAIlB,IAAKlgB,EAAUL,GAEb,OACEmJ,EAAGnJ,EACHoJ,EAAGpJ,EACH4B,EAAG5B,EAKFQ,GAASR,KAEZA,GAAMmJ,EAAGnJ,EAAE,GAAIoJ,EAAGpJ,EAAE,GAAI4B,EAAG5B,EAAE,IAI/B,IAAIq+B,GAAM38B,EAAUyM,EAAcyB,GAAS8M,cAG3C,IAAKhc,EAAUV,GACf,CACE,GAAIm7B,GAAKz5B,EAAU1B,EAAEmJ,EAAGk1B,EAAIl1B,GACxBiyB,EAAK15B,EAAU1B,EAAEoJ,EAAGi1B,EAAIj1B,GACxBiyB,EAAK35B,EAAU1B,EAAE4B,EAAGy8B,EAAIz8B,GACxB69B,EAAK/4B,GAASy0B,GAAI,GAClBuE,EAAKh5B,GAAS00B,GAAI,GAClBuE,EAAKj5B,GAAS20B,GAAI,EAEtB,IAAKoE,KAAO,GAASC,KAAO,GAASC,KAAO,EAC5C,CACE,GAAIxvB,IAAWhH,EAAGs2B,EAAIr2B,EAAGs2B,EAAI99B,EAAG+9B,GAC5BC,EAAKp2B,EAAY2xB,GACjB0E,EAAKr2B,EAAY4xB,GACjB0E,EAAKt2B,EAAY6xB,EAErB,KAAM+C,IAAmBwB,GAAMC,GAAMC,GACrC,CACE,GAAItE,IACFryB,EAAGy2B,EAAK,EAAI,EACZx2B,EAAGy2B,EAAK,EAAI,EACZj+B,EAAGk+B,EAAK,EAAI,EAGd,OAAOz2B,GAAS+X,SAAUjR,EAAQqrB,GAGpC,MAAOrrB,IAKX,GAAIA,GAASjH,EAAM5D,MAAOtF,EAE1B,IAAKmQ,KAAW,EAEd,MAAOA,EAGT,IAAK5P,EAAUP,GACf,CAEE,GAAKwJ,EAAYxJ,GACjB,CACE,GAAIw+B,GAAK93B,GAAS1G,GAAG,EAErB,KAAMo+B,GAAkBI,KAAO,EAE7B,MAAOn1B,GAAS+X,UAAYjY,EAAGq1B,EAAIp1B,EAAGo1B,EAAI58B,EAAG48B,IAIjD,GAAIlmB,GAAOtY,EAAEe,MAAM,SAEnB,QACEoI,EAAGzC,GAAS4R,EAAK,GAAI+lB,EAAIl1B,GACzBC,EAAG1C,GAAS4R,EAAK,GAAI+lB,EAAIj1B,GACzBxH,EAAG8E,GAAS4R,EAAK,GAAI+lB,EAAIz8B,IAK7B,MAAO/B,MAAK+X,MAAOymB,IAErBn9B,KAAM,SAASK,EAAKL,GAKlB,MAHAK,GAAI4H,EAAIjI,EAAKiI,EACb5H,EAAI6H,EAAIlI,EAAKkI,EACb7H,EAAIK,EAAIV,EAAKU,EACNL,GAETokB,OAAQ,WAEN,OAAQxc,EAAG,EAAGC,EAAE,EAAGxH,EAAE,IAEvBsoB,KAAM,SAAS3oB,GAKb,MAHAA,GAAI4H,EAAI,EACR5H,EAAI6H,EAAI,EACR7H,EAAIK,EAAI,EACDL,GAET4oB,QAAS,SAAS5oB,EAAK27B,GAKrB,MAHA37B,GAAI4H,EAAI+zB,EAAW37B,EAAI4H,GACvB5H,EAAI6H,EAAI8zB,EAAW37B,EAAI6H,GACvB7H,EAAIK,EAAIs7B,EAAW37B,EAAIK,GAChBL,GAET6oB,KAAM,SAAS7oB,EAAK4f,EAAQ0d,GAK1B,MAHAt9B,GAAI4H,GAAKgY,EAAOhY,EAAI01B,EACpBt9B,EAAI6H,GAAK+X,EAAO/X,EAAIy1B,EACpBt9B,EAAIK,GAAKuf,EAAOvf,EAAIi9B,EACbt9B,GAET8oB,IAAK,SAAS9oB,EAAKkD,GAKjB,MAHAlD,GAAI4H,GAAK1E,EAAM0E,EACf5H,EAAI6H,GAAK3E,EAAM2E,EACf7H,EAAIK,GAAK6C,EAAM7C,EACRL,GAET+oB,IAAK,SAAS/oB,EAAKm7B,GAKjB,MAHAn7B,GAAI4H,EAAIuzB,EAAYvzB,EAAI5H,EAAI4H,EAAIuzB,EAAYvzB,EAAI,EAChD5H,EAAI6H,EAAIszB,EAAYtzB,EAAI7H,EAAI6H,EAAIszB,EAAYtzB,EAAI,EAChD7H,EAAIK,EAAI86B,EAAY96B,EAAIL,EAAIK,EAAI86B,EAAY96B,EAAI,EACzCL,GAETgpB,YAAa,SAAShpB,EAAKmS,EAAO3K,EAAKyhB,GAKrC,MAHAjpB,GAAI4H,GAAKJ,EAAII,EAAIuK,EAAMvK,GAAKqhB,EAAQ9W,EAAMvK,EAC1C5H,EAAI6H,GAAKL,EAAIK,EAAIsK,EAAMtK,GAAKohB,EAAQ9W,EAAMtK,EAC1C7H,EAAIK,GAAKmH,EAAInH,EAAI8R,EAAM9R,GAAK4oB,EAAQ9W,EAAM9R,EACnCL,GAETopB,WAAY,SAAShpB,EAAGC,GAEtB,GAAIm+B,GAAKp+B,EAAEwH,EAAIvH,EAAEuH,EACb62B,EAAKr+B,EAAEyH,EAAIxH,EAAEwH,EACb62B,EAAKt+B,EAAEC,EAAIA,EAAEA,CACjB,OAAOm+B,GAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GAElCpV,QAAS,SAASlpB,GAEhB,MAAOjB,GAAUiB,IAAO,KAAOA,IAAK,KAAOA,IAAK,KAAOA,IAEzDuX,MAAO,SAASvX,GAEd,MAAOuX,OAAMvX,EAAEwH,IAAM+P,MAAMvX,EAAEyH,IAAM8P,MAAMvX,EAAEC,IAE7CkpB,OAAQ,SAASnpB,EAAGq9B,GAElB,MAAOnnB,MAAK0U,IAAI5qB,EAAEwH,GAAK61B,GAChBnnB,KAAK0U,IAAI5qB,EAAEyH,GAAK41B,GAChBnnB,KAAK0U,IAAI5qB,EAAEC,GAAKo9B,GAEzBjU,QAAS,SAASppB,EAAGC,EAAGo9B,GAEtB,MAAOnnB,MAAK0U,IAAI5qB,EAAEwH,EAAIvH,EAAEuH,GAAK61B,GACtBnnB,KAAK0U,IAAI5qB,EAAEyH,EAAIxH,EAAEwH,GAAK41B,GACtBnnB,KAAK0U,IAAI5qB,EAAEC,EAAIA,EAAEA,GAAKo9B,GAE/B9xB,IAAK,SAAS3L,EAAKI,EAAGC,GAKpB,MAHAL,GAAI4H,EAAI0O,KAAK3K,IAAIvL,EAAEwH,EAAGvH,EAAEuH,GACxB5H,EAAI6H,EAAIyO,KAAK3K,IAAIvL,EAAEyH,EAAGxH,EAAEwH,GACxB7H,EAAIK,EAAIiW,KAAK3K,IAAIvL,EAAEC,EAAGA,EAAEA,GACjBL,GAET8K,IAAK,SAAS9K,EAAKI,EAAGC,GAKpB,MAHAL,GAAI4H,EAAI0O,KAAKxL,IAAI1K,EAAEwH,EAAGvH,EAAEuH,GACxB5H,EAAI6H,EAAIyO,KAAKxL,IAAI1K,EAAEyH,EAAGxH,EAAEwH,GACxB7H,EAAIK,EAAIiW,KAAKxL,IAAI1K,EAAEC,EAAGA,EAAEA,GACjBL,GAETypB,IAAK,SAASrpB,EAAGC,GAEf,MAAOD,GAAEwH,EAAIvH,EAAEuH,EAAIxH,EAAEyH,EAAIxH,EAAEwH,EAAIzH,EAAEC,EAAIA,EAAEA,GAEzC6oB,OAAQ,SAASlpB,EAAK2L,EAAKb,GAKzB,MAHA9K,GAAI4H,GAAKkD,EAAIlD,EAAI+D,EAAI/D,GAAK0O,KAAK4S,SAAWvd,EAAI/D,EAC9C5H,EAAI6H,GAAKiD,EAAIjD,EAAI8D,EAAI9D,GAAKyO,KAAK4S,SAAWvd,EAAI9D,EAC9C7H,EAAIK,GAAKyK,EAAIzK,EAAIsL,EAAItL,GAAKiW,KAAK4S,SAAWvd,EAAItL,EACvCL,KAkBXyJ,GAAM1J,OAAQ0P,GAAgB3N,GAE5BiC,MAAO,SAAStF,EAAGmO,EAAciwB,GAG/B,GAAKn+B,EAAYD,GAEf,MAAOA,EAIT,IAAKA,KAAM,EAET,MAAOqJ,GAASkX,OAIlB,IAAKlgB,EAAUL,GAEb,OACEmJ,EAAGnJ,EACHoJ,EAAGpJ,EACH4B,EAAG5B,EACH2B,EAAG,EAKFnB,GAASR,KAEZA,GAAMmJ,EAAGnJ,EAAE,GAAIoJ,EAAGpJ,EAAE,GAAI4B,EAAG5B,EAAE,GAAI2B,EAAG3B,EAAE,IAIxC,IAAIq+B,GAAM38B,EAAUyM,EAAcyB,GAAS+M,eAG3C,IAAKjc,EAAUV,GACf,CACE,GAAIm7B,GAAKz5B,EAAU1B,EAAEmJ,EAAGk1B,EAAIl1B,GACxBiyB,EAAK15B,EAAU1B,EAAEoJ,EAAGi1B,EAAIj1B,GACxBiyB,EAAK35B,EAAU1B,EAAE4B,EAAGy8B,EAAIz8B,GACxBs5B,EAAKx5B,EAAU1B,EAAE2B,EAAG08B,EAAI18B,GACxB89B,EAAK/4B,GAASy0B,GAAI,GAClBuE,EAAKh5B,GAAS00B,GAAI,GAClBuE,EAAKj5B,GAAS20B,GAAI,GAClBiE,EAAK54B,GAASw0B,GAAI,EAEtB,IAAKuE,KAAO,GAASC,KAAO,GAASC,KAAO,GAASL,KAAO,EAC5D,CACE,GAAInvB,IAAWhH,EAAGs2B,EAAIr2B,EAAGs2B,EAAI99B,EAAG+9B,EAAIh+B,EAAG29B,GACnCM,EAAKp2B,EAAY2xB,GACjB0E,EAAKr2B,EAAY4xB,GACjB0E,EAAKt2B,EAAY6xB,GACjBkE,EAAK/1B,EAAY0xB,EAErB,KAAMkD,IAAmBwB,GAAMC,GAAMC,GAAMP,GAC3C,CACE,GAAI/D,IACFryB,EAAGy2B,EAAK,EAAI,EACZx2B,EAAGy2B,EAAK,EAAI,EACZj+B,EAAGk+B,EAAK,EAAI,EACZn+B,EAAG49B,EAAK,EAAI,EAGd,OAAOl2B,GAAS+X,SAAUjR,EAAQqrB,GAGpC,MAAOrrB,IAKX,GAAIA,GAASjH,EAAM5D,MAAOtF,EAE1B,IAAKmQ,KAAW,EAEd,MAAOA,EAGT,IAAK5P,EAAUP,GACf,CAEE,GAAKwJ,EAAYxJ,GACjB,CACE,GAAIw+B,GAAK93B,GAAS1G,GAAG,EAErB,KAAMo+B,GAAkBI,KAAO,EAE7B,MAAOn1B,GAAS+X,UAAYjY,EAAGq1B,EAAIp1B,EAAGo1B,EAAI58B,EAAG48B,EAAI78B,EAAG,IAIxD,GAAI2W,GAAOtY,EAAEe,MAAM,SAEnB,QACEoI,EAAGzC,GAAS4R,EAAK,GAAI+lB,EAAIl1B,GACzBC,EAAG1C,GAAS4R,EAAK,GAAI+lB,EAAIj1B,GACzBxH,EAAG8E,GAAS4R,EAAK,GAAI+lB,EAAIz8B,GACzBD,EAAG+E,GAAS4R,EAAK,GAAI+lB,EAAI18B,IAK7B,MAAO9B,MAAK+X,MAAOymB,IAErBn9B,KAAM,SAASK,EAAKL,GAMlB,MAJAK,GAAI4H,EAAIjI,EAAKiI,EACb5H,EAAI6H,EAAIlI,EAAKkI,EACb7H,EAAIK,EAAIV,EAAKU,EACbL,EAAII,EAAIT,EAAKS,EACNJ,GAETokB,OAAQ,WAEN,OAAQxc,EAAG,EAAGC,EAAE,EAAGxH,EAAE,EAAGD,EAAE,IAE5BuoB,KAAM,SAAS3oB,GAMb,MAJAA,GAAI4H,EAAI,EACR5H,EAAI6H,EAAI,EACR7H,EAAIK,EAAI,EACRL,EAAII,EAAI,EACDJ,GAET4oB,QAAS,SAAS5oB,EAAK27B,GAMrB,MAJA37B,GAAI4H,EAAI+zB,EAAW37B,EAAI4H,GACvB5H,EAAI6H,EAAI8zB,EAAW37B,EAAI6H,GACvB7H,EAAIK,EAAIs7B,EAAW37B,EAAIK,GACvBL,EAAII,EAAIu7B,EAAW37B,EAAII,GAChBJ,GAET6oB,KAAM,SAAS7oB,EAAK4f,EAAQ0d,GAM1B,MAJAt9B,GAAI4H,GAAKgY,EAAOhY,EAAI01B,EACpBt9B,EAAI6H,GAAK+X,EAAO/X,EAAIy1B,EACpBt9B,EAAIK,GAAKuf,EAAOvf,EAAIi9B,EACpBt9B,EAAII,GAAKwf,EAAOxf,EAAIk9B,EACbt9B,GAET8oB,IAAK,SAAS9oB,EAAKkD,GAMjB,MAJAlD,GAAI4H,GAAK1E,EAAM0E,EACf5H,EAAI6H,GAAK3E,EAAM2E,EACf7H,EAAIK,GAAK6C,EAAM7C,EACfL,EAAII,GAAK8C,EAAM9C,EACRJ,GAET+oB,IAAK,SAAS/oB,EAAKm7B,GAMjB,MAJAn7B,GAAI4H,EAAIuzB,EAAYvzB,EAAI5H,EAAI4H,EAAIuzB,EAAYvzB,EAAI,EAChD5H,EAAI6H,EAAIszB,EAAYtzB,EAAI7H,EAAI6H,EAAIszB,EAAYtzB,EAAI,EAChD7H,EAAIK,EAAI86B,EAAY96B,EAAIL,EAAIK,EAAI86B,EAAY96B,EAAI,EAChDL,EAAII,EAAI+6B,EAAY/6B,EAAIJ,EAAII,EAAI+6B,EAAY/6B,EAAI,EACzCJ,GAETgpB,YAAa,SAAShpB,EAAKmS,EAAO3K,EAAKyhB,GAMrC,MAJAjpB,GAAI4H,GAAKJ,EAAII,EAAIuK,EAAMvK,GAAKqhB,EAAQ9W,EAAMvK,EAC1C5H,EAAI6H,GAAKL,EAAIK,EAAIsK,EAAMtK,GAAKohB,EAAQ9W,EAAMtK,EAC1C7H,EAAIK,GAAKmH,EAAInH,EAAI8R,EAAM9R,GAAK4oB,EAAQ9W,EAAM9R,EAC1CL,EAAII,GAAKoH,EAAIpH,EAAI+R,EAAM/R,GAAK6oB,EAAQ9W,EAAM/R,EACnCJ,GAETopB,WAAY,SAAShpB,EAAGC,GAEtB,GAAIm+B,GAAKp+B,EAAEwH,EAAIvH,EAAEuH,EACb62B,EAAKr+B,EAAEyH,EAAIxH,EAAEwH,EACb62B,EAAKt+B,EAAEC,EAAIA,EAAEA,EACb49B,EAAK79B,EAAEA,EAAIC,EAAED,CACjB,OAAOo+B,GAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKT,EAAKA,GAE5C3U,QAAS,SAASlpB,GAEhB,MAAOjB,GAAUiB,IAAO,KAAOA,IAAK,KAAOA,IAAK,KAAOA,IAAK,KAAOA,IAErEuX,MAAO,SAASvX,GAEd,MAAOuX,OAAMvX,EAAEwH,IAAM+P,MAAMvX,EAAEyH,IAAM8P,MAAMvX,EAAEC,IAAMsX,MAAMvX,EAAEA,IAE3DmpB,OAAQ,SAASnpB,EAAGq9B,GAElB,MAAOnnB,MAAK0U,IAAI5qB,EAAEwH,GAAK61B,GAChBnnB,KAAK0U,IAAI5qB,EAAEyH,GAAK41B,GAChBnnB,KAAK0U,IAAI5qB,EAAEC,GAAKo9B,GAChBnnB,KAAK0U,IAAI5qB,EAAEA,GAAKq9B,GAEzBjU,QAAS,SAASppB,EAAGC,EAAGo9B,GAEtB,MAAOnnB,MAAK0U,IAAI5qB,EAAEwH,EAAIvH,EAAEuH,GAAK61B,GACtBnnB,KAAK0U,IAAI5qB,EAAEyH,EAAIxH,EAAEwH,GAAK41B,GACtBnnB,KAAK0U,IAAI5qB,EAAEC,EAAIA,EAAEA,GAAKo9B,GACtBnnB,KAAK0U,IAAI5qB,EAAEA,EAAIC,EAAED,GAAKq9B,GAE/B9xB,IAAK,SAAS3L,EAAKI,EAAGC,GAMpB,MAJAL,GAAI4H,EAAI0O,KAAK3K,IAAIvL,EAAEwH,EAAGvH,EAAEuH,GACxB5H,EAAI6H,EAAIyO,KAAK3K,IAAIvL,EAAEyH,EAAGxH,EAAEwH,GACxB7H,EAAIK,EAAIiW,KAAK3K,IAAIvL,EAAEC,EAAGA,EAAEA,GACxBL,EAAII,EAAIkW,KAAK3K,IAAIvL,EAAEA,EAAGC,EAAED,GACjBJ,GAET8K,IAAK,SAAS9K,EAAKI,EAAGC,GAMpB,MAJAL,GAAI4H,EAAI0O,KAAKxL,IAAI1K,EAAEwH,EAAGvH,EAAEuH,GACxB5H,EAAI6H,EAAIyO,KAAKxL,IAAI1K,EAAEyH,EAAGxH,EAAEwH,GACxB7H,EAAIK,EAAIiW,KAAKxL,IAAI1K,EAAEC,EAAGA,EAAEA,GACxBL,EAAII,EAAIkW,KAAKxL,IAAI1K,EAAEA,EAAGC,EAAED,GACjBJ,GAETypB,IAAK,SAASrpB,EAAGC,GAEf,MAAOD,GAAEwH,EAAIvH,EAAEuH,EAAIxH,EAAEyH,EAAIxH,EAAEwH,EAAIzH,EAAEC,EAAIA,EAAEA,EAAID,EAAEA,EAAIC,EAAED,GAErD8oB,OAAQ,SAASlpB,EAAK2L,EAAKb,GAMzB,MAJA9K,GAAI4H,GAAKkD,EAAIlD,EAAI+D,EAAI/D,GAAK0O,KAAK4S,SAAWvd,EAAI/D,EAC9C5H,EAAI6H,GAAKiD,EAAIjD,EAAI8D,EAAI9D,GAAKyO,KAAK4S,SAAWvd,EAAI9D,EAC9C7H,EAAIK,GAAKyK,EAAIzK,EAAIsL,EAAItL,GAAKiW,KAAK4S,SAAWvd,EAAItL,EAC9CL,EAAII,GAAK0K,EAAI1K,EAAIuL,EAAIvL,GAAKkW,KAAK4S,SAAWvd,EAAIvL,EACvCJ,KAiBXyJ,GAAM1J,OAAQ2P,GAAkB5N,GAE9BiC,MAAO,SAAStF,EAAGmO,GAGjB,MAAKlO,GAAYD,GAERA,EAIJA,KAAM,EAEFqJ,EAASkX,SAIb/f,EAASR,KAEZA,EAAIA,EAAG,IAIJO,EAAUP,GAENA,EAGF0B,EAAUyM,EAAcyB,GAASgN,oBAE1C1b,KAAM,SAASK,EAAKL,GAElB,MAAOA,IAETykB,OAAQ,WAEN,MAAO,IAETuE,KAAM,WAEJ,MAAO,IAETC,QAAS,SAAS5oB,EAAK27B,GAErB,MAAOA,GAAW37B,IAEpB6oB,KAAM,SAAS7oB,EAAK4f,GAElB,MAAOA,IAETkJ,IAAK,SAAS9oB,EAAKkD,GAEjB,MAAOA,IAET6lB,IAAK,SAAS/oB,GAEZ,MAAOA,IAETgpB,YAAa,SAAShpB,EAAKmS,EAAO3K,EAAKyhB,GAErC,MAAe,GAARA,EAAc9W,EAAQ3K,GAE/B4hB,WAAY,SAAShpB,EAAGC,GAEtB,GAAIE,GAAI+V,KAAK0U,IAAK5qB,EAAEf,OAASgB,EAAEhB,OAC/B,OAAOkB,GAAIA,GAEb6S,SAAU,SAAShT,EAAGC,GAEpB,MAAOiW,MAAK0U,IAAK5qB,EAAEf,OAASgB,EAAEhB,SAEhCA,OAAQ,SAASe,GAEf,MAAOA,GAAEf,QAEXgqB,SAAU,SAASjpB,GAEjB,MAAOA,GAAEf,OAASe,EAAEf,QAEtBiqB,QAAS,SAASlpB,GAEhB,MAAoB,gBAANA,IAEhBuX,MAAO,WAEL,OAAO,GAET4R,OAAQ,SAASnpB,EAAGq9B,GAElB,MAAOr9B,GAAEf,QAAUo+B,GAErBjU,QAAS,SAASppB,EAAGC,GAEnB,MAAOD,KAAMC,GAEfsL,IAAK,SAAS3L,EAAKI,EAAGC,GAEpB,MAAWA,GAAJD,EAAQA,EAAIC,GAErByK,IAAK,SAAS9K,EAAKI,EAAGC,GAEpB,MAAOD,GAAIC,EAAID,EAAIC,GAErBopB,IAAK,SAASrpB,EAAGC,GAEf,MAAOD,GAAEf,OAASgB,EAAEhB,UAkBxBoK,GAAM1J,OAAQ4P,GAAexL,GAE3BuT,GAAI,SAAS/R,GAEX,MAAOxG,GAAUwG,KAAc1G,EAAS0G,IAE1CE,YAAa,SAASF,GAEpB,GAAIvD,GAAWuD,EAAQg5B,SAUvB,OARMv8B,KAEJA,EAAW,GAAIpB,GAAU2E,GACzBvD,EAASxE,QAAUU,KAEnBqH,EAAQg5B,UAAYv8B,GAGfA,GAETob,QAAS,SAASpb,SAETA,GAASuD,QAAQg5B,WAE1Bj8B,UAAW,SAAS6Z,GAElB,GAAI7Z,GAAYpE,KAAK+I,WAAYkV,EAEjC,KAAM7Z,EACN,CACEA,EAAYpE,KAAK+I,WAAYkV,GAASqiB,GAAOl8B,UAAW6Z,EAExD,IAAIsiB,GAAiBn8B,EAAUoB,WAC3BA,EAAa6I,GAAakyB,GAC1BjyB,EAAe9I,EAAWC,MAAOrB,EAAUkK,aAAc9I,EAAWE,KAExEtB,GAAUm8B,eAAiBA,EAC3Bn8B,EAAUoB,WAAaA,EACvBpB,EAAUkK,aAAeA,EACzBlK,EAAU9B,KAAO2b,EACjB7Z,EAAUqB,MAAQ,SAASW,EAAOm4B,GAChC,MAAOv+B,MAAKwF,WAAWC,MAAOW,EAAOpG,KAAKsO,aAAciwB,IAE1Dn6B,EAAUoa,aAAe,WACvB,MAAOxe,MAAKwF,WAAWuS,MAAO/X,KAAKsO,eAIvC,MAAOlK,KASX,IAAIk8B,MAUJA,IAAOl8B,UAAY,SAAS6Z,GAE1B,MAAKpd,GAAUod,IAAU/d,EAAW+d,EAAK3P,cAEhC2P,EAEJvd,EAAUud,IAAUA,IAAQqiB,IAAOl8B,UAE/Bk8B,GAAOl8B,UAAW6Z,GAGpBqiB,GAAOl8B,UAAU,YAM1Bk8B,GAAOl8B,UAAU,YAA8BkK,aAAc,GAe7DnD,GAAM1J,OAAQ6P,GAAYpO,GAExBuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAElD,GAAI+pB,GAAMxxB,EAAUwxB,GAEpBA,GAAIlhC,QAAUuC,EAAU2+B,EAAIlhC,QAAS0P,EAAU1P,SAE/Cge,EAAcrX,OAAQuQ,GAAiBgqB,EAAKh+B,GAAS,EAAOiU,EAAOnT,aAGrEiT,MAAO,SAAUhU,EAAOc,EAAYD,EAAYka,GAE9Ctd,KAAK0oB,SAAUnmB,EAAMi+B,IAAKn9B,EAAYD,EAAYka,MAiBtDnS,GAAM1J,OAAQ8P,GAAerO,GAE3BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAMlD,GAAIvR,GAAUhC,EAAQ6kB,cAClBzoB,EAAUqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WAC9CgP,EAAStD,EAAUsD,OACnB0L,EAAShP,EAAUgP,MAEvB,IAAM9d,EAAWoS,IAIZ,GAAK3R,EAAS2R,GACnB,CACE,GAAImuB,KAEJ,KAAK,GAAIxiB,KAAQD,GAEfyiB,EAAYxiB,GAAQ3L,CAGtBA,GAASmuB,OAXTnuB,KAcF,KAAK,GAAI2L,KAAQD,GACjB,CAME,IAAK,GALD5X,GAAQ4X,EAAQC,GAChByiB,EAAWt6B,EAAMrF,OAAS,EAC1B4pB,EAAQrY,EAAQ2L,GAChB7Z,EAAY9E,EAAQ8E,UAAW6Z,GAE1BhS,EAAI,EAAQy0B,GAALz0B,EAAeA,IAE7B7F,EAAM6F,GAAK7H,EAAUqB,MAAOW,EAAM6F,GAGpC,KAAMtL,EAASgqB,GACf,CACEA,IAEA,KAAK,GAAIppB,GAAI,EAAQm/B,GAALn/B,EAAeA,IAE7BopB,EAAMppB,GAAKA,EAAIm/B,EAInB,GAAIr8B,GAAY,GAAI+N,IAAW6L,EAAM7Z,EAAUoB,WAAYY,EAAOukB,GAC9D1mB,EAAYwS,EAAO8S,WAAYtL,EAAM5Z,EAAMrE,MAAM,EAErDiE,GAAMiB,QAAUA,EAEhBoY,EAAcpX,IAAK+X,EAAMha,OAkB/BkH,GAAM1J,OAAQ+P,GAActO,GAE1BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAIlD,GAAInX,GAAUqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WAC9C0a,EAAShP,EAAAA,QAEb,KAAK,GAAIiP,KAAQD,GACjB,CACE,GAAI5Z,GAAa9E,EAAQ8E,UAAW6Z,GAChC7X,EAAahC,EAAUqB,MAAOuY,EAAQC,IACtCzZ,EAAamB,GAAQ8Q,EAAOuS,WAAY/K,IACxC3Z,EAAac,GAAWqR,EAAOyS,cAAejL,IAC9Cha,EAAa,GAAIkC,GAAO8X,EAAM7X,EAAO5B,EAAQF,GAAU,EAAOtE,KAAM,KAAMgP,EAE9EsO,GAAcpX,IAAK+X,EAAMha,KAG7B+jB,gBAAiB,SAAUrlB,EAAGsb,EAAMxH,GAElC9T,EAAE6B,MAAQiS,EAAO0R,WAAYlK,EAAMtb,EAAE6B,OAC3BiS,EAAO4R,cAAepK,EAAMtb,EAAE2B,aAiB5C6G,GAAM1J,OAAQgQ,GAAgBvO,GAE5BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAIlD,GAAInX,GAAaqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WACjD0a,EAAahP,EAAU2xB,OAE3B,KAAK,GAAI1iB,KAAQD,GACjB,CACE,GAAI5Z,GAAa9E,EAAQ8E,UAAW6Z,GAChC7X,EAAahC,EAAUqB,MAAOuY,EAAQC,IACtCzZ,EAAaiS,EAAOuS,WAAY/K,GAChC2iB,EAAa,GAAIz6B,GAAO8X,EAAM7X,EAAO5B,GAAO,EAAMxE,KAAM,KAAMgP,EAElEsO,GAAcpX,IAAK+X,EAAM2iB,KAG7B5Y,gBAAiB,SAAUrlB,EAAGsb,EAAMxH,GAElC9T,EAAE6B,MAAQiS,EAAO0R,WAAYlK,EAAMtb,EAAE6B,UAiBzC2G,GAAM1J,OAAQiQ,GAAiBxO,GAE7B86B,SACE6C,KAAU,IACVhtB,MAAU,IACV8sB,QAAU,IACVjnB,MAAU,IACVonB,KAAU,KACV3C,OAAU,KACV4C,GAAU,MACV73B,IAAU,MACVka,KAAU,OAGZ3d,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GASlD,GAAInX,GAAUqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WAC9C09B,EAAUhyB,EAAUiyB,SACpB/sB,EAAUlF,EAAUkF,YACpBgI,EAAU/W,GAAStD,EAAUW,EAAQ0Z,QAASnM,GAASmM,UAEvDglB,GAAO,CAGX,KAAK,GAAIhrB,KAAQ8qB,GAEf,GAAK9qB,IAAQlW,MAAKg+B,QAEhBgD,EAAShhC,KAAKg+B,QAAQ9nB,IAAU8qB,EAAS9qB,SAElC8qB,GAAS9qB,OAEb,IAA2B,KAAtBA,EAAKmC,QAAQ,KACvB,CAGE,IAAK,GAFD8oB,GAAQjrB,EAAKhV,MAAM,KAEdK,EAAI,EAAGA,EAAI4/B,EAAMpgC,OAAQQ,IAEhCy/B,EAAQG,EAAM5/B,IAAMy/B,EAAQ9qB,SAGvB8qB,GAAQ9qB,GAEfgrB,GAAO,EAIX,GAAIC,MAGA7P,EAAW,EACX8P,EAAU,CAEd,KAAK,GAAIlrB,KAAQ8qB,GACjB,CACE,GAAItoB,GAAIJ,WAAWpC,EAEfmD,OAAMX,SAEDsoB,GAAQ9qB,IAIPob,EAAJ5Y,IAEFwoB,GAAO,GAGTC,EAAM//B,MACJigC,MAAO3oB,EACPpJ,IAAK4G,EACL9P,MAAO46B,EAAQ9qB,KAGjBob,EAAW5Y,EAEX0oB,EAAUppB,KAAKxL,IAAK40B,EAAS1oB,IAKjC,GAAIwoB,EACJ,CACEC,EAAMD,KAAK,SAASp/B,EAAGC,GAErB,MAAOD,GAAEu/B,MAAQt/B,EAAEs/B,QAGrBL,IAEA,KAAK,GAAIz/B,GAAI,EAAGA,EAAI4/B,EAAMpgC,OAAQQ,IAEhCy/B,EAAQG,EAAM5/B,GAAG+N,KAAO6xB,EAAM5/B,GAAG6E,MAUrC,IAAK,GALDkM,MACA0L,KACAsjB,KACAv4B,KAEKxH,EAAI,EAAGA,EAAI4/B,EAAMpgC,OAAQQ,IAClC,CACE,GAAIsJ,GAAQs2B,EAAM5/B,GACdgD,EAAS1C,EAAUgJ,EAAMzE,MAAM7B,OAAQ/B,EAAQ+B,cAE5CsG,GAAMzE,MAAM7B,MAEnB,KAAK,GAAI0Z,KAAQpT,GAAMzE,MAEd6X,IAAQ3L,KAEbA,EAAO2L,MACPD,EAAOC,MACPqjB,EAAYrjB,MACZlV,EAAWkV,GAAQ3e,EAAQ8E,UAAW6Z,IAGxC3L,EAAO2L,GAAM7c,KAAMyJ,EAAMw2B,MAAQD,GACjCpjB,EAAOC,GAAM7c,KAAM2H,EAAYkV,GAAOxY,MAAOoF,EAAMzE,MAAO6X,KAC1DqjB,EAAYrjB,GAAM7c,KAAM+D,GAAStD,EAAUqS,EAAS+J,GAAQ1Z,KAKhE,IAAK,GAAI0Z,KAAQ3L,GACjB,CACE,GAAIhO,GAAcmS,EAAOyS,cAAejL,GACpCzZ,EAAciS,EAAOuS,WAAY/K,GACjCxZ,EAAcgS,EAAOwS,WAAYhL,GACjCvZ,EAAc+R,EAAO0S,YAAalL,GAClCtZ,EAAc8R,EAAOqS,YAAa7K,GAClCrZ,EAAc6R,EAAO2S,WAAYnL,GACjCpZ,EAAc4R,EAAO4S,eAAgBpL,GACrCnZ,EAAc2R,EAAO+S,kBACrBnlB,EAAc,GAAI4P,IAAcgK,EAAMlV,EAAWkV,GAAMzY,WAAYwY,EAAOC,GAAO3L,EAAO2L,GAAOqjB,EAAYrjB,IAC3Gha,EAAc,GAAIE,GAAO8Z,EAAM5Z,EAAMC,EAAU4X,EAAS1X,EAAOC,EAAOC,EAAQC,EAAQC,EAAOC,EAAWC,GAAY,EAAM9E,KAAM,KAAMgP,EAE1IsO,GAAcpX,IAAK+X,EAAMha,OAkB/BkH,GAAM1J,OAAQkQ,GAAazO,GAEzBuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAIlD,GAAInX,GAAaqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WACjD+d,EAAarS,EAAUqS,IAE3B,KAAK,GAAIpD,KAAQoD,GACjB,CACE,GAAIjd,GAAa9E,EAAQ8E,UAAW6Z,GAChC7X,EAAahC,EAAUqB,MAAO4b,EAAMpD,IACpC5Z,EAAa,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYgE,EAASkX,QAASlX,EAAS+X,SAAUnb,IACzFnC,EAAawS,EAAO8S,WAAYtL,EAAM5Z,EAAMrE,MAAM,EAEtDsd,GAAcpX,IAAK+X,EAAMha,OAkB/BkH,GAAM1J,OAAQmQ,GAAa1O,GAEzBuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAElD,GAAInX,GAAUqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WAC9Ce,EAAU2K,EAAU3K,IAExB,KAAK,GAAI4Z,KAAQ5Z,GACjB,CACE,GAAID,GAAa9E,EAAQ8E,UAAW6Z,GAChCsjB,EAAiBl9B,EAAM4Z,EAEnBsjB,aAA0Bj7B,KAEhCi7B,EAAej/B,KAAO2b,EACtBsjB,EAAe/7B,WAAapB,EAAUoB,WAGxC,IAAIg8B,GAAatnB,GAAOqnB,GACpBt9B,EAAawS,EAAO8S,WAAYtL,EAAMujB,EAAYxhC,MAAM,EAE5Dsd,GAAcpX,IAAK+X,EAAMha,OAkB/BkH,GAAM1J,OAAQoQ,GAAgB3O,GAE5BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAElD,GACIgrB,IADa99B,GAAUqL,EAAU1P,QAASmX,EAAOnT,WACpC0L,EAAUyyB,QAE3B,KAAK,GAAIxjB,KAAQwjB,GACjB,CACE,GAAIC,GAAYD,EAASxjB,GAErBlU,EAAa,GAAIxD,GACnB0X,EACAje,KACA0hC,EAAOl8B,WACP3D,EAAU6/B,EAAOl7B,UAAU,GAC3Bk7B,EAAOj7B,SACPi7B,EAAOh7B,aACPg7B,EAAO/6B,SACP+6B,EAAOvd,OAGT7G,GAAcpX,IAAK+X,EAAMlU,KAI7BwM,OAAO,IAgBTpL,GAAM1J,OAAQqQ,GAAc5O,GAE1BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAElD,GAAInX,GAAaqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WACjD0a,EAAahP,EAAUqF,KAE3B,KAAK,GAAI4J,KAAQD,GACjB,CACE,GAAI5Z,GAAa9E,EAAQ8E,UAAW6Z,GAChC7X,EAAahC,EAAUqB,MAAOuY,EAAQC,IACtC5Z,EAAa,GAAI+P,IAAW6J,EAAM7Z,EAAUoB,WAAYY,GACxDnC,EAAawS,EAAO8S,WAAYtL,EAAM5Z,EAAMrE,MAAM,EAEtDsd,GAAcpX,IAAK+X,EAAMha,OAkB/BkH,GAAM1J,OAAQsQ,GAAc7O,GAE1BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAElD,GAAImJ,GAAQ5Q,EAAU4Q,KAEtBA,GAAMtgB,QAAUuC,EAAU+d,EAAMtgB,QAAS0P,EAAU1P,SAEnDge,EAAc7F,SAAUjB,GAAiBoJ,EAAOpd,GAAS,EAAOiU,EAAOnT,aAGzEiT,MAAO,SAAUhU,EAAOc,EAAYD,EAAYka,GAE9Ctd,KAAK0oB,SAAUnmB,EAAMqd,MAAOvc,EAAYD,EAAYka,MAiBxDnS,GAAM1J,OAAQuQ,GAAe9O,GAE3BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAElD,GACIkrB,IADah+B,GAAUqL,EAAU1P,QAASmX,EAAOnT,WACpC0L,EAAU2yB,QAE3B,KAAK,GAAI1jB,KAAQ0jB,GACjB,CACE,GAAIxiB,GAAawiB,EAAS1jB,EAEpB/d,GAAWif,EAAO/a,aAEtB+a,EAAO/a,UAAY6Z,EAGrB,IAAI3N,GAASgK,GAAS6E,EAEjB7O,MAAW,IAEdA,EAAOtG,OAAShK,KAEhBsd,EAAcpX,IAAK+X,EAAM3N,MAK/BiG,OAAO,IAgBTpL,GAAM1J,OAAQwQ,GAAe/O,GAE3BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAIlD,GAAInX,GAAaqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WACjDs+B,EAAa5yB,EAAU4yB,MAE3B,KAAK,GAAI3jB,KAAQ2jB,GACjB,CACE,GAAIC,GAAgBD,EAAQ3jB,GACxB7Z,EAAgB9E,EAAQ8E,UAAW6Z,GACnC6jB,EAAgB19B,EAAUqB,MAAO5D,EAAUggC,EAAUhB,MAAM,IAC3DkB,EAAgB39B,EAAUqB,MAAO5D,EAAUggC,EAAUd,IAAI,IACzDt6B,EAAgBI,GAASg7B,EAAUp7B,SAAU,GAC7CC,EAAgBG,GAASg7B,EAAUn7B,aAAc,GACjDC,EAAgBE,GAAShF,EAAUggC,EAAUl7B,SAAUk7B,EAAUp7B,UAAYK,OAAOC,mBACpFo4B,EAAgBt4B,GAASg7B,EAAU1C,QAAS,KAE1B,KAAjBz4B,IAEHA,EAAe8C,EAASw4B,SAAUt7B,EAAcq7B,EAAU5C,GAAS,IAGnD,IAAb14B,IAEHA,EAAW+C,EAASw4B,SAAUv7B,EAAUs7B,EAAU5C,GAAS,GAG7D,IAAI8C,GAAW,GAAI17B,GACjB0X,EACAje,KACAoE,EAAUoB,WACVs8B,EACAr7B,EACAC,EACAC,EAGF2W,GAAcpX,IAAK+X,EAAMgkB,KAI7B1rB,OAAO,IAYT/M,EAAS,WAAY,SAAS8X,EAAQpW,EAAQi0B,EAAS+C,GAErD,QAASC,GAAiBp4B,EAAYjG,GAEpC,GAAIM,GAAYN,EAASyK,aAAcxE,EAAW3F,WAC9C0K,EAAO1K,EAAUoB,WACjB48B,EAAcv4B,EAAYqB,GAAWA,EAAQnB,EAAYjG,GAAaoH,EACtE2B,EAAOiC,EAAKgX,QAEhB,OAAO,YAEL,GAAItf,GAAauD,EAAWvD,SACxBka,EAAa5R,EAAKzN,KAAMwL,EAAMzK,EAASggC,IACvCC,EAAavzB,EAAKmX,IAAKvF,EAASla,GAChCsO,EAAahG,EAAKgG,SAAUutB,EAAYvzB,EAAKpJ,KAgBjD,OAdgBy5B,GAAXrqB,EAEH/K,EAAWyW,OAAQ,GAInB6hB,EAAavzB,EAAKlK,MAAOy9B,EAAY/gB,EAASxM,GAG3CotB,IAEHG,EAAavzB,EAAKmX,IAAKoc,EAAYt4B,EAAWmmB,oBAGzCmS,GAIX,MAAO74B,GAAU24B,KAgBnBh3B,GAAM1J,OAAQyQ,GAAkBhP,GAE9BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAIlD,GAAInX,GAAaqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WACjDwd,EAAa9R,EAAU8R,SAE3B,KAAK,GAAI7C,KAAQ6C,GACjB,CACE,GAAI1c,GAAa9E,EAAQ8E,UAAW6Z,GAChC7X,EAAahC,EAAUqB,MAAOqb,EAAW7C,IACzC5Z,EAAa,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYY,EAAOoD,EAASkX,SACpEzc,EAAawS,EAAO8S,WAAYtL,EAAM5Z,EAAMrE,MAAM,EAEtDsd,GAAcpX,IAAK+X,EAAMha,OAkB/BkH,GAAM1J,OAAQ0Q,GAAgBjP,GAE5BuC,MAAO,SAAUuJ,EAAWxM,EAAS8a,EAAe7G,GAIlD,GAAInX,GAAaqE,GAAUqL,EAAU1P,QAASmX,EAAOnT,WACjDmd,EAAazR,EAAUyR,OAE3B,KAAK,GAAIxC,KAAQwC,GACjB,CACE,GAAIrc,GAAa9E,EAAQ8E,UAAW6Z,GAChC7X,EAAahC,EAAUqB,MAAOgb,EAASxC,IACvC5Z,EAAa,GAAIsQ,IAAOsJ,EAAM7Z,EAAUoB,WAAYgE,EAASkX,QAASta,GACtEnC,EAAawS,EAAO8S,WAAYtL,EAAM5Z,EAAMrE,MAAM,EAEtDsd,GAAcpX,IAAK+X,EAAMha,OAuB/BkH,GAAM1J,OAAQ2Q,GAAW9L,GAEvBiM,IAAK,SAAS/M,EAAY6M,EAAQC,GAEhCtS,KAAK4C,MAAO4C,EAAY6M,GACxBrS,KAAKsS,OAASwF,GAASxF,IAGzBic,QAAS,SAAS7sB,EAAKipB,GAKrB,IAHA,GAAI2X,GAAKtiC,KAAKsS,OACVpJ,EAAMo5B,EAAGvhC,OAAS,EAClBQ,EAAI,EACD+gC,EAAG/gC,EAAI,GAAKopB,GAAazhB,EAAJ3H,GAC1BA,GAEF,IAAIghC,GAAKD,EAAG/gC,GACRihC,EAAKF,EAAG/gC,EAAI,GACZkhC,GAAM9X,EAAQ4X,IAAOC,EAAKD,GAC1B/uB,EAAKxT,KAAK8vB,aAAcvuB,GACxBkS,EAAKzT,KAAK8vB,aAAcvuB,EAAI,EAEhC,OAAOvB,MAAKwF,WAAWklB,YAAahpB,EAAK8R,EAAIC,EAAIgvB,IAGnDphC,KAAM,WAEJ,MAAO,IAAI+Q,IAAWpS,KAAKsC,KAAMtC,KAAKwF,WAAYnE,EAAKrB,KAAKqS,QAAShR,EAAKrB,KAAKsS,YAwBnFnH,GAAM1J,OAAQ+Q,GAAgBlM,GAE5BiM,IAAK,SAAS/M,EAAY6M,EAAQI,EAAMC,EAAQC,EAAQC,GAEtD5S,KAAK4C,MAAO4C,EAAY6M,GACxBrS,KAAKyS,KAAOA,EACZzS,KAAK0S,OAASA,EACd1S,KAAK2S,OAASA,EACd3S,KAAK4S,OAASA,EACd5S,KAAK6M,KAAOrH,EAAWsgB,UAGzByI,QAAS,SAAS7sB,EAAKipB,GAErB,GAaI4X,GAAIC,EAAIE,EAAIC,EAbZ7zB,EAAO9O,KAAKwF,WACZqH,EAAO7M,KAAK6M,KACZ6F,EAAS1S,KAAK0S,OACd3F,EAAI/M,KAAKqS,OAAOtR,OAAS,EACzBe,EAAI6oB,EAAQ5d,EACZxL,EAAI4L,GAAO6K,KAAKsL,MAAOxhB,GAAK,EAAGiL,EAAI,GACnC9K,EAAIH,EAAIP,EAERiS,EAAKxT,KAAK8vB,aAAcvuB,EAAI,GAC5BkS,EAAKzT,KAAK8vB,aAAcvuB,GACxBmS,EAAK1T,KAAK8vB,aAAcvuB,EAAI,GAC5BoS,EAAK3T,KAAK8vB,aAAcvuB,EAAI,EA+ChC,OA5CIvB,MAAK4S,QACP+vB,EAAK,EACLD,EAAKzgC,EACLugC,EAAKvgC,EAAIygC,EACTH,EAAKtgC,EAAIugC,IAETD,EAAK,EACLC,EAAKvgC,EACLygC,EAAKzgC,EAAIugC,EACTG,EAAK1gC,EAAIygC,GAGXhhC,EAAMoN,EAAKub,KAAM3oB,GAEjBmL,EAAOiC,EAAKub,KAAMxd,GAClBA,EAAOiC,EAAKyb,KAAM1d,EAAM2G,EAAId,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM4G,EAAIf,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM6G,EAAIhB,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM8G,EAAIjB,EAAO,GAAG,IACtChR,EAAMoN,EAAKyb,KAAM7oB,EAAKmL,EAAM01B,GAE5B11B,EAAOiC,EAAKub,KAAMxd,GAClBA,EAAOiC,EAAKyb,KAAM1d,EAAM2G,EAAId,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM4G,EAAIf,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM6G,EAAIhB,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM8G,EAAIjB,EAAO,GAAG,IACtChR,EAAMoN,EAAKyb,KAAM7oB,EAAKmL,EAAM21B,GAE5B31B,EAAOiC,EAAKub,KAAMxd,GAClBA,EAAOiC,EAAKyb,KAAM1d,EAAM2G,EAAId,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM4G,EAAIf,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM6G,EAAIhB,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM8G,EAAIjB,EAAO,GAAG,IACtChR,EAAMoN,EAAKyb,KAAM7oB,EAAKmL,EAAM61B,GAE5B71B,EAAOiC,EAAKub,KAAMxd,GAClBA,EAAOiC,EAAKyb,KAAM1d,EAAM2G,EAAId,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM4G,EAAIf,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM6G,EAAIhB,EAAO,GAAG,IACtC7F,EAAOiC,EAAKyb,KAAM1d,EAAM8G,EAAIjB,EAAO,GAAG,IACtChR,EAAMoN,EAAKyb,KAAM7oB,EAAKmL,EAAM81B,GAE5BjhC,EAAMoN,EAAKlK,MAAOlD,EAAK1B,KAAK2S,SAK9Bmd,aAAc,SAASvuB,GAErB,GAAI8Q,GAASrS,KAAKqS,OACdtF,EAAIsF,EAAOtR,OACXkL,EAAKjM,KAAK4iC,OAASrhC,EAAIwL,GAAKA,EAAII,GAAO5L,EAAG,EAAGwL,EAAI,EAErD,OAAO3K,GAASiQ,EAAQpG,KAG1B5K,KAAM,WAEJ,MAAO,IAAImR,IAAgBxS,KAAKsC,KAAMtC,KAAKwF,WAAYnE,EAAKrB,KAAKqS,QAASrS,KAAKyS,KAAMzS,KAAK0S,OAAQ1S,KAAK2S,SAGzGod,SAAU,WAER,OAAO,KAsBX5kB,GAAM1J,OAAQoR,GAAiBL,IAE7BD,IAAK,SAAS/M,EAAY6M,EAAQI,GAEhCzS,KAAK6iC,KAAMr9B,EAAY6M,EAAQI,EAAMI,GAAgBiwB,OAAQjwB,GAAgBkwB,QAAQ,IAGvF1hC,KAAM,WAEJ,MAAO,IAAIwR,IAAiB7S,KAAKsC,KAAMtC,KAAKwF,WAAYnE,EAAKrB,KAAKqS,QAASrS,KAAKyS,SAYpFI,GAAgBkwB,OAAS,EAAM,EAC/BlwB,GAAgBiwB,SACb,GAAI,EAAE,GAAI,IACT,EAAE,GAAI,EAAG,IACV,GAAI,EAAG,EAAG,IACT,EAAG,EAAG,EAAG,IAoBb33B,GAAM1J,OAAQqR,GAAYxM,GAExBiM,IAAK,SAAS/M,EAAY6M,EAAQU,GAEhC/S,KAAK4C,MAAO4C,EAAY6M,GACxBrS,KAAK+S,QAAUA,GAAWD,GAAWkwB,eAAgB3wB,EAAOtR,QAC5Df,KAAKijC,SAAW,GAAIriC,OAAOyR,EAAOtR,SAGpCwtB,QAAS,SAAS7sB,EAAKipB,GAErB,GAAI7b,GAAO9O,KAAKwF,WACZy9B,EAAWjjC,KAAKijC,SAChBlwB,EAAU/S,KAAK+S,QACfhG,EAAI/M,KAAKqS,OAAOtR,OAChBZ,EAAI,CAER8iC,GAASl2B,EAAI,GAAK,CAElB,KAAK,GAAIxL,GAAIwL,EAAI,EAAGxL,GAAK,EAAGA,IAE1B0hC,EAAS1hC,GAAK0hC,EAAS1hC,EAAI,IAAM,EAAIopB,EAGvCjpB,GAAMoN,EAAKub,KAAM3oB,EAEjB,KAAK,GAAIH,GAAI,EAAOwL,EAAJxL,EAAOA,IAErBG,EAAMoN,EAAKyb,KAAM7oB,EAAK1B,KAAK8vB,aAAcvuB,GAAKwR,EAASxR,GAAM0hC,EAAU1hC,GAAMpB,GAE7EA,GAAKwqB,CAGP,OAAOjpB,IAGTL,KAAM,WAEJ,MAAO,IAAIyR,IAAY9S,KAAKsC,KAAMtC,KAAKwF,WAAYnE,EAAKrB,KAAKqS,QAASrS,KAAK+S,UAG7Egd,SAAU,WAER,OAAO,KAIXjd,GAAWkwB,eAAiB,SAASj2B,GAInC,IAAK,GAFDm2B,GAAI,GAAItiC,OAAOmM,KAEVxL,EAAI,EAAQwL,GAALxL,EAAQA,IAEtB2hC,EAAG3hC,GAAMuL,GAAQC,EAAGxL,EAGtB,OAAO2hC,IAqBT/3B,GAAM1J,OAAQuR,GAAgBR,IAE5BD,IAAK,SAAS/M,EAAY6M,EAAQI,GAEhCzS,KAAK6iC,KAAMr9B,EAAY6M,EAAQI,EAAMO,GAAe8vB,OAAQ9vB,GAAe+vB,QAAQ,IAGrF1hC,KAAM,WAEJ,MAAO,IAAI2R,IAAgBhT,KAAKsC,KAAMtC,KAAKwF,WAAYnE,EAAKrB,KAAKqS,QAASrS,KAAKyS,SAYnFO,GAAe+vB,OAAS,GACxB/vB,GAAe8vB,SACX,EAAG,EAAG,EAAG,IACX,GAAI,EAAG,EAAG,IACT,EAAE,GAAI,EAAE,KACT,GAAI,EAAE,GAAI,IAqBZ33B,GAAM1J,OAAQwR,GAAW3M,GAEvBiM,IAAK,SAASW,EAAOC,EAASC,GAS5B,IAAK,GAPD+vB,GAAYjwB,EAAMnS,OAClB+N,EAAOoE,EAAM,GAAG1N,WAChB6M,KACAC,KACAqD,GAAS,EACT5U,GAAS,EAEJQ,EAAI,EAAO4hC,EAAJ5hC,EAAeA,IAE7B8Q,EAAOjR,KAAKb,MAAO8R,EAAQa,EAAO3R,GAAI8Q,QAEtCC,EAAQ/Q,IAAQA,EAAI,GAAM4hC,EAEpBjwB,EAAO3R,GAAIwuB,aAEfpa,GAAS,EAIb,IAAKxC,EACL,CAKE,IAAK,GAJDiwB,GAAoBvhC,EAAUuR,EAAarD,GAASsM,6BACpDgnB,EAAc,EACdC,KAEK/hC,EAAI,EAAO4hC,EAAJ5hC,EAAeA,IAE7B+hC,EAAS/hC,GAAM2R,EAAO3R,GAAIR,OAAQqiC,GAClCC,GAAeC,EAAS/hC,EAK1B,KAAK,GAFDgiC,GAAgB,EAEXhiC,EAAI,EAAO4hC,EAAJ5hC,EAAeA,IAE7BgiC,GAAiBD,EAAS/hC,GAC1B+Q,EAAQ/Q,GAAMgiC,EAAgBF,CAGhCtiC,GAASsiC,EAGXrjC,KAAK4C,MAAOkM,EAAMuD,GAClBrS,KAAKkT,MAAQA,EACblT,KAAKsS,OAASA,EACdtS,KAAKmT,QAAUA,EACfnT,KAAKoT,YAAcA,EACnBpT,KAAK2V,OAASA,EACd3V,KAAKwjC,aAAeziC,GAGtBgvB,SAAU,WAER,MAAO/vB,MAAK2V,QAGd5U,OAAQ,SAASqS,GAEf,MAAOpT,MAAKwjC,gBAAiB,EAAQxjC,KAAKwjC,aAAexjC,KAAKyjC,QAASrwB,IAGzEmb,QAAS,SAAS7sB,EAAKipB,GAOrB,IALA,GAAIzX,GAAQlT,KAAKkT,MACbZ,EAAStS,KAAKsS,OACdoxB,EAAgB,EAChBniC,EAAI,EAEAA,EAAI2R,EAAMnS,OAAS,GAAKuR,EAAQ/Q,GAAMopB,GAE5C+Y,EAAgBpxB,EAAQ/Q,GACxBA,GAGF,IAAIoiC,GAAgBhZ,EAAQ+Y,EACxBE,EAAWtxB,EAAQ/Q,GAAMmiC,EACzBG,EAAYF,EAAgBC,CAEhC,OAAO1wB,GAAO3R,GAAIgtB,QAAS7sB,EAAKmiC,IAGlCxiC,KAAM,WAEJ,MAAO,IAAI4R,IAAWjT,KAAKsC,KAAMtC,KAAKkT,MAAOlT,KAAKmT,QAASnT,KAAKoT,gBAqBpEjI,GAAM1J,OAAQ4R,GAAc/M,GAE1BiM,IAAK,SAASlO,EAAMiP,GAElB,GAAIxE,GAAOzK,EAAKmB,WACZuhB,EAAW1T,GAAaywB,QAASh1B,EAAMzK,EAAMiP,EAEjDtT,MAAK4C,MAAOkM,EAAMiY,GAClB/mB,KAAKqE,KAAOA,EACZrE,KAAKsT,WAAaA,GAGpBib,QAAS,SAAS7sB,EAAKipB,GAErB,GAAI5d,GAAI/M,KAAKqS,OAAOtR,OAChBe,EAAIkW,KAAKsL,MAAOqH,EAAQ5d,GACxB8V,EAAQ1V,GAAOrL,EAAG,EAAGiL,EAAI,EAE7B,OAAO/M,MAAKwF,WAAWnE,KAAMK,EAAK1B,KAAK8vB,aAAcjN,KAGvDxhB,KAAM,WAEJ,MAAO,IAAIgS,IAAcrT,KAAKsC,KAAMtC,KAAMA,KAAKqS,OAAOtR,WAI1DsS,GAAaywB,QAAU,SAASh1B,EAAMzK,EAAMiP,GAE1C,GAAIjP,EAAKgO,OAAOtR,SAAWuS,EAEzB,MAAOjS,GAAMgD,EAAKgO,OAKpB,KAAK,GAFDA,MAEK9Q,EAAI,EAAO+R,EAAJ/R,EAAgBA,IAE9B8Q,EAAOjR,KAAMiD,EAAKkqB,QAASzf,EAAKgX,SAAUvkB,GAAK+R,EAAa,IAG9D,OAAOjB,IAuBTlH,GAAM1J,OAAQ8R,GAAWjN,GAEvBiM,IAAK,SAAS/M,EAAYgO,EAAIC,EAAIC,EAAIC,GAEpC3T,KAAK4C,MAAO4C,GAAagO,EAAIC,EAAIC,EAAIC,KAGvC4a,QAAS,SAAS7sB,EAAK8gC,GAErB,GAAI1zB,GAAO9O,KAAKwF,WACZk9B,EAAKF,EAAKA,EACVG,EAAKH,EAAKE,EACVqB,EAAK,EAAIvB,EACTrW,EAAK4X,EAAKA,EACVC,EAAKD,EAAK5X,CAQd,OANAzqB,GAAMoN,EAAKzN,KAAMK,EAAK1B,KAAK8vB,aAAc,IACzCpuB,EAAMoN,EAAKlK,MAAOlD,EAAKsiC,GACvBtiC,EAAMoN,EAAKyb,KAAM7oB,EAAK1B,KAAK8vB,aAAc,GAAK,EAAI3D,EAAKqW,GACvD9gC,EAAMoN,EAAKyb,KAAM7oB,EAAK1B,KAAK8vB,aAAc,GAAK,EAAIiU,EAAKrB,GACvDhhC,EAAMoN,EAAKyb,KAAM7oB,EAAK1B,KAAK8vB,aAAc,GAAK6S,IAKhDthC,KAAM,WAEJ,MAAO,IAAIkS,IAAWvT,KAAKsC,KAAMtC,KAAKwF,WAAYxF,KAAKqS,OAAO,GAAIrS,KAAKqS,OAAO,GAAIrS,KAAKqS,OAAO,GAAIrS,KAAKqS,OAAO,KAGhH0d,SAAU,WAER,OAAO,KAwBX5kB,GAAM1J,OAAQmS,GAAatN,GAEzBiM,IAAK,SAAS/M,EAAYqO,EAAOC,EAAc5K,EAAK6K,GAElD/T,KAAK4C,MAAO4C,GAAaqO,EAAO3K,IAChClJ,KAAK8T,aAAeA,EACpB9T,KAAK+T,WAAaA,GAGpBwa,QAAS,SAAS7sB,EAAKO,GAErB,GAAI6M,GAAO9O,KAAKwF,WACZk9B,EAAKzgC,EAAIA,EACT0gC,EAAKD,EAAKzgC,CAQd,OANAP,GAAMoN,EAAKub,KAAM3oB,GACjBA,EAAMoN,EAAKyb,KAAM7oB,EAAK1B,KAAK8vB,aAAc,GAAK,EAAI6S,EAAK,EAAID,EAAK,GAChEhhC,EAAMoN,EAAKyb,KAAM7oB,EAAK1B,KAAK8vB,aAAc,GAAK,GAAK6S,EAAK,EAAID,GAC5DhhC,EAAMoN,EAAKyb,KAAM7oB,EAAKU,EAASpC,KAAK8T,cAAgB6uB,EAAK,EAAID,EAAKzgC,GAClEP,EAAMoN,EAAKyb,KAAM7oB,EAAKU,EAASpC,KAAK+T,YAAc4uB,EAAKD,IAKzDrhC,KAAM,WAEJ,MAAO,IAAIuS,IAAa5T,KAAKsC,KAAMtC,KAAKwF,WAAYxF,KAAKqS,OAAO,GAAIrS,KAAK8T,aAAc9T,KAAKqS,OAAO,GAAIrS,KAAK+T,aAG9Ggc,SAAU,WAER,OAAO,KAqBX5kB,GAAM1J,OAAQuS,GAAU1N,GAEtBiM,IAAK,SAAS/M,EAAY6M,GAExBrS,KAAK4C,MAAO4C,EAAY6M,IAG1Bkc,QAAS,SAAS7sB,EAAKipB,GAErB,GAAI7oB,GAAIkW,KAAKsL,MAAOqH,EAAQ3qB,KAAKqS,OAAOtR,QACpC8hB,EAAQ7K,KAAK3K,IAAKvL,EAAG9B,KAAKqS,OAAOtR,OAAS,EAE9C,OAAOf,MAAKwF,WAAWnE,KAAMK,EAAK1B,KAAK8vB,aAAcjN,KAGvDxhB,KAAM,WAEJ,MAAO,IAAI2S,IAAUhU,KAAKsC,KAAMtC,KAAKwF,WAAYnE,EAAKrB,KAAKqS,YAuB/DlH,GAAM1J,OAAQwS,GAAc3N,GAE1BiM,IAAK,SAAS/M,EAAY6M,EAAQC,EAAQ4B,GAExClU,KAAK4C,MAAO4C,EAAY6M,GACxBrS,KAAKsS,OAASwF,GAASxF,GACvBtS,KAAKkU,QAAUA,GAGjBqa,QAAS,SAAS7sB,EAAKipB,GAErB,GAAI2X,GAAKtiC,KAAKsS,OACVpJ,EAAMo5B,EAAGvhC,OAAS,CAEtB,IAAK4pB,EAAQ2X,EAAG,GACd,OAAO,CAGT,IAAK3X,EAAQ2X,EAAGA,EAAGvhC,OAAS,GAC1B,MAAOf,MAAKqS,OAAOiwB,EAAGvhC,OAAS,EAIjC,KADA,GAAIQ,GAAI,EACD+gC,EAAG/gC,EAAI,GAAKopB,GAAazhB,EAAJ3H,GAC1BA,GAEF,IAAIghC,GAAKD,EAAG/gC,GACRihC,EAAKF,EAAG/gC,EAAI,GACZkhC,GAAM9X,EAAQ4X,IAAOC,EAAKD,GAC1B/uB,EAAKxT,KAAK8vB,aAAcvuB,GACxBkS,EAAKzT,KAAK8vB,aAAcvuB,EAAI,GAC5B0iC,EAAKjkC,KAAKkU,QAAQ3S,EAEtB,OAAOvB,MAAKwF,WAAWklB,YAAahpB,EAAK8R,EAAIC,EAAIwwB,EAAIxB,KAEvDphC,KAAM,WAEJ,MAAO,IAAI4S,IAAcjU,KAAKsC,KAAMtC,KAAKwF,WAAYnE,EAAKrB,KAAKqS,QAAShR,EAAKrB,KAAKsS,QAASjR,EAAKrB,KAAKkU,aAqBzG/I,GAAM1J,OAAQ0S,GAAY/B,IAExBG,IAAK,SAAS/M,EAAY6M,GAExB,GAAIC,GAAS6B,GAAW+vB,SAAU1+B,EAAY6M,EAE9CrS,MAAK6iC,KAAMr9B,EAAY6M,EAAQC,IAGjCjR,KAAM,WAEJ,MAAO,IAAI8S,IAAYnU,KAAKsC,KAAMtC,KAAKwF,WAAYnE,EAAKrB,KAAKqS,YAIjE8B,GAAW+vB,SAAW,SAASp1B,EAAMuD,GAEnC,GAAItF,GAAIsF,EAAOtR,OAAS,EACrBmmB,IAEJA,GAAW,GAAM,CAEjB,KAAK,GAAI3lB,GAAI,EAAQwL,GAALxL,EAAQA,IAEvB2lB,EAAW3lB,GAAM2lB,EAAW3lB,EAAI,GAAMuN,EAAKgG,SAAUzC,EAAQ9Q,EAAI,GAAK8Q,EAAQ9Q,GAK/E,KAAK,GAFD4iC,GAAY,EAAMjd,EAAWna,GAExBxL,EAAI,EAAOwL,EAAJxL,EAAOA,IAEtB2lB,EAAW3lB,IAAO4iC,CAKnB,OAFCjd,GAAWna,GAAM,EAEXma,GAoBR/b,GAAM1J,OAAQ2S,GAAW9N,GAEvBiM,IAAK,SAAS/M,EAAY6O,GAExBrU,KAAK4C,MAAO4C,GAAa6O,KAG3Bka,QAAS,SAAS7sB,GAEhB,MAAO1B,MAAKwF,WAAWnE,KAAMK,EAAK1B,KAAK8vB,aAAc,KAGvDzuB,KAAM,WAEJ,MAAO,IAAI+S,IAAWpU,KAAKsC,KAAMtC,KAAKwF,WAAYxF,KAAKqS,OAAO,OAuBlElH,GAAM1J,OAAQ6S,GAAehO,GAE3BiM,IAAK,SAAS/M,EAAYgO,EAAIC,EAAIC,GAEhC1T,KAAK4C,MAAO4C,GAAagO,EAAIC,EAAIC,KAGnC6a,QAAS,SAAS7sB,EAAK8gC,GAErB,GAAI1zB,GAAO9O,KAAKwF,WACZk9B,EAAKF,EAAKA,EACVuB,EAAK,EAAIvB,EACTrW,EAAK4X,EAAKA,CAOd,OALAriC,GAAMoN,EAAKzN,KAAMK,EAAK1B,KAAK8vB,aAAc,IACzCpuB,EAAMoN,EAAKlK,MAAOlD,EAAKyqB,GACvBzqB,EAAMoN,EAAKyb,KAAM7oB,EAAK1B,KAAK8vB,aAAc,GAAK,EAAIiU,EAAKvB,GACvD9gC,EAAMoN,EAAKyb,KAAM7oB,EAAK1B,KAAK8vB,aAAc,GAAK4S,IAKhDrhC,KAAM,WAEJ,MAAO,IAAIiT,IAAetU,KAAKsC,KAAMtC,KAAKwF,WAAYxF,KAAKqS,OAAO,GAAIrS,KAAKqS,OAAO,GAAIrS,KAAKqS,OAAO,KAGpG0d,SAAU,WAER,OAAO,KAuBX5kB,GAAM1J,OAAQ8S,GAAqBjO,GAEjCiM,IAAK,SAAS/M,EAAY6M,EAAQmC,EAAU/B,GAE1CzS,KAAK4C,MAAO4C,EAAY6M,GACxBrS,KAAKwU,SAAWA,EAChBxU,KAAKyS,KAAOA,EACZzS,KAAKoV,MAAQ5P,EAAWsgB,SACxB9lB,KAAKqV,MAAQ7P,EAAWsgB,UAG1ByI,QAAS,SAAS7sB,EAAKipB,GAErB,GAAI7b,GAAO9O,KAAKwF,WACZ4P,EAAQpV,KAAKoV,MACbC,EAAQrV,KAAKqV,MACbb,EAAWxU,KAAKwU,SAChB4vB,EAAc,EAAM5vB,EACpB6vB,EAA0B,GAAX7vB,EACfzH,EAAI/M,KAAKqS,OAAOtR,QAAUf,KAAK4iC,MAAQ,EAAI,GAC3C9gC,EAAI6oB,EAAQ5d,EACZxL,EAAI4L,GAAO6K,KAAKsL,MAAOxhB,GAAK,EAAGiL,EAAI,GACnC9K,EAAIH,EAAIP,EAERiS,EAAKxT,KAAK8vB,aAAcvuB,EAAI,GAC5BkS,EAAKzT,KAAK8vB,aAAcvuB,GACxBmS,EAAK1T,KAAK8vB,aAAcvuB,EAAI,GAC5BoS,EAAK3T,KAAK8vB,aAAcvuB,EAAI,EAuBhC,OArBSiT,GAAJvS,GAEHA,GAASuS,EACTY,EAAQtG,EAAK4b,YAAatV,EAAO5B,EAAIC,EAAIxR,EAAIoiC,EAAeD,EAAcC,GAC1EhvB,EAAQvG,EAAK4b,YAAarV,EAAO5B,EAAIC,EAAIzR,EAAIoiC,EAAeA,GAC5D5wB,EAAK2B,EACL1B,EAAK2B,EACLpT,EAAQ,GAAJA,EAAU,IAENA,EAAImiC,IAEZniC,GAAKA,EAAImiC,GAAe5vB,EACxBY,EAAQtG,EAAK4b,YAAatV,EAAO3B,EAAIC,EAAIzR,EAAIoiC,EAAeD,GAC5D/uB,EAAQvG,EAAK4b,YAAarV,EAAO3B,EAAIC,EAAI1R,EAAIoiC,GAC7C5wB,EAAK2B,EACL1B,EAAK2B,EACLpT,EAAQ,GAAJA,GAGNP,EAAMoN,EAAK4b,YAAahpB,EAAK+R,EAAIC,EAAIzR,IAKvC6tB,aAAc,SAASvuB,GAErB,GAAI8Q,GAASrS,KAAKqS,OACdtF,EAAIsF,EAAOtR,OACXkL,EAAKjM,KAAK4iC,OAASrhC,EAAIwL,GAAKA,EAAII,GAAO5L,EAAG,EAAGwL,EAAI,EAErD,OAAO3K,GAASiQ,EAAQpG,KAG1B5K,KAAM,WAEJ,MAAO,IAAIkT,IAAqBvU,KAAKsC,KAAMtC,KAAKwF,WAAYnE,EAAKrB,KAAKqS,QAASrS,KAAKwU,SAAUxU,KAAKyS,OAGrGsd,SAAU,WAER,OAAO,KAsBX5kB,GAAM1J,OAAQgT,GAASnO,GAErBiM,IAAK,SAASlO,EAAMwP,EAAO3K,GAEzBlJ,KAAK4C,MAAOyB,EAAKmB,WAAYnB,EAAKgO,QAClCrS,KAAKqE,KAAOA,EACZrE,KAAK6T,MAAQA,EACb7T,KAAKkJ,IAAMA,GAGbqlB,QAAS,SAAS7sB,EAAKipB,GAErB,MAAO3qB,MAAKqE,KAAKkqB,QAAS7sB,GAAM1B,KAAKkJ,IAAMlJ,KAAK6T,OAAS8W,EAAQ3qB,KAAK6T,QAGxExS,KAAM,WAEJ,MAAO,IAAIoT,IAASzU,KAAKsC,KAAMtC,KAAKqE,KAAMrE,KAAK6T,MAAO7T,KAAKkJ,QAqB/DiC,GAAM1J,OAAQiT,GAAatC,IAEzBG,IAAK,SAASlO,EAAMiP,GAElB,GAAIxE,GAAOzK,EAAKmB,WACZ6M,EAASgB,GAAaywB,QAASh1B,EAAMzK,EAAMiP,GAC3ChB,EAAS6B,GAAW+vB,SAAUp1B,EAAMuD,EAExCrS,MAAK6iC,KAAM/zB,EAAMuD,EAAQC,GACzBtS,KAAKqE,KAAOA,EACZrE,KAAKsT,WAAaA,GAGpBjS,KAAM,WAEJ,MAAO,IAAIqT,IAAa1U,KAAKsC,KAAMtC,KAAKqE,KAAMrE,KAAKsT,eAsBvDnI,GAAM1J,OAAQkT,GAAOrO,GAEnBiM,IAAK,SAAS/M,EAAYqO,EAAO3K,GAE/BlJ,KAAK4C,MAAO4C,GAAcqO,EAAO3K,KAGnCqlB,QAAS,SAAS7sB,EAAKipB,GAErB,MAAO3qB,MAAKwF,WAAWklB,YAAahpB,EAAK1B,KAAK8vB,aAAc,GAAK9vB,KAAK8vB,aAAc,GAAKnF,IAG3FtpB,KAAM,WAEJ,MAAO,IAAIsT,IAAO3U,KAAKsC,KAAMtC,KAAKwF,WAAYxF,KAAKqS,OAAO,GAAIrS,KAAKqS,OAAO,OAgC9ElH,GAAM1J,OAAQmT,GAAgBxN,GAG5ByM,MAAO,SAASpL,EAAK3E,GAEnB9D,KAAKskC,OAAQ77B,EAAK3E,GAElB9D,KAAK6M,KAAO7M,KAAKwF,WAAWsgB,UAG9B/N,MAAO,WAEL,MAAO,IAAInD,IAAgB5U,KAAKoE,UAAWpE,KAAKwF,WAAYxF,KAAKwG,SAAUxG,KAAK6U,KAAM7U,KAAK8U,SAAU9U,KAAK+U,QAAS/U,KAAKgV,UAAWhV,KAAKyG,SAAUzG,KAAKiV,QAASjV,KAAKkV,eAGvK+b,eAAgB,SAASZ,GAMvB,GAAIvhB,GAAO9O,KAAKwF,WACZqP,EAAO7U,KAAKgxB,cAEZ/uB,EAAI6M,EAAKgG,SAAU9U,KAAKwG,SAAUqO,EAEtC7U,MAAK6M,KAAOiC,EAAKzN,KAAMrB,KAAK6M,KAAM7M,KAAKwG,UACvCxG,KAAK6M,KAAOiC,EAAKmX,IAAKjmB,KAAK6M,KAAMgI,GAEtB,IAAN5S,IAEHjC,KAAK6M,KAAOiC,EAAKlK,MAAO5E,KAAK6M,KAAM,EAAM5K,GACzCjC,KAAK6M,KAAOiC,EAAKlK,MAAO5E,KAAK6M,MAAO5K,EAAIjC,KAAK8U,UAAY9U,KAAKgV,YAGhEhV,KAAK6M,KAAOiC,EAAKyb,KAAMvqB,KAAK6M,KAAM7M,KAAKyG,UAAWzG,KAAK+U,SAEvD/U,KAAKyG,SAAWqI,EAAKyb,KAAMvqB,KAAKyG,SAAUzG,KAAK6M,KAAMwjB,MAgCzDllB,GAAM1J,OAAQ0T,GAAc/N,GAG1ByM,MAAO,SAASpL,EAAK3E,GAEnB9D,KAAKskC,OAAQ77B,EAAK3E,EAElB,IAAIM,GAAYN,EAASyK,aAAcvO,KAAKoE,WACxC0K,EAAO9O,KAAKwF,UAEhBxF,MAAK+U,QAAe/U,KAAKoO,WAAYtK,EAAU9D,KAAK+U,QAAS3Q,EAAUkK,cACvEtO,KAAKgV,UAAehV,KAAKoO,WAAYtK,EAAU9D,KAAKgV,UAAW5Q,EAAUkK,cACzEtO,KAAKoV,MAAetG,EAAKgX,SACzB9lB,KAAKqV,MAAevG,EAAKgX,UAG3B/N,MAAO,WAEL,MAAO,IAAI5C,IAAcnV,KAAKoE,UAAWpE,KAAKwF,WAAYxF,KAAKwG,SAAUxG,KAAK6U,KAAM7U,KAAK+U,QAAS/U,KAAKgV,UAAWhV,KAAKyG,SAAUzG,KAAKiV,QAASjV,KAAKkV,eAGtJoP,YAAa,WAEX,MAAOza,GAAY7J,KAAK6U,OACjBhL,EAAY7J,KAAKwG,WACjBqD,EAAY7J,KAAKiV,UACjBpL,EAAY7J,KAAKyG,WACjBoD,EAAY7J,KAAK+U,UACjBlL,EAAY7J,KAAKgV,YAG1Bic,eAAgB,SAASZ,GAKvB,GAAIvhB,GAAO9O,KAAKwF,UAEhBxF,MAAKqV,MAAQvG,EAAKzN,KAAMrB,KAAKqV,MAAOrV,KAAK+U,SACzC/U,KAAKqV,MAAQvG,EAAK0b,IAAKxqB,KAAKqV,MAAOrV,KAAKyG,UAExCzG,KAAKoV,MAAQtG,EAAKzN,KAAMrB,KAAKoV,MAAOpV,KAAKwG,UACzCxG,KAAKoV,MAAQtG,EAAKmX,IAAKjmB,KAAKoV,MAAOpV,KAAKgxB,eACxChxB,KAAKoV,MAAQtG,EAAK0b,IAAKxqB,KAAKoV,MAAOpV,KAAKgV,WACxChV,KAAKoV,MAAQtG,EAAKmX,IAAKjmB,KAAKoV,MAAOpV,KAAKqV,OAExCrV,KAAKyG,SAAWqI,EAAKyb,KAAMvqB,KAAKyG,SAAUzG,KAAKoV,MAAOib,KAM1D,IAAIkU,IAAe,WAEjB,GAAInnB,GAAK,CAET,OAAO,YACL,QAASA,KAiBbjS,IAAM5L,OAAQ+V,IAGZkvB,WAAY,SAAS1uB,GAInB,MAFA9V,MAAK8V,QAAUA,EAER9V,MAGTyjB,SAAU,SAASjf,EAAOD,GAKxB,MAHAvE,MAAKwV,cAAgBxO,GAAOxC,GAC5BxE,KAAKyV,eAAiBtQ,GAASZ,EAAQmR,GAAQC,QAExC3V,MAGT6a,MAAO,SAASrT,GAKd,MAHAxH,MAAKuV,iBAAmBvV,KAAKykC,aAAcj9B,GAC3CxH,KAAK4V,WAAY,EAEV5V,MAGT0kC,OAAM,SAASl9B,GAIb,MAFAxH,MAAKuV,iBAAmBvV,KAAKykC,aAAcj9B,GAEpCxH,MAGTomB,IAAK,SAAS5e,GAEZ,GAAIm9B,GAAa3kC,KAAKykC,aAAcj9B,EAIpC,OAFAxH,MAAKuV,iBAAiBnU,KAAKb,MAAOP,KAAKuV,iBAAkBovB,GAElD3kC,MAGT4kC,YAAa,SAAS9gC,GAEpB,GAAI+gC,GAAa/gC,EAASghC,YACtBC,EAAW/kC,KAAK6V,UAAUnF,IAAKm0B,EAWnC,OATM3kC,GAAW6kC,KAEfF,EAAaN,KACbQ,EAAW,GAAI1uB,IAAevS,GAC9BA,EAASghC,YAAcD,EAEvB7kC,KAAK6V,UAAU3P,IAAK2+B,EAAYE,IAG3BA,GAGTN,aAAc,SAASj9B,GAErB,GAAIL,KAEJ,IAAKxG,EAAS6G,GAEZ,IAAK,GAAIjG,GAAI,EAAGA,EAAIiG,EAASzG,OAAQQ,IACrC,CACE,GAAIuC,GAAWjE,EAAO2H,EAAUjG,GAE3BuC,MAAa,GAEhBqD,EAAU/F,KAAMpB,KAAK4kC,YAAa9gC,QAKxC,CACE,GAAIA,GAAWjE,EAAO2H,EAEjB1D,MAAa,GAEhBqD,EAAU/F,KAAMpB,KAAK4kC,YAAa9gC,IAItC,MAAOqD,IAGTyb,GAAI,SAAS1M,GAEX,GAAI0M,GAAK5b,GAAOkP,GAAM,EAEtB,IAAK0M,KAAO,EAEV,KAAM,6BAA+B1M,CAKvC,OAFAlW,MAAKwI,YAAcoa,EAEZ5iB,MAGTglC,KAAM,SAAS9uB,GAEb,GAAI+uB,GAAKj+B,GAAOkP,GAAM,EAEtB,IAAK+uB,KAAO,EAEV,KAAM,+BAAiC/uB,CAGzC,OAAOlW,MAAK4iB,GAAI5iB,KAAKwI,YAAcy8B,IAGrC/7B,IAAK,WAEH,MAAOlJ,MAAK4iB,GAAI5iB,KAAKsE,aAGvB8a,KAAM,SAASpQ,EAAWxM,EAAS6c,GAEjC,GAAI/O,GAASrB,GAAYD,EAAWxM,GAChCqY,EAAQ7a,KAAK4V,SAEjB,OAAO5V,MAAKklC,oBAAoB,SAASH,EAAU7uB,GAEjD6uB,EAASzlB,gBAAiBhP,EAAOC,iBAAkB8O,EAAKnJ,EAAM2E,MAIlE+E,MAAO,SAAS5Q,EAAWxM,EAAS6c,GAElC,GAAI/O,GAASrB,GAAYD,EAAWxM,EAEpC,OAAOxC,MAAKklC,oBAAoB,SAASH,EAAU7uB,GAEjD6uB,EAASllB,iBAAkBvP,EAAOC,iBAAkB8O,EAAKnJ,MAI7DwE,WAAY,SAASA,EAAY1L,EAAWxM,EAAS6c,GAEnD,GAAI3E,GAAaD,GAAaC,GAC1BpK,EAASrB,GAAYD,EAAWxM,EAEpC,OAAOxC,MAAKklC,oBAAoB,SAASH,EAAU7uB,GAEjD6uB,EAASplB,sBAAuBrP,EAAOC,iBAAkB8O,EAAKnJ,EAAMwE,MAIxEwqB,oBAAqB,SAASC,GAE5B,GAAItvB,GAAY7V,KAAKuV,iBACjBxI,EAAI8I,EAAU9U,OAAS,EACvBmV,EAAOlW,KAAKwI,WAEhB,IAAKxI,KAAKwV,cAAgB,EAKxB,IAAK,GAHD4vB,GAAUr4B,EAAI/M,KAAKwV,cACnBjR,EAASvE,KAAKyV,eAETlU,EAAI,EAAQwL,GAALxL,EAAQA,IAEtB4jC,EAAYtvB,EAAWtU,GAAK2U,EAAO3R,EAAQhD,EAAIwL,GAAMq4B,OAKvD,KAAK,GAAI7jC,GAAI,EAAQwL,GAALxL,EAAQA,IAEtB4jC,EAAYtvB,EAAWtU,GAAK2U,EAYhC,OARAlW,MAAKwV,cAAgB,EACrBxV,KAAK4V,WAAY,EAEZ5V,KAAK8V,SAER9V,KAAKkJ,MAGAlJ,MAGTsE,SAAU,WAKR,IAAK,GAHDuR,GAAY7V,KAAK6V,UAAUmI,OAC3BojB,EAAU,EAEL7/B,EAAI,EAAGA,EAAIsU,EAAU9U,OAAQQ,IAEpC6/B,EAAUppB,KAAKxL,IAAK40B,EAASvrB,EAAWtU,GAAIkB,YAAYyf,gBAG1D,OAAOkf,MAIXn2B,GAAUqK,GAAMuG,WAchB1Q,GAAM5L,OAAQwW,IAEZoN,QAAS,WAIP,MAFAnjB,MAAKiW,OAASjW,KAAKiW,MAEZjW,MAETqlC,SAAU,WAIR,MAFArlC,MAAKiW,OAAS+B,KAAK0U,IAAK1sB,KAAKiW,OAEtBjW,MAETslC,QAAS,WAIP,MAFAtlC,MAAKiW,MAAQ+B,KAAK0U,IAAK1sB,KAAKiW,OAErBjW,MAET6T,MAAO,SAAS0xB,EAAUC,GASxB,MAPAxlC,MAAKkW,KAAO,EAEPqvB,GAEHvlC,KAAKO,MAAOP,KAAKkW,KAAMsvB,GAGlBxlC,MAETkJ,IAAK,SAASq8B,EAAUC,GAStB,MAPAxlC,MAAKkW,KAAOlW,KAAKsE,SAEZihC,GAEHvlC,KAAKO,MAAOP,KAAKkW,KAAMsvB,GAGlBxlC,MAETof,KAAM,WAUJ,MARMpf,MAAKmW,UAETnW,KAAKwI,YAAcC,KACnBzI,KAAKmW,SAAU,EAEf7N,GAAYtI,KAAKuI,MAGZvI,MAET8I,MAAO,WAIL,MAFA9I,MAAKmW,SAAU,EAERnW,MAETylC,OAAM,SAASvvB,EAAMqvB,EAAUC,GAS7B,MAPAxlC,MAAKkW,KAAOlP,GAAOkP,GAEdqvB,GAEHvlC,KAAKO,MAAOP,KAAKkW,KAAMsvB,GAGlBxlC,MAETO,MAAO,SAASmlC,EAAWF,GAMzB,IAAK,GAJDtvB,GAAOrU,EAAU6jC,EAAW1lC,KAAKkW,MACjCL,EAAY7V,KAAKgW,MAAMH,UAAUmI,OACjC7V,KAEK5G,EAAI,EAAGA,EAAIsU,EAAU9U,OAAQQ,IACtC,CACE,GAAIwjC,GAAWlvB,EAAWtU,EAErB2U,IAAQ6uB,EAASlxB,OAEpB1L,EAAO/G,KAAM2jC,GAIjB,IAAK,GAAIxjC,GAAI,EAAGA,EAAI4G,EAAOpH,OAAQQ,IAEjC4G,EAAQ5G,GAAImH,UAAWwN,EAGzB,KAAK,GAAI3U,GAAI,EAAGA,EAAI4G,EAAOpH,OAAQQ,IAEjC4G,EAAQ5G,GAAIoH,OAAQuN,EAGtB,KAAK,GAAI3U,GAAI,EAAGA,EAAI4G,EAAOpH,OAAQQ,IAEjC4G,EAAQ5G,GAAIhB,OAQd,OALMilC,IAEJxlC,KAAKqI,QAAS,SAAUrI,KAAMkW,IAGzBlW,MAET2lC,gBAAiB,WAkBf,MAhBK3lC,MAAKmW,UAEHnW,KAAKkW,KAAO,GAEflW,KAAKkW,KAAO,EACZlW,KAAKmW,SAAU,EACfnW,KAAKqI,QAAS,SAAUrI,QAEhBA,KAAKkW,KAAOlW,KAAKsE,WAEzBtE,KAAKkW,KAAOlW,KAAKsE,SACjBtE,KAAKmW,SAAU,EACfnW,KAAKqI,QAAS,OAAQrI,SAInBA,MAEToW,OAAQ,SAASJ,EAAO4vB,GAEtB,MAAO,YAEL,GAAIp9B,GAAcC,KACdmb,EAAUpb,EAAco9B,EAAOp9B,WAEnCo9B,GAAO1vB,MAAQ0N,EAAUgiB,EAAO3vB,MAChC2vB,EAAOp9B,YAAcA,EACrBo9B,EAAOrlC,QACPqlC,EAAOD,kBAEFC,EAAOzvB,SAEV7N,GAAYs9B,EAAOr9B,SAM3B0C,GAAU8K,GAAY8F,WAUtB1Q,GAAM5L,OAAQ8W,IAGZiJ,gBAAiB,SAAShC,EAAe+B,EAAKnJ,EAAM2E,GAE7C7a,KAAKyC,YAAY2f,OAEpBpiB,KAAKyC,YAAY4iB,UAAW/H,EAAe+B,EAAKnJ,IAIhDlW,KAAKyC,YAAYwD,OAAQqX,GACzBtd,KAAKyC,YAAY+B,MAAO0R,GAElB2E,IAEJ7a,KAAK6T,MAAQqC,KAKnB2J,iBAAkB,SAASvC,EAAe+B,EAAKnJ,GAExCmJ,GAEHrf,KAAKyC,YAAY6iB,iBAAkBhI,EAAepH,GAGpDlW,KAAKyC,YAAYgV,SAAU6F,IAG7BqC,sBAAuB,SAASrC,EAAe+B,EAAKnJ,EAAMwE,GAEnD2E,GAEHrf,KAAKyC,YAAY6iB,iBAAkBhI,EAAepH,EAAOwE,EAAWxE,MAGtElW,KAAKyC,YAAYwd,cACfvF,EACA4C,EACA,SAAkBW,GAChB,GAAIlU,GAAa/J,KAAKyC,YAAYiO,IAAKuN,GACnC7Z,EAAYpE,KAAK8D,SAASyK,aAAc0P,EAE5C,OAAOlU,GAAaA,EAAWqa,cAAelO,EAAM9R,EAAUoa,gBAAmB9T,QAEnF,SAAsBuT,GACpB,MAAOje,MAAK8D,SAASyK,aAAc0P,IAErC,SAAyBlU,GACvB/J,KAAKyC,YAAY8iB,iBAAkBxb,EAAYmM,IAEjD,SAAoBnM,EAAYsW,EAAc3e,GAC5C,MAAOqI,GAAWqa,cAAelO,EAAOmK,EAAc3e,IAExD,SAAwBqI,EAAYsW,GAClCtW,EAAWoa,OAAQjO,EAAOmK,IAE5BrgB,OAIJ0I,UAAW,SAASwN,GAKlB,IAAK,GAHDpS,GAAW9D,KAAK8D,SAChBrB,EAAczC,KAAKyC,YAAYub,OAE1Bzc,EAAI,EAAGA,EAAIkB,EAAY1B,OAAQQ,IACxC,CACE,GAAIwI,GAAatH,EAAalB,GAC1B0c,EAAOlU,EAAW3F,UAClB0a,EAAWhb,EAASrB,YAAYiO,IAAKuN,GACrCoG,EAAeta,EAAWsa,aAAcnO,EAEvC4I,KAAauF,IAEXA,EAEHvgB,EAAS+a,gBAAiBwF,GAI1BvgB,EAASrB,YAAYuf,OAAQ/D,IAKnCje,KAAK8D,SAAS4E,UAAWwN,IAG3BvN,OAAQ,SAASuN,GAKf,IAAK,GAHDpS,GAAW9D,KAAK8D,SAChBrB,EAAczC,KAAKyC,YAAYub,OAE1Bzc,EAAI,EAAGA,EAAIkB,EAAY1B,OAAQQ,IACxC,CACE,GAAIwI,GAAatH,EAAalB,GAC1B0c,EAAOlU,EAAW3F,UAClBA,EAAYN,EAASyK,aAAc0P,GACnCzY,EAAapB,EAAUoB,WACvBqgC,EAAe/hC,EAAS+G,MAAOoT,EAEnC,IAAKzY,EAAWwlB,QAAS6a,GACzB,CACE,GAAIvlB,GAAUvW,EAAWqa,cAAelO,EAAM2vB,EAEzCvlB,MAAY,IAEfxc,EAAS+G,MAAOoT,GAASqC,EACzBxc,EAAS0Z,QAASS,IAAS,MAMnC1d,MAAO,WAELP,KAAK8D,SAASvD,UAMlB,IAAIoX,MAKJA,IAAiB,OAAI,GAAIpG,IAmBzBoG,GAAc,IAAI,GAAIrG,IAKtBqG,GAAS,SAAW,GAAInG,IAKxBmG,GAAkB,QAAI,GAAIlG,IAK1BkG,GAAgB,MAAI,GAAI7F,IAKxB6F,GAAmB,SAAI,GAAIjG,IAK3BiG,GAAe,KAAI,GAAIhG,IAsBvBgG,GAAe,KAAI,GAAI/F,IAKvB+F,GAAkB,QAAI,GAAI9F,IAmB1B8F,GAAgB,MAAI,GAAI5F,IAKxB4F,GAAkB,QAAI,GAAI3F,IAK1B2F,GAAiB,OAAI,GAAI1F,IAKzB0F,GAAoB,UAAI,GAAIzF,IAmB5ByF,GAAkB,QAAI,GAAIxF,GAS1B,IAAI0F,MAQJA,IAAoB,OAAI,GAAI7G,IAQ5B6G,GAAY,MAAQ,GAAIhH,IAQxBgH,GAAY,MAAQ,GAAI9G,IAQxB8G,GAAwB,WAAI,GAAI5G,IAQhC4G,GAAiB,IAAI,GAAI3G,IAQzB2G,GAAkB,KAAI,GAAI1G,IAQ1B0G,GAAoB,OAAI,GAAIzG,IAQ5ByG,GAAY,WAAaA,GAAoB,MAG7C,IAAIoB,MAKJA,IAAkB,OAAI,GAAI5H,IAK1B4H,GAAU,WAAaA,GAAkB,MAGzC,IAAImB,MAQJA,IAAa,MAAI,SAAS/V,GAExB,GAAIyK,GAAOT,GAAahK,EAAKmB,YACzB8I,EAAeQ,EAAKrJ,MAAOpB,EAAKiK,aAAcQ,EAAKpJ,KAEvD,OAAO,IAAI0O,IACT/P,EAAK/B,KACLwM,EACAA,EAAKrJ,MAAOpB,EAAKgQ,MAAO/F,KAU5B8L,GAAa,MAAI,SAAS/V,GAIxB,IAAK,GAFD6O,GAAQ7O,EAAK6O,MAER3R,EAAI,EAAGA,EAAI2R,EAAMnS,OAAQQ,IAEhC2R,EAAO3R,GAAM2Y,GAAOhH,EAAO3R,GAG7B,OAAO,IAAI0R,IACT5O,EAAK/B,KACL4Q,EACA7O,EAAK8O,QACL9O,EAAK+O,cAWTgH,GAAgB,SAAI,SAAS/V,GAE3B,GAAIsK,GAASuL,GAAO7V,EAAKA,KAEzB,OAAO,IAAIgP,IACThP,EAAK/B,KACLqM,EACAtK,EAAK0I,GAAK1I,EAAKiP,aAUnB8G,GAAa,MAAI,SAAS/V,GAExB,GAAIyK,GAAOT,GAAahK,EAAKmB,YACzB8I,EAAeQ,EAAKrJ,MAAOpB,EAAKiK,aAAcQ,EAAKpJ,KAEvD,OAAO,IAAI6N,IACTlP,EAAK/B,KACLwM,EACAA,EAAKrJ,MAAOpB,EAAKmP,GAAIlF,GACrBQ,EAAKrJ,MAAOpB,EAAKoP,GAAInF,GACrBQ,EAAKrJ,MAAOpB,EAAKqP,GAAIpF,GACrBQ,EAAKrJ,MAAOpB,EAAKsP,GAAIrF,KAUzB8L,GAAa,MAAI,SAAS/V,GAExB,GAAIyK,GAAOT,GAAahK,EAAKmB,WAE7B,KAAKnB,EAAKiO,OACV,CACEjO,EAAKiO,SAEL,KAAK,GAAI/Q,GAAI,EAAGA,EAAI8C,EAAKgO,OAAOtR,OAAQQ,IAEtC8C,EAAKiO,OAAQ/Q,GAAMA,GAAM8C,EAAKgO,OAAOtR,OAAS,GAIlD,MAAO,IAAIqR,IACT/N,EAAK/B,KACLwM,EACAA,EAAKob,WAAY7lB,EAAKgO,OAAQhO,EAAKgO,OAAQhO,EAAKiK,cAChDjK,EAAKiO,SAUT8H,GAAY,KAAI,SAAS/V,GAEvB,GAAIyK,GAAOT,GAAahK,EAAKmB,WAE7B,OAAO,IAAIwO,IACT3P,EAAK/B,KACLwM,EACAA,EAAKob,WAAY7lB,EAAKgO,OAAQhO,EAAKgO,OAAQhO,EAAKiK,gBAUpD8L,GAAgB,SAAI,SAAS/V,GAE3B,GAAIyK,GAAOT,GAAahK,EAAKmB,WAE7B,KAAKnB,EAAKiO,OACV,CACEjO,EAAKiO,SAEL,KAAK,GAAI/Q,GAAI,EAAGA,EAAI8C,EAAKgO,OAAOtR,OAAQQ,IAEtC8C,EAAKiO,OAAQ/Q,GAAMA,GAAM8C,EAAKgO,OAAOtR,OAAS,GAIlD,GAAI+kC,GAAgB3gC,GAASd,EAAK6P,QAAS,KAE3C,KAAMhU,EAAWmE,EAAK6P,WAAcvT,EAAS0D,EAAK6P,UAA+B,OAAlB4xB,EAC/D,CACEzhC,EAAK6P,UAEL,KAAK,GAAI3S,GAAI,EAAGA,EAAI8C,EAAKgO,OAAOtR,OAAQQ,IAEtC8C,EAAK6P,QAAS3S,GAAMukC,EAIxB,IAAK,GAAIvkC,GAAI,EAAGA,EAAI8C,EAAK6P,QAAQnT,OAAQQ,IAEvC8C,EAAK6P,QAAS3S,GAAM4D,GAASd,EAAK6P,QAAS3S,GAG7C,OAAO,IAAI0S,IACT5P,EAAK/B,KACLwM,EACAA,EAAKob,WAAY7lB,EAAKgO,OAAQhO,EAAKgO,OAAQhO,EAAKiK,cAChDjK,EAAKiO,OACLjO,EAAK6P,UAWTkG,GAAiB,UAAI,SAAS/V,GAE5B,GAAIyK,GAAOT,GAAahK,EAAKmB,YACzB8I,EAAeQ,EAAKrJ,MAAOpB,EAAKiK,aAAcQ,EAAKpJ,KAEvD,OAAO,IAAI4O,IACTjQ,EAAK/B,KACLwM,EACAA,EAAKrJ,MAAOpB,EAAKmP,GAAIlF,GACrBQ,EAAKrJ,MAAOpB,EAAKoP,GAAInF,GACrBQ,EAAKrJ,MAAOpB,EAAKqP,GAAIpF,KAUzB8L,GAAa,MAAI,SAAS/V,GAExB,GAAIyK,GAAOT,GAAahK,EAAKmB,YACzB8I,EAAeQ,EAAKrJ,MAAOpB,EAAKiK,aAAcQ,EAAKpJ,KAEvD,OAAO,IAAIiP,IACTtQ,EAAK/B,KACLwM,EACAA,EAAKrJ,MAAOpB,EAAKwP,MAAOvF,GACxBQ,EAAKrJ,MAAOpB,EAAK6E,IAAKoF,KAU1B8L,GAAW,IAAI,SAAS/V,GAEtB,GAAIsK,GAASuL,GAAO7V,EAAKA,KAEzB,OAAO,IAAIoQ,IACTpQ,EAAK/B,KACLqM,EACA9M,EAAUwC,EAAKwP,MAAO,GACtBhS,EAAUwC,EAAK6E,IAAK,KAUxBkR,GAAM,oBAAsB,SAAS/V,GAEnC,GAAIyK,GAAOT,GAAahK,EAAKmB,WAE7B,OAAO,IAAI+O,IACTlQ,EAAK/B,KACLwM,EACAA,EAAKob,WAAY7lB,EAAKgO,OAAQhO,EAAKgO,OAAQhO,EAAKiK,cAChDjK,EAAKmQ,SACLnQ,EAAKoO,OAUT2H,GAAc,OAAI,SAAS/V,GAEzB,GAAIyK,GAAOT,GAAahK,EAAKmB,WAE7B;MAAO,IAAI2O,IACT9P,EAAK/B,KACLwM,EACAA,EAAKob,WAAY7lB,EAAKgO,OAAQhO,EAAKgO,OAAQhO,EAAKiK,gBAWpD8L,GAAe,QAAI,SAAS/V,GAE1B,GAAIsK,GAASuL,GAAO7V,EAAKA,KAEzB,OAAO,IAAIqQ,IACTrQ,EAAK/B,KACLqM,EACAtK,EAAK0I,GAAK1I,EAAKiP,aAUnB8G,GAAe,QAAI,SAAS/V,GAE1B,GAAIyK,GAAOT,GAAahK,EAAKmB,YACzB8I,EAAeQ,EAAKrJ,MAAOpB,EAAKiK,aAAcQ,EAAKpJ,KAEvD,OAAO,IAAIkO,IACTvP,EAAK/B,KACLwM,EACAA,EAAKrJ,MAAOpB,EAAKwP,MAAOvF,GACxBQ,EAAKrJ,MAAOpB,EAAKyP,aAAcxF,GAC/BQ,EAAKrJ,MAAOpB,EAAK6E,IAAKoF,GACtBQ,EAAKrJ,MAAOpB,EAAK0P,WAAYzF,KAUjC8L,GAAc,OAAI,SAAS/V,GAEzB,GAAIyK,GAAOT,GAAahK,EAAKmB,WAE7B,OAAO,IAAIsN,IACTzO,EAAK/B,KACLwM,EACAA,EAAKob,WAAY7lB,EAAKgO,OAAQhO,EAAKgO,OAAQhO,EAAKiK,cAChDjK,EAAK0O,UAUTqH,GAAkB,WAAI,SAAS/V,GAE7B,GAAIyK,GAAOT,GAAahK,EAAKmB,WAE7B,OAAO,IAAIgN,IACTnO,EAAK/B,KACLwM,EACAA,EAAKob,WAAY7lB,EAAKgO,OAAQhO,EAAKgO,OAAQhO,EAAKiK,cAChDjK,EAAKoO,KACLpO,EAAKqO,OACLrO,EAAKsO,SAUTyH,GAAM,eAAiB,SAAS/V,GAE9B,GAAIyK,GAAOT,GAAahK,EAAKmB,WAE7B,OAAO,IAAIwN,IACT3O,EAAK/B,KACLwM,EACAA,EAAKob,WAAY7lB,EAAKgO,OAAQhO,EAAKgO,OAAQhO,EAAKiK,cAChDjK,EAAKoO,OAUT2H,GAAM,gBAAkB,SAAS/V,GAE/B,GAAIyK,GAAOT,GAAahK,EAAKmB,WAE7B,OAAO,IAAIqN,IACTxO,EAAK/B,KACLwM,EACAA,EAAKob,WAAY7lB,EAAKgO,OAAQhO,EAAKgO,OAAQhO,EAAKiK,cAChDjK,EAAKoO,MAKT,IAAI+H,MAQJA,IAAkB,SAAI,SAAS2E,GAE7B,MAAO,IAAIvK,IACTuK,EAAO/a,UACP+a,EAAO3Z,WACP3D,EAAUsd,EAAO3Y,UAAU,GAC3B3E,EAAUsd,EAAOtK,MAAM,GACvBsK,EAAOrK,SACPqK,EAAOpK,QACPoK,EAAOnK,UACPmK,EAAO1Y,SACP0Y,EAAOlK,QACPkK,EAAOjK,eAUXsF,GAAgB,OAAI,SAAS2E,GAE3B,MAAO,IAAIhK,IACTgK,EAAO/a,UACP+a,EAAO3Z,WACP3D,EAAUsd,EAAO3Y,UAAU,GAC3B3E,EAAUsd,EAAOtK,MAAM,GACvBsK,EAAOpK,QACPoK,EAAOnK,UACPmK,EAAO1Y,SACP0Y,EAAOlK,QACPkK,EAAOjK,cA6lBX,IAAIsE,OAqOAlU,GAAU,WAEZ,GAAIygC,IACFC,IAAYl/B,OAAOC,kBACnBk/B,SAAYn/B,OAAOC,kBACnBm/B,SAAYp/B,OAAOC,kBACnBuE,KAAY,EACZ66B,MAAY,EACZC,OAAY,EACZC,MAAY,GACZzb,OAAY,EAGd,OAAO,UAASjmB,EAAQuT,GAEtB,GAAK1X,EAAUmE,GAEb,MAAOA,EAET,IAAKjE,EAAUiE,GACf,CAGE,GAFAA,EAASA,EAAO4K,cAEX5K,IAAUohC,GAEb,MAAOA,GAAaphC,EAIpB,IAAI2L,GAASshB,SAAUjtB,EAEvB,KAAM0U,MAAM/I,GAEV,MAAOA,GAKb,MAAOzO,GAAUqW,EAAiBnI,GAASpL,YA+F3CqC,GAAQ,WAEV,GAAIg0B,GAAQ,gEAER+K,GACFO,GAAQ,EACRtkC,EAAQ,IACRukC,GAAQ,IACRC,MAAQ,IAAO,GACfC,MAAQ,IAAO,GACfC,EAAQ,IACRC,IAAQ,IACR35B,EAAQ,IACRK,IAAQ,IACRu5B,EAAQ,KACRC,GAAQ,KAGV,OAAO,UAAS3wB,EAAMgC,GAEpB,GAAK1X,EAAU0V,GAGb,MAAO8B,MAAKsL,MAAOpN,EAErB,IAAKxV,EAAUwV,GACf,CACE,GAAI5F,GAAS0qB,EAAME,KAAMhlB,EAEzB,IAAK5F,EACL,CACE,GAAI4F,GAAOoC,WAAYhI,EAAO,IAC1Bw2B,EAAOx2B,EAAO,EAOlB,OALKw2B,KAAQf,KAEX7vB,GAAQ6vB,EAAae,IAGhB9uB,KAAKsL,MAAOpN,IAIvB,MAAOrU,GAAUqW,EAAiB,OAMlCyC,KAqUF,OA9LA1P,IAAUpL,GAGVA,EAAME,OAASA,EACfF,EAAMknC,GAAKrkC,EAASmZ,UACpB9b,EAAOgnC,GAAKlkC,EAAUgZ,UACtBhc,EAAM6H,UAAYA,EAClB7H,EAAM+H,OAASA,EACf/H,EAAMiI,QAAUA,EAChBjI,EAAMuI,UAAYA,GAClBvI,EAAMyI,WAAaA,GACnBzI,EAAMmI,iBAAmBA,EACzBnI,EAAMoI,aAAeA,EACrBpI,EAAMqI,SAAWA,EACjBrI,EAAM0I,IAAMA,EACZ1I,EAAMiJ,MAAQA,EACdjJ,EAAMmJ,OAASA,EACfnJ,EAAMoJ,KAAOA,EACbpJ,EAAMqJ,IAAMA,EACZrJ,EAAMsJ,OAASA,EACftJ,EAAMuJ,OAASA,EAGfvJ,EAAMI,KAAOA,EACbJ,EAAMK,UAAYA,EAClBL,EAAMO,WAAaA,EACnBP,EAAMW,SAAWA,EACjBX,EAAMY,UAAYA,EAClBZ,EAAMa,SAAWA,EACjBb,EAAMc,QAAUA,EAChBd,EAAMgB,SAAWA,EACjBhB,EAAMiB,QAAUA,EAChBjB,EAAM4I,IAAMA,GACZ5I,EAAMsX,KAAOA,GACbtX,EAAMoB,QAAUA,EAChBpB,EAAMwB,KAAOA,EACbxB,EAAM4B,OAASA,EACf5B,EAAMgC,SAAWA,EACjBhC,EAAMqC,SAAWA,EACjBrC,EAAMuC,QAAUA,EAChBvC,EAAMud,GAAKA,GACXvd,EAAMsL,MAAQA,GACdtL,EAAMkQ,SAAWA,GAGjBlQ,EAAMsN,MAAQA,GACdtN,EAAMyN,QAAUA,GAChBzN,EAAM+M,IAAMA,GACZ/M,EAAMiN,OAASA,GACfjN,EAAM0N,UAAYA,GAClB1N,EAAM6N,UAAYA,GAClB7N,EAAMgO,OAASA,GAGfhO,EAAM2P,WAAaA,GACnB3P,EAAMgY,YAAcA,GACpBhY,EAAMoZ,UAAYA,GAClBpZ,EAAM8X,SAAWzU,EACjBrD,EAAMua,MAAQA,GACdva,EAAM2a,QAAUA,GAChB3a,EAAM6V,QAAUA,GAChB7V,EAAM2Y,YAAcA,GACpB3Y,EAAM2Z,QAAUA,GAChB3Z,EAAM8a,YAAcA,GAGpB9a,EAAMmP,UAAYC,GAClBpP,EAAMgiB,eAAiBrL,GACvB3W,EAAM2F,WAAa6I,GACnBxO,EAAM2E,MAAQmB,GACd9F,EAAMyE,SAAWc,GACjBvF,EAAM0E,OAASY,GACftF,EAAMiZ,WAAaD,GACnBhZ,EAAMP,QAAUqE,GAChB9D,EAAMmnC,WAAa1/B,GACnBzH,EAAMonC,OAASpgC,GACfhH,EAAM6E,OAASkB,GACf/F,EAAM2C,QAAUsN,GAChBjQ,EAAMmF,QAAU2R,GAChB9W,EAAMwE,KAAO6V,GACbra,EAAM8E,OAASW,GACfzF,EAAM+E,MAAQW,GACd1F,EAAM4E,MAAQY,GACdxF,EAAMsf,OAAS7E,GACfza,EAAMqW,KAAOlP,GACbnH,EAAM6a,WAAaD,GACnB5a,EAAMyS,OAASwF,GAIfjY,EAAMwJ,MAAQA,EAEdxJ,EAAM2J,SAAWA,EACjB3J,EAAMgK,WAAaA,EACnBhK,EAAMiK,gBAAkBA,EAExBjK,EAAM+K,UAAYA,GAClB/K,EAAMiL,QAAUA,GAChBjL,EAAMmL,OAASA,GAEfnL,EAAMoL,SAAWA,GAEjBpL,EAAMkP,KAAOA,GACblP,EAAM4P,UAAYA,GAClB5P,EAAMqP,YAAcA,GAEpBrP,EAAMsQ,UAAYA,GAElBtQ,EAAMkO,MAAQA,GACdlO,EAAM2O,aAAeA,GACrB3O,EAAMoO,gBAAkBA,GACxBpO,EAAM6O,WAAaA,GAGnB7O,EAAMqnC,WAAa7kC,EACnBxC,EAAM6C,SAAWA,EACjB7C,EAAMgD,UAAYA,EAClBhD,EAAMmD,WAAaA,EACnBnD,EAAMoD,cAAgBA,EACtBpD,EAAM2D,WAAaA,EACnB3D,EAAM4D,MAAQA,EACd5D,EAAMgE,cAAgBA,EACtBhE,EAAMsE,MAAQA,EACdtE,EAAMmuB,WAAaA,GACnBnuB,EAAMgG,QAAUA,EAChBhG,EAAMkG,QAAUA,EAChBlG,EAAMsG,MAAQA,EACdtG,EAAMqD,QAAUA,EAChBrD,EAAMyG,KAAOA,EACbzG,EAAM0G,QAAUA,EAChB1G,EAAMqH,SAAWA,EACjBrH,EAAMuH,OAASA,EAGfvH,EAAMyV,MAAQA,GACdzV,EAAMkW,YAAcA,GACpBlW,EAAMwW,cAAgBA,GAGtBxW,EAAMgR,aAAeA,GACrBhR,EAAMkR,aAAeA,GACrBlR,EAAMmR,iBAAmBA,GACzBnR,EAAMoR,qBAAuBA,GAC7BpR,EAAMqR,cAAgBA,GACtBrR,EAAMsR,eAAiBA,GACvBtR,EAAMuR,iBAAmBA,GAGzBvR,EAAMygC,OAASA,GACfzgC,EAAMwR,cAAgBA,GAGtBxR,EAAMyR,WAAaA,GACnBzR,EAAM0R,cAAgBA,GACtB1R,EAAM2R,aAAeA,GACrB3R,EAAM4R,eAAiBA,GACvB5R,EAAM6R,gBAAkBA,GACxB7R,EAAM8R,YAAcA,GACpB9R,EAAM+R,YAAcA,GACpB/R,EAAMgS,eAAiBA,GACvBhS,EAAMkS,aAAeA,GACrBlS,EAAMmS,cAAgBA,GACtBnS,EAAMoS,cAAgBA,GACtBpS,EAAMqS,iBAAmBA,GACzBrS,EAAMsS,eAAiBA,GAGvBtS,EAAMgT,gBAAkBA,GACxBhT,EAAMiT,WAAaA,GACnBjT,EAAMmT,eAAiBA,GACvBnT,EAAMoT,UAAYA,GAClBpT,EAAMwT,aAAeA,GACrBxT,EAAM0T,UAAYA,GAClB1T,EAAMuS,UAAYA,GAClBvS,EAAM+T,YAAcA,GACpB/T,EAAMmU,SAAWA,GACjBnU,EAAMoU,aAAeA,GACrBpU,EAAMsU,WAAaA,GACnBtU,EAAM2S,eAAiBA,GACvB3S,EAAMyU,cAAgBA,GACtBzU,EAAM0U,oBAAsBA,GAC5B1U,EAAM4U,QAAUA,GAChB5U,EAAM6U,YAAcA,GACpB7U,EAAMsnC,UAAYxyB,GAClB9U,EAAMuU,UAAYA,GAGlBvU,EAAM+U,eAAiBA,GACvB/U,EAAMsV,aAAeA,GAEdtV","file":"anim8js.min.js","sourcesContent":["/* anim8js 1.1.0 - anim8js - Anim8 Everything by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define('anim8', [], function() { // jshint ignore:line\n      return factory(root);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global);  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.m8 = root.anim8 = factory(root);\n    root.m8s = root.anim8s = root.anim8.anim8s;\n  }\n}(this, function(global)\n{\n\n\nvar Class =\n{\n  superPrefix: '_',\n\n  extend: function(construct, parentConstructor, properties)\n  {\n    function F() {}\n\n    F.prototype = parentConstructor.prototype;\n\n    construct.prototype = new F();\n\n    if ( isObject( properties ) )\n    {\n      this.define( construct, properties );\n    }\n  },\n\n  define: function(construct, properties)\n  {\n    var target = construct.prototype;\n\n    for (var prop in properties)\n    {\n      if ( prop in target )\n      {\n        this.defineProperty( target, this.superPrefix + prop, target[ prop ] );\n      }\n\n      this.defineProperty( target, prop, properties[ prop ] );\n    }\n  },\n\n  defineProperty: function(target, property, value)\n  {\n    if ( Object.defineProperty )\n    {\n      Object.defineProperty( target, property, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    }\n    else\n    {\n      target[ property ] = value;\n    }\n  }\n};\n\n\n\n/**\n * The default values for anim8js properties.\n *\n * @property {Object} anim8.Defaults\n */\nvar Defaults =\n{\n\n  /**\n   * The default animation duration in milliseconds.\n   *\n   * @property {Number} duration\n   * @for anim8.Defaults\n   * @default 1000\n   */\n  duration: 1000,\n\n  /**\n   * The default easing.\n   *\n   * @property {String|Function|Array} easing\n   * @for anim8.Defaults\n   * @default 'ease'\n   */\n  easing: 'ease',\n\n  /**\n   * The default \"total easing\" which is the overall easing\n   * for an animation which actually has easing values per frame.\n   *\n   * @property {String|Function|Array} teasing\n   * @for anim8.Defaults\n   * @default 'linear'\n   */\n  teasing: 'linear',\n\n  /**\n   * The default animation delay in milliseconds.\n   *\n   * @property {Number} delay\n   * @for anim8.Defaults\n   * @default 0\n   */\n  delay: 0,\n\n  /**\n   * The default animation sleep in milliseconds.\n   *\n   * @property {Number} sleep\n   * @for anim8.Defaults\n   * @default 0\n   */\n  sleep: 0,\n\n  /**\n   * The default number of repeats for an animation.\n   *\n   * @property {Number} repeat\n   * @for anim8.Defaults\n   * @default 1\n   */\n  repeat: 1,\n\n  /**\n   * The default scale for an animation.\n   *\n   * @property scale\n   * @for anim8.Defaults\n   * @default 1.0\n   * @type {Number}\n   */\n  scale: 1.0,\n\n  /**\n   * The default animation offset in milliseconds.\n   *\n   * @property {Number} offset\n   * @for anim8.Defaults\n   * @default 0\n   */\n  offset: 0,\n\n  /**\n   * The default transition time in milliseconds.\n   *\n   * @property {Number} transitionTime\n   * @for anim8.Defaults\n   * @default 500\n   */\n  transitionTime: 500,\n\n  /**\n   * The default transition outroduction time in milliseconds.\n   *\n   * @property {Number} transitionOutro\n   * @for anim8.Defaults\n   * @default 100\n   */\n  transitionOutro: 100,\n\n  /**\n   * The default transition introduction time in milliseconds.\n   *\n   * @property {Number} transitionIntro\n   * @for anim8.Defaults\n   * @default 100\n   */\n  transitionIntro: 100,\n\n  /**\n   * The default transition easing when none is specified.\n   *\n   * @property {String|Function|Array} transitionEasing\n   * @for anim8.Defaults\n   * @default 'linear'\n   */\n  transitionEasing: 'linear',\n\n  /**\n   * The default transition granularity. This is used for smooth transitions to\n   * provide a smooth transition from the outro velocity to the intro velocity,\n   * the cubic or quadratic path between the two is a curve with unknown length\n   * so the length needs to be calculated using a maximum number of points to\n   * calculate along the path - summing the distances between the consecutive points.\n   *\n   * @property {Number} transitionGranularity\n   * @for anim8.Defaults\n   * @default 0\n   */\n  transitionGranularity: 0,\n\n  /**\n   * TODO\n   *\n   * @property {Number} transitionLookup\n   * @for anim8.Defaults\n   * @default 10\n   */\n  transitionLookup: 10,\n\n  /**\n   * Whether animtions are cached whenever possible. Animations that can be\n   * cached are strings with options specified in the string and without an\n   * option object given. For example 'tada ~1s 3s x3' is cacheable.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cache\n   * @for anim8.Defaults\n   * @default false\n   */\n  cache: false,\n\n  /**\n   * Whether parsed options are cached whenever possible. Options that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheOptions\n   * @for anim8.Defaults\n   * @default false\n   */\n  cacheOptions: false,\n\n  /**\n   * Whether parsed transitions are cached whenever possible. Transitions that can be\n   * cached must be strings.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}}\n   *\n   * @property {Boolean} cacheTransitions\n   * @for anim8.Defaults\n   * @default false\n   */\n  cacheTransitions: false,\n\n  /**\n   * The value to return when options could not be parsed from input.\n   *\n   * @property {Object} noOptions\n   * @for anim8.Defaults\n   * @default {}\n   */\n  noOptions: {},\n\n  /**\n   * The value to return when a transition could not be parsed from input.\n   *\n   * @property {Object} noTransition\n   * @for anim8.Defaults\n   * @default {}\n   */\n  noTransition: {},\n\n  /**\n   * The target number of milliseconds between frames. This only applies if the\n   * browser doesn't support any of the requestAnimationFrame variations.\n   *\n   * @property {Number} frameRate\n   * @for anim8.Defaults\n   * @default 33\n   */\n  frameRate: 16,\n\n  /**\n   * The number of milliseconds to pause between looping to let the UI react\n   * to user events.\n   *\n   * @property {Number} pauseTime\n   * @for anim8.Defaults\n   * @default 5\n   */\n  pauseTime: 5,\n\n  /**\n   * The granularity for uniform combo paths used to calculate path lengths.\n   *\n   * @property {Number} comboPathUniformGranularity\n   * @for anim8.Defaults\n   * @default 100\n   */\n\n  comboPathUniformGranularity: 100,\n\n  calculatorNumber: 0,\n\n  calculator2d: {x: 0, y: 0},\n\n  calculator3d: {x: 0, y: 0, z: 0},\n\n  calculatorQuaternion: {x: 0, y: 0, z: 0, angle: 0},\n\n  calculatorRGB: {r: 0, g: 0, b: 0},\n\n  calculatorRGBA: {r: 0, g: 0, b: 0, a: 1},\n\n  calculatorString: ''\n};\n\n\nvar DelegateTypes =\n{\n\n  /**\n   * this is returned at the end.\n   *\n   * @property THIS\n   * @for DelegateTypes\n   */\n  THIS: 'this',\n\n  /**\n   * An array of results for each method call is returned.\n   *\n   * @property RESULTS\n   * @for DelegateTypes\n   */\n  RESULTS: 'results',\n\n  /**\n   * The result of the first element.\n   *\n   * @property RETURN_FIRST\n   * @for delegate\n   */\n  FIRST: 'first',\n\n  /**\n   * True if any of the methods return true, otherwise false.\n   *\n   * @property RETURN_TRUE\n   * @for delegate\n   */\n  TRUE: 'true'\n\n};\n\n\n\n/**\n * @class Core\n */\n\n/**\n * A function that does nothing.\n *\n * @property anim8.noop\n */\nfunction noop() {}\n\n/**\n * Returns true if the given variable is defined.\n *\n * **Examples:**\n *\n *     anim8.isDefined( 0 );     // true\n *     anim8.isDefined( false ); // true\n *     anim8.isDefined();        // false\n *\n * @method anim8.isDefined\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isDefined(x)\n{\n  return typeof x !== 'undefined';\n}\n\n/**\n * Returns true if the given variable is a function.\n *\n * @method anim8.isFunction\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isFunction(x)\n{\n  return !!(x && x.constructor && x.call && x.apply);\n}\n\n/**\n * Returns true if the given variable is a number.\n *\n * **Examples:**\n *\n *     anim8.isNumber( 0 );     // true\n *     anim8.isNumber( -45.6 ); // true\n *     anim8.isNumber( true );  // false\n *     anim8.isNumber( '1' );   // false\n *     anim8.isNumber();        // false\n *\n * @method anim8.isNumber\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isNumber(x)\n{\n  return typeof x === 'number';\n}\n\n/**\n * Returns true if the given variable is a boolean variable.\n *\n * **Examples:**\n *\n *     anim8.isBoolean( 0 );     // false\n *     anim8.isBoolean( -45.6 ); // false\n *     anim8.isBoolean( true );  // true\n *     anim8.isBoolean( false ); // true\n *     anim8.isBoolean( '1' );   // false\n *     anim8.isBoolean();        // false\n *\n * @method anim8.isBoolean\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isBoolean(x)\n{\n  return typeof x === 'boolean';\n}\n\n/**\n * Returns true if the given variable is a string.\n *\n * **Examples:**\n *\n *     anim8.isString( '' );    // true\n *     anim8.isString( '1' );   // true\n *     anim8.isString( 4.5 );   // false\n *     anim8.isString();        // false\n *\n * @method anim8.isString\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isString(x)\n{\n  return typeof x === 'string';\n}\n\n/**\n * Returns true if the given variable is an array. This should be checked before\n * anim8.isObject since Arrays are objects.\n *\n * **Examples:**\n *\n *     anim8.isArray( [] );     // true\n *     anim8.isArray( [4, 5] ); // true\n *     anim8.isArray( 4.5 );    // false\n *     anim8.isArray();         // false\n *\n * @method anim8.isArray\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isArray(x)\n{\n  return x instanceof Array;\n}\n\n/**\n * Returns true if the given variable is an object. Arrays are considered\n * objects.\n *\n * **Examples:**\n *\n *     anim8.isObject( {} );     // true\n *     anim8.isObject( [] );     // true\n *     anim8.isObject( 4.5 );    // false\n *     anim8.isObject();         // false\n *     anim8.isObject( null );   // false\n *\n * @method anim8.isObject\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isObject(x)\n{\n  return typeof x === 'object' && x !== null;\n}\n\n/**\n * Returns the current time in milliseconds.\n *\n * @method anim8.now\n * @return {Number}\n */\nvar now = (function()\n{\n  return Date.now ? Date.now : function()\n  {\n    return new Date().getTime();\n  };\n\n})();\n\n/**\n * Returns the trimmed version of the given string. A trimmed string has no\n * whitespace in the beginning or end of it.\n *\n * **Examples:**\n *\n *     anim8.trim( 'x' );     // 'x'\n *     anim8.trim( '   x' );  // 'x'\n *     anim8.trim( 'x   ' );  // 'x'\n *     anim8.trim( '  x ' );  // 'x'\n *     anim8.trim( '    ' );  // ''\n *\n * @method anim8.trim\n * @param  {String} x\n * @return {String}\n */\nvar trim = (function()\n{\n  if (String.prototype.trim) {\n    return function(x) {\n      return x.trim();\n    };\n  }\n  return function(x) {\n    return x.replace(/^([\\s]*)|([\\s]*)$/g, '');\n  };\n})();\n\n/**\n * Determines whether the given variable is empty.\n *\n * **Examples:**\n *\n *     anim8.isEmpty( '' );        // true\n *     anim8.isEmpty( 0 );         // true\n *     anim8.isEmpty( [] );        // true\n *     anim8.isEmpty( {} );        // true\n *     anim8.isEmpty( null );      // true\n *     anim8.isEmpty( true );      // true\n *     anim8.isEmpty( false );     // true\n *     anim8.isEmpty( 'x' );       // false\n *     anim8.isEmpty( 0.3 );       // false\n *     anim8.isEmpty( [0] );       // false\n *     anim8.isEmpty( {x:3} );     // false\n *\n * @method anim8.isEmpty\n * @param {Any} x\n * @return {Boolean}\n */\nfunction isEmpty(x)\n{\n  if ( isArray( x ) || isString( x ) )\n  {\n    return x.length === 0;\n  }\n  else if ( x === null )\n  {\n    return true;\n  }\n  else if ( isObject( x ) )\n  {\n    for (var prop in x)\n    {\n      return false;\n    }\n  }\n  else if ( isNumber( x ) )\n  {\n    return x !== 0.0;\n  }\n\n  return true;\n}\n\n/**\n * Parses the given input and returns an array.\n *\n * **Examples:**\n *\n *     anim8.toArray();            // []\n *     anim8.toArray('a b');       // ['a b']\n *     anim8.toArray('a b', ' ');  // ['a', 'b']\n *     anim8.toArray({a:0,b:0});   // ['a', 'b']\n *     anim8.toArray(['a', 'b']);  // ['a', 'b']\n *     anim8.toArray(3.2);         // [3.2]\n *     anim8.toArray(true);        // [true]\n *\n * @param  {Any} x\n * @param  {String} [split]\n * @return {Array}\n */\nfunction toArray( x, split )\n{\n  if ( isString( x ) )\n  {\n    return split ? x.split( split ) : [ x ];\n  }\n  else if ( isArray ( x ) )\n  {\n    return x;\n  }\n  else if ( isObject( x ) )\n  {\n    var props = [];\n\n    for ( var prop in x )\n    {\n      props.push( prop );\n    }\n\n    return props;\n  }\n  else if ( isDefined( x ) )\n  {\n    return [ x ];\n  }\n\n  return [];\n}\n\n/**\n * Performs a deep copy of the given variable. If the variable is an array or\n * object a new instance of that type is created where the values are copied as\n * well. All other types can't be copied (most likely because they're scalar) so\n * they are returned as-is.\n *\n * @method anim8.copy\n * @param {T} x\n * @return {T}\n */\nfunction copy(x)\n{\n  if ( isArray(x) )\n  {\n    var copied = [];\n\n    for (var i = 0; i < x.length; i++)\n    {\n      copied.push( copy( x[i] ) );\n    }\n\n    x = copied;\n  }\n  else if ( isObject(x) )\n  {\n    var copied = {};\n\n    for (var p in x)\n    {\n      copied[p] = copy( x[p] );\n    }\n\n    x = copied;\n  }\n\n  return x;\n}\n\n/**\n * Extends the given object by merging the following objects into it, avoiding\n * overriding any existing properties.\n *\n * @method anim8.extend\n * @param  {Object} out\n * @return {Object}\n */\nfunction extend(out)\n{\n  for (var i = 1; i < arguments.length; i++)\n  {\n    var o = arguments[ i ];\n\n    if ( isObject( o ) )\n    {\n      for (var prop in o)\n      {\n        if ( !(prop in out) )\n        {\n          out[prop] = o[prop];\n        }\n      }\n    }\n  }\n\n  return out;\n}\n\n/**\n * Returns the first defined variable of a possible 4 variables.\n *\n * **Examples:**\n *\n *     anim8.coalesce( 1, 2, 3 );           // 1\n *     anim8.coalesce( undefined, 2, 3 );   // 2\n *     anim8.coalesce();                    // undefined\n *\n * @method anim8.coalesce\n */\nfunction coalesce(a, b, c, d)\n{\n  if (isDefined(a)) {\n    return a;\n  }\n  if (isDefined(b)) {\n    return b;\n  }\n  if (isDefined(c)) {\n    return c;\n  }\n  return d;\n}\n\n/**\n * Provides a way to wrap a variable so calculators don't try copying it on parse.\n *\n * **Examples:**\n *\n *     anim8.constant( 5 );   // function() { return 5; }\n *\n * @method anim8.constant\n * @param {T} variable\n * @return {Function}\n */\nfunction constant(variable)\n{\n  return function()\n  {\n    return variable;\n  };\n}\n\n/**\n * Resolves the given variable. If the variable is a function the result is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.resolve( 5 );                     // 5\n *     anim8.resolve( true );                  // true\n *     anim8.resolve( function(){return 7;} ); // 7\n *\n * @method anim8.resolve\n * @param  {Function|E} variable\n * @return {E}\n */\nfunction resolve(variable)\n{\n  return isFunction( variable ) ? variable() : variable;\n}\n\n/**\n * Returns a \"unique\" identifier.\n *\n * @method id\n * @return {Number}\n */\nvar id = (function()\n{\n  var _id = 0;\n  return function() {\n    return ++_id;\n  };\n\n})();\n\n\n/**\n * Instantiates a new Animation given it's name, the input & options passed, and\n * the attrimators that were generated from the input & options. If the name is\n * false this is an anonymous animation. Input & Options are used by builders to\n * generate attrimators, options allow for an animations default properties to\n * be overriden.\n *\n * @param {String|Boolean} name\n * @param {Object} input\n * @param {Object} options\n * @param {AttrimatorMap} attrimators\n * @class Animation\n * @constructor\n */\nfunction Animation(name, input, options, attrimators)\n{\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {String|False} name\n   */\n  this.name = name;\n\n  /**\n   * The object which created the animation.\n   *\n   * @property {Object} input\n   */\n  this.input = input;\n\n  /**\n   * The options given when the animation was created.\n   *\n   * @property {Object} [options]\n   */\n  this.options = options;\n\n  /**\n   * The name of the animation, or false if it's an anonymous animation.\n   *\n   * @property {AttrimatorMap} name\n   */\n  this.attrimators = attrimators;\n}\n\nClass.define( Animation,\n{\n\n  /**\n   * Generates an map of event instances from the attrimators in this animation.\n   *\n   * @method newAttrimators\n   * @return {AttrimatorMap}\n   */\n  newAttrimators: function()\n  {\n    return this.attrimators.clone();\n  },\n\n  /**\n   * Merges options with the options in this animation and places them in the\n   * events.\n   *\n   * @method merge\n   * @param {Object} [options]\n   * @param {AttrimatorMap} attrimatorMap\n   * @return {AttrimatorMap}\n   */\n  merge: function(options, attrimatorMap)\n  {\n    var helper = new BuilderHelper( this.input, this.options, options );\n\n    for (var builderName in this.input)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( this.input, options, this.options, attrimatorMap, helper );\n      }\n    }\n\n    return attrimatorMap;\n  }\n\n});\n\n\n/**\n * Instantiates a new Animator given a subject to animate.\n *\n * @param {Any} e\n * @class Animator\n * @constructor\n * @extends anim8.eventize\n */\nfunction Animator(e)\n{\n  this.reset( e );\n}\n\n/**\n * The event triggered after preupdate is called. Pre-update is used to run any\n * preparations on the subject before updates are made and attributes are\n * applied.\n *\n * @event preupdate\n */\n\n/**\n * The event triggered after all attrimators are updated and any new values\n * have been applied to the current values (frame) on the animator.\n *\n * @event update\n */\n\n/**\n * The event triggered after the current values (frame) on the animator are\n * applied to the subject.\n *\n * @event apply\n */\n\n/**\n * The event triggered when the given animation cycle starts (and initial\n * values are applied) for all attrimators in the cycle.\n *\n * @event cycleStart:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when the given animation cycle ends which occurs when the\n * last attrimator for an animation finishes or is interrupted by commands like\n * play, queue, transition, end, finish, & stop.\n *\n * @event cycleEnd:#\n * @param {Number} cycleID\n */\n\n/**\n * The event triggered when all animations on the animator have finished.\n *\n * @event finished\n * @param {Animator} animator\n */\n\n/**\n * The event triggered when an animator is deactivated which occurs when an\n * animator has finished animating and is being taken off the list of live\n * animators (anim8.animating).\n *\n * @event deactivate\n */\n\n/**\n * The event triggered after the user calls destroy on an animator.\n *\n * @event destroyed\n */\n\nClass.define( Animator,\n{\n\n  /**\n   * Resets the animator given a subject to animate.\n   *\n   * @method reset\n   * @param {Any} subject\n   * @chainable\n   * @protected\n   */\n  reset: function(subject)\n  {\n    /**\n     * The subject which is being animated.\n     *\n     * @property {Any} subject\n     */\n    this.subject = subject;\n\n    /**\n     * The map of attrimators animating the subject.\n     *\n     * @property {AttrimatorMap} attrimators\n     */\n    this.attrimators = new AttrimatorMap();\n\n    /**\n     * The array of attrimators recently added to the animator that\n     * are ready to be started.\n     *\n     * @property {Array} attrimatorsAdded\n     * @protected\n     */\n    this.attrimatorsAdded = [];\n\n    /**\n     * The object which stores the attribute values being animated.\n     *\n     * @property {Object} frame\n     */\n    this.frame = {};\n\n    /**\n     * The object which stores the attributes last updated.\n     *\n     * @property {Object} updated\n     */\n    this.updated = {};\n\n    /**\n     * Whether or not this animator has completely finished animating it's subject.\n     *\n     * @property {Boolean} finished\n     */\n    this.finished = false;\n\n    /**\n     * The factory which created this Animator given a subject.\n     *\n     * @property {Factory} factory\n     */\n    this.factory = null;\n\n    /**\n     * Whether or not this animator is actively being updated.\n     *\n     * @property {Boolean} active\n     */\n    this.active = false;\n\n    /**\n     * The current cycle being animated. Multiple cycles can be animated at once, this is the first one.\n     *\n     * @property {Number} cycleCurrent\n     * @protected\n     */\n    this.cycleCurrent = 0;\n\n    /**\n     * The ID of the next cycle of animations to be added to this Animator.\n     *\n     * @property {Number} cycleNext\n     * @protected\n     */\n    this.cycleNext = 0;\n\n    /**\n     * The last cycle that was ended.\n     *\n     * @property {Number} cycleEnded\n     * @protected\n     */\n    this.cycleEnded = 0;\n\n    return this;\n  },\n\n  /**\n   * Starts a new animation cycle. This is done before events & springs are\n   * placed to group them together so we know when to apply their initial value.\n   *\n   * @method newCycle\n   * @param {Attrimator|AttrimatorMap} attrimators\n   * @chainable\n   * @protected\n   */\n  newCycle: function(attrimators)\n  {\n    this.cycleNext++;\n\n    if ( attrimators instanceof AttrimatorMap )\n    {\n      this.cycleNext = attrimators.applyCycle( this.cycleNext );\n    }\n    else if ( attrimators instanceof Attrimator )\n    {\n      attrimators.cycle = this.cycleNext;\n    }\n\n    return this;\n  },\n\n  /**\n   * Applies the current cycle. This involves finding all attrimators with the\n   * same cycle identifier and applying their initial state.\n   *\n   * @method applyCurrentCycle\n   * @chainable\n   * @protected\n   */\n  applyCurrentCycle: function()\n  {\n    var cycle = this.cycleCurrent;\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      if ( attrimator.cycle === cycle )\n      {\n        this.updated[ attr ] = (attrimator.startCycle( this.frame ) !== false) || this.updated[ attr ];\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Ends the current cycle which calls any listening functions.\n   *\n   * @method endCurrentCycle\n   * @chainable\n   * @protected\n   */\n  endCurrentCycle: function()\n  {\n    if ( this.cycleCurrent > this.cycleEnded )\n    {\n      this.cycleEnded = this.cycleCurrent;\n      this.trigger( 'cycleEnd:' + this.cycleCurrent, this.cycleCurrent );\n    }\n  },\n\n  /**\n   * Returns the attribute descriptor given the name of the attribute.\n   *\n   * @method getAttribute\n   * @param  {String} attr\n   * @return {Object}\n   */\n  getAttribute: function(attr)\n  {\n    return this.factory.attribute( attr );\n  },\n\n  /**\n   * Restores any temporary state that may exist on this Animator that\n   * is a result from animations.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore: function()\n  {\n    return this;\n  },\n\n  /**\n   * Applies the initial state of recently added attrimators immediately.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState: function()\n  {\n    var currentTime = now();\n\n    this.preupdate( currentTime );\n    this.update( currentTime );\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * A method thats invoked along with all other animators before updates are\n   * called. This is used to make any necessary preparations before the animator\n   * is updated.\n   *\n   * @method preupdate\n   * @param {Number} now\n   * @chainable\n   */\n  preupdate: function(now)\n  {\n    // If there are attribute placed on the animator since the last preupdate\n    // that has computed values we need to replace the path on the event with\n    // a copy containing the computed values. This is where current value &\n    // relative values are injected from the animator into the attribute.\n    var aa = this.attrimatorsAdded;\n    if ( aa.length )\n    {\n      for (var i = 0; i < aa.length; i++)\n      {\n        var attrimator = aa[ i ];\n        var attr = attrimator.attribute;\n\n        if ( attr in this.subject )\n        {\n          this.frame[ attr ] = this.subject[ attr ];\n        }\n        else\n        {\n          this.setDefault( attr );\n        }\n\n        attrimator.start( now, this );\n      }\n\n      aa.length = 0;\n    }\n\n    this.trigger('preupdate');\n\n    return this;\n  },\n\n  /**\n   * Sets the default value for the given attribute in the frame of this\n   * Animator if there's no value there.\n   *\n   * @method setDefault\n   * @param {String} attr\n   * @protected\n   */\n  setDefault: function(attr)\n  {\n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = this.getAttribute( attr ).cloneDefault();\n    }\n  },\n\n  /**\n   * Updates all attrimators in this animator with the given time.\n   *\n   * @method update\n   * @param {Number} now\n   * @chainable\n   */\n  update: function(now)\n  {\n    this.wasFinished = this.finished;\n    this.finished = true;\n\n    var attrimators = this.attrimators.values;\n    var minCycle = this.cycleNext;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      this.updated[ attr ] = attrimator.setTime( now, this.frame );\n\n      this.finished = this.finished && attrimator.isFinished();\n\n      minCycle = Math.min( minCycle, attrimator.cycle );\n    }\n\n    if ( this.cycleCurrent < minCycle )\n    {\n      while ( this.cycleCurrent < minCycle )\n      {\n        this.endCurrentCycle();\n        this.cycleCurrent++;\n      }\n\n      this.cycleCurrent = minCycle;\n      this.applyCurrentCycle();\n      this.trigger( 'cycleStart:' + this.cycleCurrent, this.cycleCurrent );\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.endCurrentCycle();\n    }\n\n    this.trigger('update');\n\n    return this;\n  },\n\n  /**\n   * Places the attribute animator in this animator replacing any existing\n   * animator for the same attribute. The next time the animator is updated the\n   * attribute animator will be started. The previous (if any) attrimator is\n   * returned.\n   *\n   * @method placeAttrimator\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  placeAttrimator: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var existing = this.attrimators.get( attr );\n\n    this.attrimators.put( attr, attrimator );\n    this.attrimatorsAdded.push( attrimator );\n\n    this.finished = false;\n\n    return existing;\n  },\n\n  /**\n   * Applies all updated attributes to the subject. This method is invoked with\n   * all of the other animators at the end of the animation cycle.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function()\n  {\n    for (var attr in this.frame)\n    {\n      if ( this.updated[ attr ] )\n      {\n        this.subject[ attr ] = this.frame[ attr ];\n        this.updated[ attr ] = false;\n      }\n    }\n\n    this.trigger('apply');\n\n    this.trimAttrimators();\n\n    return this;\n  },\n\n  /**\n   * Removes any finished attrimators and places any queued attrimators. If the\n   * animator previously wasn't finished but now is the 'finished' event will\n   * be triggered.\n   *\n   * @method trimAttrimators\n   * @chainable\n   * @protected\n   */\n  trimAttrimators: function()\n  {\n    var attrimators = this.attrimators.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( attrimator.isFinished() )\n      {\n        if ( attrimator.next )\n        {\n          this.placeAttrimator( attrimator.next );\n        }\n        else\n        {\n          this.attrimators.removeAt( i );\n        }\n      }\n    }\n\n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the current value for the given attribute (or undefined if the\n   * attribute is not or has not animated).\n   *\n   * @method value\n   * @param {String} attr\n   * @return {Any}\n   */\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\n  /**\n   * Activates this Animator by adding it to the main loop if it isn't there\n   * already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    activateAnimator( this );\n\n    return this;\n  },\n\n  /**\n   * A method that is invoked when an animator is finished and is being removed\n   * from the list of currently animating Animators.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate: function()\n  {\n    this.trigger('deactivate', this);\n\n    return this;\n  },\n\n  /**\n   * A method that can be invoked to destroy an animator - removing any\n   * relationship between the subject and animator. The next time an animator is\n   * generated for the subject a new animator will be created.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy: function()\n  {\n    this.finished = true;\n\n    this.factory.destroy( this );\n\n    this.trigger('destroyed');\n\n    return this;\n  },\n\n  /**\n   * Adds a spring to this animator replacing any existing attrimator for the\n   * same attribute. A spring object can be given, an instance of anim8.Spring,\n   * or a name of a saved Spring. The spring added to the animator is returned.\n   *\n   * @method spring\n   * @param {Spring|String|Object} spring\n   * @return {Spring}\n   */\n  spring: function(spring)\n  {\n    var spring = $spring( spring );\n\n    if ( spring === false )\n    {\n      return false;\n    }\n\n    this.newCycle( spring );\n    this.placeAttrimator( spring );\n\n    this.activate();\n\n    return spring;\n  },\n\n  /**\n   * Plays an animation. Attributes in the animation that are currently being\n   * animated will be stopped and replaced with the new attrimators. If `all` is\n   * true then any attrimators animating not specified in the given animation\n   * will be stopped.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache, this );\n\n    this.newCycle( attrimatorMap );\n    this.playAttrimators( attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Plays a map of attrimators. Attributes in the attrimator map that are\n   * currently being animated will be stopped and replaced with the new\n   * attrimators. If \"all\" is true then any attrimators animating not specified\n   * in the given attrimator map will be stopped. This method will not activate\n   * the Animator, that has to be done manually.\n   *\n   * @method playAttrimators\n   * @param {AttrimatorMap} animatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  playAttrimators: function(attrimatorMap, all)\n  {\n    if ( all )\n    {\n      this.attrimators.finishNotPresent( attrimatorMap, 0 );\n    }\n\n    var attrimators = attrimatorMap.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      this.placeAttrimator( attrimators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Unplays an animation. Attributes in the animation that are currently being\n   * animated will be transitioned to their starting values. If `all` is true\n   * then any attrimators animating not specified in the given animation will be\n   * stopped.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method unplay\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} transition\n   * @param {String|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  unplay: function(animation, transition, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var attrimatorMap = $attrimatorsFor( animation, options, cache, this );\n\n    this.unplayAttrimators( attrimatorMap, transition, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Unplays a map of attrimators. Attributes in the attrimator map that are\n   * currently being animated will be transitioned to their starting values.\n   * If \"all\" is true then any attrimators animating not specified\n   * in the given attrimator map will be stopped. This method will not activate\n   * the Animator, that has to be done manually.\n   *\n   * @method unplayAttrimators\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Object} transition\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  unplayAttrimators: function(attrimatorMap, transition, all)\n  {\n    var unplayAttrimators = new AttrimatorMap();\n    var attrimators = attrimatorMap.values;\n    var startings = {};\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n\n      if ( attrimator.startCycle( startings ) )\n      {\n        unplayAttrimators.put( attr, new Oncer( attr, startings[ attr ], 0, true ) );\n      }\n    }\n\n    this.newCycle( unplayAttrimators );\n    this.transitionAttrimators( transition, unplayAttrimators, all );\n\n    return this;\n  },\n\n  /**\n   * Queues an animation. The attrimators generated from the given animation\n   * will be started at the same time - as soon as all finite attrimators for\n   * the same attributes are finished. Any infinite attrimators will be\n   * automatically stopped when all queued attrimators are set to start.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache, this );\n\n    this.newCycle( attrimatorMap );\n    this.queueAttrimators( attrimatorMap );\n\n    return this.activate();\n  },\n\n  /**\n   * Queues a map of attrimators. The map of attrimators will be started at the\n   * same time - as soon as all finished attrimators for the same attribute are\n   * finished. Any infinite attrimators will be automatically stopped when all\n   * queued attrimators are set to start.\n   *\n   * @method queueAttrimators\n   * @param {AttrimatorMap} attrimatorMap\n   * @chainable\n   * @protected\n   */\n  queueAttrimators: function(attrimatorMap)\n  {\n    this.attrimators.queueMap( attrimatorMap, 0, this.placeAttrimator, this );\n\n    return this;\n  },\n\n  /**\n   * Inserts an animation. The attrimators generated from the given animation\n   * will play now and any existing attrimators will be queued behind it. If\n   * the given animation has an infinite attrimator for an existing attribute\n   * it will be stopped in time for the current animation to finish playing. If\n   * the given animation has an infinite attrimator for an attribute which is\n   * not animating then the attrimator will continue to play infinitely.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method insert\n   * @param {Animation|String|Object} animation\n   * @param {String|Object} [options]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  insert: function(animation, options, cache)\n  {\n    var attrimatorMap = $attrimatorsFor( animation, options, cache, this );\n\n    this.newCycle( attrimatorMap );\n    this.insertAttrimators( attrimatorMap );\n\n    return this.activate();\n  },\n\n  /**\n   * Inserts a map of attrimators. The attrimators generated from the given\n   * animation will play now and any existing attrimators will be queued behind\n   * it. If the given animation has an infinite attrimator for an existing\n   * attribute it will be stopped in time for the current animation to finish\n   * playing. If the given animation has an infinite attrimator for an attribute\n   * which is not animating then the attrimator will continue to play\n   * infinitely.\n   *\n   * @method insertAttrimators\n   * @param {AttrimatorMap} attrimatorMap\n   * @chainable\n   * @protected\n   */\n  insertAttrimators: function(attrimatorMap)\n  {\n    this.attrimators.insertMap( attrimatorMap, this.placeAttrimator, this );\n\n    return this;\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given animation will be stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {String|Object|Animation} animation\n   * @param {Object} [options]\n   * @param {Boolean} [all]\n   * @param {Boolean} [cache]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var attrimatorMap = $attrimatorsFor( animation, options, cache, this );\n\n    this.newCycle( attrimatorMap );\n    this.transitionAttrimators( transition, attrimatorMap, all );\n\n    return this.activate();\n  },\n\n  /**\n   * Transitions from the currently playing attrimators into the beginning of a\n   * new animation. Several parameters can be specified in the transition object\n   * which determine how the transition is made. If \"all\" is true then any\n   * attrimators animating not specified in the given attrimator map will be\n   * stopped.\n   *\n   * time: the total time to take to transition into a new animation.\n   * outro: time to look into the future for the current attrimator to curve to.\n   * intro: time to look into the future for the next attrimator to curve into.\n   * lookup: time to look into the future to calculate velocity which is used\n   *   for negative intros and maintaing consistent exit & entrance velocity.\n   * granularity: when greater than 2 it activates smooth transitions where the\n   *    velocity of the new & old attrimators is maintained over the transition.\n   *\n   * @method transitionAttrimators\n   * @param {Object} transition\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Boolean} [all]\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators: function(transition, attrimatorMap, all)\n  {\n    if ( all )\n    {\n      this.attrimators.finishNotPresent( attrimatorMap, transition.time );\n    }\n\n    this.attrimators.transitionMap(\n      transition,\n      attrimatorMap,\n      this.transitionGetValue,\n      this.getAttribute,\n      this.placeAttrimator,\n      this.transitionGetValueAt,\n      this.transitionStopAttrimator,\n      this\n    );\n\n    return this;\n  },\n\n  transitionGetValue: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\n  transitionGetValueAt: function(attrimator, relativeTime, out)\n  {\n    return attrimator.valueAt( attrimator.getElapsed() + relativeTime, out );\n  },\n\n  transitionStopAttrimator: function(attrimator, relativeTime)\n  {\n    attrimator.stopIn( relativeTime );\n  },\n\n  /**\n   * Tweens a single attribute to a target value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenTo\n   * @param {String} attr\n   * @param {T} target\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenTo: function(attr, target, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var end       = attribute.parse( target );\n    var path      = new Tween( attr, attribute.calculator, computed.current, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes to target values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyTo\n   * @param {Object} targets\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenManyTo: function(targets, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in targets )\n    {\n      var attribute = this.getAttribute( attr );\n      var end       = attribute.parse( targets[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, computed.current, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens a single attribute from a starting value to the current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenFrom\n   * @param {String} attr\n   * @param {T} starting\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenFrom: function(attr, starting, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starting );\n    var path      = new Tween( attr, attribute.calculator, start, computed.current );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to the current values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenManyFrom\n   * @param {Object} startings\n   * @param {String|Array|Object} [options]\n   * @chainable\n   */\n  tweenManyFrom: function(startings, options)\n  {\n    var options = $options( options );\n\n    this.newCycle();\n\n    for ( var attr in startings )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( startings[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, computed.current );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens an attribute from a starting value to an ending value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tween\n   * @param {String} attr\n   * @param {T} starts\n   * @param {T} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tween: function(attr, starts, ends, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var start     = attribute.parse( starts );\n    var end       = attribute.parse( ends );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Tweens multiple attributes from starting values to ending values.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method tweenMany\n   * @param {Object} starts\n   * @param {Object} ends\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  tweenMany: function(starts, ends, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in starts )\n    {\n      var attribute = this.getAttribute( attr );\n      var start     = attribute.parse( starts[ attr ] );\n      var end       = attribute.parse( ends[ attr ] );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Moves an attribute relative to its current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method move\n   * @param {String} attr\n   * @param {T} amount\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  move: function(attr, amount, options, cache)\n  {\n    var options   = $options( options, cache );\n    var attribute = this.getAttribute( attr );\n    var relative  = attribute.parse( amount );\n    var start     = computed.current;\n    var end       = isComputed( relative ) ? relative : computed.relative( relative );\n    var path      = new Tween( attr, attribute.calculator, start, end );\n    var event     = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Moves multiple attribute relative to their current value.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method moveMany\n   * @param {Object} amounts\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  moveMany: function(amounts, options, cache)\n  {\n    var options = $options( options, cache );\n\n    this.newCycle();\n\n    for ( var attr in amounts )\n    {\n      var attribute = this.getAttribute( attr );\n      var relative  = attribute.parse( amounts[ attr ] );\n      var start     = computed.current;\n      var end       = isComputed( relative ) ? relative : computed.relative( relative );\n      var path      = new Tween( attr, attribute.calculator, start, end );\n      var event     = Event.fromOptions( attr, path, options );\n\n      event.cycle = this.cycleNext;\n      this.placeAttrimator( event );\n    }\n\n    return this.activate();\n  },\n\n  /**\n   * Returns a function that returns the current value for the given attribute\n   * when invoked. The returned function can be given as values for paths &\n   * springs that are evaluated every frame.\n   *\n   * @method ref\n   * @param {String} attr\n   * @return {Function}\n   */\n  ref: function(attr)\n  {\n    var animator = this;\n    var attribute = this.getAttribute( attr );\n    var request = {};\n\n    return function()\n    {\n      if ( attr in animator.frame )\n      {\n        return animator.frame[ attr ];\n      }\n\n      request[ attr ] = true;\n\n      var current = animator.get( request );\n\n      if ( isDefined( current[ attr ] ) )\n      {\n        return current[ attr ];\n      }\n\n      return attribute.defaultValue;\n    };\n  },\n\n  /**\n   * Follows the attribute along the given path definition.\n   *\n   * **See:** {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}}\n   *\n   * @method follow\n   * @param {String} attr\n   * @param {Path|Object|String} path\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  follow: function(attr, path, options, cache)\n  {\n    var options = $options( options, cache );\n    var path    = $path( path );\n    var event   = Event.fromOptions( attr, path, options );\n\n    this.newCycle( event );\n    this.placeAttrimator( event );\n\n    return this.activate();\n  },\n\n  /**\n   * Helper method that iterates over given attributes. If callback is specified\n   * it is invoked for each attrimator in this animator for the given\n   * attributes. If no callback is given an array of anim8.Attrimators is\n   * returned for each attrimator in this animator for the given attributes.\n   *\n   * @method attrimatorsFor\n   * @param {String|Array|Object} attributes\n   * @param {Function} callback\n   * @return {this|Array}\n   */\n  attrimatorsFor: function(attributes, callback)\n  {\n    var attrimatorMap = this.attrimators;\n    var attributes = toArray( coalesce( attributes, attrimatorMap.keys ), ' ' );\n    var resulting = !isFunction( callback );\n    var results = [];\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n      var attrimator = attrimatorMap.get( attr );\n\n      if ( attrimator )\n      {\n        if ( resulting )\n        {\n          results.push( attrimator );\n        }\n        else\n        {\n          callback.call( this, attrimator, attr );\n        }\n      }\n    }\n\n    return resulting ? results : this;\n  },\n\n  /**\n   * Stops all attributes for the specified attributes. Attribute names can be\n   * given as an array or a space separated string. If no attributes are given\n   * all attributes are assumed.\n   *\n   * @method stop\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  stop: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator, attr)\n    {\n      this.attrimators.remove( attr );\n    });\n  },\n\n  /**\n   * Ends all attributes for the specified attributes. If attributes are queued\n   * the last value of the last attribute is applied to this Animator before\n   * being completely removed. Attribute names can be given as an array or a\n   * space separated string. If no attributes are given all attributes are\n   * assumed.\n   *\n   * @method end\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  end: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      while (attrimator.next)\n      {\n        attrimator = attrimator.next;\n      }\n\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Finishes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method finish\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  finish: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.finish( this.frame );\n    });\n  },\n\n  /**\n   * Calls nopeat on all current attrimators for the specified attributes.\n   * Attribute names can be given as an array or a space separated string. If\n   * no attributes are given all attributes are assumed.\n   *\n   * **See:** {{#crossLink \"Attrimator/nopeat:method\"}}Attrimator.nopeat{{/crossLink}}\n   *\n   * @method nopeat\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  nopeat: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.nopeat();\n    });\n  },\n\n  /**\n   * Pauses all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method pause\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  pause: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.pause();\n    });\n  },\n\n  /**\n   * Resumes all current attrimators for the specified attributes. Attribute\n   * names can be given as an array or a space separated string. If no\n   * attributes are given all attributes are assumed.\n   *\n   * @method resume\n   * @param {String|Array|Object} [attributes]\n   * @chainable\n   */\n  resume: function(attributes)\n  {\n    return this.attrimatorsFor( attributes, function(attrimator)\n    {\n      attrimator.resume();\n    });\n  },\n\n  /**\n   * Sets the given attributes to this Animator immediately.\n   *\n   * @method set\n   * @param {Object} attributes\n   * @chainable\n   */\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n      this.updated[ attr ] = true;\n    }\n\n    this.apply();\n\n    return this;\n  },\n\n  /**\n   * Unsets the attribute, array of attributes, or object of attributes.\n   * Unsetting involves removing all attrimators and the current value in the\n   * frame,\n   *\n   * @method unset\n   * @param {String|Array|Object} attributes\n   * @chainable\n   */\n  unset: function(attributes)\n  {\n    var attributes = toArray( coalesce( attributes, this.frame ), ' ' );\n\n    for (var i = attributes.length - 1; i >= 0; i--)\n    {\n      var attr = attributes[ i ];\n\n      this.attrimators.remove( attr );\n\n      delete this.frame[ attr ];\n    }\n\n    return this;\n  },\n\n  /**\n   * Gets the current attribute values for all attributes specified. The\n   * argument must be an object where the key is the name of an attribute.\n   *\n   * @method get\n   * @param {Object} attributes\n   * @return {Object}\n   */\n  get: function(attributes)\n  {\n    var out = {};\n\n    for (var attr in attributes)\n    {\n      out[ attr ] = this.frame[ attr ];\n    }\n\n    return out;\n  },\n\n  /**\n   * Returns the amount of finite time remaining before the animator is done\n   * animating. Attrimators that don't have a known end time are not included.\n   * If there are no attrimators with end times then zero is returned.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.attrimators.timeRemaining();\n  },\n\n  /**\n   * Returns true if there are any attrimators on this Animator.\n   *\n   * @method hasAttrimators\n   * @return {Boolean}\n   */\n  hasAttrimators: function()\n  {\n    return this.attrimators.size() > 0;\n  },\n\n  /**\n   * Returns the subject of the Animator optionally passing it through a wrapper\n   * function before it's returned.\n   *\n   * @method getSubject\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubject: function(wrapper)\n  {\n    var subject = this.subject;\n\n    if ( isFunction( wrapper ) )\n    {\n      subject = wrapper( subject );\n    }\n\n    return subject;\n  },\n\n  /**\n   * Invokes a function with the given context or the context of this Animator\n   * if none is given. This is particularly useful for having a function be\n   * called on deferred statements.\n   *\n   * @method invoke\n   * @param {Function} func\n   * @param {Object} [context]\n   * @param {Array} [args]\n   * @chainable\n   */\n  invoke: function(func, context, args)\n  {\n    if ( isFunction( func ) )\n    {\n      func.apply( context || this, args || [] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Defers the method calls following this one to when the given event type\n   * (on or once) and event. To return this animator you need to call undefer()\n   * as many times as you called defer().\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} [callback]\n   * @return {DeferAnimator}\n   */\n  defer: function(eventType, event, callback)\n  {\n    return new DeferAnimator( this, this, eventType, event, callback );\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned starts.\n   *\n   * @method onCycleStart\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleStart: function(callback, context)\n  {\n    this.once( 'cycleStart:' + this.cycleNext, callback, context );\n\n    return this;\n  },\n\n  /**\n   * Invokes the given callback when the last animation that was\n   * played/queued/transitioned ends.\n   *\n   * @method onCycleEnd\n   * @param {Function} callback\n   * @param {Object} [context]\n   * @chainable\n   */\n  onCycleEnd: function(callback, context)\n  {\n    this.once( 'cycleEnd:' + this.cycleNext, callback, context );\n\n    return this;\n  }\n\n});\n\n/**\n * Adds the following event methods to Animators: on, once, off, trigger.\n */\neventize( Animator.prototype );\n\n\n/**\n * Instantiates an Array of {{#crossLink \"Animator\"}}{{/crossLink}} instances.\n *\n * @param {Array} [input]\n * @class Animators\n * @constructor\n * @extends {Array}\n */\nfunction Animators(input)\n{\n  this.$ = [];\n\n  if ( isArray( input ) )\n  {\n    this.fill( input );\n  }\n}\n\n/**\n * Animators is an instance of Array. All array methods are supported.\n */\nClass.define( Animators,\n{\n\n  /**\n   * Adds an animator to this set of animators.\n   *\n   * @param  {Animator} animator\n   * @chainable\n   */\n  push: function(animator)\n  {\n    this.$.push( animator );\n\n    return this;\n  },\n\n  /**\n   * Returns the number of animators in this set.\n   *\n   * @return {Number}\n   */\n  length: function()\n  {\n    return this.$.length;\n  },\n\n  /**\n   * Returns the animator at the given index.\n   *\n   * @param  {Number} index\n   * @return {Animator}\n   */\n  at: function(index)\n  {\n    return this.$[ index ];\n  },\n\n  /**\n   * Invokes a callback for each element in the array.\n   *\n   * @method each\n   * @param {Function} iterator\n   * @param {Object} context\n   * @chainable\n   */\n  each: function(iterator, context)\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      if ( iterator.call( context || array[i], array[i], i ) === false )\n      {\n        break;\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Appends the array of animators given to the end of this array.\n   *\n   * @method fill\n   * @param {Array} animators\n   * @chainable\n   */\n  fill: function(animators)\n  {\n    for (var i = 0; i < animators.length; i++)\n    {\n      this.push( animators[i] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Invokes a callback for each element in the array and if a true value is\n   * returned  that element is removed from the array.\n   *\n   * @method filter\n   * @param {Function} filterer\n   * @chainable\n   */\n  filter: function(filterer)\n  {\n    var array = this.$;\n    var alive = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      var remove = filterer( array[i] );\n\n      if ( !remove )\n      {\n        array[alive++] = array[i];\n      }\n    }\n\n    array.length = alive;\n\n    return this;\n  },\n\n  /**\n   * Returns the subjects of the Animators optionally passing them through a\n   * wrapper function before it's returned.\n   *\n   * @method getSubjects\n   * @param {Function} [wrapper]\n   * @return {Any}\n   */\n  getSubjects: function(wrapper)\n  {\n    var array = this.$;\n    var subjects = [];\n\n    for (var i = 0; i < array.length; i++)\n    {\n      subjects.push( array[i].subject );\n    }\n\n    if ( isFunction( wrapper ) )\n    {\n      subjects = wrapper( subjects );\n    }\n\n    return subjects;\n  },\n\n  /**\n   * Returns the first animator in the array.\n   *\n   * @method first\n   * @return {Animator}\n   */\n  first: function()\n  {\n    return this.$[0];\n  },\n\n  /**\n   * Reverses the order of animators in the array.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    var array = this.$;\n    var last = array.length - 1;\n    var mid = Math.floor( array.length / 2 );\n\n    for (var i = 0; i < mid; i++)\n    {\n      var e0 = array[ i ];\n      var e1 = array[ last - i ];\n\n      array[ i ] = e1;\n      array[ last - i ] = e0;\n    }\n\n    return this;\n  },\n\n  /**\n   * Activates all Animators in the array if they aren't active already.\n   *\n   * @method activate\n   * @chainable\n   */\n  activate: function()\n  {\n    var array = this.$;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      pushAnimator( array[i] );\n    }\n\n    activate();\n\n    return this;\n  },\n\n  /**\n   * Creates a sequence of events separated by a delay.\n   *\n   * @method sequence\n   * @param {String|Number} delay\n   * @param {String|Array|Function} easing\n   * @return {Sequence}\n   */\n  sequence: function(delay, easing)\n  {\n    return new Sequence( this, delay, easing );\n  },\n\n  /**\n   * Returns the maximum time remaining out of all Animators in the array.\n   *\n   * **See:** {{#crossLink \"Animating/timeRemaining:method\"}}{{/crossLink}}\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    var array = this.$;\n    var maxRemaining = 0;\n\n    for (var i = 0; i < array.length; i++)\n    {\n      maxRemaining = Math.max( maxRemaining, array[ i ].timeRemaining() );\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method preupdate\n   * @chainable\n   */\n  preupdate: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].preupdate( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/update:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method update\n   * @chainable\n   */\n  update: function(now, max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].update( now );\n    }\n\n    return this;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method apply\n   * @chainable\n   */\n  apply: function(max)\n  {\n    var array = this.$;\n    var length = max || array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n      array[ i ].apply();\n    }\n\n    return this;\n  },\n\n  /**\n   * Handles an animator if it's finished, and returns false if the animator can\n   * be removed from the set of animators.\n   *\n   * @method handleFinished\n   * @param {Animator} animator\n   * @return {Boolean}\n   */\n  handleFinished: function(animator)\n  {\n    if ( animator.finished )\n    {\n      animator.deactivate();\n      animator.active = false;\n    }\n\n    return animator.finished;\n  },\n\n  /**\n   * Calls {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} on each\n   * animator in the array and returns this.\n   *\n   * @method restore\n   * @chainable\n   */\n  restore               : delegate( 'restore', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method placeAttrimator\n   * @chainable\n   */\n  placeAttrimator       : delegate( 'placeAttrimator', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method applyInitialState\n   * @chainable\n   */\n  applyInitialState     : delegate( 'applyInitialState', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trimAttrimators\n   * @chainable\n   */\n  trimAttrimators       : delegate( 'trimAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method deactivate\n   * @chainable\n   */\n  deactivate            : delegate( 'deactivate', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method destroy\n   * @chainable\n   */\n  destroy               : delegate( 'destroy', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method spring\n   * @chainable\n   */\n  spring                : delegate( 'spring', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/play:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method play\n   * @chainable\n   */\n  play                  : delegate( 'play', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/unplay:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method unplay\n   * @chainable\n   */\n  unplay                : delegate( 'unplay', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method playAttrimators\n   * @chainable\n   * @protected\n   */\n  playAttrimators       : delegate( 'playAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queue\n   * @chainable\n   */\n  queue                 : delegate( 'queue', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method queueAttrimators\n   * @chainable\n   * @protected\n   */\n  queueAttrimators      : delegate( 'queueAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/insert:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method insert\n   * @chainable\n   */\n  insert                : delegate( 'insert', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/insertAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method insertAttrimators\n   * @chainable\n   * @protected\n   */\n  insertAttrimators     : delegate( 'insertAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method transition\n   * @chainable\n   */\n  transition            : delegate( 'transition', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}}\n   * on each animator in the array and returns this.\n   *\n   * @method transitionAttrimators\n   * @chainable\n   * @protected\n   */\n  transitionAttrimators : delegate( 'transitionAttrimators', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tween\n   * @chainable\n   */\n  tween                 : delegate( 'tween', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenTo\n   * @chainable\n   */\n  tweenTo               : delegate( 'tweenTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenFrom\n   * @chainable\n   */\n  tweenFrom             : delegate( 'tweenFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenMany\n   * @chainable\n   */\n  tweenMany             : delegate( 'tweenMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyTo\n   * @chainable\n   */\n  tweenManyTo           : delegate( 'tweenManyTo', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method tweenManyFrom\n   * @chainable\n   */\n  tweenManyFrom         : delegate( 'tweenManyFrom', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/move:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method move\n   * @chainable\n   */\n  move                  : delegate( 'move', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method moveMany\n   * @chainable\n   */\n  moveMany              : delegate( 'moveMany', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method follow\n   * @chainable\n   */\n  follow                : delegate( 'follow', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/attrimatorsFor:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method attrimatorsFor\n   * @chainable\n   */\n  attrimatorsFor        : delegate( 'attrimatorsFor', DelegateTypes.RESULTS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method stop\n   * @chainable\n   */\n  stop                  : delegate( 'stop', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/end:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method end\n   * @chainable\n   */\n  end                   : delegate( 'end', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method finish\n   * @chainable\n   */\n  finish                : delegate( 'finish', DelegateTypes.THIS ),\n\n/**\n   * Calls {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method nopeat\n   * @chainable\n   */\n  nopeat                : delegate( 'nopeat', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause                 : delegate( 'pause', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume                : delegate( 'resume', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/set:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method set\n   * @chainable\n   */\n  set                   : delegate( 'set', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method unset\n   * @chainable\n   */\n  unset                 : delegate( 'unset', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/get:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method get\n   * @chainable\n   */\n  get                   : delegate( 'get', DelegateTypes.FIRST ),\n\n  /**\n   * Calls {{#crossLink \"Animator/hasAttrimators:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method hasAttrimators\n   * @chainable\n   */\n  hasAttrimators        : delegate( 'hasAttrimators', DelegateTypes.TRUE ),\n\n  /**\n   * Calls {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method invoke\n   * @chainable\n   */\n  invoke                : delegate( 'invoke', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleStart\n   * @chainable\n   */\n  onCycleStart          : delegate( 'onCycleStart', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method onCycleEnd\n   * @chainable\n   */\n  onCycleEnd            : delegate( 'onCycleEnd', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/on:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method on\n   * @chainable\n   */\n  on                    : delegate( 'on', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/once:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method once\n   * @chainable\n   */\n  once                  : delegate( 'once', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/off:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method off\n   * @chainable\n   */\n  off                   : delegate( 'off', DelegateTypes.THIS ),\n\n  /**\n   * Calls {{#crossLink \"Animator/trigger:method\"}}{{/crossLink}} on\n   * each animator in the array and returns this.\n   *\n   * @method trigger\n   * @chainable\n   */\n  trigger               : delegate( 'trigger', DelegateTypes.THIS )\n\n});\n\n\n/**\n * Animates a single attribute over any period of time.\n *\n * @class Attrimator\n * @constructor\n */\nfunction Attrimator()\n{\n\n}\n\nClass.define( Attrimator,\n{\n\n  /**\n   * Resets this attrimator for the given attribute created by the given builder.\n   *\n   * @method reset\n   * @param {String} attribute\n   * @param {Builder} builder\n   * @param {Attrimator} [next]\n   */\n  reset: function(attribute, builder, next)\n  {\n    /**\n     * The name of the attribute this attrimator is animating.\n     *\n     * @property {String} attribute\n     */\n    this.attribute = attribute;\n\n    /**\n     * The builder that created this attrimator (if any).\n     *\n     * @property {Builder} builder\n     */\n    this.builder = builder;\n\n    /**\n     * The next attrimator to be played once this one has finished.\n     *\n     * @property {Attrimator} next\n     */\n    this.next = next;\n\n    /**\n     * The time the attrimator was started by the animator.\n     *\n     * @property {Number} startTime\n     */\n    this.startTime = 0;\n\n    /**\n     * The time the attrimator was last paused.\n     *\n     * @property {Number} pauseTime\n     */\n    this.pauseTime = 0;\n\n    /**\n     * The amount of time that has elapsed since the attrimator started.\n     *\n     * @property {Number} elapsed\n     */\n    this.elapsed = 0;\n\n    /**\n     * The time this attrimator should stop itself after it started in milliseconds.\n     *\n     * @property {Number} stopTime\n     */\n    this.stopTime = Number.POSITIVE_INFINITY;\n\n    /**\n     * Whether or not the attrimator is paused.\n     *\n     * @property {Boolean} paused\n     */\n    this.paused = false;\n\n    /**\n     * The cycle this attrimator belongs to.\n     *\n     * @type {Number} cycle\n     */\n    this.cycle = 0;\n\n    /**\n     * The amount of time in milliseconds this attrimator is delayed since start.\n     *\n     * @property {Number} delay\n     */\n    this.delay = 0;\n\n    /**\n     * The initial elapsed time in milliseconds when the attrimator is started.\n     *\n     * @property {Number} offset\n     */\n    this.offset = 0;\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject animator. This\n   * is called as early as possible to establish the start time of the\n   * attrimator so when the user isn't on the page time can be kept accurately.\n   *\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  prestart: function(now)\n  {\n    if ( this.startTime === 0 )\n    {\n      this.startTime = now - this.offset;\n      this.elapsed = this.offset;\n      this.finished = false;\n      this.prestartNext();\n    }\n  },\n\n  /**\n   * Calls {{#crossLink \"Attrimator/prestart:method\"}}{{/crossLink}} on the next\n   * attrimator if it can be called.\n   *\n   * @method prestartNext\n   */\n  prestartNext: function( overrideNext )\n  {\n    // If there is a next attrimator and this attrimator has been prestarted...\n    if ( this.next && this.startTime !== 0 )\n    {\n      // If override next is specified, clear next's startTime\n      if ( overrideNext )\n      {\n        this.next.startTime = 0;\n      }\n\n      // We can only prestart next if it has no startTime.\n      if ( this.next.startTime === 0 )\n      {\n        var totalTime = this.totalTime();\n\n        // If this attrimator has a finite total amount of time, it's end can be calculated.\n        if ( isFinite( totalTime ) )\n        {\n          this.next.prestart( this.startTime + totalTime );\n        }\n      }\n    }\n  },\n\n  /**\n   * Prepares this attrimator for animation on the given subject\n   * animator. This is called once in anim8.Animator.preupdate before the first\n   * time this attrimator is updated.\n   *\n   * @method start\n   * @param {Number} now\n   * @param {Animator} animator\n   */\n  start: function(now, animator)\n  {\n    this.prestart( now );\n  },\n\n  /**\n   * Invoked once when a new animation cycle is started on an Animator. If this\n   * attrimator updated the frame true must be returned.\n   *\n   * @method startCycle\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  startCycle: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Updates this attrimator given a time to animate to and the frame to\n   * provide with a new value. This method will return true if the attribute\n   * this is animating has been updated and needs to be applied to the subject.\n   *\n   * @method setTime\n   * @param {Number} now\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  setTime: function(now, frame)\n  {\n    if ( this.paused )\n    {\n      return false;\n    }\n\n    var updated = false;\n    var elapsed = now - this.startTime;\n\n    if ( elapsed > this.stopTime )\n    {\n      updated = this.finish( frame );\n    }\n    else if ( elapsed >= this.delay )\n    {\n      updated = this.update( elapsed, frame );\n    }\n\n    this.elapsed = elapsed;\n\n    return updated;\n  },\n\n  /**\n   * Updates the attrimator given elapsed time in milliseconds, the frame to\n   * apply a value to, and returns whether the frame was updated or not.\n   *\n   * @method update\n   * @param {Number} elapsed\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  update: function(elapsed, frame)\n  {\n    throw 'Attrimator.update not implemented';\n  },\n\n  /**\n   * Returns the amount of time that has elapsed in milliseconds.\n   *\n   * @method getElapsed\n   * @return {Number}\n   */\n  getElapsed: function()\n  {\n    return this.elapsed;\n  },\n\n  /**\n   * Stops this attrimator in the given number of milliseconds.\n   *\n   * @method stopIn\n   * @param {Number} milliseconds\n   * @chainable\n   */\n  stopIn: function(milliseconds)\n  {\n    this.stopTime = this.getElapsed() + milliseconds;\n\n    return this;\n  },\n\n  /**\n   * Stops this attrimator at the given time. If the given time is outside this\n   * attrimator and has a next attrimator that stopAt will be called.\n   *\n   * @method stopAt\n   * @param {Number} time\n   * @chainable\n   */\n  stopAt: function(time)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time > totalTime )\n    {\n      if ( this.next )\n      {\n        this.next.stopAt( time - totalTime );\n      }\n    }\n    else\n    {\n      this.stopTime = time;\n    }\n\n    return this;\n  },\n\n  /**\n   * If this attrimator repeats its animation this method will stop repitition\n   * after the next animation cycle.\n   *\n   * @chainable\n   */\n  nopeat: function()\n  {\n    return this;\n  },\n\n  /**\n   * Returns the value at the given time or returns false if it can't be\n   * calculated.\n   *\n   * @method valueAt\n   * @param {Number} time\n   * @param {Any} out\n   * @return {Any|False}\n   */\n  valueAt: function(time, out)\n  {\n    return false;\n  },\n\n  /**\n   * Returns the value at the given time or returns false if it can't be\n   * calculated. If the time is outside this attrimator, the next attrimator\n   * is checked.\n   *\n   * @method valueAt\n   * @param {Number} time\n   * @param {Any} out\n   * @return {Any|False}\n   */\n  valueAtSearch: function(time, out)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time > totalTime )\n    {\n      return this.next ? this.next.valueAtSearch( time - totalTime, out ) : false;\n    }\n\n    return this.valueAt( time, out );\n  },\n\n  /**\n   * Returns the attrimator at the given time.\n   *\n   * @method attrimatorAt\n   * @param {Number} time\n   * @return {Attrimator}\n   */\n  attrimatorAt: function(time)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time > totalTime )\n    {\n      return this.next ? this.next.attrimatorAt( time - totalTime ) : null;\n    }\n\n    return this;\n  },\n\n  /**\n   * The total amount of time this attrimator will take in milliseconds. This\n   * may be an infinite number.\n   *\n   * @method totalTime\n   * @return {Number}\n   */\n  totalTime: function()\n  {\n    return this.stopTime;\n  },\n\n  /**\n   * The time remaining before this attrimator and any following will be\n   * finished.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function()\n  {\n    return this.totalTime() - this.elapsed + ( this.next ? this.next.timeRemaining() : 0 );\n  },\n\n  /**\n   * Clones this attrimator.\n   *\n   * @method clone\n   * @return {Attrimator}\n   */\n  clone: function()\n  {\n    throw 'AttributeAnimator.clone not implemented';\n  },\n\n  /**\n   * Returns whether this attrimator has computed values which need to be\n   * resolved by the subject animator calling prepare on this attrimator.\n   *\n   * @method hasComputed\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    return false;\n  },\n\n  /**\n   * Determines whether this attrimator will run infinitely.\n   *\n   * @method isInfinite\n   * @return {Boolean}\n   */\n  isInfinite: function()\n  {\n    return !isFinite( this.stopTime );\n  },\n\n  /**\n   * Pauses this attrimator if it isn't already paused.\n   *\n   * @method pause\n   * @chainable\n   */\n  pause: function()\n  {\n    if ( !this.paused )\n    {\n      this.pauseTime = now();\n      this.paused = true;\n    }\n\n    return this;\n  },\n\n  /**\n   * Resumes this attrimator if it's paused. This involves resetting the start\n   * time of the attrimator.\n   *\n   * @method resume\n   * @chainable\n   */\n  resume: function()\n  {\n    if ( this.paused )\n    {\n      var totalPausedTime = now() - this.pauseTime;\n      var delay = this;\n\n      while ( delay && delay.startTime !== 0 )\n      {\n        delay.startTime += totalPausedTime;\n        delay = delay.next;\n      }\n\n      this.paused = false;\n    }\n\n    return this;\n  },\n\n  /**\n   * Whether this attrimator is paused.\n   *\n   * @method isPaused\n   * @return {Boolean}\n   */\n  isPaused: function()\n  {\n    return this.paused;\n  },\n\n  /**\n   * Sets the final state of the attrimator to the frame if one exists and\n   * returns true, otherwise false is returned and frame remains unchanged.\n   *\n   * @method finish\n   * @param {Object} frame\n   * @return {Boolean}\n   */\n  finish: function(frame)\n  {\n    return false;\n  },\n\n  /**\n   * Whether this attrimator is finished.\n   *\n   * @method isFinished\n   * @return {Boolean}\n   */\n  isFinished: function()\n  {\n    return false;\n  },\n\n  /**\n   * Returns the builder that created this attrimator (if any).\n   *\n   * @method getBuilder\n   * @return {Builder}\n   */\n  getBuilder: function()\n  {\n    return this.builder;\n  },\n\n  /**\n   * Places the given attrimator on the end of the chain of attrimators starting\n   * with this attrimator.\n   *\n   * @method queue\n   * @param {Attrimator} next\n   * @chainable\n   */\n  queue: function(next)\n  {\n    if ( this.next )\n    {\n      this.next.queue( next );\n    }\n    else\n    {\n      this.next = next;\n      this.prestartNext();\n    }\n\n    return this;\n  },\n\n  /**\n   * Places the given attrimator at the given time.\n   */\n  nextAt: function(next, time)\n  {\n    var totalTime = this.totalTime();\n\n    if ( time < totalTime )\n    {\n      this.stopTime = time;\n      this.next = next;\n    }\n    else if ( this.next )\n    {\n      this.next.nextAt( next, time - totalTime );\n    }\n    else\n    {\n      next.delay += time - totalTime;\n      this.next = next;\n    }\n\n    return this;\n  },\n\n  /**\n   * Parses a value with the calculator given a default value to fallback on.\n   *\n   * @method parseValue\n   * @param {Animator} animator\n   * @param {T|Function|True} value\n   * @param {T} defaultValue\n   * @return {T|Function}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  }\n\n});\n\n\n/**\n * A map of attrimators by their attribute name.\n *\n * @class AttrimatorMap\n * @constructor\n * @extends FastMap\n */\nfunction AttrimatorMap()\n{\n  this.reset();\n}\n\nClass.extend( AttrimatorMap, FastMap,\n{\n\n  /**\n   * Sets the group identifier for attrimators in this map. If force is\n   * specified it will overwrite any existing group identifier on attrimators.\n   * If deep is true, then all next attrimators also could have their group\n   * identifiers set.\n   *\n   * @method setGroup\n   * @param {Number} groupId\n   * @param {Boolean} [force=false]\n   * @param {Boolean} [deep=false]\n   */\n  setGroup: function(groupId, force, deep)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[ i ];\n\n      do\n      {\n        if ( !attrimator.groupId || force )\n        {\n          attrimator.groupId = groupId;\n        }\n\n        attrimator = attrimator.next;\n\n      } while ( deep && attrimator );\n    }\n  },\n\n  /**\n   * Adds a delay to all attrimators in this map.\n   *\n   * @method delay\n   * @param {Number} time\n   * @return {AttrimatorMap}\n   */\n  delay: function(time)\n  {\n    var attrimators = this.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      attrimators[ i ].delay += time;\n    }\n\n    return this;\n  },\n\n  /**\n   * Queues the attrimator on this map. If the attribute is already on this map\n   * this is placed on the end of the Attrimator chain, otherwise the attrimator\n   * is added to the map. If there is an attrimator already on the map it's\n   * returned.\n   *\n   * @method queue\n   * @param {Attrimator} attrimator\n   * @return {Attrimator}\n   */\n  queue: function(attrimator)\n  {\n    var attr = attrimator.attribute;\n    var current = this.get( attr );\n\n    if ( current )\n    {\n      current.queue( attrimator );\n    }\n    else\n    {\n      this.put( attr, attrimator );\n    }\n\n    return current;\n  },\n\n  /**\n   * Queues the given map to this map. The attrimators placed on this map are\n   * queued and delayed in a way that they all start at the same time. If a\n   * function is provided as the second argument it is invoked whenever an\n   * attrimator in the given map is new & added to this map.\n   *\n   * @method queueMap\n   * @param {AttrimatorMap} map\n   * @param {Number} offset\n   * @param {Function} [onNewAttribute]\n   * @param {Object} [context]\n   * @chainable\n   */\n  queueMap: function(map, offset, onNewAttribute, context)\n  {\n    var maxRemaining = this.timeRemaining();\n    var attrimators = map.values;\n    var hasCallback = isFunction( onNewAttribute );\n    var mapOffset = coalesce( offset, 0 );\n    var timeOffset = maxRemaining + mapOffset;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = this.get( attr );\n\n      if ( existing )\n      {\n        if ( existing.isInfinite() )\n        {\n          existing.stopIn( attrimator.delay + timeOffset );\n        }\n        else\n        {\n          attrimator.delay += (timeOffset - existing.timeRemaining());\n        }\n\n        existing.queue( attrimator );\n      }\n      else\n      {\n        attrimator.delay += timeOffset;\n\n        this.put( attr, attrimator );\n\n        if ( hasCallback )\n        {\n          onNewAttribute.call( context || this, attrimator );\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Inserts the given map into the beginning of this map. If a function is\n   * provided as the second argument it is invoked whenever an attrimator in\n   * the given map is new & added to this map.\n   *\n   * @method insertMap\n   * @param {AttrimatorMap} map\n   * @param {Function} [onNewAttribute]\n   * @param {Object} [context]\n   * @chainable\n   */\n  insertMap: function(map, onNewAttribute, context)\n  {\n    var attrimators = map.values;\n    var duration = map.timeRemaining();\n    var hasCallback = isFunction( onNewAttribute );\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = this.get( attr );\n\n      this.put( attr, attrimator );\n\n      if ( existing )\n      {\n        if ( attrimator.isInfinite() )\n        {\n          attrimator.stopIn( duration );\n        }\n        else\n        {\n          existing.delay += (duration - attrimator.timeRemaining());\n        }\n\n        attrimator.queue( existing );\n      }\n\n      if ( hasCallback )\n      {\n        onNewAttribute.call( context || this, attrimator );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the attrimator at the given index replacing it with the next\n   * attrimator if one exists.\n   *\n   * @method unqueueAt\n   * @param {Number} index\n   * @chainable\n   */\n  unqueueAt: function(index)\n  {\n    var current = this.values[ index ];\n\n    if ( current.next )\n    {\n      this.values[ index ] = current.next;\n    }\n    else\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Plays the given attrimators at the given time. This performs the necessary\n   * stopping, queueing, and delaying of attrimators that may need to be done.\n   *\n   * @method playMapAt\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Boolean} all\n   * @param {Number} time\n   * @chainable\n   */\n  playMapAt: function(attrimatorMap, all, time)\n  {\n    if ( all )\n    {\n      this.stopNotPresentAt( attrimatorMap, time );\n    }\n\n    var attrimators = attrimatorMap.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      this.playAttrimatorAt( attrimators[ i ], time );\n    }\n\n    return this;\n  },\n\n  playAttrimatorAt: function(attrimator, time)\n  {\n    var attr = attrimator.attribute;\n    var existing = this.get( attr );\n\n    if ( existing )\n    {\n      existing.nextAt( attrimator, time );\n    }\n    else\n    {\n      attrimator.delay += time;\n\n      this.put( attr, attrimator );\n    }\n  },\n\n  transitionMap: function(transition, attrimatorMap, getValue, getAttribute, placeAttrimator, getValueAt, stopAttrimator, context)\n  {\n    // TRANSITIONING:\n    // If the animator doesn't have an attrimator for the given attribute just add the attrimator adding the total delay\n    // If the animator has an attrimator currently...\n    //   If the current attrimator or new attrimator don't have values at the desired times...\n    //      Stop the current attrimator after the total delay (adding the delay of the new attrimator as well)\n    //      Queue the new attrimator\n    //   Else\n    //      Create a path using the methods detailed above\n    // If all is true and there's an attrimator left on the animator that isn't being transitioned, stop it after the total delay.\n\n    // CREATING A TRANSITION PATH:\n    // If intro & outro are 0, use Tween\n    // If intro is 0, use Quadratic Path between current value, outro point, and first point on new path.\n    // If outro is 0, use Quadratic Path between current value, first point on new path, and intro point.\n    // If intro & outro are not 0, use Cubic Path between current value, outro point, first point on new path, and intro point.\n    // If granularity is given > 1 then compile the path, compute intro & outro velocities, and compute deltas for new\n    //    compiled path based on interpolated velocity over the path (knowing it's length and transition time)\n\n    var attrimators = attrimatorMap.values;\n\n    if ( this.hasOverlap( attrimatorMap ) )\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        var next = attrimators[ i ];\n        var attr = next.attribute;\n        var curr = this.get( attr );\n        var currValue = getValue.call( context, attr );\n\n        if ( curr && isDefined( currValue ) )\n        {\n          var attribute = getAttribute.call( context, attr );\n          var calc = attribute.calculator;\n\n          var p2 = next.valueAt( 0, calc.create() );\n\n          if ( p2 !== false )\n          {\n            var transitionTime = transition.time;\n            var p0 = calc.clone( currValue );\n            var p1 = transition.outro ? getValueAt.call( context, curr, transition.outro, calc.create() ) : false;\n            var p3 = transition.intro ? next.valueAt( transition.intro, calc.create() ) : false;\n            var path = null;\n\n            // If the intro is negative we can look into the past by looking a little bit into\n            // the future and assume the past is going in the same direction (only the opposite).\n            if ( p3 !== false && transition.intro < 0 && transition.lookup > 0 )\n            {\n              var pastLookahead = next.valueAt( transition.lookup, calc.create() );\n              var pastVelocity = calc.sub( pastLookahead, p2 );\n\n              if ( pastVelocity !== false )\n              {\n                var pastNegativeVelocity = calc.scale( pastVelocity, transition.intro / transition.lookup );\n                var past = calc.add( pastNegativeVelocity, p2 );\n\n                p3 = p2;\n                p2 = past;\n              }\n            }\n\n            // Build a path with as many of the points as possible.\n            if ( p1 === false && p3 === false )\n            {\n              path = new Tween( attr, calc, p0, p2 );\n            }\n            else if ( p1 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p2, p3 );\n            }\n            else if ( p3 === false )\n            {\n              path = new PathQuadratic( attr, calc, p0, p1, p2 );\n            }\n            else\n            {\n              path = new PathCubic( attr, calc, p0, p1, p2, p3 );\n            }\n\n            // If granularity is specified we will try to make the transition\n            // smooth by maintaining exit (outro) velocity from the current attrimator\n            // and interpolating it to the entrance (intro) velocity for the\n            // attrimator we're transitioning into.\n            if ( transition.granularity > 2 && transition.lookup > 0 )\n            {\n              var outTime  = p1 === false ? 0 : transition.outro;\n              var outPoint = p1 === false ? p0 : p1;\n              var outNext  = getValueAt.call( context, curr, outTime + transition.lookup, calc.create() );\n\n              var inTime   = p3 === false ? 0 : transition.intro;\n              var inPoint  = p3 === false ? p2 : p3;\n              var inNext   = next.valueAt( inTime + transition.lookup, calc.create() );\n\n              // We can only proceed if we have reference points to calculate\n              // exit & entrance velocity.\n              if ( outNext !== false && inNext !== false )\n              {\n                var outVelocity  = calc.sub( calc.clone( outNext ), outPoint );\n                var outPerMillis = calc.length( outVelocity ) / transition.lookup;\n\n                var inVelocity   = calc.sub( calc.clone( inNext ), inPoint );\n                var inPerMillis  = calc.length( inVelocity ) / transition.lookup;\n\n                var compiled = new PathCompiled( attr, path, transition.granularity );\n                var points = compiled.points;\n                var lastPoint = points.length - 1;\n                var totalDistance = 0;\n                var distances = [];\n\n                for (var k = 0; k < lastPoint; k++)\n                {\n                  distances[ k ] = totalDistance;\n                  totalDistance += calc.distance( points[ k ], points[ k + 1 ] );\n                }\n                distances[ lastPoint ] = totalDistance;\n\n                if ( !isNaN( totalDistance ) )\n                {\n                  var requiredTime = 2.0 * totalDistance / (outPerMillis + inPerMillis);\n                  var acceleration = 0.5 * (inPerMillis - outPerMillis) / requiredTime;\n                  var timeDelta = requiredTime / lastPoint;\n                  var deltas = [];\n\n                  for (var k = 0; k < lastPoint; k++)\n                  {\n                    var time = k * timeDelta;\n                    var position = outPerMillis * time + acceleration * time * time;\n\n                    deltas[ k ] = position / totalDistance;\n                  }\n                  deltas[ lastPoint ] = 1.0;\n\n                  path = new PathDelta( attr, calc, points, deltas );\n                  transitionTime = requiredTime;\n                }\n              }\n            }\n\n            var transitionEvent = new Event( attr, path, transitionTime, transition.easing, 0, 0, 0, 1 );\n\n            transitionEvent.next = next;\n            transitionEvent.cycle = next.cycle;\n\n            next.offset = transition.intro;\n\n            placeAttrimator.call( context, transitionEvent );\n          }\n          else\n          {\n            stopAttrimator.call( context, curr, transition.time + next.delay );\n\n            curr.queue( next );\n            next.delay = 0;\n          }\n        }\n        else\n        {\n          next.delay += transition.time;\n\n          placeAttrimator.call( context, next );\n        }\n      }\n    }\n    // We don't need to transition, just play the events\n    else\n    {\n      for (var i = attrimators.length - 1; i >= 0; i--)\n      {\n        placeAttrimator.call( context, attrimators[ i ] );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Finishes any attrimators on this animator that are not present in the given\n   * map of attrimators. Optionally a delay in stopping them can be given.\n   *\n   * @method finishNotPresent\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Number} [delay=0]\n   * @chainable\n   * @protected\n   */\n  finishNotPresent: function(attrimatorMap, delay)\n  {\n    var attrimators = this.values;\n    var stopIn = delay || 0;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( !attrimatorMap.has( attrimator.attribute ) )\n      {\n        attrimator.stopIn( stopIn );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Finishes any attrimators on this animator that are not present in the given\n   * map of attrimators. Optionally a delay in stopping them can be given.\n   *\n   * @method stopNotPresentAt\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {Number} time\n   * @chainable\n   * @protected\n   */\n  stopNotPresentAt: function(attrimatorMap, time)\n  {\n    var attrimators = this.values;\n\n    for (var i = attrimators.length - 1; i >= 0; i--)\n    {\n      var attrimator = attrimators[ i ];\n\n      if ( !attrimatorMap.has( attrimator.attribute ) )\n      {\n        attrimator.stopAt( time );\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Clones this map returning a deep clone where all attrimators are cloned.\n   *\n   * @method clone\n   * @return {AttrimatorMap}\n   */\n  clone: function()\n  {\n    var values = this.values;\n    var keys = this.keys;\n    var clone = new AttrimatorMap();\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      clone.values[i] = values[i].clone();\n      clone.keys[i] = keys[i];\n      clone.indices[ keys[i] ] = i;\n    }\n\n    return clone;\n  },\n\n  /**\n   * Returns the time remaining for all finite attrimators in this map. The time\n   * remaining includes queued attrimators.\n   *\n   * @method timeRemaining\n   * @return {Number}\n   */\n  timeRemaining: function(returnInfinity)\n  {\n    var maxRemaining = 0;\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n\n      if ( !attrimator.isInfinite() )\n      {\n        maxRemaining = Math.max( maxRemaining, attrimator.timeRemaining() );\n      }\n      else if ( returnInfinity )\n      {\n        return Number.Infinity;\n      }\n    }\n\n    return maxRemaining;\n  },\n\n  /**\n   * Sets the cycle of the attrimators in this map. If there are attrimators\n   * queued the are given the next cycle number. The final cycle number is\n   * returned.\n   *\n   * @method applyCycle\n   * @param {Number} nextCycle\n   * @return {Number}\n   */\n  applyCycle: function(nextCycle)\n  {\n    var currentDepth = this.values;\n    var nextDepth = null;\n\n    while ( currentDepth.length )\n    {\n      nextDepth = [];\n\n      for (var i = currentDepth.length - 1; i >= 0; i--)\n      {\n        var attrimator = currentDepth[ i ];\n\n        attrimator.cycle = nextCycle;\n\n        if ( attrimator.next )\n        {\n          nextDepth.push( attrimator.next );\n        }\n      }\n\n      if ( nextDepth.length )\n      {\n        nextCycle++;\n      }\n\n      currentDepth = nextDepth;\n    }\n\n    return nextCycle;\n  },\n\n  /**\n   * Iterates through all attrimators in this map, at any depth.\n   *\n   * @method iterate\n   * @param  {Function} callback\n   * @param  {Object} [context]\n   * @chainable\n   */\n  iterate: function(callback, context)\n  {\n    var values = this.values;\n\n    for (var i = values.length - 1; i >= 0; i--)\n    {\n      var attrimator = values[i];\n      var previous = null;\n      var depth = 0;\n\n      while ( attrimator )\n      {\n        callback.call( context || this, attrimator, depth++, previous );\n\n        attrimator = (previous = attrimator).next;\n      }\n    }\n\n    return this;\n  }\n\n});\n\n\n/**\n * Instantiates a new Builder. Builders are responsible for taking animation\n * definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generating & placing {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}\n * onto an {{#crossLink \"AttrimatorMap\"}}{{/crossLink}}.\n *\n * Builders are added to the {{#crossLink \"anim8.builder\"}}{{/crossLink}} object\n * by a key and when that key exists in an animation definition, the animation\n * definition is passed to the {{#crossLink \"Builder/parse:method\"}}{{/crossLink}}\n * to generate {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class Builder\n * @constructor\n */\nfunction Builder()\n{\n\n}\n\n/**\n * Returns the next merge ID. Merge IDs are used when merging options into\n * attrimators to perform an optimal merge.\n *\n * @method nextMergeId\n * @static\n */\nBuilder.nextMergeId = (function()\n{\n  var id = 0;\n  return function() {\n    return id++;\n  };\n})();\n\nClass.define( Builder,\n{\n\n  /**\n   * Parses the animation object (and optionally an option object) and pushes\n   * all generated attrimatorMap to the given array.\n   *\n   * @method parse\n   * @param {Object} animation\n   * @param {Object} options\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    throw 'Builder.parse not implemented';\n  },\n\n  /**\n   * Merges the options with the given event instances. This is when an existing\n   * animation is provided but the user wants to override the animation's options.\n   *\n   * Because event properties can be specified in several places there's a priority\n   * to which one takes precedence. The properties specified in the animation object\n   * itself are highest priority, followed by the new options, then by the old\n   * options, and finally by the existing property on the event instance.\n   *\n   * @method merge\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   * @param {BuilderHelper} helper\n   */\n  merge: function( animation, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    var builder = this;\n    var factory = $factory( animation.factory, helper.forObject );\n\n    attrimatorMap.iterate(function(e)\n    {\n      if ( e.getBuilder() === builder )\n      {\n        builder.mergeAttrimator( e, e.attribute, helper, factory );\n      }\n    });\n  },\n\n  /**\n   * Merges new options contained in the helper into the given attrimator.\n   *\n   * @method mergeAttrimator\n   * @param {Attrimator} e\n   * @param {String} attr\n   * @param {BuilderHelper} helper\n   * @param {Factory} factory\n   */\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.easing      = helper.mergeEasing( attr, e.easing );\n    e.repeat      = helper.mergeRepeat( attr, e.repeat );\n    e.delay       = helper.mergeDelay( attr, e.delay );\n    e.sleep       = helper.mergeSleep( attr, e.sleep );\n    e.duration    = helper.mergeDuration( attr, e.duration );\n    e.offset      = helper.mergeOffset( attr, e.offset );\n    e.scale       = helper.mergeScale( attr, e.scale );\n    e.scaleBase   = helper.mergeScaleBase( attr, e.scaleBase, factory );\n    e.parameters  = helper.mergeParameters( e.parameters );\n  },\n\n  /**\n   * Calls merge on all builders specified in the given animation definition.\n   *\n   * @method submerge\n   * @protected\n   * @param {Object} animation\n   * @param {Object} newOptions\n   * @param {Object} oldOptions\n   * @param {AttrimatorMap} attrimatorMap\n   */\n  submerge: function( animation, newOptions, oldOptions, attrimatorMap )\n  {\n    var helper = new BuilderHelper( animation, oldOptions, newOptions, this.forObject );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false && builder.merge )\n      {\n        builder.merge( animation, newOptions, oldOptions, attrimatorMap, helper );\n      }\n    }\n  }\n});\n\n\n/**\n * Instantiates a new instance of Builder Helper.\n *\n * @param {Object} input\n * @param {Object} oldOptions\n * @param {Object} newOptions\n * @class BuilderHelper\n * @constructor\n */\nfunction BuilderHelper( input, oldOptions, newOptions, forObject )\n{\n  this.input = input;\n  this.oldOptions = oldOptions || {};\n  this.newOptions = newOptions || {};\n  this.forObject = forObject;\n\n  this.prepareSpecifics( 'easings' );\n  this.prepareSpecifics( 'repeats' );\n  this.prepareSpecifics( 'delays' );\n  this.prepareSpecifics( 'sleeps' );\n  this.prepareSpecifics( 'durations' );\n  this.prepareSpecifics( 'offsets' );\n  this.prepareSpecifics( 'scales' );\n  this.prepareSpecifics( 'scaleBases' );\n  this.prepareSpecifics( 'parameters' );\n}\n\nClass.define( BuilderHelper,\n{\n\n  /**\n   * If an object with the given name doesn't exist on the input it's created.\n   *\n   * @method prepareSpecifics\n   * @param {String} specifics\n   */\n  prepareSpecifics: function(specifics)\n  {\n    if ( !isObject( this.input[ specifics ] ) )\n    {\n      this.input[ specifics ] = {};\n    }\n  },\n\n  /* PARSING */\n\n  /**\n   * Parses an easing from the input.\n   *\n   * @method parseEasing\n   * @param  {String} attr\n   * @return {String|Function|Array}\n   */\n  parseEasing: function(attr)\n  {\n    return this.parseFirst( attr, 'easing', 'easings' );\n  },\n\n  /**\n   * Parses repeats from the input.\n   *\n   * @method parseRepeat\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseRepeat: function(attr)\n  {\n    return this.parseNumber( attr, $repeat, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Parses delay from the input.\n   *\n   * @method parseDelay\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDelay: function(attr)\n  {\n    return this.parseNumber( attr, $delay, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Parses sleep from the input.\n   *\n   * @method parseSleep\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseSleep: function(attr)\n  {\n    return this.parseNumber( attr, $sleep, $time, 'sleep', 'sleepAdd', 'sleepScale', 'sleeps' );\n  },\n\n  /**\n   * Parses duration from the input.\n   *\n   * @method parseDuration\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseDuration: function(attr)\n  {\n    return this.parseNumber( attr, $duration, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Parses offset from the input.\n   *\n   * @method parseOffset\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseOffset: function(attr)\n  {\n    return this.parseNumber( attr, $offset, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Parses scale from the input.\n   *\n   * @method parseScale\n   * @param  {String} attr\n   * @return {Number}\n   */\n  parseScale: function(attr)\n  {\n    return this.parseNumber( attr, $scale, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Parses scale base from the input.\n   *\n   * @method parseScaleBase\n   * @param  {String} attr\n   * @return {Any}\n   */\n  parseScaleBase: function(attr)\n  {\n    return this.parseFirst( attr, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Parses a value from the input given the attribute, option, and specific.\n   *\n   * @method parseFirst\n   * @param {String} attr\n   * @param {String} option\n   * @param {String} specifics\n   * @return {Any}\n   */\n  parseFirst: function(attr, option, specifics)\n  {\n    return coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n  },\n\n  /**\n   * Parses an event from the input given a path & builder for the event.\n   *\n   * @method parseEvent\n   * @param {String} attr\n   * @param {Path} path\n   * @param {Builder} builder\n   * @param {Boolean} hasInitialState\n   * @return {Event}\n   */\n  parseEvent: function(attr, path, builder, hasInitialState, mergeId)\n  {\n    var duration   = this.parseDuration( attr );\n    var easing     = this.parseEasing( attr );\n    var delay      = this.parseDelay( attr );\n    var sleep      = this.parseSleep( attr );\n    var repeat     = this.parseRepeat( attr );\n    var offset     = this.parseOffset( attr );\n    var scale      = this.parseScale( attr );\n    var scaleBase  = this.parseScaleBase( attr );\n    var parameters = this.parseParameters();\n    var event      = new Event( attr, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, parameters, hasInitialState, builder, null, this.input );\n\n    return event;\n  },\n\n  /**\n   * Parses a number from the input given parse functions.\n   *\n   * @method parseNumber\n   * @param {String} attr\n   * @param {Function} parseFunction\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  parseNumber: function(attr, parseFunction, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.oldOptions[ option ] );\n    var base = parseFunction( baseRaw );\n    var add = parseOptionFunction( this.oldOptions[ optionAdd ], 0 );\n    var scale = coalesce( this.oldOptions[ optionScale ], 1 );\n\n    return (add === 0 && scale === 1) ? baseRaw : (base + add) * scale;\n  },\n\n  /**\n   * Parses parameters from input and the given options.\n   *\n   * @method parseParameters\n   * @return {Object}\n   */\n  parseParameters: function()\n  {\n    return extend( {}, this.input.parameters, this.oldOptions );\n  },\n\n  /* MERGING */\n\n  /**\n   * Merges easing based on the input, new options, and the current easing.\n   *\n   * @method mergeEasing\n   * @param {String} attr\n   * @param {Function} current\n   * @return {Function}\n   */\n  mergeEasing: function(attr, current)\n  {\n    return this.mergeFirst( attr, current, $easing, 'easing', 'easings' );\n  },\n\n  /**\n   * Merges repeats based on the input, new options, and the current repeat.\n   *\n   * @method mergeRepeat\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeRepeat: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $repeat, 'repeat', 'repeatAdd', 'repeatScale', 'repeats' );\n  },\n\n  /**\n   * Merges delay based on the input, new options, and the current delay.\n   *\n   * @method mergeDelay\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDelay: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'delay', 'delayAdd', 'delayScale', 'delays' );\n  },\n\n  /**\n   * Merges sleep based on the input, new options, and the current sleep.\n   *\n   * @method mergeSleep\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeSleep: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'sleep', 'sleepAdd', 'sleepScale', 'scales' );\n  },\n\n  /**\n   * Merges duration based on the input, new options, and the current duration.\n   *\n   * @method mergeDuration\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeDuration: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'duration', 'durationAdd', 'durationScale', 'durations' );\n  },\n\n  /**\n   * Merges offset based on the input, new options, and the current offset.\n   *\n   * @method mergeOffset\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeOffset: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $time, 'offset', 'offsetAdd', 'offsetScale', 'offsets' );\n  },\n\n  /**\n   * Merges scale based on the input, new options, and the current scale.\n   *\n   * @method mergeScale\n   * @param {String} attr\n   * @param {Number} current\n   * @return {Number}\n   */\n  mergeScale: function(attr, current)\n  {\n    return this.mergeNumber( attr, current, $number, 'scale', 'scaleAdd', 'scaleScale', 'scales' );\n  },\n\n  /**\n   * Merges scale base based on the input, new options, and the current scale\n   * base.\n   *\n   * @method mergeScaleBase\n   * @param {String} attr\n   * @param {T} current\n   * @param {Factory} factory\n   * @return {T}\n   */\n  mergeScaleBase: function(attr, current, factory)\n  {\n    var calc = factory.attribute( attr ).calculator;\n\n    var parseFunction = function(value, defaultValue) {\n      return calc.parse( value, defaultValue );\n    };\n\n    return this.mergeFirst( attr, current, parseFunction, 'scaleBase', 'scaleBases' );\n  },\n\n  /**\n   * Merges parameters from across the input and options.\n   *\n   * @method mergeParameters\n   * @param {Object} current\n   * @return {Object}\n   */\n  mergeParameters: function(current)\n  {\n    return extend( {}, this.newOptions.parameters, current );\n  },\n\n  /**\n   * Returns the first available option from input, new options, old options,\n   * and the current value.\n   *\n   * @method mergeFirst\n   * @param {String} attr\n   * @param {T} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} specifics\n   * @return {T}\n   */\n  mergeFirst: function(attr, current, parseOptionFunction, option, specifics)\n  {\n    var specific = this.input[ specifics ][ attr ];\n    var value = coalesce( specific, this.newOptions[ option ], this.oldOptions[ option ] );\n\n    return parseOptionFunction( value, current );\n  },\n\n  /**\n   * Merges a number by returning the first occurrence from input, new options,\n   * old options, and the current value.\n   *\n   * @method mergeNumber\n   * @param {String} attr\n   * @param {Number} current\n   * @param {Function} parseOptionFunction\n   * @param {String} option\n   * @param {String} optionAdd\n   * @param {String} optionScale\n   * @param {String} specifics\n   * @return {Number}\n   */\n  mergeNumber: function(attr, current, parseOptionFunction, option, optionAdd, optionScale, specifics)\n  {\n    var baseRaw = coalesce( this.input[ specifics ][ attr ], this.newOptions[ option ], this.oldOptions[ option ] );\n    var base = parseOptionFunction( baseRaw, current );\n    var add = parseOptionFunction( coalesce( this.newOptions[ optionAdd ], this.oldOptions[ optionAdd ] ), 0 );\n    var scale = coalesce( this.newOptions[ optionScale ], this.oldOptions[ optionScale ], 1 );\n\n    return (base + add) * scale;\n  }\n\n});\n\n\n\n\n/**\n * Instantiates a new Calculator instance.\n *\n * @class Calculator\n * @constructor\n */\nfunction Calculator()\n{\n\n}\n\nClass.define( Calculator,\n{\n\n  /**\n   * Creates the constants for this calculator.\n   *\n   * @method createConstants\n   */\n  createConstants: function()\n  {\n    this.ZERO = this.create();\n    this.ONE = this.parse( 1.0, this.ZERO );\n    this.INFINITY = this.parse( Number.POSITIVE_INFINITY, this.ZERO );\n  },\n\n  /**\n   * Parses the given input for a value this calculator understands.\n   *\n   * @method parse\n   * @param {T} x\n   * @param {T} defaultValue\n   * @param {Boolean} ignoreRelative\n   * @return {T|Function|False}\n   */\n  parse: function(x, defaultValue, ignoreRelative)\n  {\n    throw 'Calculator.parse not implemented';\n  },\n\n  /**\n   * Parses the given input for a value this calculator understands.\n   *\n   * @method parse\n   * @param  {T} x\n   * @param  {T} defaultValue\n   * @return {T|Function|False}\n   */\n  parseArray: function(input, output, defaultValue)\n  {\n    if (input.length !== output.length)\n    {\n      output.length = input.length;\n    }\n\n    var parsedDefault = this.parse( defaultValue, this.ZERO );\n\n    for (var i = 0; i < input.length; i++)\n    {\n      output[ i ] = this.parse( input[ i ], parsedDefault );\n    }\n\n    return output;\n  },\n\n  /**\n   * Copies a value and places it in out and returns out.\n   *\n   * @method copy\n   * @param {T} out\n   * @param {T} copy\n   * @return {T}\n   */\n  copy: function(out, copy)\n  {\n    throw 'Calculator.copy not implemented';\n  },\n\n  /**\n   * Zeros out and returns it.\n   *\n   * @method zero\n   * @param {T} out\n   * @return {T}\n   */\n  zero: function(out)\n  {\n    throw 'Calculator.zero not implemented';\n  },\n\n  /**\n   * Converts each component in the given value using a converter function and\n   * returns the result.\n   */\n  convert: function(out, converter)\n  {\n    throw 'Calculator.convert not implemented';\n  },\n\n  /**\n   * Clones the value and returns the clone.\n   *\n   * @method clone\n   * @param {T} clone\n   * @return {T}\n   */\n  clone: function(clone)\n  {\n    return this.copy( this.create(), clone );\n  },\n\n  /**\n   * Creates an empty value equivalent to zero.\n   *\n   * @method create\n   * @return {T}\n   */\n  create: function()\n  {\n    throw 'Calculator.create not implemented';\n  },\n\n  /**\n   * Scales out by the given scalar value and returns out.\n   *\n   * @method scale\n   * @param {T} out\n   * @param {Number} scale\n   * @return {T}\n   */\n  scale: function(out, scale)\n  {\n    return this.adds( out, out, scale - 1 );\n  },\n\n  /**\n   * Adds an amount to out and returns out.\n   *\n   * @method add\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  add: function(out, amount)\n  {\n    return this.adds( out, amount, 1 );\n  },\n\n  /**\n   * Adds an amount scaled by a scalar value to out and returns out.\n   *\n   * @method adds\n   * @param {T} out\n   * @param {T} amount\n   * @param {Number} amountScale\n   * @return {T}\n   */\n  adds: function(out, amount, amountScale)\n  {\n    throw 'Calculator.adds not implemented';\n  },\n\n  /**\n   * Subtracts an amount from out and returns out.\n   *\n   * @method sub\n   * @param {T} out\n   * @param {T} amount\n   * @return {T}\n   */\n  sub: function(out, amount)\n  {\n    return this.adds( out, amount, -1 );\n  },\n\n  /**\n   * Multiplies out by some amount and returns out.\n   *\n   * @method mul\n   * @param {T} out\n   * @param {T} scale\n   * @return {T}\n   */\n  mul: function(out, scale)\n  {\n    throw 'Calculator.mul not implemented';\n  },\n\n  /**\n   * Divides out by some amount and returns out.\n   *\n   * @method div\n   * @param {T} out\n   * @param {T} denominator\n   * @return {T}\n   */\n  div: function(out, denominator)\n  {\n    throw 'Calculator.div not implemented';\n  },\n\n  /**\n   * Interpolates out between start & end given a delta value and returns out.\n   * A delta value typically lies between 0 and 1 inclusively.\n   *\n   * @method interpolate\n   * @param {T} out\n   * @param {T} start\n   * @param {T} end\n   * @param {Number} delta\n   * @return {T}\n   */\n  interpolate: function(out, start, end, delta)\n  {\n    out = this.zero( out );\n    out = this.adds( out, start, 1 - delta );\n    out = this.adds( out, end, delta );\n\n    return out;\n  },\n\n  /**\n   * Returns a random value between the given min and max.\n   *\n   * @method random\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  random: function(out, min, max)\n  {\n    return this.interpolate( out, min, max, Math.random() );\n  },\n\n  /**\n   * Calculates the distance between the two values.\n   *\n   * @method distance\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distance: function(a, b)\n  {\n    return Math.sqrt( this.distanceSq( a, b ) );\n  },\n\n  /**\n   * Calculates the squared distance between the two values.\n   *\n   * @method distanceSq\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  distanceSq: function(a, b)\n  {\n    throw 'Calculator.distanceSq not implemented';\n  },\n\n  /**\n   * Returns the distance the given value is from zero.\n   *\n   * @method length\n   * @param {T} a\n   * @return {Number}\n   */\n  length: function(a)\n  {\n    return this.distance( a, this.ZERO );\n  },\n\n  /**\n   * Returns the squared distance the given value is from zero.\n   *\n   * @method lengthSq\n   * @param {T} a\n   * @return {Number}\n   */\n  lengthSq: function(a)\n  {\n    return this.distanceSq( a, this.ZERO );\n  },\n\n  /**\n   * Determines whether the given value is valid for this calculator.\n   *\n   * @method isValid\n   * @param {any} a\n   * @return {Boolean}\n   */\n  isValid: function(a)\n  {\n    throw 'Calculator.isValid not implemented';\n  },\n\n  /**\n   * Returns whether the given value is not a number or has a component which is\n   * not a number.\n   *\n   * @method isNaN\n   * @param {T} a\n   * @return {Boolean}\n   */\n  isNaN: function(a)\n  {\n    throw 'Calculator.isNaN not implemented';\n  },\n\n  /**\n   * Determines whether the given value is equivalent to zero given an\n   * acceptable distance from zero (epsilon).\n   *\n   * @method isZero\n   * @param {T} a\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isZero: function(a, epsilon)\n  {\n    throw 'Calculator.isZero not implemented';\n  },\n\n  /**\n   * Determines whether the given values are equivalent up to an acceptable\n   * distance apart.\n   *\n   * @method isEqual\n   * @param {T} a\n   * @param {T} b\n   * @param {Number} epsilon\n   * @return {Boolean}\n   */\n  isEqual: function(a, b, epsilon)\n  {\n    throw 'Calculator.isEqual not implemented';\n  },\n\n  /**\n   * Sets out to the minimum value between the two values and returns out.\n   *\n   * @method min\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  min: function(out, a, b)\n  {\n    throw 'Calculator.min not implemented';\n  },\n\n  /**\n   * Sets out to the maximum value between two values and returns out.\n   *\n   * @method max\n   * @param {T} out\n   * @param {T} a\n   * @param {T} b\n   * @return {T}\n   */\n  max: function(out, a, b)\n  {\n    throw 'Calculator.max not implemented';\n  },\n\n  /**\n   * Performs the dot product between two values.\n   *\n   * @param {T} a\n   * @param {T} b\n   * @return {Number}\n   */\n  dot: function(a, b)\n  {\n    throw 'Calculator.dot not implemented';\n  },\n\n  /**\n   * Clamps out between the given minimum and maximum values and returns out.\n   *\n   * @method clamp\n   * @param {T} out\n   * @param {T} min\n   * @param {T} max\n   * @return {T}\n   */\n  clamp: function(out, min, max)\n  {\n    var distSq = this.distanceSq( out, this.ZERO );\n\n    if ( distSq < min * min )\n    {\n      return this.scale( out, min / Math.sqrt( distSq ) );\n    }\n    else if ( distSq > max * max )\n    {\n      return this.scale( out, max / Math.sqrt( distSq ) );\n    }\n\n    return out;\n  },\n\n  /**\n   * Sets the length of the given value and returns the new value.\n   *\n   * @param {T} out\n   * @param {Number} length\n   * @return {T}\n   */\n  setLength: function(out, length)\n  {\n    var lengthSq = this.lengthSq( out );\n\n    if ( lengthSq !== 0 )\n    {\n      return this.scale( out, length / Math.sqrt( lengthSq ) );\n    }\n\n    return out;\n  }\n\n});\n\n\n/**\n * Instantiates a Defer instance. Defer instances keep track of method calls\n * to call at a later time - after an event occurs. The first argument needs\n * to be a function which returns an instance of anim8.Defer when it's invoked.\n * The second argument is an array of methods that can be deferred.\n *\n * @param {Function} factory\n * @param {Array} methods\n * @class Defer\n * @constructor\n */\nfunction Defer(factory, methods)\n{\n  this.$factory = factory;\n\n  for (var i = 0; i < methods.length; i++)\n  {\n    this[ methods[i] ] = this.$push( methods[i] );\n  }\n}\n\nClass.define( Defer,\n{\n  /**\n   * Resets the defer instance.\n   *\n   * @method $reset\n   * @param {Object} eventable\n   * @param {Any} previous\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   */\n  $reset: function(eventable, previous, eventType, event, callback)\n  {\n    this.$eventable = eventable;\n    this.$previous = previous;\n    this.$eventType = eventType;\n    this.$event = event;\n    this.$callback = callback;\n    this.$calls = [];\n    this.$next = [];\n\n    if ( this.$isRoot() )\n    {\n      this.$register();\n    }\n  },\n\n  /**\n   * Determines whether this Defer instance is at the root.\n   *\n   * @method $isRoot\n   * @return {Boolean}\n   */\n  $isRoot: function()\n  {\n    return this.$eventable === this.$previous;\n  },\n\n  /**\n   * Registers this Defer instance with the eventable.\n   *\n   * @method $register\n   */\n  $register: function()\n  {\n    this.$eventable[ this.$eventType ]( this.$event, this.$run, this );\n  },\n\n  /**\n   * Creates a defered function which passes the method and arguments for\n   * any method call into an array of calls on this Defer instance.\n   *\n   * @method $push\n   * @param {String} methodName\n   * @return {Function}\n   */\n  $push: function(methodName)\n  {\n    return function()\n    {\n      this.$calls.push( [methodName, arguments] );\n\n      return this;\n    };\n  },\n\n  /**\n   * Executes all defered method calls and starts any child Defer instances.\n   *\n   * @method $run\n   */\n  $run: function()\n  {\n    // Invoke the callback if one was given.\n    if ( isFunction( this.$callback ) )\n    {\n      this.$callback.call( this.$eventable, this );\n    }\n\n    for (var i = 0; i < this.$calls.length; i++)\n    {\n      var call = this.$calls[ i ];\n\n      this.$eventable[ call[0] ].apply( this.$eventable, call[1] );\n    }\n\n    for (var k = 0; k < this.$next.length; k++)\n    {\n      this.$next[ k ].$register();\n    }\n  },\n\n  /**\n   * Returns the object before the defer statement.\n   *\n   * @method undefer\n   * @return {Any}\n   */\n  undefer: function()\n  {\n    return this.$previous;\n  },\n\n  /**\n   * Defers any following method calls to after the given event is triggered. A\n   * callback can be specified which is a function invoked after the event is\n   * triggered.\n   *\n   * @method defer\n   * @param {String} eventType\n   * @param {String} event\n   * @param {Function} callback\n   * @return {Defer}\n   */\n  defer: function(eventType, event, callback)\n  {\n    var next = new this.$factory( this.$eventable, this, eventType, event, callback );\n\n    this.$next.push( next );\n\n    return next;\n  }\n\n});\n\n\n/**\n * Provides the ability to defer method calls until certain events are triggered.\n *\n * @class DeferAnimator\n * @constructor\n * @extends Defer\n */\nfunction DeferAnimator(animator, previous, eventType, event)\n{\n  this.$reset( animator, previous, eventType, event );\n}\n\n/**\n * Creates the Defer prototype for the following Animator methods.\n */\nDeferAnimator.prototype = new Defer( DeferAnimator,\n[\n  /**\n   * Defers the {{#crossLink \"Animator/restore:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'restore',\n\n  /**\n   * Defers the {{#crossLink \"Animator/placeAttrimator:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method placeAttrimator\n   */\n  'placeAttrimator',\n\n  /**\n   * Defers the {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method applyInitialState\n   */\n  'applyInitialState',\n\n  /**\n   * Defers the {{#crossLink \"Animator/preupdate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method preupdate\n   */\n  'preupdate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/update:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method update\n   */\n  'update',\n\n  /**\n   * Defers the {{#crossLink \"Animator/apply:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method apply\n   */\n  'apply',\n\n  /**\n   * Defers the {{#crossLink \"Animator/trimAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'trimAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/activate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'activate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/deactivate:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'deactivate',\n\n  /**\n   * Defers the {{#crossLink \"Animator/destroy:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'destroy',\n\n  /**\n   * Defers the {{#crossLink \"Animator/spring:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'spring',\n\n  /**\n   * Defers the {{#crossLink \"Animator/play:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   */\n  'play',\n\n  /**\n   * Defers the {{#crossLink \"Animator/playAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method restore\n   * @protected\n   */\n  'playAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queue:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queue\n   */\n  'queue',\n\n  /**\n   * Defers the {{#crossLink \"Animator/queueAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method queueAttrimators\n   * @protected\n   */\n  'queueAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/insert:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method insert\n   */\n  'insert',\n\n  /**\n   * Defers the {{#crossLink \"Animator/insertAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method insertAttrimators\n   * @protected\n   */\n  'insertAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transition:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transition\n   */\n  'transition',\n\n  /**\n   * Defers the {{#crossLink \"Animator/transitionAttrimators:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method transitionAttrimators\n   * @protected\n   */\n  'transitionAttrimators',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tween:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tween\n   */\n  'tween',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenTo\n   */\n  'tweenTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenMany\n   */\n  'tweenMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyTo:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyTo\n   */\n  'tweenManyTo',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenFrom\n   */\n  'tweenFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/tweenManyFrom:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method tweenManyFrom\n   */\n  'tweenManyFrom',\n\n  /**\n   * Defers the {{#crossLink \"Animator/move:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method move\n   */\n  'move',\n\n  /**\n   * Defers the {{#crossLink \"Animator/moveMany:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method moveMany\n   */\n  'moveMany',\n\n  /**\n   * Defers the {{#crossLink \"Animator/follow:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method follow\n   */\n  'follow',\n\n  /**\n   * Defers the {{#crossLink \"Animator/stop:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method stop\n   */\n  'stop',\n\n  /**\n   * Defers the {{#crossLink \"Animator/end:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method end\n   */\n  'end',\n\n  /**\n   * Defers the {{#crossLink \"Animator/finish:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method finish\n   */\n  'finish',\n\n  /**\n   * Defers the {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method nopeat\n   */\n  'nopeat',\n\n  /**\n   * Defers the {{#crossLink \"Animator/pause:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method pause\n   */\n  'pause',\n\n  /**\n   * Defers the {{#crossLink \"Animator/resume:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method resume\n   */\n  'resume',\n\n  /**\n   * Defers the {{#crossLink \"Animator/set:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method set\n   */\n  'set',\n\n  /**\n   * Defers the {{#crossLink \"Animator/unset:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method unset\n   */\n  'unset',\n\n  /**\n   * Defers the {{#crossLink \"Animator/get:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method get\n   */\n  'get',\n\n  /**\n   * Defers the {{#crossLink \"Animator/invoke:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method invoke\n   */\n  'invoke',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleStart:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleStart\n   */\n  'onCycleStart',\n\n  /**\n   * Defers the {{#crossLink \"Animator/onCycleEnd:method\"}}{{/crossLink}} method until the deferred event has occurred.\n   *\n   * @method onCycleEnd\n   */\n  'onCycleEnd'\n]);\n\n\nvar EasingTypes = {};\n\n/**\n * A collection of easing type functions. An easing type functions takes an\n * easing function as an argument and modifies it's input and output values.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.easingType\n */\n\n/**\n * Plays the animation forward normally.\n *\n * @method in\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['in'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum.\n *\n * @method out\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['out'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation forward by flipping the easings momentum halfway.\n *\n * @method inout\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['inout'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x ) * 0.5;\n    }\n    else\n    {\n      return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n    }\n  };\n};\n\n/**\n * Plays the aninmation forwards with the given easing, and backwards with the same easing momentum.\n *\n * @method yoyo\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['yoyo'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation forwards with the given easing, and backwards reflecting the easing's momentum.\n *\n * @method mirror\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['mirror'] = function(easing)\n{\n  return function(x)\n  {\n    if ( x < 0.5 )\n    {\n      return easing( 2.0 * x );\n    }\n    else\n    {\n      return 1.0 - easing( 2.0 - 2.0 * x );\n    }\n  };\n};\n\n/**\n * Plays the animation backwards with using the same easing momentum.\n *\n * @method reverse\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['reverse'] = function(easing)\n{\n  return function(x)\n  {\n    return easing( 1.0 - x );\n  };\n};\n\n/**\n * Plays the animation backwards by flipping the easing's momentum.\n *\n * @method flip\n * @for anim8.easingType\n * @param {Function} easing\n * @return {Function}\n */\nEasingTypes['flip'] = function(easing)\n{\n  return function(x)\n  {\n    return 1.0 - easing( x );\n  };\n};\n\n\n/**\n * A collection of easing functions. An easing functions takes a single number\n * as input that's between 0 and 1 inclusively and returns a number that\n * progresses from 0 to 1 but in-between values may return a number that's less\n * than 0 or greater than 1.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @class anim8.Easings\n */\nvar Easings = {};\n\n\n/**\n * Returns true if the given string would result in returning an easing.\n *\n * **See:** {{#crossLink \"Core/anim8.easing\"}}{{/crossLink}}\n *\n * @method anim8.isEasingName\n * @for Core\n * @param {String} easing\n * @return {Boolean}\n */\nfunction isEasingName(easing)\n{\n  if ( easing in Easings )\n  {\n    return true;\n  }\n\n  var pair = easing.split('-');\n  var e = pair[0];\n  var t = pair[1];\n\n  if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n  {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method linear\n * @for anim8.easing\n */\nEasings['linear'] = function(x)\n{\n  return x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['quad'] = function(x)\n{\n  return x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDAuMyooMS14KSooMS14KSp4KSsoMy4wKigxLXgpKngqeCkrKHgqeCp4KSkqKDEteCkreCooMS0oMS14KSooMS14KSooMS14KSooMS14KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quad\n * @for anim8.easing\n */\nEasings['ease'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n\n  return eq1 * i + eq2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method cubic\n * @for anim8.easing\n */\nEasings['cubic'] = function(x)\n{\n  return x * x * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method quartic\n * @for anim8.easing\n */\nEasings['quartic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJ4KngqeCp4KngiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method quintic\n * @for anim8.easing\n */\nEasings['quintic'] = function(x)\n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KngpKyh4KngpLXgiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method back\n * @for anim8.easing\n */\nEasings['back'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  return x3 + x2 - x;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzaW4oeCoxLjU3MDc5NjMyNjc5KSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method sine\n * @for anim8.easing\n */\nEasings['sine'] = function(x)\n{\n  return Math.sin( x * 1.57079632679 );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLXgqKDcuMC8xMCkpKngqKDEwLjAvMy4wKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method overshot\n * @for anim8.easing\n */\nEasings['overshot'] = function(x)\n{\n  return (1.0 - x * (7.0 / 10)) * x * (10.0 / 3.0);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeCp4KigoMi4wKngqeCp4KSt4KngtKDQuMCp4KSsyLjApKSotc2luKHgqMTAuOTk1NTc0Mjg3NikiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method elastic\n * @for anim8.easing\n */\nEasings['elastic'] = function(x)\n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n  var wave = -Math.sin(x * 10.9955742876);\n  return scale * wave;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJhYnMoeC1zaW4oeCozLjE0MTU5MjY1MzU5KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method revisit\n * @for anim8.easing\n */\nEasings['revisit'] = function(x)\n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWNvcyh4KngqeCozNi4wKSooMS4wLXgpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method lasso\n * @for anim8.easing\n */\nEasings['lasso'] = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgqeCkqY29zKHgqeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slowbounce\n * @for anim8.easing\n */\nEasings['slowbounce'] = function(x)\n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS4wLXgpKmNvcyh4KngqMTQuODA0NDA2NjAxNikpKSIsImNvbG9yIjoiIzAwMDAwMCJ9LHsidHlwZSI6MTAwMCwid2luZG93IjpbIi0wLjE5MjUwMDAwMDAwMDAwMDI1IiwiMS40MzI0OTk5OTk5OTk5OTk5IiwiMC4wMTc0OTk5OTk5OTk5OTk4NzciLCIxLjAxNzQ5OTk5OTk5OTk5OTgiXX1d)\n *\n * @method bounce\n * @for anim8.easing\n */\nEasings['bounce'] = function(x)\n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjE0LjgwNDQwNjYwMTYpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method smallbounce\n * @for anim8.easing\n */\nEasings['smallbounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMS4wLWFicygoMS14KSooMS14KSpjb3MoeCp4KjcpKSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method tinybounce\n * @for anim8.easing\n */\nEasings['tinybounce'] = function(x)\n{\n  var inv = 1.0 - x;\n  return (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoY29zKHgqeCoxMi4wKSp4KigxLjAteCkreCkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method hesitant\n * @for anim8.easing\n */\nEasings['hesitant'] = function(x)\n{\n  return (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiJzcXJ0KHgpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrt\n * @for anim8.easing\n */\nEasings['sqrt'] = function(x)\n{\n  return Math.sqrt( x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoKDEuMC0oMS14KSooMS14KSooMS14KSooMS14KSkreCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method sqrtf\n * @for anim8.easing\n */\nEasings['sqrtf'] = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIobG9nKHgpKzIuMCkqMC41IiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method log10\n * @for anim8.easing\n */\nEasings['log10'] = function(x)\n{\n  return (Math.log10(x + 0.01) + 2.0) * 0.5 / 1.0021606868913213;\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoeDwwLjc_KHgqLTAuMzU3KTooKCh4LTAuNykqKHgtMC43KSoyNy41LTAuNSkqMC41KSkiLCJjb2xvciI6IiMwMDAwMDAifSx7InR5cGUiOjEwMDAsIndpbmRvdyI6WyItMC4xOTI1MDAwMDAwMDAwMDAyNSIsIjEuNDMyNDk5OTk5OTk5OTk5OSIsIjAuMDE3NDk5OTk5OTk5OTk5ODc3IiwiMS4wMTc0OTk5OTk5OTk5OTk4Il19XQ--)\n *\n * @method slingshot\n * @for anim8.easing\n */\nEasings['slingshot'] = function(x)\n{\n  if (x < 0.7) {\n    return (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIxLXNxcnQoMS14KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method circular\n * @for anim8.easing\n */\nEasings['circular'] = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\n/**\n * [View Easing Function](http://fooplot.com/#W3sidHlwZSI6MCwiZXEiOiIoMy4wKigxLjAteCkqeCp4KSsoeCp4KngpIiwiY29sb3IiOiIjMDAwMDAwIn0seyJ0eXBlIjoxMDAwLCJ3aW5kb3ciOlsiLTAuMTkyNTAwMDAwMDAwMDAwMjUiLCIxLjQzMjQ5OTk5OTk5OTk5OTkiLCIwLjAxNzQ5OTk5OTk5OTk5OTg3NyIsIjEuMDE3NDk5OTk5OTk5OTk5OCJdfV0-)\n *\n * @method gentle\n * @for anim8.easing\n */\nEasings['gentle'] = function(x)\n{\n  return (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\n/**\n * Scales an existing easing by a given factor\n *\n * @method scale\n * @for anim8.easing\n */\nEasings['scale'] = function(scale, easing)\n{\n  var inner = $easing( easing );\n\n  return function (x)\n  {\n    var i = inner( x );\n    return scale * i + (1 - scale) * x;\n  };\n};\n\n/**\n * Generates a bezier easing function given the two middle control points. The\n * first point is {0,0} and the last point is {1, 1}.\n *\n * @method bezier\n * @for anim8.easing\n * @param {Number} mX1\n * @param {Number} mY1\n * @param {Number} mX2\n * @param {Number} mY2\n * @return {Function}\n */\nEasings['bezier'] = function(mX1, mY1, mX2, mY2)\n{\n  // https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\n\n/**\n * Possible states an event can be in.\n *\n * @type {Object}\n */\nvar EventState =\n{\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  FINISHED: 8\n};\n\n/**\n * Instantiates a new Event which extends Attrimator.\n *\n * @param {String} attribute\n * @param {Path} path\n * @param {String|Number} duration\n * @param {String|Function|Array} easing\n * @param {String|Number} delay\n * @param {String|Number} sleep\n * @param {String|Number} offset\n * @param {String|Number} repeat\n * @param {Number} scale\n * @param {T|Number} scaleBase\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @param {Object} input\n * @param {Number} mergeId\n * @class Event\n * @constructor\n * @extends Attrimator\n */\nfunction Event(attribute, path, duration, easing, delay, sleep, offset, repeat, scale, scaleBase, parameters, hasInitialState, builder, next, input, mergeId)\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The path the attribute will be animated along.\n   *\n   * @property {Path} path\n   */\n  this.path             = path;\n\n  /**\n   * The easing used to modify the delta value passed to the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n   *\n   * @property {Function} easing\n   */\n  this.easing           = $easing( easing );\n\n  /**\n   * The amount of time in milliseconds to animate an attribute over the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}}\n   *\n   * @property {Number} duration\n   */\n  this.duration         = $duration( duration );\n\n  /**\n   * If this event repeats more than once, this is a pause between animations.\n   *\n   * **See:** {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}}\n   *\n   * @property {Number} sleep\n   */\n  this.sleep            = $sleep( sleep );\n\n  /**\n   * The number of times to repeat the animation.\n   *\n   * **See:** {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}}\n   *\n   * @property {Number} repeat\n   */\n  this.repeat           = $repeat( repeat );\n\n  /**\n   * The amount to scale the value computed from the path.\n   *\n   * **See:** {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}\n   *\n   * @property {T} scale\n   */\n  this.scale            = $scale( scale );\n\n  /**\n   * The base value from which to scale from. This is essentially this data\n   * types default value.\n   *\n   * @property {T} scaleBase\n   */\n  this.scaleBase        = path.calculator.parse( scaleBase, path.calculator.ZERO );\n\n  /**\n   * The properties on the attrimator.\n   *\n   * @property {Object} parameters\n   */\n  this.parameters       = parameters;\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.offset           = $offset( offset );\n\n  this.input            = input;\n  this.mergeId          = mergeId;\n}\n\nClass.extend( Event, Attrimator,\n{\n  /**\n   * Returns the computed value given a base value and a delta along the path.\n   *\n   * @method computeValue\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  computeValue: function(baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n\n    if ( value !== false && this.scale !== 1.0 )\n    {\n      var calc = this.path.calculator;\n      var baseValue = calc.clone( this.scaleBase );\n      var distance = calc.sub( baseValue, value );\n\n      value = calc.adds( value, distance, -this.scale );\n    }\n\n    return value;\n  },\n\n  /**\n   * Applies the value to the frame and returns true, otherwise returns false.\n   *\n   * @method applyValue\n   * @param {Object} frame\n   * @param {T} baseValue\n   * @param {Number} delta\n   * @return {T}\n   */\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = baseValue;\n\n    // TODO pull defaultValue from attribute\n    if (!this.path.calculator.isValid( baseValue ))\n    {\n      value = this.path.calculator.create();\n    }\n\n    value = this.computeValue( value, delta );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = value;\n    }\n\n    return value;\n  },\n\n  nopeat: function()\n  {\n    var newRepeat = clamp( Math.ceil( ( this.elapsed - this.delay ) / ( this.duration + this.sleep ) ), 0, this.repeat );\n\n    if ( newRepeat !== this.repeat )\n    {\n      this.repeat = newRepeat;\n      this.prestartNext( true );\n    }\n\n    return this;\n  },\n  finish: function(frame)\n  {\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = EventState.FINISHED;\n  },\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.state = this.delay ? EventState.DELAYED : EventState.ANIMATING;\n\n    if ( this.hasComputed() )\n    {\n      this.path = this.path.replaceComputed( this, animator );\n    }\n  },\n  startCycle: function(frame)\n  {\n    if ( this.hasInitialState )\n    {\n      this.applyValue( frame, frame[ this.attribute ], 0 );\n\n      return true;\n    }\n\n    return false;\n  },\n  update: function(elapsed, frame)\n  {\n    var updated = false;\n    var delay = this.delay;\n    var duration = this.duration;\n    var sleep = this.sleep;\n    var repeat = this.repeat;\n    var oldState = this.state;\n    var newState = this.state;\n    var delta = 0;\n\n    elapsed -= delay;\n\n    var cycle = duration + sleep;\n    var iteration = Math.floor( elapsed / cycle );\n\n    if ( iteration >= repeat )\n    {\n      newState = EventState.FINISHED;\n      delta = 1;\n    }\n    else\n    {\n      elapsed -= iteration * cycle;\n\n      if ( elapsed > duration )\n      {\n        newState = EventState.SLEEPING;\n        delta = 1;\n      }\n      else\n      {\n        newState = EventState.ANIMATING;\n        delta = elapsed / duration;\n      }\n    }\n\n    if ( newState === EventState.ANIMATING ||\n       ( newState !== EventState.ANIMATING && oldState === EventState.ANIMATING ) )\n    {\n      this.applyValue( frame, frame[ this.attribute ], delta );\n      updated = true;\n    }\n\n    this.state = newState;\n\n    return updated;\n  },\n  valueAt: function(time, out)\n  {\n    time += this.offset;\n\n    if ( time < this.delay && !this.hasInitialState )\n    {\n      return false;\n    }\n\n    var delta = 0;\n\n    if ( time >= this.delay )\n    {\n      var cycle = (this.duration + this.sleep);\n      var elapsed = (time - this.delay);\n      var iteration = Math.floor( elapsed / cycle );\n\n      if ( iteration >= this.repeat )\n      {\n        delta = 1.0;\n      }\n      else\n      {\n        delta = Math.min( 1.0, (elapsed % cycle) / this.duration );\n      }\n    }\n\n    return this.computeValue( out, delta );\n  },\n  totalTime: function()\n  {\n    var sleepTime = this.sleep ? ((this.repeat - 1) * this.sleep) : 0;\n    var animateTime = (this.repeat * this.duration);\n\n    return Math.min( this.stopTime, this.delay + animateTime + sleepTime - this.offset );\n  },\n  clone: function()\n  {\n    return new Event( this.attribute, this.path, this.duration, this.easing, this.delay, this.sleep, this.offset, this.repeat, this.scale, this.scaleBase, this.parameters, this.hasInitialState, this.builder, this.next ? this.next.clone() : null, this.input );\n  },\n  hasComputed: function()\n  {\n    return this.path.computed;\n  },\n  isInfinite: function()\n  {\n    return !isFinite( this.repeat ) && !isFinite( this.stopTime );\n  },\n  isFinished: function()\n  {\n    return (this.state === EventState.FINISHED);\n  }\n\n});\n\n/**\n * Returns an Event given the attribute, the path, and a parsed options object.\n *\n * **See:** {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method fromOptions\n * @for Event\n * @param  {String} attr\n * @param  {Path} path\n * @param  {Object} options\n * @return {Event}\n */\nEvent.fromOptions = function(attr, path, options)\n{\n  return new Event( attr, path, options.duration, options.easing, options.delay, options.sleep, options.offset, options.repeat, options.scale, options.scaleBase, options.parameters );\n};\n\n\n/**\n * A factory creates Animator instances for subjects.\n *\n * @class Factory\n * @constructor\n */\nfunction Factory()\n{\n  this.priority = 0;\n}\n\nClass.define( Factory,\n{\n\n  /**\n   * Determines whether the given subject is valid for this factory to create Animators for.\n   *\n   * @method is\n   * @param  {Any} subject\n   * @return {Boolean}\n   */\n  is: function(subject)\n  {\n    throw 'Factory.is not implemented';\n  },\n\n  /**\n   * Returns an animator given a subject.\n   *\n   * @method animatorFor\n   * @param  {Any} subject\n   * @return {Animator}\n   */\n  animatorFor: function(subject)\n  {\n    throw 'Factory.animatorFor not implemented';\n  },\n\n  /**\n   * Explodes the given subject to an array of Animators and adds them to the given array.\n   *\n   * @method animatorsFor\n   * @param {Any} subject\n   * @param {Array} animators\n   */\n  animatorsFor: function(subject, animators)\n  {\n    animators.push( this.animatorFor( subject ) );\n  },\n\n  /**\n   * Destroys the animator by unlinking the animator from the subject.\n   *\n   * @method destroy\n   * @param {Animator} animator\n   */\n  destroy: function(animator)\n  {\n\n  },\n\n  /**\n   * Returns the attribute descriptor for the given attribute. An attribute\n   * descriptor is an object with at least the following properties:\n   *\n   * - `name` = the name of the attribute (same as `attr`)\n   * - `calculatorName` = the name of the calculator for the attribute\n   * - `calculator` = the calculator for the attribute\n   * - `defaultValue` = the default value for the attribute\n   * - `parse` = a method to pass a value and have the calculator parse it and\n   *             return the defaultValue if it was invalid\n   * - `cloneDefault` = a method which returns a clone of the default value\n   *\n   * @method attribute\n   * @param {String} attr\n   * @return {Object}\n   */\n  attribute: function(attr)\n  {\n    throw 'Factory.attribute not implemented';\n  }\n\n});\n\n\n/**\n * A FastMap has the key-to-value benefits of a map and iteration benefits of an\n * array. This is especially beneficial when most of the time the contents of\n * the structure need to be iterated and order doesn't matter (since removal\n * performs a swap which breaks insertion order).\n *\n * @param {FastMap|Object} map\n * @class FastMap\n * @constructor\n */\nfunction FastMap(map)\n{\n  this.reset();\n\n  if ( map instanceof FastMap )\n  {\n    this.putMap( map );\n  }\n  else if ( isObject( map ) )\n  {\n    for (var prop in map)\n    {\n      this.put( prop, map[ prop ] );\n    }\n  }\n}\n\nClass.define( FastMap,\n{\n\n  /**\n   * Resets the map by initializing the values, keys, and indexes.\n   *\n   * @method reset\n   * @chainable\n   */\n  reset: function()\n  {\n    /**\n     * An array of the values in this map.\n     *\n     * @property {Array} values\n     */\n    this.values = [];\n\n    /**\n     * An array of the keys in this map.\n     *\n     * @property {Array} keys\n     */\n    this.keys = [];\n\n    /**\n     * An object of key to index mappings.\n     *\n     * @property {Object} indices\n     */\n    this.indices = {};\n\n    return this;\n  },\n\n  /**\n   * Puts the value in the map by the given key.\n   *\n   * @method put\n   * @param {String} key\n   * @param {V} value\n   * @chainable\n   */\n  put: function(key, value)\n  {\n    if ( key in this.indices )\n    {\n      this.values[ this.indices[ key ] ] = value;\n    }\n    else\n    {\n      this.indices[ key ] = this.values.length;\n      this.values.push( value );\n      this.keys.push( key );\n    }\n\n    return this;\n  },\n\n  /**\n   * Changes the given key to another.\n   *\n   * @method rekey\n   * @param {String} fromKey\n   * @param {String} toKey\n   * @chainable\n   */\n  rekey: function(fromKey, toKey)\n  {\n    if ( fromKey in this.indices )\n    {\n      var index = this.indices[ fromKey ];\n      this.keys[ index ] = toKey;\n      this.indices[ toKey ] = index;\n      delete this.indices[ fromKey ];\n    }\n\n    return this;\n  },\n\n  /**\n   * Puts all keys & values on the given map into this map overwriting any existing values mapped by similar keys.\n   *\n   * @method putMap\n   * @param {FastMap} map\n   * @chainable\n   */\n  putMap: function(map)\n  {\n    var keys = map.keys;\n    var values = map.values;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      this.put( keys[ i ], values[ i ] );\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns the value mapped by the given key.\n   *\n   * @method get\n   * @param {String} key\n   * @return {V}\n   */\n  get: function(key)\n  {\n    return this.values[ this.indices[ key ] ];\n  },\n\n  /**\n   * Removes the value by a given key\n   *\n   * @method remove\n   * @param {String} key\n   * @chainable\n   */\n  remove: function(key)\n  {\n    var index = this.indices[ key ];\n\n    if ( isNumber( index ) )\n    {\n      this.removeAt( index );\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes the value & key at the given index.\n   *\n   * @method removeAt\n   * @param {Number} index\n   * @chainable\n   */\n  removeAt: function(index)\n  {\n    var key = this.keys[ index ];\n    var lastValue = this.values.pop();\n    var lastKey = this.keys.pop();\n\n    if ( index < this.values.length )\n    {\n      this.values[ index ] = lastValue;\n      this.keys[ index ] = lastKey;\n      this.indices[ lastKey ] = index;\n    }\n\n    delete this.indices[ key ];\n\n    return this;\n  },\n\n  /**\n   * Returns the index of the value in the array given a key.\n   *\n   * @method indexOf\n   * @param {String} key\n   * @return {Number}\n   */\n  indexOf: function(key)\n  {\n    return coalesce( this.indices[ key ], -1 );\n  },\n\n  /**\n   * Returns whether this map has a value for the given key.\n   *\n   * @method has\n   * @param {String} key\n   * @return {Boolean}\n   */\n  has: function(key)\n  {\n    return key in this.indices;\n  },\n\n  /**\n   * Returns whether the given input has overlap with keys in this map.\n   *\n   * @method hasOverlap\n   * @param {FastMap|Object} map\n   * @return {Boolean}\n   */\n  hasOverlap: function(map)\n  {\n    var keys = this.keys;\n    var indices = map.indices;\n\n    for (var i = 0; i < keys.length; i++)\n    {\n      if ( keys[i] in indices )\n      {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * Returns the number of elements in the map.\n   *\n   * @method size\n   * @return {Number}\n   */\n  size: function()\n  {\n    return this.values.length;\n  },\n\n  /**\n   * Clears all keys & values from the map.\n   *\n   * @method clear\n   * @chainable\n   */\n  clear: function()\n  {\n    this.values.length = 0;\n    this.keys.length = 0;\n    this.indices = {};\n\n    return this;\n  }\n\n});\n\n\n/**\n * Instantiates a new Oncer which extends Attrimator.\n *\n * @param {String} attribute\n * @param {T} value\n * @param {String|Number} delay\n * @param {Boolean} hasInitialState\n * @param {Builder} builder\n * @param {Attrimator} next\n * @class Oncer\n * @constructor\n * @extends Attrimator\n */\nfunction Oncer( attribute, value, delay, hasInitialState, builder, next, input )\n{\n  this.reset( attribute, builder, next );\n\n  /**\n   * The value that's set to the animator once.\n   *\n   * @property {T} value\n   */\n  this.value = value;\n\n  /**\n   * Whether or not this event has an initial value which can be applied at the\n   * start of the animation (or when\n   * {{#crossLink \"Animator/applyInitialState:method\"}}{{/crossLink}} is invoked).\n   *\n   * @property {Boolean} hasInitialState\n   */\n  this.hasInitialState  = coalesce( hasInitialState, true );\n\n  this.delay            = $delay( delay );\n  this.applied          = false;\n  this.input            = input;\n}\n\nClass.extend( Oncer, Attrimator,\n{\n  /**\n   * Computes the value of this Oncer.\n   *\n   * @method getValue\n   * @return {T}\n   */\n  getValue: function()\n  {\n    return isFunction( this.value ) ? this.value() : this.value;\n  },\n\n  finish: function(frame)\n  {\n    var update = !this.applied;\n\n    if ( update )\n    {\n      frame[ this.attribute ] = this.getValue();\n\n      this.applied = true;\n    }\n\n    return update;\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    this.value = animator.getAttribute( this.attribute ).parse( this.value );\n\n    if ( isComputed( this.value ) )\n    {\n      this.value = this.value( this, animator );\n    }\n\n    this.applied = false;\n  },\n\n  startCycle: function(frame)\n  {\n    return this.hasInitialState && this.finish( frame );\n  },\n\n  update: function(elapsed, frame)\n  {\n    return elapsed >= this.delay && this.finish( frame );\n  },\n\n  valueAt: function(time, out)\n  {\n    if ( time < this.delay )\n    {\n      return false;\n    }\n\n    return this.getValue();\n  },\n\n  totalTime: function()\n  {\n    return Math.min( this.stopTime, this.delay );\n  },\n\n  clone: function()\n  {\n    return new Oncer( this.attribute, this.value, this.delay, this.hasInitialState, this.builder, this.next ? this.next.clone() : null );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.value );\n  },\n\n  isInfinite: function()\n  {\n    return false;\n  },\n\n  isFinished: function()\n  {\n    return this.applied;\n  }\n  \n});\n\n\n/**\n * Path class computes a value given a delta value [0, 1].\n *\n * @class Path\n * @constructor\n */\nfunction Path()\n{\n}\n\nClass.define( Path,\n{\n\n  /**\n   * Resets the path with the given name, calculator, and points.\n   *\n   * @method reset\n   * @param {String|false} name\n   * @param {anim8.Calculator} calculator\n   * @param {Array} points\n   */\n  reset: function(calculator, points)\n  {\n    this.calculator = $calculator( calculator );\n    this.points = points;\n    this.computed = this.hasComputed();\n    this.deterministic = this.isDeterministic();\n  },\n\n  /**\n   * Computes a value at the given delta setting and returning out.\n   *\n   * @method compute\n   * @param {T} out\n   * @param {Number} delta\n   * @return {T}\n   */\n  compute: function(out, delta)\n  {\n    throw 'Path.compute not implemented';\n  },\n\n  /**\n   * Determines if this path has at least one computed value.\n   *\n   * **See:** {{#crossLink \"anim8.computed\"}}{{/crossLink}}\n   *\n   * @method hasComputed\n   * @return {Boolean}\n   */\n  hasComputed: function()\n  {\n    return this.examinePoints( isComputed, true, false );\n  },\n\n  /**\n   * Determines if this path has at least one computed value.\n   *\n   * **See:** {{#crossLink \"anim8.computed\"}}{{/crossLink}}\n   *\n   * @method isDeterministic\n   * @return {Boolean}\n   */\n  isDeterministic: function()\n  {\n    return this.examinePoints( isFunction, false, true );\n  },\n\n  /**\n   * Examines the points in the path by passing each point to the examiner\n   * function. If the examiner function returns true then `returnOnTrue` true\n   * is returned immediately, otherwise `returnOnFalse` is returned.\n   *\n   * @method examinePoints\n   * @param {Function} examiner\n   * @param {Any} returnOnTrue\n   * @param {Any} returnOnFalse\n   * @return {Any}\n   */\n  examinePoints: function(examiner, returnOnTrue, returnOnFalse)\n  {\n    var ps = this.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( examiner( ps[ i ] ) )\n      {\n        return returnOnTrue;\n      }\n    }\n\n    return returnOnFalse;\n  },\n\n  /**\n   * Replaces any computed values in this path with the result from invoking\n   * the function and returns a clone of this path.\n   *\n   * @method replaceComputed\n   * @return {anim8.Path}\n   */\n  replaceComputed: function(event, animator)\n  {\n    var clone = this.copy();\n    var ps = clone.points;\n\n    for (var i = 0; i < ps.length; i++)\n    {\n      if ( isComputed( ps[i] ) )\n      {\n        ps[i] = ps[i]( event, animator );\n      }\n    }\n\n    return clone;\n  },\n\n  /**\n   * Resolves and returns the point at the given index.\n   *\n   * @method resolvePoint\n   * @param {Number} i\n   * @return {T}\n   */\n  resolvePoint: function(i)\n  {\n    return resolve( this.points[ i ] );\n  },\n\n  /**\n   * Returns whether the path is linear. Linear paths go directly from point to\n   * point where curved paths do not. Linear paths can have their length\n   * calculated fairly easily however curves you must compute length with a\n   * given granularity.\n   *\n   * @method isLinear\n   * @return {Boolean}\n   */\n  isLinear: function()\n  {\n    return true;\n  },\n\n  /**\n   * Computes the length of the Path with a given granularity. Granularity is\n   * used for non-linear paths - it's the number of segments are calculated on\n   * the path where the length of the segments are summed and returned as the\n   * length.\n   *\n   * @method length\n   * @param {Number} granularity\n   * @return {Number}\n   */\n  length: function(granularity)\n  {\n    var distance = 0;\n    var calc = this.calculator;\n\n    if ( this.isLinear() )\n    {\n      var prev = this.resolvePoint( 0 );\n\n      for (var i = 1; i < this.points.length; i++)\n      {\n        var next = this.resolvePoint( i );\n\n        distance += calc.distance( prev, next );\n\n        prev = next;\n      }\n    }\n    else\n    {\n      var deltadelta = 1.0 / granularity;\n      var delta = deltadelta;\n      var prev = calc.clone( this.resolvePoint( 0 ) );\n      var temp = calc.create();\n\n      for (var i = 1; i <= granularity; i++)\n      {\n        var next = this.compute( temp, delta );\n\n        distance += calc.distance( prev, next );\n        delta += deltadelta;\n\n        temp = prev;\n        prev = next;\n      }\n    }\n\n    return distance;\n  }\n\n});\n\n\n/**\n * Animates a single attribute with a velocity and acceleration.\n *\n * @param {String} attribute\n * @param {Builder} builder\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} velocity\n * @param {T} acceleration\n * @param {Number} terminal\n * @param {Number} stopTime\n * @class Physics\n * @constructor\n * @extends Attrimator\n */\nfunction Physics( attribute, builder, calculator, position, velocity, acceleration, terminal, stopTime )\n{\n  this.reset( attribute, builder, null );\n\n  this.calculator   = calculator;\n  this.position     = position;\n  this.velocity     = velocity;\n  this.acceleration = acceleration;\n  this.terminal     = $number( terminal, Number.POSITIVE_INFINITY );\n  this.stopTime     = $time( stopTime, Number.POSITIVE_INFINITY );\n  this.finished     = false;\n}\n\nClass.extend( Physics, Attrimator,\n{\n  /**\n   * Parses a value for the animator given a default value.\n   *\n   * @method parseValue\n   * @param {anim8.Animator} animator.\n   * @param {T} value\n   * @param {T} defaultValue\n   * @return {T}\n   */\n  parseValue: function(animator, value, defaultValue)\n  {\n    var parsed = this.calculator.parse( value, defaultValue );\n\n    if ( isComputed( parsed ) )\n    {\n       parsed = parsed( this, animator );\n    }\n\n    return parsed;\n  },\n\n  /**\n   * Resolves the velocity to a value.\n   *\n   * @method resolveVelocity\n   * @return {T}\n   */\n  resolveVelocity: function()\n  {\n    return resolve( this.velocity );\n  },\n\n  /**\n   * Resolves the acceleration to a value.\n   *\n   * @method resolveAcceleration\n   * @return {T}\n   */\n  resolveAcceleration: function()\n  {\n    return resolve( this.acceleration );\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator     = calc;\n    this.position       = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.initalPosition = calc.clone( this.position );\n    this.velocity       = this.parseValue( animator, this.velocity, calc.ZERO );\n    this.acceleration   = this.parseValue( animator, this.acceleration, calc.ZERO );\n    this.temp           = calc.create();\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.position ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.acceleration );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var value = this.valueAt( elapsed, this.temp, true );\n\n    if ( value !== false )\n    {\n      frame[ this.attribute ] = this.position = value;\n\n      return true;\n    }\n\n    var calc = this.calculator;\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Physics.MAX_DT );\n    var vel = calc.copy( this.temp, this.resolveVelocity() );\n    var acc = this.resolveAcceleration();\n    var pos = this.position;\n\n    vel = calc.adds( vel, acc, dt );\n\n    if ( isFinite( this.terminal ) )\n    {\n      vel = calc.clamp( vel, 0, this.terminal );\n    }\n\n    pos = calc.adds( pos, vel, dt );\n\n    this.position = pos;\n\n    if ( !isFunction( this.velocity ) )\n    {\n      this.velocity = calc.copy( this.velocity, vel );\n    }\n\n    frame[ this.attribute ] = pos;\n\n    return true;\n  },\n\n  valueAt: function(time, out, usePosition)\n  {\n    if ( isFunction( this.velocity ) || isFunction( this.acceleration ) || this.terminal !== Number.POSITIVE_INFINITY )\n    {\n      return false;\n    }\n\n    time -= this.delay;\n    time *= 0.001;\n\n    var calc = this.calculator;\n    var value = usePosition ? calc.copy( this.position, this.initalPosition ) : calc.copy( out, this.initalPosition );\n    value = calc.adds( value, this.velocity, time );\n    value = calc.adds( value, this.acceleration, time * time );\n\n    return value;\n  },\n\n  clone: function()\n  {\n    return new Physics( this.attribute, this.builder, this.calculator, this.position, this.velocity, this.acceleration, this.terminal, this.stopTime );\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nPhysics.MAX_DT = 0.1;\n\n\n/**\n * Creates a seqeuence for the given animators offseting animations be the given\n * delay and easing.\n *\n * @param {Animators} animators\n * @param {String|Number} delay\n * @param {String|Array|Function} easing\n * @class Sequence\n * @constructor\n */\nfunction Sequence(animators, delay, easing)\n{\n  /**\n   * The animators to play a sequence of animations against.\n   *\n   * @property {Animators} animators\n   */\n  this.animators = animators;\n\n  /**\n   * The delay in milliseconds between animations.\n   *\n   * @property {Number} delay\n   */\n  this.delay = $delay( delay );\n\n  /**\n   * The easing function to use to calculate the delay offset for an animation.\n   *\n   * @property {Function} easing\n   */\n  this.easing = $easing( easing );\n}\n\nClass.define( Sequence,\n{\n  /**\n   * Returns the maximum delay for delaying generated attrimators.\n   *\n   * @method maxDelay\n   * @return {Number}\n   */\n  maxDelay: function()\n  {\n    return this.delay * (this.animators.length() - 1);\n  },\n\n  /**\n   * Creates an AttrimatorMap with the given options for the animator at the\n   * given index.\n   *\n   * @method createAttrimators\n   * @param {Animation} animation\n   * @param {Object} options\n   * @param {Number} i\n   * @return {AttrimatorMap}\n   */\n  createAttrimators: function(template, i)\n  {\n    var attrimatorMap = template.clone();\n    var attrimators = attrimatorMap.values;\n    var delta = i / (this.animators.length() - 1);\n    var delayOffset = this.easing( delta ) * this.maxDelay();\n\n    for (var k = attrimators.length - 1; k >= 0; k--)\n    {\n      attrimators[ k ].delay += delayOffset;\n    }\n\n    return attrimatorMap;\n  },\n\n  /**\n   * Reverses the sequence by reversing the underlying array of animators.\n   *\n   * @method reverse\n   * @chainable\n   */\n  reverse: function()\n  {\n    this.animators.reverse();\n\n    return this;\n  },\n\n  /**\n   * Plays the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/play:method\"}}Animator.play{{/crossLink}}\n   *\n   * @method play\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  play: function(animation, options, all, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache, this );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.playAttrimators( attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Queues the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/queue:method\"}}Animator.queue{{/crossLink}}\n   *\n   * @method queue\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  queue: function(animation, options, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache, this );\n    var sequence = this;\n    var maxRemaining = 0;\n    var remaining = [];\n\n    this.animators.each(function(animator, i)\n    {\n      remaining[i] = animator.timeRemaining();\n      maxRemaining = Math.max( maxRemaining, remaining[i] );\n    });\n\n    this.animators.each(function(animator, i)\n    {\n      var delayOffset = maxRemaining - remaining[i];\n      var attrimatorMap = sequence.createAttrimators( template, i );\n      var attrimators = attrimatorMap.values;\n\n      for (var k = attrimators.length - 1; k >= 0; k--)\n      {\n        attrimators[ k ].delay += delayOffset;\n      }\n\n      animator.newCycle( attrimatorMap );\n      animator.queueAttrimators( attrimatorMap );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Inserts the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/insert:method\"}}Animator.insert{{/crossLink}}\n   *\n   * @method insert\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  insert: function(animation, options, cache)\n  {\n    var template = $attrimatorsFor( animation, options, cache, this );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.insertAttrimators( attrimators );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Transitions into the animation across the animators in this sequence.\n   *\n   * **See:** {{#crossLink \"Core/anim8.transition:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Core/anim8.options:method\"}}{{/crossLink}},\n   *          {{#crossLink \"Animator/transition:method\"}}Animator.transition{{/crossLink}}\n   *\n   * @method transition\n   * @param {String|Array|Object} transition\n   * @param {Animation|String|Object} animation\n   * @param {String|Array|Object} [options]\n   * @param {Boolean} [all=false]\n   * @param {Boolean} [cache=false]\n   * @chainable\n   */\n  transition: function(transition, animation, options, all, cache)\n  {\n    var transition = $transition( transition );\n    var template = $attrimatorsFor( animation, options, cache, this );\n    var sequence = this;\n\n    this.animators.each(function(animator, i)\n    {\n      var attrimators = sequence.createAttrimators( template, i );\n\n      animator.newCycle( attrimators );\n      animator.transitionAttrimators( transition, attrimators, all );\n    });\n\n    return this.add();\n  },\n\n  /**\n   * Activates all animators in this sequence and returns this.\n   *\n   * **See:** {{#crossLink \"Animator/activate:method\"}}Animator.activate{{/crossLink}}\n   *\n   * @method add\n   * @chainable\n   */\n  add: function()\n  {\n    this.animators.activate();\n\n    return this;\n  }\n\n});\n\n\n/**\n * A spring has a resting point, a current position, and the velocity currently\n * enacting on the position based on the implementing classes logic.\n *\n * @class Spring\n * @constructor\n * @extends Attrimator\n */\nfunction Spring()\n{\n}\n\nClass.extend( Spring, Attrimator,\n{\n\n  /**\n   * Resets the spring's properties.\n   *\n   * @method set\n   * @param {String} attribute\n   * @param {Calculator|String} calculator\n   * @param {T|Function|true} rest\n   * @param {T|Function|true} position\n   * @param {T|Function|true} velocity\n   * @param {T|Function|true} gravity\n   * @param {Boolean} finishOnRest\n   */\n  set: function(attribute, calculator, rest, position, velocity, gravity, finishOnRest)\n  {\n    this.reset( attribute, null, null );\n\n    this.calculator   = calculator;\n    this.rest         = rest;\n    this.position     = position;\n    this.gravity      = gravity;\n    this.velocity     = velocity;\n    this.finishOnRest = finishOnRest;\n  },\n\n  /**\n   * Resolves the rest to the expected format.\n   *\n   * @method resolveRest\n   * @return {T}\n   */\n  resolveRest: function()\n  {\n    return resolve( this.rest );\n  },\n\n  /**\n   * Method that's invoked on each spring update.\n   *\n   * @method updateVelocity\n   * @param {Number} dt\n   */\n  updateVelocity: function(dt)\n  {\n    throw 'Spring.updateVelocity not implemented';\n  },\n\n  start: function(now, animator)\n  {\n    this.prestart( now );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = $calculator( coalesce( this.calculator, attribute.calculator ) );\n\n    this.calculator = calc;\n    this.rest       = this.parseValue( animator, this.rest, attribute.defaultValue );\n    this.position   = this.parseValue( animator, this.position, attribute.defaultValue );\n    this.gravity    = this.parseValue( animator, this.gravity, calc.ZERO );\n    this.velocity   = this.parseValue( animator, this.velocity, calc.ZERO );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity );\n  },\n\n  update: function(elapsed, frame)\n  {\n    var calc = this.calculator;\n\n    // the number of elapsed seconds (maxed to avoid crazy behavior with low FPS)\n    var dt = Math.min( (elapsed - this.elapsed) * 0.001, Spring.MAX_DT );\n\n    // keep track of the starting position to determine whether the position has updated.\n    var starting = calc.clone( this.position );\n\n    // call the update method which should update the position\n    this.updateVelocity( dt );\n    this.velocity = calc.adds( this.velocity, this.gravity, dt );\n    this.position = calc.adds( this.position, this.velocity, dt );\n\n    // track whether the attribute has updated so the animator knows if it needs to apply the attribute to the subject.\n    var updated = !calc.isEqual( starting, this.position, Spring.EPSILON );\n\n    if ( updated )\n    {\n      frame[ this.attribute ] = this.position;\n    }\n    else if ( this.finishOnRest && calc.isZero( this.velocity ) )\n    {\n      this.finished = true;\n    }\n\n    return updated;\n  },\n\n  finish: function(frame)\n  {\n    this.finished = true;\n\n    return true;\n  },\n\n  isFinished: function()\n  {\n    return this.finished;\n  }\n});\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nSpring.MAX_DT = 0.1;\n\n/**\n * The value used to determine whether two positions in a spring are different.\n */\nSpring.EPSILON = 0.0001;\n\n\n/**\n * @module anim8\n * @class Core\n */\n\n/**\n * Converts a subject into an animator and returns it. If the subject\n * is already an animator it's returned immediately. If the subject can't be\n * animated then false is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.factoryFor:method\"}}{{/crossLink}}\n *\n * @param {Any} subject\n * @return {Animator|false}\n * @method anim8\n */\nfunction anim8(subject)\n{\n  if ( subject instanceof Animator )\n  {\n    return subject;\n  }\n\n  var factory = $factoryFor( subject, true );\n\n  if ( factory === false )\n  {\n    return false;\n  }\n\n  return factory.animatorFor( subject );\n}\n\n/**\n * Add events to the animation cycle: begin, end, finished, starting\n */\neventize( anim8 );\n\n/**\n * Converts an array of subjects into an array of Animators.\n *\n * @param {Array} subject\n * @return {Animators}\n * @method anim8s\n */\nfunction anim8s(subjects)\n{\n  var factory = $factoryFor( subjects, true );\n  var animators = [];\n\n  if ( factory !== false )\n  {\n    factory.animatorsFor( subjects, animators );\n\n    return new Animators( animators );\n  }\n\n  if ( !isArray( subjects ) )\n  {\n    subjects = [ subjects ];\n  }\n\n  var animators = [];\n\n  for (var i = 0; i < subjects.length; i++)\n  {\n    var animator = anim8( subjects[i] );\n\n    if ( animator !== false )\n    {\n      animators.push( animator );\n    }\n  }\n\n  return new Animators( animators );\n}\n\n/**\n * Whether the animation cycle is currently running. This is true\n * when where are active animators and anim8.run is being called\n * and false otherwise.\n *\n * @property {Boolean} anim8.running\n * @readOnly\n */\nvar running = false;\n\n/**\n * Live Mode keeps the animation cycles running even when there aren't\n * Animators. For highly interactive applications enabling this may\n * take up more resources but it will result in smoother animations. When\n * the animation cycle goes from stopped to running it takes a few frames\n * to smooth out when this is false.\n *\n * @property {Boolean} anim8.live\n */\nvar live = false;\n\n/**\n * The anim8 instance for all active animators.\n *\n * @property {Animators} anim8.animating\n * @readOnly\n */\nvar animating = new Animators();\n\n\nfunction isRunning()\n{\n  return running;\n}\n\nfunction isLive()\n{\n  return live;\n}\n\nfunction setLive(newLive)\n{\n  live = newLive;\n}\n\n/**\n * Adds an animator to the list of animating if it isn't there already. If the\n * animation loop isn't currently running it's started.\n *\n * @method anim8.add\n * @param {Animator} animator\n */\nfunction activateAnimator(animator)\n{\n  pushAnimator( animator );\n\n  activate();\n}\n\nfunction pushAnimator(animator)\n{\n  if ( !animator.active )\n  {\n    animator.active = true;\n    animating.push( animator );\n  }\n}\n\nfunction activate()\n{\n  if ( !running )\n  {\n    running = true;\n\n    anim8.trigger('starting');\n\n    requestRun( run );\n  }\n}\n\n/**\n * The function to call if animations need to be done.\n *\n * @method anim8.requestRun\n * @param {Function} callback\n */\nvar requestRun = (function()\n{\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n  var requestor = global.requestAnimationFrame;\n\n  for (var x = 0; x < vendors.length && !requestor; ++x)\n  {\n    requestor = global[ vendors[x] + 'RequestAnimationFrame' ];\n  }\n\n  if (!requestor)\n  {\n    var lastTime = 0;\n\n    return function(callback)\n    {\n      var currentTime = now();\n      var timeToCall = Math.max( Defaults.pauseTime, Defaults.frameRate - (currentTime - lastTime) );\n      var id = global.setTimeout( function() { callback( currentTime + timeToCall ); }, timeToCall );\n      lastTime = currentTime + timeToCall;\n      return id;\n    };\n  }\n\n  return function(callback)\n  {\n    requestor( callback );\n  };\n\n})();\n\n/**\n * Executes an animation loop cycle which consists of four operations:\n *\n * 1. Call preupdate on all Animators\n * 2. Call update on all Animators\n * 3. Call apply on all Animators\n * 4. Remove finished Animators\n *\n * When there are no more animating the loop cycle is stopped.\n *\n * @method anim8.run\n */\nfunction run()\n{\n  anim8.trigger('begin');\n\n  var currentTime = now();\n  var active = animating.length();\n\n  // notify animators that we're about to update\n  animating.preupdate( currentTime, active );\n\n  // update animating based on the current time\n  animating.update( currentTime, active );\n\n  // apply the attributes calculated\n  animating.apply( active );\n\n  // if the animator is done remove it\n  animating.filter( animating.handleFinished );\n\n  // The loop has ended!\n  anim8.trigger('end');\n\n  // if there are animators still remaining call me again!\n  if ( animating.length() || live )\n  {\n    requestRun( run );\n  }\n  else\n  {\n    running = false;\n\n    anim8.trigger('finished');\n  }\n}\n\n/**\n * Pauses all animators.\n *\n * **See:** {{#crossLink \"Animator/pause:method\"}}{{/crossLink}}\n *\n * @method anim8.pause\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction pause(attributes)\n{\n  animating.pause( attributes );\n\n  return anim8;\n}\n\n/**\n * Resumes all animators.\n *\n * **See:** {{#crossLink \"Animator/resume:method\"}}{{/crossLink}}\n *\n * @method anim8.resume\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction resume(attributes)\n{\n  animating.resume( attributes );\n\n  return anim8;\n}\n\n/**\n * Stops all animators.\n *\n * **See:** {{#crossLink \"Animator/stop:method\"}}{{/crossLink}}\n *\n * @method anim8.stop\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction stop(attributes)\n{\n  animating.stop( attributes );\n\n  return anim8;\n}\n\n/**\n * Ends all animators.\n *\n * **See:** {{#crossLink \"Animator/end:method\"}}{{/crossLink}}\n *\n * @method anim8.end\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction end(attributes)\n{\n  animating.end( attributes );\n\n  return anim8;\n}\n\n/**\n * Finishes all animators.\n *\n * **See:** {{#crossLink \"Animator/finish:method\"}}{{/crossLink}}\n *\n * @method anim8.finish\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction finish(attributes)\n{\n  animating.finish( attributes );\n\n  return anim8;\n}\n\n/**\n * Interrupts all animators from repeating currently running animations.\n *\n * **See:** {{#crossLink \"Animator/nopeat:method\"}}{{/crossLink}}\n *\n * @method anim8.nopeat\n * @param {String|Array} attributes\n * @return {anim8}\n */\nfunction nopeat(attributes)\n{\n  animating.nopeat( attributes );\n\n  return anim8;\n}\n\n\n/**\n * Instantiates a new color given red, green, blue, and white components.\n * If a component is missed it's default value is either 255 (white) or\n * 1.0 (opaque).\n *\n * @method anim8.color\n * @for Core\n * @param {Number} [r=255]\n * @param {Number} [g=255]\n * @param {Number} [b=255]\n * @param {Number} [a=1]\n * @return {Object}\n */\nfunction Color(r, g, b, a)\n{\n  return {\n    r: coalesce( r, 255 ),\n    g: coalesce( g, 255 ),\n    b: coalesce( b, 255 ),\n    a: coalesce( a, 1.0 )\n  };\n}\n\n/**\n * The array of parsing methods to execute sequentally until a color is returned.\n */\nColor.parsers =\n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, parseInt, 255),\n          g: this.parseComponent(input.g, parseInt, 255),\n          b: this.parseComponent(input.b, parseInt, 255),\n          a: this.parseComponent(input.a, parseFloat, 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = parseFunction(t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  },\n  { /* colorname */\n    names: {\n      transparent:{r:255,g:255,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n/**\n * Parses a color from a string.\n *\n * @method anim8.color.parse\n * @for Core\n * @param {String} input\n * @return {Object|False}\n */\nColor.parse = function(input)\n{\n  var cp = Color.parsers;\n\n  for (var i = 0; i < cp.length; i++)\n  {\n    var parsed = cp[ i ].parse( input );\n\n    if (parsed !== false)\n    {\n      return parsed;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Formats a color to a string.\n *\n * @method anim8.color.format\n * @for Core\n * @param {Object} color\n * @return {String}\n */\nColor.format = function(color)\n{\n  var ca = clamp( coalesce( color.a, 1.0 ), 0, 1 );\n  var cr = Math.floor( clamp( coalesce( color.r, 255 ), 0, 255 ) );\n  var cg = Math.floor( clamp( coalesce( color.g, 255 ), 0, 255 ) );\n  var cb = Math.floor( clamp( coalesce( color.b, 255 ), 0, 255 ) );\n\n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n\n    if (r.length === 1) {\n      r = '0' + r;\n    }\n    if (g.length === 1) {\n      g = '0' + g;\n    }\n    if (b.length === 1) {\n      b = '0' + b;\n    }\n\n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n\n\n/**\n * A collection of computed functions. Computed functions are functions that\n * are invoked once at the start of an animation given the\n * {{#crossLink \"Attrimator\"}}{{/crossLink}} and\n * {{#crossLink \"Animator\"}}{{/crossLink}} and the result replaces the function.\n *\n * **See:** {{#crossLink \"anim8.computed/current:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/relative:method\"}}{{/crossLink}},\n *          {{#crossLink \"anim8.computed/random:method\"}}{{/crossLink}}\n *\n * @class anim8.computed\n */\nfunction computed(funcOrName, func)\n{\n  if ( isString( funcOrName ) && isFunction( func ) )\n  {\n    func.computed = true;\n\n    computed[ funcOrName ] = func;\n\n    return func;\n  }\n  else if ( isFunction( funcOrName ) )\n  {\n    funcOrName.computed = true;\n\n    return funcOrName;\n  }\n\n  throw funcOrName + ' and ' + func + ' are not valid parameters for creating a computed function.';\n}\n\n/**\n * Calculates and returns the current value for an\n * {{#crossLink \"Animator\"}}{{/crossLink}}. If the animator doesn't have a\n * current value the default value for the attribute is returned.\n *\n * @method current\n * @param {Attrimator} attrimator\n * @param {Animator} animator\n * @return {T}\n */\ncomputed('current', function(attrimator, animator)\n{\n  var attr = attrimator.attribute;\n  var attribute = animator.getAttribute( attr );\n\n  if ( attr in animator.frame )\n  {\n    return attribute.calculator.clone( animator.frame[ attr ] );\n  }\n  else\n  {\n    return attribute.cloneDefault();\n  }\n});\n\n/**\n * Calculates a value relative to the attribute value currently in the animator.\n * A mask can be used for mixed relative & absolute values in a single value\n * where 1 makes it relative and 0 makes it absolute.\n *\n * **Examples:**\n *\n *     anim8.computed.relative( 40 ); // returns function which adds 40 to current value\n *     anim8.computed.relative( 40, 0.5 ); // returns function which adds 40 to half of the current value\n *     anim8.computed.relative( {x: 20, y: 10}, {x: 1, y: 0} ); // returns function which adds 20 to the x of the current value and sets the y of the current value to 10\n *\n * @method relative\n * @param {T} relativeAmount\n * @param {T} mask\n * @return {Function}\n */\ncomputed('relative', function(relativeAmount, mask)\n{\n  // If the relativeAmount is already a computed value, return it.\n  if ( isComputed( relativeAmount ) )\n  {\n    return relativeAmount;\n  }\n\n  var relativeFunction = function(attrimator, animator)\n  {\n    var attr = attrimator.attribute;\n    var attribute = animator.getAttribute( attr );\n    var calc = attribute.calculator;\n    var current = null;\n\n    if ( attr in animator.frame )\n    {\n      current = calc.clone( animator.frame[ attr ] );\n    }\n    else\n    {\n      current = attribute.cloneDefault();\n    }\n\n    if ( mask )\n    {\n      current = calc.mul( current, mask );\n    }\n\n    return calc.add( current, relativeAmount );\n  };\n\n  // Marks the function as computed which is a signal to paths & events.\n  relativeFunction.computed = true;\n\n  // Place the input on the function if the user wants to modify it live\n  relativeFunction.relativeAmount = relativeAmount;\n  relativeFunction.mask = mask;\n\n  return relativeFunction;\n});\n\nfunction isRelative(x)\n{\n  return isString( x ) && /^[+-]\\d*\\.?\\d+$/.test( x );\n}\n\n/**\n * Returns a random value based on the given random selection.\n *\n * 1. If an array is given an item is randomly chosen from that array.\n * 2. If an instance of {{#crossLink \"Path\"}}{{/crossLink}} is given a point is randomly computed and returned.\n * 3. If an object with min & max values is given a random value between them is returned.\n *\n * **Examples:**\n *\n *     anim8.computed.random( [1, 2, 3] ); // returns function which returns a 1, 2, or 3\n *     anim8.computed.random( {min: 1, max: 5} ); // returns function which returns a value between 1 and 5\n *     anim8.computed.random( {min: {x: 0, y: 0}, max: {x: 100, y: 200}} ); // returns function which returns a point in the rectangle {0,0,100,200}\n *     anim8.computed.random( path ); // returns function which returns a value anywhere along the given path\n *\n * @method random\n * @param  {Array|Object|Path} randomSelection\n * @return {Function}\n */\ncomputed('random', function(randomSelection)\n{\n  var randomFunction = null;\n\n  if ( isArray( randomSelection ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var selected = randomSelection[ Math.floor( Math.random() * randomSelection.length ) ];\n\n      return calc.parse( selected, calc.ZERO );\n    };\n  }\n  else if ( randomSelection instanceof Path )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n\n      return randomSelection.compute( calc.create(), Math.random() );\n    };\n  }\n  else if ( isObject( randomSelection ) && isDefined( randomSelection.min ) && isDefined( randomSelection.max ) )\n  {\n    randomFunction = function(attrimator, animator)\n    {\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calc = attribute.calculator;\n      var resolvedMin = resolve( randomSelection.min );\n      var resolvedMax = resolve( randomSelection.max );\n      var min = calc.parse( resolvedMin, calc.ZERO );\n      var max = calc.parse( resolvedMax, calc.ZERO );\n\n      return calc.random( calc.create(), min, max );\n    };\n  }\n  else\n  {\n    throw 'Invalid random input: ' + randomSelection;\n  }\n\n  // Place the input on the function if the user wants to modify it live\n  randomFunction.randomSelection = randomSelection;\n\n  return computed( randomFunction );\n});\n\n/**\n * Returns a computed function which builds a value for the given calculator\n * given an array of data points.\n *\n * **Examples:**\n *\n *     anim8.computed.combined( [1, 2, 3] ); // returns function which returns a 1, 2, or 3\n *\n * @method combined\n * @param  {Array} numbers\n * @return {Function}\n */\ncomputed('combined', function(numbers)\n{\n  var numberCalculator = $calculator('number');\n\n  var combinerFunction = function(attrimator, animator)\n  {\n    var attribute = animator.getAttribute( attrimator.attribute );\n    var combined = [];\n\n    for (var i = 0; i < numbers.length; i++)\n    {\n      combined.push( resolveComputed( attrimator, animator, numbers[ i ], numberCalculator ) );\n    }\n\n    return attribute.parse( combined );\n  };\n\n  // Place the input on the function if the user wants to modify it live\n  combinerFunction.numbers = numbers;\n\n  return computed( combinerFunction );\n});\n\n/**\n * Determines whether the given value is a computed value. A computed value is\n * function with a variable 'computed' set to a true value.\n *\n * @param  {any} x\n * @return {Boolean}\n */\nfunction isComputed(x)\n{\n  return isFunction( x ) && x.computed;\n}\n\nfunction resolveComputed(attrimator, animator, value, parser)\n{\n  if ( parser instanceof Calculator )\n  {\n    value = parser.parse( value );\n  }\n  else if ( isFunction( parser ) )\n  {\n    value = parser( attrimator, animator, value );\n  }\n\n  if ( isComputed( value ) )\n  {\n    return value( attrimator, animator );\n  }\n\n  return resolve( value );\n}\n\n\n/**\n * Creates a function which calls a method on all elements in the array or on\n * the first element.\n *\n * @method delegate\n * @param {String} functionName\n * @param {String} returning\n */\nfunction delegate(functionName, returning)\n{\n  switch (returning)\n  {\n  case DelegateTypes.THIS:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        array[i][functionName].apply( array[i], arguments );\n      }\n\n      return this;\n    };\n\n  case DelegateTypes.RESULTS:\n    return function()\n    {\n      var array = this.$ || this;\n      var results = [];\n\n      for (var i = 0; i < array.length; i++)\n      {\n        results.push( array[i][functionName].apply( array[i], arguments ) );\n      }\n\n      return results;\n    };\n\n  case DelegateTypes.FIRST:\n    return function()\n    {\n      var array = this.$ || this;\n\n      return array.length === 0 ? undefined : array[0][functionName].apply( array[0], arguments );\n    };\n\n  case DelegateTypes.TRUE:\n    return function()\n    {\n      var array = this.$ || this;\n\n      for (var i = 0; i < array.length; i++)\n      {\n        if ( array[i][functionName].apply( array[i], arguments ) )\n        {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n  }\n\n  return noop;\n}\n\n\n/**\n * Creates a composite dyanmic attribute which is an object of existing\n * attributes which takes advantage of an object based calculator.\n *\n * **Example:**\n *\n *     anim8.object.attribute.topLeft = {\n *       dynamic: anim8.composite({x:'left', y:'top'}),\n *       calculator:'2d',\n *       defaultValue: {x: 0, y: 0},\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'topLeft' being placed in left and top.\n *\n * @method anim8.composite\n * @param  {Object} map\n * @for Core\n * @return {Function}\n */\nfunction composite( map )\n{\n  return function( value, frame )\n  {\n    for ( var prop in map )\n    {\n      frame[ map[ prop ] ] = value[ prop ];\n    }\n  };\n}\n\n/**\n * Creates a partial dynamic attribute which is a value that's placed in a\n * sub-property of an attribute.\n *\n * **Example:**\n *\n *     anim8.object.attribute.x = {\n *       dynamic: anim8.partial( 'position', 'x' ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the values in 'x' being placed in position.x\n *\n * @method anim8.partial\n * @param {String} attribute\n * @param {String} subattribute\n * @for Core\n * @return {Function}\n */\nfunction partial( attribute, subattribute )\n{\n  return function( value, frame )\n  {\n    if ( !isObject( frame[ attribute ] ) )\n    {\n      frame[ attribute ] = {};\n    }\n\n    frame[ attribute ][ subattribute ] = value;\n  };\n}\n\n/**\n * Creates a dynamic attribute which spreads its value over several attributes.\n *\n * **Example:**\n *\n *     anim8.dom.attribute.padding = {\n *       dynamic: anim8.spread( ['paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom' ] ),\n *       calculator: 'number',\n *       defaultValue: 0,\n *       defaultUnit: 'px'\n *     };\n *\n * Which results in the value in 'padding' being placed in paddingLeft, paddingTop,\n * paddingRight, and paddingBottom.\n *\n * @param  {Array} attributes\n * @return {Function}\n */\nfunction spread( attributes )\n{\n  return function( value, frame )\n  {\n    for ( var i = 0; i < attributes.length; i++ )\n    {\n      frame[ attributes[ i ] ] = value;\n    }\n  };\n}\n\n\n\n\n/**\n * Adds functions to the given object (or prototype) so you can listen for any\n * number of events on the given object, optionally once. Listeners can be\n * removed later.\n *\n * The following methods will be added to the given target:\n *\n *     target.on( events, callback, [context] )\n *     target.once( events, callback, [context] )\n *     target.off( events, callback )\n *     target.trigger( event, [argument] )\n *\n * Where...\n * - `events` is a string of space delimited events.\n * - `callback` is a function to invoke when the event is triggered.\n * - `context` is an object that should be the `this` when the callback is\n *   invoked. If no context is given the default value is the object which has\n *   the trigger function that was invoked.\n *\n * @method eventize\n * @for Core\n * @param {Object} target The object to add `on`, `once`, `off`, and `trigger`\n *    functions to.\n */\nfunction eventize(target)\n{\n  Class.defineProperty( target, 'on', on );\n  Class.defineProperty( target, 'once', once );\n  Class.defineProperty( target, 'off', off );\n  Class.defineProperty( target, 'trigger', trigger );\n}\n\n  // Adds a listener to $this\nfunction addListener($this, property, events, callback, context)\n{\n  var events = toArray( events, ' ' );\n\n  if ( !isDefined( $this[ property ] ) )\n  {\n    Class.defineProperty( $this, property, {} );\n  }\n\n  for (var i = 0; i < events.length; i++)\n  {\n    if ( !isDefined( $this[ property ][ events[i] ] ) )\n    {\n      $this[ property ][ events[i] ] = [];\n    }\n\n    $this[ property ][ events[i] ].push( [ callback, context || $this ] );\n  }\n}\n\n// Removes a listener from an array of listeners.\nfunction removeListeners(listeners, event, callback)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n\n    for (var k = eventListeners.length - 1; k >= 0; k--)\n    {\n      if (eventListeners[ k ][0] === callback)\n      {\n        eventListeners.splice( k, 1 );\n      }\n    }\n  }\n}\n\n// Deletes a property from the given object if it exists\nfunction deleteProperty(obj, prop)\n{\n  if ( obj && prop in obj )\n  {\n    delete obj[ prop ];\n  }\n}\n\n// Triggers listeneers for the given event\nfunction triggerListeners(listeners, event, argument, clear)\n{\n  if (listeners && event in listeners)\n  {\n    var eventListeners = listeners[ event ];\n    var max = eventListeners.length;\n\n    for (var i = 0; i < max; i++)\n    {\n      var callback = eventListeners[ i ];\n\n      callback[0].call( callback[1], argument );\n    }\n\n    if ( clear )\n    {\n      if ( eventListeners.length !== max )\n      {\n        listeners[ event ] = eventListeners.slice( max );\n      }\n      else\n      {\n        delete listeners[ event ];\n      }\n    }\n  }\n}\n\n/**\n * Listens for every occurrence of the given events and invokes the callback\n * each time any of them are triggered.\n *\n * @method on\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction on(events, callback, context)\n{\n  addListener( this, '$on', events, callback, context );\n\n  return this;\n}\n\n/**\n * Listens for the next occurrence for each of the given events and invokes\n * the callback when any of the events are triggered.\n *\n * @method once\n * @for eventize\n * @param {String|Array|Object} events\n * @param {Function} callback\n * @param {Object} [context]\n * @chainable\n */\nfunction once(events, callback, context)\n{\n  addListener( this, '$once', events, callback, context );\n\n  return this;\n}\n\n/**\n * Stops listening for a given callback for a given set of events.\n *\n * **Examples:**\n *\n *     target.off();           // remove all listeners\n *     target.off('a b');      // remove all listeners on events a & b\n *     target.off(['a', 'b']); // remove all listeners on events a & b\n *     target.off('a', x);     // remove listener x from event a\n *\n * @method off\n * @for eventize\n * @param {String|Array|Object} [events]\n * @param {Function} [callback]\n * @chainable\n */\nfunction off(events, callback)\n{\n  // Remove ALL listeners\n  if ( !isDefined( events ) )\n  {\n    delete this.$on;\n    delete this.$once;\n  }\n  else\n  {\n    var events = toArray( events, ' ' );\n\n    // Remove listeners for given events\n    if ( !isFunction( callback ) )\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        deleteProperty( this.$on, events[i] );\n        deleteProperty( this.$once, events[i] );\n      }\n    }\n    // Remove specific listener\n    else\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        removeListeners( this.$on, events[i], callback );\n        removeListeners( this.$once, events[i], callback );\n      }\n    }\n  }\n\n  return this;\n}\n\n/**\n * Triggers a single event optionally passing an argument to any listeners.\n *\n * @method trigger\n * @for eventize\n * @param {String} event\n * @param {Any} argument\n * @chainable\n */\nfunction trigger(event, argument)\n{\n  triggerListeners( this.$on, event, argument, false );\n  triggerListeners( this.$once, event, argument, true );\n\n  return this;\n}\n\n\nfunction gcd(a,b)\n{\n  if (a < 0)\n  {\n    a = -a;\n  }\n  if (b < 0)\n  {\n    b = -b;\n  }\n  if (b > a)\n  {\n    var temp = a;\n    a = b;\n    b = temp;\n  }\n\n  while (true)\n  {\n    if (b === 0)\n    {\n      return a;\n    }\n\n    a %= b;\n\n    if (a === 0)\n    {\n      return b;\n    }\n\n    b %= a;\n  }\n}\n\nfunction choose(n, m)\n{\n  var num = 1, den = 1, g;\n\n  if ( m > (n / 2) )\n  {\n    m = n - m;\n  }\n\n  while ( m >= 1 )\n  {\n    num *= n--;\n    den *= m--;\n    g = gcd( num, den );\n    num /= g;\n    den /= g;\n  }\n\n  return num;\n}\n\n/**\n * Returns a value between the given minimum and maximum.\n *\n * **Examples:**\n *\n *     anim8.clamp( 5, 1, 6 );   // 5\n *     anim8.clamp( 0, 1, 6 );   // 1\n *     anim8.clamp( 7, 1, 6 );   // 6\n *\n * @method anim8.clamp\n * @param  {Number} v\n * @param  {Number} min\n * @param  {Number} max\n * @return {Number}\n */\nfunction clamp(v, min, max)\n{\n  return (v < min) ? min : (v > max ? max : v);\n}\n\nfunction clamper(min, max)\n{\n  return function(v)\n  {\n    return clamp( v, min, max );\n  };\n}\n\nvar RADIANS_TO_DEGREES = 180 / Math.PI;\nvar DEGREES_TO_RADIANS = Math.PI / 180;\n\nfunction toDegrees(radians)\n{\n  return radians * RADIANS_TO_DEGREES;\n}\n\nfunction toRadians(degrees)\n{\n  return degrees * DEGREES_TO_RADIANS;\n}\n\nfunction modder(divisor)\n{\n  return function(v)\n  {\n    return v % divisor;\n  };\n}\n\n\nfunction param(paramName, paramCalculator, paramDefaultValue)\n{\n  var getCalculator, parseValue;\n\n  if ( paramCalculator )\n  {\n    var calculator = $calculator( paramCalculator );\n    var defaultValue = calculator.parse( paramDefaultValue );\n\n    getCalculator = function(attrimator, animator)\n    {\n      return calculator;\n    };\n    parseValue = function(attrimator, animator, value)\n    {\n      return calculator.parse( value, defaultValue, true );\n    };\n  }\n  else\n  {\n    getCalculator = function(attrimator, animator)\n    {\n      return animator.getAttribute( attrimator.attribute ).calculator;\n    };\n    parseValue = function(attrimator, animator, value)\n    {\n      return animator.getAttribute( attrimator.attribute ).parse( value, true );\n    };\n  }\n\n  return paramFactory(getCalculator, parseValue, function(attrimator, animator)\n  {\n    return resolveComputed( attrimator, animator, attrimator.parameters[ paramName ], parseValue );\n  });\n}\n\nfunction paramFactory(getCalculator, parseValue, computer)\n{\n  extend( computer, Parameters );\n\n  computer.getCalculator = getCalculator;\n  computer.parseValue = parseValue;\n\n  return computed( computer );\n}\n\nfunction paramCalculator(parent, handleCalculation, newCalculator)\n{\n  var getCalculator = parent.getCalculator;\n  var parseValue = parent.parseValue;\n\n  if ( newCalculator )\n  {\n    newCalculator = $calculator( newCalculator );\n\n    getCalculator = function(attrimator, animator)\n    {\n      return newCalculator;\n    };\n\n    parseValue = function(attrimator, animator, value)\n    {\n      return newCalculator.parse( value, undefined, true );\n    };\n  }\n\n  return paramFactory(getCalculator, parseValue, function(attrimator, animator)\n  {\n    var calc = getCalculator( attrimator, animator );\n\n    return handleCalculation( attrimator, animator, parent, calc );\n  });\n}\n\nvar Parameters =\n{\n  add: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = resolveComputed( attrimator, animator, value, parent.parseValue );\n\n      return calc.add( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  sub: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = resolveComputed( attrimator, animator, value, parent.parseValue );\n\n      return calc.sub( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  mul: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = resolveComputed( attrimator, animator, value, parent.parseValue );\n\n      return calc.mul( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  div: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = resolveComputed( attrimator, animator, value, parent.parseValue );\n\n      return calc.div( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  scale: function(scalar)\n  {\n    var calcScalar = $calculator('number');\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var scalarResolve = resolveComputed( attrimator, animator, scalar, calcScalar );\n\n      return calc.scale( out, scalarResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  adds: function(value, scalar)\n  {\n    var calcScalar = $calculator('number');\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = resolveComputed( attrimator, animator, value, parent.parseValue );\n      var scalarResolve = resolveComputed( attrimator, animator, scalar, calcScalar );\n\n      return calc.adds( out, valueResolve, scalarResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  neg: function()\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return calc.scale( out, -1 );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  min: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = resolveComputed( attrimator, animator, value, parent.parseValue );\n\n      return calc.min( out, out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  max: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = resolveComputed( attrimator, animator, value, parent.parseValue );\n\n      return calc.max( out, out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  truncate: function(denominator)\n  {\n    var calcDenominator = $calculator('number');\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var denominatorResolve = resolveComputed( attrimator, animator, denominator, calcDenominator );\n\n      return Math.floor( out * denominatorResolve ) / denominatorResolve;\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  mod: function(divisor)\n  {\n    var calcDivisor = $calculator('number');\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var divisorResolve = resolveComputed( attrimator, animator, divisor, calcDivisor );\n\n      return calc.convert( out, modder( divisor ) );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  clamp: function(min, max)\n  {\n    var calcClamp = $calculator('number');\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var minResolve = resolveComputed( attrimator, animator, min, calcClamp );\n      var maxResolve = resolveComputed( attrimator, animator, max, calcClamp );\n\n      return calc.convert( out, clamper( minResolve, maxResolve ) );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  convert: function(converter)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return calc.convert( out, converter );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  },\n\n  abs: function()\n  {\n    return this.convert( Math.abs );\n  },\n\n  sqrt: function()\n  {\n    return this.convert( Math.sqrt );\n  },\n\n  floor: function()\n  {\n    return this.convert( Math.floor );\n  },\n\n  ceil: function()\n  {\n    return this.convert( Math.ceil );\n  },\n\n  round: function()\n  {\n    return this.convert( Math.round );\n  },\n\n  toDegrees: function()\n  {\n    return this.convert( toDegrees );\n  },\n\n  toRadians: function()\n  {\n    return this.convert( toRadians );\n  },\n\n  cos: function()\n  {\n    return this.convert( Math.cos );\n  },\n\n  sin: function()\n  {\n    return this.convert( Math.sin );\n  },\n\n  tan: function()\n  {\n    return this.convert( Math.tan );\n  },\n\n  cosDegrees: function()\n  {\n    return this.toRadians().cos();\n  },\n\n  sinDegrees: function()\n  {\n    return this.toRadians().sin();\n  },\n\n  tanDegrees: function()\n  {\n    return this.toRadians().tan();\n  },\n\n  distance: function(value)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n      var valueResolve = resolveComputed( attrimator, animator, value, parent.parseValue );\n\n      return calc.distance( out, valueResolve );\n    };\n\n    return paramCalculator( this, handleCalculation, 'number' );\n  },\n\n  property: function(propertyName, defaultValue)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return isObject( out ) ? out[ propertyName ] : defaultValue;\n    };\n\n    return paramCalculator( this, handleCalculation, 'number' );\n  },\n\n  vector: function(calculator)\n  {\n    var vectorCalculator = coalesce( calculator, '2d' );\n\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var angle = parent( attrimator, animator );\n\n      switch (vectorCalculator) {\n        case '2d':\n          return {\n            x: Math.cos( angle ),\n            y: Math.sin( angle )\n          };\n        case '3d':\n          var yaw = angle.x;\n          var pitch = angle.y;\n          return {\n            x: Math.cos( yaw ) * Math.cos( pitch ),\n            y: Math.sin( yaw ) * Math.cos( pitch ),\n            z: Math.sin( pitch )\n          };\n      }\n\n      return angle;\n    };\n\n    return paramCalculator( this, handleCalculation, vectorCalculator );\n  },\n\n  vectorDegrees: function(type)\n  {\n    return this.toRadians().vector( type );\n  },\n\n  relative: function(mask)\n  {\n    var handleCalculation = function(attrimator, animator, parent, calc)\n    {\n      var out = parent( attrimator, animator );\n\n      return computed.relative( out, mask )( attrimator, animator );\n    };\n\n    return paramCalculator( this, handleCalculation );\n  }\n\n};\n\n\nvar Animations = {};\n\n/**\n * Options to modify the properties of the animations being saved.\n */\nvar SaveOptions =\n{\n  prefix: '',\n  options: {},\n  cache: false,\n  forObject: null\n};\n\n/**\n * Saves an animation under the given name. It can be played, queued, and\n * transitioned into at a later time providing the name and optionally options\n * to override with.\n *\n * **See:** {{#crossLink \"Core/anim8.animation:method\"}}anim8.animation{{/crossLink}},\n *          {{#crossLink \"Core/anim8.options:method\"}}anim8.options{{/crossLink}}\n *\n * @method anim8.save\n * @for Core\n * @param {String} name\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n */\nfunction save( name, animation, options )\n{\n  var animation = $animation( animation, coalesce( options, SaveOptions.options ), SaveOptions.cache, SaveOptions.forObject );\n  var qualifiedName = SaveOptions.prefix + name;\n  var key = qualifiedName.toLowerCase();\n\n  animation.name = qualifiedName;\n\n  Animations[ key ] = animation;\n}\n\n/**\n * Starts a save group with a prefix or an object containing a prefix and/or\n * default options to pass to the animations. The animations passed can be\n * an object or a function to call which contains save calls.\n *\n * @method anim8.saveGroup\n * @param {String|Object} prefixOrOptions\n * @param {Function|Object} animations\n */\nfunction saveGroup( prefixOrOptions, animations )\n{\n  var previousOptions = copy( SaveOptions );\n\n  if ( isString( prefixOrOptions ) )\n  {\n    SaveOptions.prefix += prefixOrOptions;\n  }\n  else if ( isObject( prefixOrOptions ) )\n  {\n    if ( isString( prefixOrOptions.prefix ) )\n    {\n      SaveOptions.prefix += prefixOrOptions.prefix;\n    }\n    if ( isDefined( prefixOrOptions.cache ) )\n    {\n      SaveOptions.cache = prefixOrOptions.cache;\n    }\n    if ( isDefined( prefixOrOptions.options ) )\n    {\n      var parsedOptions = $options( prefixOrOptions.options, SaveOptions.cache );\n\n      if ( parsedOptions !== Defaults.noOptions )\n      {\n        extend( SaveOptions.options, parsedOptions );\n      }\n    }\n    if ( isDefined( prefixOrOptions.forObject ) )\n    {\n      SaveOptions.forObject = prefixOrOptions.forObject;\n    }\n    if ( isDefined( prefixOrOptions.factory ) )\n    {\n      var parsedFactory = $factory( prefixOrOptions.factory );\n\n      if ( parsedFactory )\n      {\n        SaveOptions.forObject = parsedFactory;\n      }\n    }\n  }\n\n  if ( isObject( animations ) )\n  {\n    for (var animationName in animations)\n    {\n      save( animationName, animations[ animationName ] );\n    }\n  }\n  else if ( isFunction( animations ) )\n  {\n    animations();\n  }\n\n  SaveOptions = previousOptions;\n}\n\n\nfunction translate(animation, mappings, saveAs, options, cache)\n{\n  var parsed = $animation(animation, options, cache);\n  var attrimators = parsed.newAttrimators();\n\n  for (var fromAttribute in mappings)\n  {\n    var toAttribute = mappings[ fromAttribute ];\n\n    attrimators.get( fromAttribute ).attribute = toAttribute;\n    attrimators.rekey( fromAttribute, toAttribute );\n  }\n\n  var translated = new Animation( saveAs, parsed.input, parsed.options, attrimators );\n\n  if ( isString( saveAs ) )\n  {\n    save( saveAs, translated );\n  }\n\n  return translated;\n}\n\n\n/*\n * A calculator for objects with an x and y component (number)\n *\n * @class Calculator2d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator2d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator2d, Calculator,\n{\n  aliases: {\n    'left':   0,\n    'right':  100,\n    'middle': 50,\n    'center': 50,\n    'top':    0,\n    'bottom': 100\n  },\n  parse: function(x, defaultValue, ignoreRelative)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x\n      };\n    }\n\n    // When an array is given, assume [x, y]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculator2d );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, def.x );\n      var cy = coalesce( x.y, def.y );\n      var rx = $number( cx, false );\n      var ry = $number( cy, false );\n\n      if ( rx !== false && ry !== false )\n      {\n        var parsed = { x: rx, y: ry };\n        var ix = isRelative( cx );\n        var iy = isRelative( cy );\n\n        if ( !ignoreRelative && (ix || iy) )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n\n    // Relative values & left/right/middle/center/top/bottom aliases.\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the X & Y components evenly.\n      if ( !ignoreRelative && isRelative( x ) )\n      {\n        var rx = $number( x, false );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { x: rx, y: rx } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        x: this.parseString( pair[0], def.x ),\n        y: this.parseString( coalesce(pair[1], pair[0]), def.y )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  parseString: function(x, defaultValue)\n  {\n    return x in this.aliases ? this.aliases[ x ] : $number( x, defaultValue );\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y: 0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  convert: function(out, converter)\n  {\n    out.x = converter( out.x );\n    out.y = converter( out.y );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.x = denominator.x ? out.x / denominator.x : 0;\n    out.y = denominator.y ? out.y / denominator.y : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    return dx * dx + dy * dy;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, and z component (number)\n *\n * @class Calculator3d\n * @constructor\n * @extends Calculator\n */\nfunction Calculator3d()\n{\n  this.createConstants();\n}\n\nClass.extend( Calculator3d, Calculator,\n{\n  parse: function(x, defaultValue, ignoreRelative)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When a number is given a uniform point is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: x,\n        y: x,\n        z: x\n      };\n    }\n\n    // When an array is given, assume [x, y, z]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculator3d );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, def.x );\n      var cy = coalesce( x.y, def.y );\n      var cz = coalesce( x.z, def.z );\n      var rx = $number( cx, false );\n      var ry = $number( cy, false );\n      var rz = $number( cz, false );\n\n      if ( rx !== false && ry !== false && rz !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz };\n        var ix = isRelative( cx );\n        var iy = isRelative( cy );\n        var iz = isRelative( cz );\n\n        if ( !ignoreRelative && (ix || iy || iz) )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the X, Y, & Z components evenly.\n      if ( !ignoreRelative && isRelative( x ) )\n      {\n        var rx = $number( x, false );\n\n        if ( rx !== false )\n        {\n          return computed.relative( { x: rx, y: rx, z: rx } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        x: $number( pair[0], def.x ),\n        y: $number( pair[1], def.y ),\n        z: $number( pair[2], def.z )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    return out;\n  },\n  convert: function(out, converter)\n  {\n    out.x = converter( out.x );\n    out.y = converter( out.y );\n    out.z = converter( out.z );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.x = denominator.x ? out.x / denominator.x : 0;\n    out.y = denominator.y ? out.y / denominator.y : 0;\n    out.z = denominator.z ? out.z / denominator.z : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for number primitives.\n *\n * @class CalculatorNumber\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorNumber()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorNumber, Calculator,\n{\n  parse: function(x, defaultValue, ignoreRelative)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // An array\n    if ( isArray( x ) )\n    {\n      x = x[ 0 ];\n    }\n\n    // A raw number\n    if ( isNumber( x ) )\n    {\n      return x;\n    }\n\n    // A number in a string or a relative number.\n    if ( isString( x ) )\n    {\n      var amount = $number( x, false );\n\n      if ( amount !== false )\n      {\n        if ( !ignoreRelative && isRelative( x ) )\n        {\n          return computed.relative( amount );\n        }\n        else\n        {\n          return amount;\n        }\n      }\n    }\n\n    return $number( defaultValue, Defaults.calculatorNumber );\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return 0.0;\n  },\n  zero: function(out)\n  {\n    return 0.0;\n  },\n  convert: function(out, converter)\n  {\n    return converter( out );\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale)\n  {\n    return out *= scale;\n  },\n  div: function(out, denominator)\n  {\n    return denominator ? out / denominator : 0;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return (end - start) * delta + start;\n  },\n  distanceSq: function(a, b)\n  {\n    var ab = a - b;\n    return ab * ab;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a - b );\n  },\n  length: function(a)\n  {\n    return Math.abs( a );\n  },\n  lengthSq: function(a)\n  {\n    return a * a;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'number';\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a - b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    return Math.min( a, b );\n  },\n  max: function(out, a, b)\n  {\n    return Math.max( a, b );\n  },\n  dot: function(a, b)\n  {\n    return a * b;\n  }\n});\n\n\n/**\n * A calculator for objects with an x, y, z, and angle components.\n *\n * @class CalculatorQuaternion\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorQuaternion()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorQuaternion, Calculator,\n{\n  parse: function(x, defaultValue, ignoreRelative)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When only a number is given assume it's an angle around the Z-axis.\n    if ( isNumber( x ) )\n    {\n      return {\n        x: 0,\n        y: 0,\n        z: 1,\n        angle: x\n      };\n    }\n\n    // When an array is given, assume [x, y, z, angle]\n    if ( isArray( x ) )\n    {\n      x = { x: x[0], y: x[1], z: x[2], angle: x[3] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculatorQuaternion );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cx = coalesce( x.x, def.x );\n      var cy = coalesce( x.y, def.y );\n      var cz = coalesce( x.z, def.z );\n      var ca = coalesce( x.angle, def.angle );\n      var rx = $number( cx, false );\n      var ry = $number( cy, false );\n      var rz = $number( cz, false );\n      var ra = $number( ca, false );\n\n      if ( rx !== false && ry !== false && rz !== false && ra !== false )\n      {\n        var parsed = { x: rx, y: ry, z: rz, angle: ra };\n        var ix = isRelative( cx );\n        var iy = isRelative( cy );\n        var iz = isRelative( cz );\n        var ia = isRelative( ca );\n\n        if ( !ignoreRelative && (ix || iy || iz || ia) )\n        {\n          var mask = {\n            x: ix ? 1 : 0,\n            y: iy ? 1 : 0,\n            z: iz ? 1 : 0,\n            angle: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed );\n        }\n\n        return parsed;\n      }\n    }\n\n    // When a relative value is given, assume it's for an angle around the Z-axis.\n    if ( isString( x ) )\n    {\n      if ( isRelative( x ) )\n      {\n        var rx = $number( x, false );\n\n        if ( !ignoreRelative && rx !== false )\n        {\n          return computed.relative( { x:0, y:0, z:1, angle: rx }, { x:0, y:0, z:0, angle:1 } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        x:      $number( pair[0], def.x ),\n        y:      $number( pair[1], def.y ),\n        z:      $number( pair[2], def.z ),\n        angle:  $number( pair[3], def.angle )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  copy: function(out, copy)\n  {\n    out.x = copy.x;\n    out.y = copy.y;\n    out.z = copy.z;\n    out.angle = copy.angle;\n    return out;\n  },\n  create: function()\n  {\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out)\n  {\n    out.x = 0.0;\n    out.y = 0.0;\n    out.z = 0.0;\n    out.angle = 0.0;\n    return out;\n  },\n  convert: function(out, converter)\n  {\n    out.x = converter( out.x );\n    out.y = converter( out.y );\n    out.z = converter( out.z );\n    out.angle = converter( out.angle );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    out.z += amount.z * amountScale;\n    out.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    out.angle *= scale.angle;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.x = denominator.x ? out.x / denominator.x : 0;\n    out.y = denominator.y ? out.y / denominator.y : 0;\n    out.z = denominator.z ? out.z / denominator.z : 0;\n    out.angle = denominator.angle ? out.angle / denominator.angle : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.x = (end.x - start.x) * delta + start.x;\n    out.y = (end.y - start.y) * delta + start.y;\n    out.z = (end.z - start.z) * delta + start.z;\n    out.angle = (end.angle - start.angle) * delta + start.angle;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    var da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.x) < epsilon &&\n           Math.abs(a.y) < epsilon &&\n           Math.abs(a.z) < epsilon &&\n           Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.x - b.x) < epsilon &&\n           Math.abs(a.y - b.y) < epsilon &&\n           Math.abs(a.z - b.z) < epsilon &&\n           Math.abs(a.angle - b.angle) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    out.angle = Math.min(a.angle, b.angle);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    out.angle = Math.max(a.angle, b.angle);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.x * b.x + a.y * b.y + a.z * b.z + a.angle * b.angle;\n  },\n  random: function(out, min, max)\n  {\n    out.x = (max.x - min.x) * Math.random() + min.x;\n    out.y = (max.y - min.y) * Math.random() + min.y;\n    out.z = (max.z - min.z) * Math.random() + min.z;\n    out.angle = (max.angle - min.angle) * Math.random() + min.angle;\n    return out;\n  }\n});\n\n\n\n/**\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n *\n * @class CalculatorRGB\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGB()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGB, Calculator,\n{\n  parse: function(x, defaultValue, ignoreRelative)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When a number is given a grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x\n      };\n    }\n\n    // When an array is given, assume [r, g, b]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculatorRGB );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, def.r );\n      var cg = coalesce( x.g, def.g );\n      var cb = coalesce( x.b, def.b );\n      var rr = $number( cr, false );\n      var rg = $number( cg, false );\n      var rb = $number( cb, false );\n\n      if ( rr !== false && rg !== false && rb !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb };\n        var ir = isRelative( cr );\n        var ig = isRelative( cg );\n        var ib = isRelative( cb );\n\n        if ( !ignoreRelative && (ir || ig || ib) )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the R, G, & B components.\n      if ( isRelative( x ) )\n      {\n        var rx = $number( x, false );\n\n        if ( !ignoreRelative && rx !== false )\n        {\n          return computed.relative( { r: rx, g: rx, b: rx } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        r: $number( pair[0], def.r ),\n        g: $number( pair[1], def.g ),\n        b: $number( pair[2], def.b )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  convert: function(out, converter)\n  {\n    out.r = converter( out.r );\n    out.g = converter( out.g );\n    out.b = converter( out.b );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.r = denominator.r ? out.r / denominator.r : 0;\n    out.g = denominator.g ? out.g / denominator.g : 0;\n    out.b = denominator.b ? out.b / denominator.b : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for objects with r, g, & b components\n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n *\n * @class CalculatorRGBA\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorRGBA()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorRGBA, Calculator,\n{\n  parse: function(x, defaultValue, ignoreRelative)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // When a number is given an opaque grayscale color is returned.\n    if ( isNumber( x ) )\n    {\n      return {\n        r: x,\n        g: x,\n        b: x,\n        a: 1.0\n      };\n    }\n\n    // When an array is given, assume [r, g, b, a]\n    if ( isArray( x ) )\n    {\n      x = { r: x[0], g: x[1], b: x[2], a: x[3] };\n    }\n\n    // Default when there is none given\n    var def = coalesce( defaultValue, Defaults.calculatorRGBA );\n\n    // When an object is given, check for relative values.\n    if ( isObject( x ) )\n    {\n      var cr = coalesce( x.r, def.r );\n      var cg = coalesce( x.g, def.g );\n      var cb = coalesce( x.b, def.b );\n      var ca = coalesce( x.a, def.a );\n      var rr = $number( cr, false );\n      var rg = $number( cg, false );\n      var rb = $number( cb, false );\n      var ra = $number( ca, false );\n\n      if ( rr !== false && rg !== false && rb !== false && ra !== false )\n      {\n        var parsed = { r: rr, g: rg, b: rb, a: ra };\n        var ir = isRelative( cr );\n        var ig = isRelative( cg );\n        var ib = isRelative( cb );\n        var ia = isRelative( ca );\n\n        if ( !ignoreRelative && (ir || ig || ib || ia) )\n        {\n          var mask = {\n            r: ir ? 1 : 0,\n            g: ig ? 1 : 0,\n            b: ib ? 1 : 0,\n            a: ia ? 1 : 0\n          };\n\n          return computed.relative( parsed, mask );\n        }\n\n        return parsed;\n      }\n    }\n\n    // Try to parse the color.\n    var parsed = Color.parse( x );\n\n    if ( parsed !== false )\n    {\n      return parsed;\n    }\n\n    if ( isString( x ) )\n    {\n      // If only a relative value is given it will modify the R, G, & B components.\n      if ( isRelative( x ) )\n      {\n        var rx = $number( x, false );\n\n        if ( !ignoreRelative && rx !== false )\n        {\n          return computed.relative( { r: rx, g: rx, b: rx, a: 0 } );\n        }\n      }\n\n      var pair = x.split(/[\\s,|]/);\n\n      return {\n        r: $number( pair[0], def.r ),\n        g: $number( pair[1], def.g ),\n        b: $number( pair[2], def.b ),\n        a: $number( pair[3], def.a )\n      };\n    }\n\n    // If no value was given but the default value was given, clone it.\n    return this.clone( def );\n  },\n  copy: function(out, copy)\n  {\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function()\n  {\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out)\n  {\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  convert: function(out, converter)\n  {\n    out.r = converter( out.r );\n    out.g = converter( out.g );\n    out.b = converter( out.b );\n    out.a = converter( out.a );\n    return out;\n  },\n  adds: function(out, amount, amountScale)\n  {\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale)\n  {\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  div: function(out, denominator)\n  {\n    out.r = denominator.r ? out.r / denominator.r : 0;\n    out.g = denominator.g ? out.g / denominator.g : 0;\n    out.b = denominator.b ? out.b / denominator.b : 0;\n    out.a = denominator.a ? out.a / denominator.a : 0;\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    out.r = (end.r - start.r) * delta + start.r;\n    out.g = (end.g - start.g) * delta + start.g;\n    out.b = (end.b - start.b) * delta + start.b;\n    out.a = (end.a - start.a) * delta + start.a;\n    return out;\n  },\n  distanceSq: function(a, b)\n  {\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;\n    var db = a.b - b.b;\n    var da = a.a - b.a;\n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a)\n  {\n    return isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a)\n  {\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon)\n  {\n    return Math.abs(a.r) < epsilon &&\n           Math.abs(a.g) < epsilon &&\n           Math.abs(a.b) < epsilon &&\n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return Math.abs(a.r - b.r) < epsilon &&\n           Math.abs(a.g - b.g) < epsilon &&\n           Math.abs(a.b - b.b) < epsilon &&\n           Math.abs(a.a - b.a) < epsilon;\n  },\n  min: function(out, a, b)\n  {\n    out.r = Math.min(a.r, b.r);\n    out.g = Math.min(a.g, b.g);\n    out.b = Math.min(a.b, b.b);\n    out.a = Math.min(a.a, b.a);\n    return out;\n  },\n  max: function(out, a, b)\n  {\n    out.r = Math.max(a.r, b.r);\n    out.g = Math.max(a.g, b.g);\n    out.b = Math.max(a.b, b.b);\n    out.a = Math.max(a.a, b.a);\n    return out;\n  },\n  dot: function(a, b)\n  {\n    return a.r * b.r + a.g * b.g + a.b * b.b + a.a * b.a;\n  },\n  random: function(out, min, max)\n  {\n    out.r = (max.r - min.r) * Math.random() + min.r;\n    out.g = (max.g - min.g) * Math.random() + min.g;\n    out.b = (max.b - min.b) * Math.random() + min.b;\n    out.a = (max.a - min.a) * Math.random() + min.a;\n    return out;\n  }\n});\n\n\n/**\n * A calculator for strings.\n *\n * @class CalculatorString\n * @constructor\n * @extends Calculator\n */\nfunction CalculatorString()\n{\n  this.createConstants();\n}\n\nClass.extend( CalculatorString, Calculator,\n{\n  parse: function(x, defaultValue, ignoreRelative)\n  {\n    // Values computed live.\n    if ( isFunction( x ) )\n    {\n      return x;\n    }\n\n    // Value computed from current value on animator.\n    if ( x === true )\n    {\n      return computed.current;\n    }\n\n    // An array\n    if ( isArray( x ) )\n    {\n      x = x[ 0 ];\n    }\n\n    // A raw string\n    if ( isString( x ) )\n    {\n      return x;\n    }\n\n    return coalesce( defaultValue, Defaults.calculatorString );\n  },\n  copy: function(out, copy)\n  {\n    return copy;\n  },\n  create: function()\n  {\n    return '';\n  },\n  zero: function(out)\n  {\n    return '';\n  },\n  convert: function(out, converter)\n  {\n    return converter( out );\n  },\n  adds: function(out, amount, amountScale)\n  {\n    return amount;\n  },\n  mul: function(out, scale)\n  {\n    return scale;\n  },\n  div: function(out, denominator)\n  {\n    return out;\n  },\n  interpolate: function(out, start, end, delta)\n  {\n    return delta < 0.5 ? start : end;\n  },\n  distanceSq: function(a, b)\n  {\n    var d = Math.abs( a.length - b.length );\n    return d * d;\n  },\n  distance: function(a, b)\n  {\n    return Math.abs( a.length - b.length );\n  },\n  length: function(a)\n  {\n    return a.length;\n  },\n  lengthSq: function(a)\n  {\n    return a.length * a.length;\n  },\n  isValid: function(a)\n  {\n    return typeof a === 'string';\n  },\n  isNaN: function(a)\n  {\n    return false;\n  },\n  isZero: function(a, epsilon)\n  {\n    return a.length <= epsilon;\n  },\n  isEqual: function(a, b, epsilon)\n  {\n    return a === b;\n  },\n  min: function(out, a, b)\n  {\n    return a < b ? a : b;\n  },\n  max: function(out, a, b)\n  {\n    return a > b ? a : b;\n  },\n  dot: function(a, b)\n  {\n    return a.length * b.length;\n  }\n});\n\n\n/**\n * A factory for plain objects.\n *\n * @class FactoryObject\n * @constructor\n * @extends Factory\n */\nfunction FactoryObject()\n{\n  this.priority = 0;\n  this.attributes = {};\n}\n\nClass.extend( FactoryObject, Factory,\n{\n  is: function(subject)\n  {\n    return isObject( subject ) && !isArray( subject ); /* !isElement( subject ) && */\n  },\n  animatorFor: function(subject)\n  {\n    var animator = subject.$animator;\n\n    if ( !animator )\n    {\n      animator = new Animator( subject );\n      animator.factory = this;\n\n      subject.$animator = animator;\n    }\n\n    return animator;\n  },\n  destroy: function(animator)\n  {\n    delete animator.subject.$animator;\n  },\n  attribute: function(attr)\n  {\n    var attribute = this.attributes[ attr ];\n\n    if ( !attribute )\n    {\n      attribute = this.attributes[ attr ] = object.attribute( attr );\n\n      var calculatorName = attribute.calculator;\n      var calculator = $calculator( calculatorName );\n      var defaultValue = calculator.parse( attribute.defaultValue, calculator.ZERO );\n\n      attribute.calculatorName = calculatorName;\n      attribute.calculator = calculator;\n      attribute.defaultValue = defaultValue;\n      attribute.name = attr;\n      attribute.parse = function(value, ignoreRelative) {\n        return this.calculator.parse( value, this.defaultValue, ignoreRelative );\n      };\n      attribute.cloneDefault = function() {\n        return this.calculator.clone( this.defaultValue );\n      };\n    }\n\n    return attribute;\n  }\n});\n\n/**\n * The Object namespace.\n *\n * @type {Object}\n */\nvar object = {};\n\n/**\n * Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\n * returned immediately. If the input is a string the attribute with the given name is returned. Otherwise\n * the default attribute is returned.\n *\n * @param {Object|String} attr\n * @return {Object}\n */\nobject.attribute = function(attr)\n{\n  if ( isObject( attr ) && isDefined( attr.defaultValue ) )\n  {\n    return attr;\n  }\n  if ( isString( attr ) && attr in object.attribute )\n  {\n    return object.attribute[ attr ];\n  }\n\n  return object.attribute['default'];\n};\n\n/**\n * The default attribute.\n */\nobject.attribute['default']                 = {defaultValue: 0};\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderAnd\n * @constructor\n * @extends Builder\n */\nfunction BuilderAnd()\n{\n\n}\n\nClass.extend( BuilderAnd, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var and = animation.and;\n\n    and.factory = coalesce( and.factory, animation.factory );\n\n    attrimatorMap.putMap( $attrimatorsFor( and, options, false, helper.forObject ) );\n  },\n\n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.and, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'deltas' & 'values' animation type.\n *\n * @class BuilderDeltas\n * @constructor\n * @extends Builder\n */\nfunction BuilderDeltas()\n{\n\n}\n\nClass.extend( BuilderDeltas, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. If deltas wasn't specified, assume a uniform distribution of points\n    // 2. If deltas was an array, expand out into an object where the keys are attributes and the value is the delta array\n    // 3. Generate the attrimators\n\n    var mergeId = Builder.nextMergeId();\n    var factory = $factory( animation.factory, helper.forObject );\n    var deltas = animation.deltas;\n    var values = animation.values;\n\n    if ( !isDefined( deltas ) )\n    {\n      deltas = {};\n    }\n    else if ( isArray( deltas ) )\n    {\n      var deltaObject = {};\n\n      for (var attr in values)\n      {\n        deltaObject[attr] = deltas;\n      }\n\n      deltas = deltaObject;\n    }\n\n    for (var attr in values)\n    {\n      var value = values[ attr ];\n      var valueMax = value.length - 1;\n      var delta = deltas[ attr ];\n      var attribute = factory.attribute( attr );\n\n      for (var k = 0; k <= valueMax; k++)\n      {\n        value[k] = attribute.parse( value[k] );\n      }\n\n      if ( !isArray( delta ) )\n      {\n        delta = [];\n\n        for (var i = 0; i <= valueMax; i++)\n        {\n          delta[i] = i / valueMax;\n        }\n      }\n\n      var path      = new PathDelta( attr, attribute.calculator, value, delta );\n      var event     = helper.parseEvent( attr, path, this, true );\n\n      event.mergeId = mergeId;\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'final' animation type.\n *\n * @class BuilderFinal\n * @constructor\n * @extends Builder\n */\nfunction BuilderFinal()\n{\n\n}\n\nClass.extend( BuilderFinal, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays and durations\n\n    var factory = $factory( animation.factory, helper.forObject );\n    var values = animation.final;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = $delay( helper.parseDelay( attr ) );\n      var duration   = $duration( helper.parseDuration( attr ) );\n      var event      = new Oncer( attr, value, delay + duration, false, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay ) +\n              helper.mergeDuration( attr, e.duration );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'initial' animation type.\n *\n * @class BuilderInitial\n * @constructor\n * @extends Builder\n */\nfunction BuilderInitial()\n{\n\n}\n\nClass.extend( BuilderInitial, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Generate the attrimators, only caring about the delays & scales\n\n    var factory    = $factory( animation.factory, helper.forObject );\n    var values     = animation.initial;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var delay      = helper.parseDelay( attr );\n      var oncer      = new Oncer( attr, value, delay, true, this, null, animation );\n\n      attrimatorMap.put( attr, oncer );\n    }\n  },\n  mergeAttrimator: function( e, attr, helper, factory )\n  {\n    e.delay = helper.mergeDelay( attr, e.delay );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'keyframe' animation type.\n *\n * @class BuilderKeyframe\n * @constructor\n * @extends Builder\n */\nfunction BuilderKeyframe()\n{\n\n}\n\nClass.extend( BuilderKeyframe, Builder,\n{\n  aliases: {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  },\n\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Normalize keys by converting aliases to the actual value\n    // 2. Split up keys that have commas into multiple entries\n    // 3. Validate keys and remove invalid ones - also calculate max key value\n    // 4. Sort frames by the key\n    // 5. Expand frames to generate delta arrays, value arrays, and easing arrays\n    // 6. Generate the attrimators\n\n    var factory = $factory( animation.factory, helper.forObject );\n    var kframes = animation.keyframe;\n    var easings = animation.easings || {};\n    var teasing = $easing( coalesce( options.teasing, Defaults.teasing ) );\n\n    var sort = false;\n\n    // split up comma delimited times\n    for (var time in kframes)\n    {\n      if ( time in this.aliases )\n      {\n        kframes[ this.aliases[time] ] = kframes[ time ];\n\n        delete kframes[ time ];\n      }\n      else if ( time.indexOf(',') !== -1 )\n      {\n        var times = time.split(',');\n\n        for (var i = 0; i < times.length; i++)\n        {\n          kframes[times[i]] = kframes[time];\n        }\n\n        delete kframes[time];\n\n        sort = true;\n      }\n    }\n\n    var times = [];\n\n    // validate times\n    var lastTime = 0.0;\n    var maxTime = 0.0;\n\n    for (var time in kframes)\n    {\n      var t = parseFloat(time);\n\n      if (isNaN(t))\n      {\n        delete kframes[time];\n      }\n      else\n      {\n        if (t < lastTime)\n        {\n          sort = true;\n        }\n\n        times.push({\n          order: t,\n          key: time,\n          value: kframes[time]\n        });\n\n        lastTime = t;\n\n        maxTime = Math.max( maxTime, t );\n      }\n    }\n\n    // sort if necessary\n    if (sort)\n    {\n      times.sort(function(a, b)\n      {\n        return a.order - b.order;\n      });\n\n      kframes = {};\n\n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i].key] = times[i].value;\n      }\n    }\n\n    // split up into deltas and values\n    var deltas = {};\n    var values = {};\n    var pathEasings = {};\n    var attributes = {};\n\n    for (var i = 0; i < times.length; i++)\n    {\n      var frame = times[i];\n      var easing = coalesce( frame.value.easing, options.easing );\n\n      delete frame.value.easing;\n\n      for (var attr in frame.value)\n      {\n        if ( !(attr in deltas) )\n        {\n          deltas[attr] = [];\n          values[attr] = [];\n          pathEasings[attr] = [];\n          attributes[attr] = factory.attribute( attr );\n        }\n\n        deltas[attr].push( frame.order / maxTime );\n        values[attr].push( attributes[ attr ].parse( frame.value[ attr ] ) );\n        pathEasings[attr].push( $easing( coalesce( easings[ attr ], easing ) ) );\n      }\n    }\n\n    // create events & paths\n    for (var attr in deltas)\n    {\n      var duration    = helper.parseDuration( attr );\n      var delay       = helper.parseDelay( attr );\n      var sleep       = helper.parseSleep( attr );\n      var offset      = helper.parseOffset( attr );\n      var repeat      = helper.parseRepeat( attr );\n      var scale       = helper.parseScale( attr );\n      var scaleBase   = helper.parseScaleBase( attr );\n      var parameters  = helper.parseParameters();\n      var path        = new PathKeyframe( attr, attributes[attr].calculator, values[attr], deltas[attr], pathEasings[attr] );\n      var event       = new Event( attr, path, duration, teasing, delay, sleep, offset, repeat, scale, scaleBase, parameters, true, this, null, animation );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'move' animation type.\n *\n * @class BuilderMove\n * @constructor\n * @extends Builder\n */\nfunction BuilderMove()\n{\n\n}\n\nClass.extend( BuilderMove, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory, helper.forObject );\n    var move       = animation.move;\n\n    for (var attr in move)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( move[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, computed.relative( value ) );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'path' animation type.\n *\n * @class BuilderPath\n * @constructor\n * @extends Builder\n */\nfunction BuilderPath()\n{\n\n}\n\nClass.extend( BuilderPath, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory = $factory( animation.factory, helper.forObject );\n    var path    = animation.path;\n\n    for (var attr in path)\n    {\n      var attribute  = factory.attribute( attr );\n      var pathDefinition = path[ attr ];\n\n      if ( !( pathDefinition instanceof Path ) )\n      {\n        pathDefinition.name = attr;\n        pathDefinition.calculator = attribute.calculator;\n      }\n\n      var parsedPath = $path( pathDefinition );\n      var event      = helper.parseEvent( attr, parsedPath, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new builder for the 'physics' animation type.\n *\n * @class BuilderPhysics\n * @constructor\n * @extends Builder\n */\nfunction BuilderPhysics()\n{\n\n}\n\nClass.extend( BuilderPhysics, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory, helper.forObject );\n    var physics    = animation.physics;\n\n    for (var attr in physics)\n    {\n      var physic    = physics[ attr ];\n\n      var attrimator = new Physics(\n        attr,\n        this,\n        physic.calculator,\n        coalesce( physic.position, true ),\n        physic.velocity,\n        physic.acceleration,\n        physic.terminal,\n        physic.stopAt\n      );\n\n      attrimatorMap.put( attr, attrimator );\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'point' animation type.\n *\n * @class BuilderPoint\n * @constructor\n * @extends Builder\n */\nfunction BuilderPoint()\n{\n\n}\n\nClass.extend( BuilderPoint, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory, helper.forObject );\n    var values     = animation.point;\n\n    for (var attr in values)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( values[ attr ] );\n      var path       = new PathPoint( attr, attribute.calculator, value );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'and' animation type.\n *\n * @class BuilderQueue\n * @constructor\n * @extends Builder\n */\nfunction BuilderQueue()\n{\n\n}\n\nClass.extend( BuilderQueue, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var queue = animation.queue;\n\n    queue.factory = coalesce( queue.factory, animation.factory );\n\n    attrimatorMap.queueMap( $attrimatorsFor( queue, options, false, helper.forObject ) );\n  },\n\n  merge: function( input, newOptions, oldOptions, attrimatorMap, helper )\n  {\n    this.submerge( input.queue, newOptions, oldOptions, attrimatorMap );\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'springs' animation type.\n *\n * @class BuilderSpring\n * @constructor\n * @extends Builder\n */\nfunction BuilderSpring()\n{\n\n}\n\nClass.extend( BuilderSpring, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    var factory    = $factory( animation.factory, helper.forObject );\n    var springs    = animation.springs;\n\n    for (var attr in springs)\n    {\n      var spring     = springs[ attr ];\n\n      if ( !isDefined( spring.attribute ) )\n      {\n        spring.attribute = attr;\n      }\n\n      var parsed = $spring( spring );\n\n      if ( parsed !== false )\n      {\n        parsed.parser = this;\n\n        attrimatorMap.put( attr, parsed );\n      }\n    }\n  },\n\n  merge: false\n});\n\n\n/**\n * Instantiates a new parser for the 'travel' animation type.\n *\n * @class BuilderTravel\n * @constructor\n * @extends Builder\n */\nfunction BuilderTravel()\n{\n\n}\n\nClass.extend( BuilderTravel, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory, helper.forObject );\n    var travel     = animation.travel;\n\n    for (var attr in travel)\n    {\n      var traveling     = travel[ attr ];\n      var attribute     = factory.attribute( attr );\n      var fromParsed    = attribute.parse( coalesce( traveling.from, true ) );\n      var toParsed      = attribute.parse( coalesce( traveling.to, true ) );\n      var velocity      = $number( traveling.velocity, 0 );\n      var acceleration  = $number( traveling.acceleration, 0 );\n      var terminal      = $number( coalesce( traveling.terminal, traveling.velocity ), Number.POSITIVE_INFINITY );\n      var epsilon       = $number( traveling.epsilon, 0.001 );\n\n      if ( acceleration !== 0 )\n      {\n        acceleration = computed.pointing( acceleration, toParsed, epsilon, true );\n      }\n\n      if ( velocity !== 0 )\n      {\n        velocity = computed.pointing( velocity, toParsed, epsilon, false );\n      }\n\n      var traveler = new Physics(\n        attr,\n        this,\n        attribute.calculator,\n        fromParsed,\n        velocity,\n        acceleration,\n        terminal\n      );\n\n      attrimatorMap.put( attr, traveler );\n    }\n  },\n\n  merge: false\n});\n\n/**\n * The computed function which returns a function which returns a value pointing\n * to a given target given the current position of the animator.\n *\n * @param  {Number}\n * @param  {any}\n * @param  {Number}\n * @return {Function}\n */\ncomputed('pointing', function(amount, target, epsilon, subtractVelocity)\n{\n  function pointingFunction(attrimator, animator)\n  {\n    var attribute = animator.getAttribute( attrimator.attribute );\n    var calc = attribute.calculator;\n    var targetValue = isComputed( target ) ? target( attrimator, animator ) : target;\n    var temp = calc.create();\n\n    return function()\n    {\n      var position   = attrimator.position;\n      var current    = calc.copy( temp, resolve( targetValue ) );\n      var difference = calc.sub( current, position );\n      var distance   = calc.distance( difference, calc.ZERO );\n\n      if ( distance < epsilon )\n      {\n        attrimator.stopIn( 0 );\n      }\n      else\n      {\n        difference = calc.scale( difference, amount / distance );\n      }\n\n      if ( subtractVelocity )\n      {\n        difference = calc.sub( difference, attrimator.resolveVelocity() );\n      }\n\n      return difference;\n    };\n  }\n\n  return computed( pointingFunction );\n});\n\n\n/**\n * Instantiates a new builder for the 'tweenFrom' animation type.\n *\n * @class BuilderTweenFrom\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenFrom()\n{\n\n}\n\nClass.extend( BuilderTweenFrom, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory, helper.forObject );\n    var tweenFrom  = animation.tweenFrom;\n\n    for (var attr in tweenFrom)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenFrom[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, value, computed.current );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new parser for the 'tweenTo' animation type.\n *\n * @class BuilderTweenTo\n * @constructor\n * @extends Builder\n */\nfunction BuilderTweenTo()\n{\n\n}\n\nClass.extend( BuilderTweenTo, Builder,\n{\n  parse: function( animation, options, attrimatorMap, helper )\n  {\n    // 1. Starting values are all true which signals to Animator to replace those points with the animator's current values.\n\n    var factory    = $factory( animation.factory, helper.forObject );\n    var tweenTo    = animation.tweenTo;\n\n    for (var attr in tweenTo)\n    {\n      var attribute  = factory.attribute( attr );\n      var value      = attribute.parse( tweenTo[ attr ] );\n      var path       = new Tween( attr, attribute.calculator, computed.current, value );\n      var event      = helper.parseEvent( attr, path, this, true );\n\n      attrimatorMap.put( attr, event );\n    }\n  }\n});\n\n\n/**\n * Instantiates a new PathDelta.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @class PathDelta\n * @constructor\n * @extends Path\n */\nfunction PathDelta(name, calculator, points, deltas)\n{\n  this.name = name;\n  this.set( calculator, points, deltas );\n}\n\nClass.extend( PathDelta, Path,\n{\n  set: function(calculator, points, deltas)\n  {\n    this.reset( calculator, points );\n    this.deltas = $deltas( deltas );\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n\n    return this.calculator.interpolate( out, p0, p1, pd );\n  },\n\n  copy: function()\n  {\n    return new PathDelta( this.name, this.calculator, copy(this.points), copy(this.deltas) );\n  }\n});\n\n\n/**\n * Instantiates a new PathParametric.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @param {Array} matrix\n * @param {Number} weight\n * @class PathParametric\n * @constructor\n * @extends Path\n */\nfunction PathParametric(name, calculator, points, loop, matrix, weight, invert)\n{\n  this.name = name;\n  this.set( calculator, points, loop, matrix, weight, invert );\n}\n\nClass.extend( PathParametric, Path,\n{\n  set: function(calculator, points, loop, matrix, weight, invert)\n  {\n    this.reset( calculator, points );\n    this.loop = loop;\n    this.matrix = matrix;\n    this.weight = weight;\n    this.invert = invert;\n    this.temp = calculator.create();\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var temp = this.temp;\n    var matrix = this.matrix;\n    var n = this.points.length - 1;\n    var a = delta * n;\n    var i = clamp( Math.floor( a ), 0, n - 1 );\n    var d = a - i;\n\n    var p0 = this.resolvePoint( i - 1 );\n    var p1 = this.resolvePoint( i );\n    var p2 = this.resolvePoint( i + 1 );\n    var p3 = this.resolvePoint( i + 2 );\n\n    var d0, d1, d2, d3;\n    if (this.invert) {\n      d3 = 1;\n      d2 = d;\n      d1 = d * d2;\n      d0 = d * d1;\n    } else {\n      d0 = 1;\n      d1 = d;\n      d2 = d * d1;\n      d3 = d * d2;\n    }\n\n    out = calc.zero( out );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[0][0] );\n    temp = calc.adds( temp, p1, matrix[0][1] );\n    temp = calc.adds( temp, p2, matrix[0][2] );\n    temp = calc.adds( temp, p3, matrix[0][3] );\n    out = calc.adds( out, temp, d0 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[1][0] );\n    temp = calc.adds( temp, p1, matrix[1][1] );\n    temp = calc.adds( temp, p2, matrix[1][2] );\n    temp = calc.adds( temp, p3, matrix[1][3] );\n    out = calc.adds( out, temp, d1 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[2][0] );\n    temp = calc.adds( temp, p1, matrix[2][1] );\n    temp = calc.adds( temp, p2, matrix[2][2] );\n    temp = calc.adds( temp, p3, matrix[2][3] );\n    out = calc.adds( out, temp, d2 );\n\n    temp = calc.zero( temp );\n    temp = calc.adds( temp, p0, matrix[3][0] );\n    temp = calc.adds( temp, p1, matrix[3][1] );\n    temp = calc.adds( temp, p2, matrix[3][2] );\n    temp = calc.adds( temp, p3, matrix[3][3] );\n    out = calc.adds( out, temp, d3 );\n\n    out = calc.scale( out, this.weight );\n\n    return out;\n  },\n\n  resolvePoint: function(i)\n  {\n    var points = this.points;\n    var n = points.length;\n    var k = (this.loops ? (i + n) % n : clamp( i, 0, n - 1 ));\n\n    return resolve( points[ k ] );\n  },\n\n  copy: function()\n  {\n    return new PathParametric( this.name, this.calculator, copy(this.points), this.loop, this.matrix, this.weight );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathBasisSpline.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathBasisSpline\n * @constructor\n * @extends PathParametric\n */\nfunction PathBasisSpline(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathBasisSpline, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathBasisSpline.MATRIX, PathBasisSpline.WEIGHT, true );\n  },\n\n  copy: function()\n  {\n    return new PathBasisSpline( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                                 [-1, 3,-3, 1]   [p-1]\n * f(t) = [t^3, t^2, t, 1] * 1/6 * [ 3,-6, 3, 0] * [ p ]\n *                                 [-3, 0, 3, 0]   [p+1]\n *                                 [ 1, 4, 1, 0]   [p+2]\n */\n\nPathBasisSpline.WEIGHT = 1.0 / 6.0;\nPathBasisSpline.MATRIX = [\n  [-1, 3,-3, 1],\n  [ 3,-6, 3, 0],\n  [-3, 0, 3, 0],\n  [ 1, 4, 1, 0]\n];\n\n\n/**\n * Instantiates a new PathBezier.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathBezier\n * @constructor\n * @extends Path\n */\nfunction PathBezier(name, calculator, points, weights)\n{\n  this.name = name;\n  this.set( calculator, points, weights );\n}\n\nClass.extend( PathBezier, Path,\n{\n  set: function(calculator, points, weights)\n  {\n    this.reset( calculator, points );\n    this.weights = weights || PathBezier.computeWeights( points.length );\n    this.inverses = new Array( points.length );\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var inverses = this.inverses;\n    var weights = this.weights;\n    var n = this.points.length;\n    var x = 1;\n\n    inverses[n - 1] = 1;\n\n    for (var i = n - 2; i >= 0; i--)\n    {\n      inverses[i] = inverses[i + 1] * (1 - delta);\n    }\n\n    out = calc.zero( out );\n\n    for (var i = 0; i < n; i++)\n    {\n      out = calc.adds( out, this.resolvePoint( i ), weights[ i ] * inverses[ i ] * x );\n\n      x *= delta;\n    }\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathBezier( this.name, this.calculator, copy(this.points), this.weights );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\nPathBezier.computeWeights = function(n)\n{\n  var w = new Array( n-- );\n\n  for (var i = 0; i <= n; i++)\n  {\n    w[ i ] = choose( n, i );\n  }\n\n  return w;\n};\n\n\n/**\n * Instantiates a new PathCatmullRom.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Boolean} loop\n * @class PathCatmullRom\n * @constructor\n * @extends PathParametric\n */\nfunction PathCatmullRom(name, calculator, points, loop)\n{\n  this.name = name;\n  this.set( calculator, points, loop );\n}\n\nClass.extend( PathCatmullRom, PathParametric,\n{\n  set: function(calculator, points, loop)\n  {\n    this._set( calculator, points, loop, PathCatmullRom.MATRIX, PathCatmullRom.WEIGHT, false );\n  },\n\n  copy: function()\n  {\n    return new PathCatmullRom( this.name, this.calculator, copy(this.points), this.loop );\n  }\n});\n\n/** http://www.cs.cornell.edu/Courses/cs4620/2013fa/lectures/16spline-curves.pdf\n *\n *                                 [-1, 3,-3, 1]   [p-1]\n * f(t) = [1, t, t^2, t^3] * 1/2 * [ 3,-6, 3, 0] * [ p ]\n *                                 [-3, 0, 3, 0]   [p+1]\n *                                 [ 1, 4, 1, 0]   [p+2]\n */\n\nPathCatmullRom.WEIGHT = 0.5;\nPathCatmullRom.MATRIX = [\n  [ 0, 2, 0, 0],\n\t[-1, 0, 1, 0],\n\t[ 2,-5, 4,-1],\n\t[-1, 3,-3, 1]\n];\n\n\n/**\n * Instantiates a new PathCombo.\n *\n * @param {String|false} name\n * @param {Path[]} paths\n * @param {Boolean} [uniform]\n * @param {Number} [granularity]\n * @class PathCombo\n * @constructor\n * @extends Path\n */\nfunction PathCombo(name, paths, uniform, granularity)\n{\n  this.name = name;\n  this.set( paths, uniform, granularity );\n}\n\nClass.extend( PathCombo, Path,\n{\n  set: function(paths, uniform, granularity)\n  {\n    var pathCount = paths.length;\n    var calc = paths[0].calculator;\n    var points = [];\n    var deltas = [];\n    var linear = true;\n    var length = false;\n\n    for (var i = 0; i < pathCount; i++)\n    {\n      points.push.apply( points, paths[ i ].points );\n\n      deltas[ i ] = ( i + 1 ) / pathCount;\n\n      if ( !paths[ i ].isLinear() )\n      {\n        linear = false;\n      }\n    }\n\n    if ( uniform )\n    {\n      var lengthGranularity = coalesce( granularity, Defaults.comboPathUniformGranularity );\n      var lengthTotal = 0;\n      var lengths = [];\n\n      for (var i = 0; i < pathCount; i++)\n      {\n        lengths[ i ] = paths[ i ].length( lengthGranularity );\n        lengthTotal += lengths[ i ];\n      }\n\n      var lengthCurrent = 0;\n\n      for (var i = 0; i < pathCount; i++)\n      {\n        lengthCurrent += lengths[ i ];\n        deltas[ i ] = lengthCurrent / lengthTotal;\n      }\n\n      length = lengthTotal;\n    }\n\n    this.reset( calc, points );\n    this.paths = paths;\n    this.deltas = deltas;\n    this.uniform = uniform;\n    this.granularity = granularity;\n    this.linear = linear;\n    this.cachedLength = length;\n  },\n\n  isLinear: function()\n  {\n    return this.linear;\n  },\n\n  length: function(granularity)\n  {\n    return this.cachedLength !== false ? this.cachedLength : this._length( granularity );\n  },\n\n  compute: function(out, delta)\n  {\n    var paths = this.paths;\n    var deltas = this.deltas;\n    var previousDelta = 0;\n    var i = 0;\n\n    while ( i < paths.length - 1 && deltas[ i ] < delta )\n    {\n      previousDelta = deltas[ i ];\n      i++;\n    }\n\n    var deltaDistance = delta - previousDelta;\n    var deltaGap = deltas[ i ] - previousDelta;\n    var pathDelta = deltaDistance / deltaGap;\n\n    return paths[ i ].compute( out, pathDelta );\n  },\n\n  copy: function()\n  {\n    return new PathCombo( this.name, this.paths, this.uniform, this.granularity );\n  }\n});\n\n\n/**\n * Instantiates a new PathCompiled.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} pointCount\n * @class PathCompiled\n * @constructor\n * @extends Path\n */\nfunction PathCompiled(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathCompiled, Path,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var compiled = PathCompiled.compile( calc, path, pointCount );\n\n    this.reset( calc, compiled );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  compute: function(out, delta)\n  {\n    var n = this.points.length;\n    var a = Math.floor( delta * n );\n    var index = clamp( a, 0, n - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathCompiled( this.name, this, this.points.length );\n  }\n});\n\nPathCompiled.compile = function(calc, path, pointCount)\n{\n  if (path.points.length === pointCount)\n  {\n    return copy( path.points );\n  }\n\n  var points = [];\n\n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n\n  return points;\n};\n\n\n/**\n * Instantiates a new PathCubic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @param {T} p3\n * @class PathCubic\n * @constructor\n * @extends Path\n */\nfunction PathCubic(name, calculator, p0, p1, p2, p3)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2, p3 );\n}\n\nClass.extend( PathCubic, Path,\n{\n  set: function(calculator, p0, p1, p2, p3)\n  {\n    this.reset( calculator, [p0, p1, p2, p3] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var d3 = d1 * d2;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n    var i3 = i1 * i2;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i3 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 3 * i2 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), 3 * i1 * d2 );\n    out = calc.adds( out, this.resolvePoint( 3 ), d3 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathCubic( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathHermite.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} startTangent\n * @param {T} end\n * @param {T} endTangent\n * @class PathHermite\n * @constructor\n * @extends Path\n */\nfunction PathHermite(name, calculator, start, startTangent, end, endTangent)\n{\n  this.name = name;\n  this.set( calculator, start, startTangent, end, endTangent );\n}\n\nClass.extend( PathHermite, Path,\n{\n  set: function(calculator, start, startTangent, end, endTangent)\n  {\n    this.reset( calculator, [start, end] );\n    this.startTangent = startTangent;\n    this.endTangent = endTangent;\n  },\n\n  compute: function(out, d)\n  {\n    var calc = this.calculator;\n    var d2 = d * d;\n    var d3 = d2 * d;\n\n    out = calc.zero( out );\n    out = calc.adds( out, this.resolvePoint( 0 ), 2 * d3 - 3 * d2 + 1 );\n    out = calc.adds( out, this.resolvePoint( 1 ), -2 * d3 + 3 * d2 );\n    out = calc.adds( out, resolve( this.startTangent ), d3 - 2 * d2 + d );\n    out = calc.adds( out, resolve( this.endTangent ), d3 - d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathHermite( this.name, this.calculator, this.points[0], this.startTangent, this.points[1], this.endTangent );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathJump.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathJump\n * @constructor\n * @extends Path\n */\nfunction PathJump(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathJump, Path,\n{\n  set: function(calculator, points)\n  {\n    this.reset( calculator, points );\n  },\n\n  compute: function(out, delta)\n  {\n    var a = Math.floor( delta * this.points.length );\n    var index = Math.min( a, this.points.length - 1 );\n\n    return this.calculator.copy( out, this.resolvePoint( index ) );\n  },\n\n  copy: function()\n  {\n    return new PathJump( this.name, this.calculator, copy(this.points) );\n  }\n});\n\n\n/**\n * Instantiates a new PathKeyframe.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Array} deltas\n * @param {Array} easings\n * @class PathKeyframe\n * @constructor\n * @extends Path\n */\nfunction PathKeyframe(name, calculator, points, deltas, easings)\n{\n  this.name = name;\n  this.set( calculator, points, deltas, easings );\n}\n\nClass.extend( PathKeyframe, Path,\n{\n  set: function(calculator, points, deltas, easings)\n  {\n    this.reset( calculator, points );\n    this.deltas = $deltas( deltas );\n    this.easings = easings;\n  },\n\n  compute: function(out, delta)\n  {\n    var ds = this.deltas;\n    var end = ds.length - 2;\n\n    if ( delta < ds[0] ) {\n      return false;\n    }\n\n    if ( delta > ds[ds.length - 1] ) {\n      return this.points[ds.length - 1];\n    }\n\n    var i = 0;\n    while (ds[i + 1] < delta && i < end) {\n      i++;\n    }\n    var d0 = ds[i];\n    var d1 = ds[i + 1];\n    var pd = (delta - d0) / (d1 - d0);\n    var p0 = this.resolvePoint( i );\n    var p1 = this.resolvePoint( i + 1 );\n    var ea = this.easings[i];\n\n    return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n  },\n  copy: function()\n  {\n    return new PathKeyframe( this.name, this.calculator, copy(this.points), copy(this.deltas), copy(this.easings) );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathLinear(name, calculator, points)\n{\n  this.name = name;\n  this.set( calculator, points );\n}\n\nClass.extend( PathLinear, PathDelta,\n{\n  set: function(calculator, points)\n  {\n    var deltas = PathLinear.getTimes( calculator, points );\n\n    this._set( calculator, points, deltas );\n  },\n\n  copy: function()\n  {\n    return new PathLinear( this.name, this.calculator, copy(this.points) );\n  }\n});\n\nPathLinear.getTimes = function(calc, points)\n{\n  var n = points.length - 1;\n\tvar distances = [];\n\n\tdistances[ 0 ] = 0;\n\n\tfor (var i = 1; i <= n; i++)\n\t{\n\t\tdistances[ i ] = distances[ i - 1 ] + calc.distance( points[ i - 1 ], points[ i ] );\n\t}\n\n\tvar invlength = 1.0 / distances[ n ];\n\n\tfor (var i = 1; i < n; i++)\n\t{\n\t\tdistances[ i ] *= invlength;\n\t}\n\n  distances[ n ] = 1;\n\n\treturn distances;\n};\n\n\n/**\n * Instantiates a new PathPoint.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} point\n * @class PathPoint\n * @constructor\n * @extends Path\n */\nfunction PathPoint(name, calculator, point)\n{\n  this.name = name;\n  this.set( calculator, point );\n}\n\nClass.extend( PathPoint, Path,\n{\n  set: function(calculator, point)\n  {\n    this.reset( calculator, [point] );\n  },\n\n  compute: function(out, delta)\n  {\n    return this.calculator.copy( out, this.resolvePoint( 0 ) );\n  },\n\n  copy: function()\n  {\n    return new PathPoint( this.name, this.calculator, this.points[0] );\n  }\n});\n\n\n/**\n * Instantiates a new PathQuadratic.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} p0\n * @param {T} p1\n * @param {T} p2\n * @class PathQuadratic\n * @constructor\n * @extends Path\n */\nfunction PathQuadratic(name, calculator, p0, p1, p2)\n{\n  this.name = name;\n  this.set( calculator, p0, p1, p2 );\n}\n\nClass.extend( PathQuadratic, Path,\n{\n  set: function(calculator, p0, p1, p2)\n  {\n    this.reset( calculator, [p0, p1, p2] );\n  },\n\n  compute: function(out, d1)\n  {\n    var calc = this.calculator;\n    var d2 = d1 * d1;\n    var i1 = 1 - d1;\n    var i2 = i1 * i1;\n\n    out = calc.copy( out, this.resolvePoint( 0 ) );\n    out = calc.scale( out, i2 );\n    out = calc.adds( out, this.resolvePoint( 1 ), 2 * i1 * d1 );\n    out = calc.adds( out, this.resolvePoint( 2 ), d2 );\n\n    return out;\n  },\n\n  copy: function()\n  {\n    return new PathQuadratic( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathQuadraticCorner.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @param {Number} midpoint\n * @param {Boolean} loop\n * @class PathQuadraticCorner\n * @constructor\n * @extends Path\n */\nfunction PathQuadraticCorner(name, calculator, points, midpoint, loop)\n{\n  this.name = name;\n  this.set( calculator, points, midpoint, loop );\n}\n\nClass.extend( PathQuadraticCorner, Path,\n{\n  set: function(calculator, points, midpoint, loop)\n  {\n    this.reset( calculator, points );\n    this.midpoint = midpoint;\n    this.loop = loop;\n    this.temp0 = calculator.create();\n    this.temp1 = calculator.create();\n  },\n\n  compute: function(out, delta)\n  {\n    var calc = this.calculator;\n    var temp0 = this.temp0;\n    var temp1 = this.temp1;\n    var midpoint = this.midpoint;\n    var negmidpoint = 1.0 - midpoint;\n    var halfmidpoint = midpoint * 0.5;\n    var n = this.points.length - (this.loops ? 0 : 1);\n    var a = delta * n;\n    var i = clamp( Math.floor( a ), 0, n - 1 );\n    var d = a - i;\n\n    var p0 = this.resolvePoint( i - 1 );\n    var p1 = this.resolvePoint( i );\n    var p2 = this.resolvePoint( i + 1 );\n    var p3 = this.resolvePoint( i + 2 );\n\n    if ( d < midpoint )\n    {\n      d = (d / midpoint);\n      temp0 = calc.interpolate( temp0, p0, p1, d * halfmidpoint + negmidpoint + halfmidpoint );\n      temp1 = calc.interpolate( temp1, p1, p2, d * halfmidpoint + halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5 + 0.5;\n    }\n    else if ( d > negmidpoint )\n    {\n      d = (d - negmidpoint) / midpoint;\n      temp0 = calc.interpolate( temp0, p1, p2, d * halfmidpoint + negmidpoint );\n      temp1 = calc.interpolate( temp1, p2, p3, d * halfmidpoint );\n      p1 = temp0;\n      p2 = temp1;\n      d = d * 0.5;\n    }\n\n    out = calc.interpolate( out, p1, p2, d );\n\n    return out;\n  },\n\n  resolvePoint: function(i)\n  {\n    var points = this.points;\n    var n = points.length;\n    var k = (this.loops ? (i + n) % n : clamp( i, 0, n - 1 ));\n\n    return resolve( points[ k ] );\n  },\n\n  copy: function()\n  {\n    return new PathQuadraticCorner( this.name, this.calculator, copy(this.points), this.midpoint, this.loop );\n  },\n\n  isLinear: function()\n  {\n    return false;\n  }\n});\n\n\n/**\n * Instantiates a new PathSub.\n *\n * @param {String|false} name\n * @param {Path} path\n * @param {Number} start\n * @param {Number} end\n * @class PathSub\n * @constructor\n * @extends Path\n */\nfunction PathSub(name, path, start, end)\n{\n  this.name = name;\n  this.set( path, start, end );\n}\n\nClass.extend( PathSub, Path,\n{\n  set: function(path, start, end)\n  {\n    this.reset( path.calculator, path.points );\n    this.path = path;\n    this.start = start;\n    this.end = end;\n  },\n\n  compute: function(out, delta)\n  {\n    return this.path.compute( out, (this.end - this.start) * delta + this.start );\n  },\n\n  copy: function()\n  {\n    return new PathSub( this.name, this.path, this.start, this.end );\n  }\n});\n\n\n/**\n * Instantiates a new PathLinear.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {Array} points\n * @class PathLinear\n * @constructor\n * @extends PathDelta\n */\nfunction PathUniform(name, path, pointCount)\n{\n  this.name = name;\n  this.set( path, pointCount );\n}\n\nClass.extend( PathUniform, PathDelta,\n{\n  set: function(path, pointCount)\n  {\n    var calc = path.calculator;\n    var points = PathCompiled.compile( calc, path, pointCount );\n    var deltas = PathLinear.getTimes( calc, points );\n\n    this._set( calc, points, deltas );\n    this.path = path;\n    this.pointCount = pointCount;\n  },\n\n  copy: function()\n  {\n    return new PathUniform( this.name, this.path, this.pointCount );\n  }\n});\n\n\n/**\n * Instantiates a new Tween.\n *\n * @param {String|false} name\n * @param {Calculator} calculator\n * @param {T} start\n * @param {T} end\n * @class Tween\n * @constructor\n * @extends Path\n */\nfunction Tween(name, calculator, start, end)\n{\n  this.name = name;\n  this.set( calculator, start, end );\n}\n\nClass.extend( Tween, Path,\n{\n  set: function(calculator, start, end)\n  {\n    this.reset( calculator, [ start, end ] );\n  },\n\n  compute: function(out, delta)\n  {\n    return this.calculator.interpolate( out, this.resolvePoint( 0 ), this.resolvePoint( 1 ), delta );\n  },\n\n  copy: function()\n  {\n    return new Tween( this.name, this.calculator, this.points[0], this.points[1] );\n  }\n});\n\n\n/**\n * Instantiates a new SpringDistance.\n *\n * @param {String|false} attribute\n * @param {anim8.Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {Number} distance\n * @param {Number} damping\n * @param {Number} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringDistance\n * @constructor\n * @extends Spring\n */\nfunction SpringDistance(attribute, calculator, position, rest, distance, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.distance   = distance;\n  this.damping    = damping;\n  this.stiffness  = stiffness;\n  this.temp       = null;\n}\n\nClass.extend( SpringDistance, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    this.temp = this.calculator.create();\n  },\n\n  clone: function()\n  {\n    return new SpringDistance( this.attribute, this.calculator, this.position, this.rest, this.distance, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // d = DISTANCE( position, rest )\n    // velocity += ((position - rest) / d * stiffness * |distance - d| - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n    var rest = this.resolveRest();\n\n    var d = calc.distance( this.position, rest );\n\n    this.temp = calc.copy( this.temp, this.position );\n    this.temp = calc.sub( this.temp, rest );\n\n    if ( d !== 0 )\n    {\n      this.temp = calc.scale( this.temp, 1.0 / d );\n      this.temp = calc.scale( this.temp, (d - this.distance) * this.stiffness );\n    }\n\n    this.temp = calc.adds( this.temp, this.velocity, -this.damping );\n\n    this.velocity = calc.adds( this.velocity, this.temp, dt );\n  }\n\n});\n\n\n/**\n * Instantiates a new SpringLinear.\n *\n * @param {String|false} attribute\n * @param {Calculator} calculator\n * @param {T} position\n * @param {T} rest\n * @param {T} damping\n * @param {T} stiffness\n * @param {T} velocity\n * @param {T} gravity\n * @param {Boolean} finishOnRest\n * @class SpringLinear\n * @constructor\n * @extends Spring\n */\nfunction SpringLinear(attribute, calculator, position, rest, damping, stiffness, velocity, gravity, finishOnRest)\n{\n  this.set( attribute, calculator, rest, position, velocity, gravity, finishOnRest );\n\n  this.damping      = damping;\n  this.stiffness    = stiffness;\n  this.temp0        = null;\n  this.temp1        = null;\n}\n\nClass.extend( SpringLinear, Spring,\n{\n\n  start: function(now, animator)\n  {\n    this._start( now, animator );\n\n    var attribute = animator.getAttribute( this.attribute );\n    var calc = this.calculator;\n\n    this.damping      = this.parseValue( animator, this.damping, attribute.defaultValue );\n    this.stiffness    = this.parseValue( animator, this.stiffness, attribute.defaultValue );\n    this.temp0        = calc.create();\n    this.temp1        = calc.create();\n  },\n\n  clone: function()\n  {\n    return new SpringLinear( this.attribute, this.calculator, this.position, this.rest, this.damping, this.stiffness, this.velocity, this.gravity, this.finishOnRest );\n  },\n\n  hasComputed: function()\n  {\n    return isComputed( this.rest ) ||\n           isComputed( this.position ) ||\n           isComputed( this.gravity ) ||\n           isComputed( this.velocity ) ||\n           isComputed( this.damping ) ||\n           isComputed( this.stiffness );\n  },\n\n  updateVelocity: function(dt)\n  {\n    // velocity += ((stiffness * (position - rest)) - (damping * velocity)) * elapsed.seconds;\n    // position += velocity * elapsed.seconds;\n\n    var calc = this.calculator;\n\n    this.temp1 = calc.copy( this.temp1, this.damping );\n    this.temp1 = calc.mul( this.temp1, this.velocity );\n\n    this.temp0 = calc.copy( this.temp0, this.position );\n    this.temp0 = calc.sub( this.temp0, this.resolveRest() );\n    this.temp0 = calc.mul( this.temp0, this.stiffness );\n    this.temp0 = calc.sub( this.temp0, this.temp1 );\n\n    this.velocity = calc.adds( this.velocity, this.temp0, dt );\n  }\n\n});\n\n\nvar nextTimeline = (function()\n{\n  var id = 0;\n\n  return function() {\n    return ++id;\n  };\n\n})();\n\nfunction Movie(name)\n{\n  this.name = name;\n  this.currentTime = 0;\n  this.currentTimelines = [];\n  this.sequenceDelay = 0;\n  this.sequenceEasing = Easings.linear;\n  this.introduce = false;\n  this.timelines = new FastMap();\n  this.autoEnd = false;\n}\n\nClass.define( Movie,\n{\n\n  setAutoEnd: function(autoEnd)\n  {\n    this.autoEnd = autoEnd;\n\n    return this;\n  },\n\n  sequence: function(delay, easing)\n  {\n    this.sequenceDelay = $time( delay );\n    this.sequenceEasing = $easing( easing, Easings.linear );\n\n    return this;\n  },\n\n  intro: function(subjects)\n  {\n    this.currentTimelines = this.getTimelines( subjects );\n    this.introduce = true;\n\n    return this;\n  },\n\n  with: function(subjects)\n  {\n    this.currentTimelines = this.getTimelines( subjects );\n\n    return this;\n  },\n\n  add: function(subjects)\n  {\n    var additional = this.getTimelines( subjects );\n\n    this.currentTimelines.push.apply( this.currentTimelines, additional );\n\n    return this;\n  },\n\n  getTimeline: function(animator)\n  {\n    var timelineId = animator.$timelineId;\n    var timeline = this.timelines.get( timelineId );\n\n    if ( !isDefined( timeline ) )\n    {\n      timelineId = nextTimeline();\n      timeline = new MovieTimeline( animator );\n      animator.$timelineId = timelineId;\n\n      this.timelines.put( timelineId, timeline );\n    }\n\n    return timeline;\n  },\n\n  getTimelines: function(subjects)\n  {\n    var animators = [];\n\n    if ( isArray( subjects ) )\n    {\n      for (var i = 0; i < subjects.length; i++)\n      {\n        var animator = anim8( subjects[ i ] );\n\n        if ( animator !== false )\n        {\n          animators.push( this.getTimeline( animator ) );\n        }\n      }\n    }\n    else\n    {\n      var animator = anim8( subjects );\n\n      if ( animator !== false )\n      {\n        animators.push( this.getTimeline( animator ) );\n      }\n    }\n\n    return animators;\n  },\n\n  at: function(time)\n  {\n    var at = $time( time, false );\n\n    if ( at === false )\n    {\n      throw 'Invalid time in Movie.at: ' + time;\n    }\n\n    this.currentTime = at;\n\n    return this;\n  },\n\n  seek: function(time)\n  {\n    var by = $time( time, false );\n\n    if ( by === false )\n    {\n      throw 'Invalid time in Movie.seek: ' + time;\n    }\n\n    return this.at( this.currentTime + by );\n  },\n\n  end: function()\n  {\n    return this.at( this.duration() );\n  },\n\n  play: function(animation, options, all)\n  {\n    var parsed = $animation( animation, options );\n    var intro = this.introduce;\n\n    return this.eachCurrentTimeline(function(timeline, time)\n    {\n      timeline.playAttrimators( parsed.newAttrimators(), all, time, intro );\n    });\n  },\n\n  queue: function(animation, options, all)\n  {\n    var parsed = $animation( animation, options );\n\n    return this.eachCurrentTimeline(function(timeline, time)\n    {\n      timeline.queueAttrimators( parsed.newAttrimators(), all, time );\n    });\n  },\n\n  transition: function(transition, animation, options, all)\n  {\n    var transition = $transition( transition );\n    var parsed = $animation( animation, options );\n\n    return this.eachCurrentTimeline(function(timeline, time)\n    {\n      timeline.transitionAttrimators( parsed.newAttrimators(), all, time, transition );\n    });\n  },\n\n  eachCurrentTimeline: function(onTimeline)\n  {\n    var timelines = this.currentTimelines;\n    var n = timelines.length - 1;\n    var time = this.currentTime;\n\n    if ( this.sequenceDelay > 0 )\n    {\n      var timeGap = n * this.sequenceDelay;\n      var easing = this.sequenceEasing;\n\n      for (var i = 0; i <= n; i++)\n      {\n        onTimeline( timelines[ i ], time + easing( i / n ) * timeGap );\n      }\n    }\n    else\n    {\n      for (var i = 0; i <= n; i++)\n      {\n        onTimeline( timelines[ i ], time );\n      }\n    }\n\n    this.sequenceDelay = 0;\n    this.introduce = false;\n\n    if ( this.autoEnd )\n    {\n      this.end();\n    }\n\n    return this;\n  },\n\n  duration: function()\n  {\n    var timelines = this.timelines.values;\n    var maxTime = 0;\n\n    for (var i = 0; i < timelines.length; i++)\n    {\n      maxTime = Math.max( maxTime, timelines[ i ].attrimators.timeRemaining() );\n    }\n\n    return maxTime;\n  }\n});\n\neventize( Movie.prototype );\n\n\nfunction MoviePlayer(movie)\n{\n  this.speed = 1.0;\n  this.time = 0;\n  this.currentTime = 0;\n  this.playing = false;\n  this.movie = movie;\n  this.duration = movie.duration();\n  this.run = this.runner( movie, this );\n}\n\nClass.define( MoviePlayer,\n{\n  reverse: function()\n  {\n    this.speed = -this.speed;\n\n    return this;\n  },\n  backward: function()\n  {\n    this.speed = -Math.abs( this.speed );\n\n    return this;\n  },\n  forward: function()\n  {\n    this.speed = Math.abs( this.speed );\n\n    return this;\n  },\n  start: function(applyNow, avoidApplyTrigger)\n  {\n    this.time = 0;\n\n    if ( applyNow )\n    {\n      this.apply( this.time, avoidApplyTrigger );\n    }\n\n    return this;\n  },\n  end: function(applyNow, avoidApplyTrigger)\n  {\n    this.time = this.duration;\n\n    if ( applyNow )\n    {\n      this.apply( this.time, avoidApplyTrigger );\n    }\n\n    return this;\n  },\n  play: function()\n  {\n    if ( !this.playing )\n    {\n      this.currentTime = now();\n      this.playing = true;\n\n      requestRun( this.run );\n    }\n\n    return this;\n  },\n  pause: function()\n  {\n    this.playing = false;\n\n    return this;\n  },\n  goto: function(time, applyNow, avoidApplyTrigger)\n  {\n    this.time = $time( time );\n\n    if ( applyNow )\n    {\n      this.apply( this.time, avoidApplyTrigger );\n    }\n\n    return this;\n  },\n  apply: function(applyTime, avoidApplyTrigger)\n  {\n    var time = coalesce( applyTime, this.time );\n    var timelines = this.movie.timelines.values;\n    var active = [];\n\n    for (var i = 0; i < timelines.length; i++)\n    {\n      var timeline = timelines[ i ];\n\n      if ( time >= timeline.start )\n      {\n        active.push( timeline );\n      }\n    }\n\n    for (var i = 0; i < active.length; i++)\n    {\n      active[ i ].preupdate( time );\n    }\n\n    for (var i = 0; i < active.length; i++)\n    {\n      active[ i ].update( time );\n    }\n\n    for (var i = 0; i < active.length; i++)\n    {\n      active[ i ].apply();\n    }\n\n    if ( !avoidApplyTrigger )\n    {\n      this.trigger( 'apply', [this, time] );\n    }\n\n    return this;\n  },\n  evaluatePlaying: function()\n  {\n    if ( this.playing )\n    {\n      if ( this.time < 0 )\n      {\n        this.time = 0;\n        this.playing = false;\n        this.trigger( 'start', [this] );\n      }\n      else if ( this.time > this.duration )\n      {\n        this.time = this.duration;\n        this.playing = false;\n        this.trigger( 'end', [this] );\n      }\n    }\n\n    return this;\n  },\n  runner: function(movie, player)\n  {\n    return function run()\n    {\n      var currentTime = now();\n      var elapsed = currentTime - player.currentTime;\n\n      player.time += elapsed * player.speed;\n      player.currentTime = currentTime;\n      player.apply();\n      player.evaluatePlaying();\n\n      if ( player.playing )\n      {\n        requestRun( player.run );\n      }\n    };\n  }\n});\n\neventize( MoviePlayer.prototype );\n\n\nfunction MovieTimeline(animator)\n{\n  this.animator = animator;\n  this.attrimators = new AttrimatorMap();\n  this.start = 0;\n}\n\nClass.define( MovieTimeline,\n{\n\n  playAttrimators: function(attrimatorMap, all, time, intro)\n  {\n    if ( this.attrimators.size() )\n    {\n      this.attrimators.playMapAt( attrimatorMap, all, time );\n    }\n    else\n    {\n      this.attrimators.putMap( attrimatorMap );\n      this.attrimators.delay( time );\n\n      if ( !intro )\n      {\n        this.start = time;\n      }\n    }\n  },\n\n  queueAttrimators: function(attrimatorMap, all, time)\n  {\n    if ( all )\n    {\n      this.attrimators.stopNotPresentAt( attrimatorMap, time );\n    }\n\n    this.attrimators.queueMap( attrimatorMap );\n  },\n\n  transitionAttrimators: function(attrimatorMap, all, time, transition)\n  {\n    if ( all )\n    {\n      this.attrimators.stopNotPresentAt( attrimatorMap, time + transition.time );\n    }\n\n    this.attrimators.transitionMap(\n      transition,\n      attrimatorMap,\n      function getValue(attr) {\n        var attrimator = this.attrimators.get( attr );\n        var attribute = this.animator.getAttribute( attr );\n\n        return attrimator ? attrimator.valueAtSearch( time, attribute.cloneDefault() ) : undefined;\n      },\n      function getAttribute(attr) {\n        return this.animator.getAttribute( attr );\n      },\n      function placeAttrimator(attrimator) {\n        this.attrimators.playAttrimatorAt( attrimator, time );\n      },\n      function getValueAt(attrimator, relativeTime, out) {\n        return attrimator.valueAtSearch( time + relativeTime, out );\n      },\n      function stopAttrimator(attrimator, relativeTime) {\n        attrimator.stopAt( time + relativeTime );\n      },\n      this\n    );\n  },\n\n  preupdate: function(time)\n  {\n    var animator = this.animator;\n    var attrimators = this.attrimators.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var existing = animator.attrimators.get( attr );\n      var attrimatorAt = attrimator.attrimatorAt( time );\n\n      if ( existing !== attrimatorAt )\n      {\n        if ( attrimatorAt )\n        {\n          animator.placeAttrimator( attrimatorAt );\n        }\n        else\n        {\n          animator.attrimators.remove( attr );\n        }\n      }\n    }\n\n    this.animator.preupdate( time );\n  },\n\n  update: function(time)\n  {\n    var animator = this.animator;\n    var attrimators = this.attrimators.values;\n\n    for (var i = 0; i < attrimators.length; i++)\n    {\n      var attrimator = attrimators[ i ];\n      var attr = attrimator.attribute;\n      var attribute = animator.getAttribute( attr );\n      var calculator = attribute.calculator;\n      var currentValue = animator.frame[ attr ];\n\n      if ( calculator.isValid( currentValue ) )\n      {\n        var valueAt = attrimator.valueAtSearch( time, currentValue );\n\n        if ( valueAt !== false )\n        {\n          animator.frame[ attr ] = valueAt;\n          animator.updated[ attr ] = true;\n        }\n      }\n    }\n  },\n\n  apply: function()\n  {\n    this.animator.apply();\n  }\n\n});\n\n\nvar Builders = {};\n\n/**\n * Register the builder.\n */\nBuilders['values'] = new BuilderDeltas();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      and: {\n *       ... more builders ...\n *      }\n *     });\n *\n *\n * @property {BuilderAnd} and\n * @for anim8.builder\n */\nBuilders['and'] = new BuilderAnd();\n\n/**\n * Register the builder.\n */\nBuilders['final'] = new BuilderFinal();\n\n/**\n * Register the builder.\n */\nBuilders['initial'] = new BuilderInitial();\n\n/**\n * Register the builder.\n */\nBuilders['point'] = new BuilderPoint();\n\n/**\n * Registers the builder.\n */\nBuilders['keyframe'] = new BuilderKeyframe();\n\n/**\n * Register the builder.\n */\nBuilders['move'] = new BuilderMove();\n\n/**\n * A builder which generates attrimators which follow a given path.\n *\n * **Examples:**\n *\n *     animator.play({\n *      path: {\n *       opacity: {\n *        type: 'quadratic',\n *        p0: 0,\n *        p1: 0.4,\n *        p2: 1.0\n *       }\n *      }\n *     });\n *\n *\n * @property {BuilderPath} path\n * @for anim8.builder\n */\nBuilders['path'] = new BuilderPath();\n\n/**\n * Register the builder.\n */\nBuilders['physics'] = new BuilderPhysics();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      ... other builders ...\n *      queue: {\n *       ... more builders to play after the others ...\n *      }\n *     });\n *\n *\n * @property {BuilderQueue} queue\n * @for anim8.builder\n */\nBuilders['queue'] = new BuilderQueue();\n\n/**\n * Register the builder.\n */\nBuilders['springs'] = new BuilderSpring();\n\n/**\n * Register the builder.\n */\nBuilders['travel'] = new BuilderTravel();\n\n/**\n * Register the builder.\n */\nBuilders['tweenFrom'] = new BuilderTweenFrom();\n\n/**\n * A builder which generates attrimators which tween from the current value to\n * the given values.\n *\n * **Examples:**\n *\n *     animator.play({\n *      tweenTo: {\n *       opacity: 1.0,       // absolute value\n *       left: '+40'         // 40 more units from current value\n *      }\n *     });\n *\n *\n * @property {BuilderTweenTo} tweenTo\n * @for anim8.builder\n */\nBuilders['tweenTo'] = new BuilderTweenTo();\n\n\n/**\n * A collection of calculators. A calculator is responsible for performing\n * mathematical operations for a specific animatable data type.\n *\n * @class anim8.calculator\n */\nvar Calculators = {};\n\n/**\n * A calculator for numbers.\n *\n * @property {CalculatorNumber} number\n * @for anim8.Calculators\n */\nCalculators['number'] = new CalculatorNumber();\n\n/**\n * A calculator for 2d points; objects with x & y Number components.\n *\n * @property {Calculator2d} 2d\n * @for anim8.Calculators\n */\nCalculators['2d'] = new Calculator2d();\n\n/**\n * A calculator for 3d points; objects with x, y, & z Number components.\n *\n * @property {Calculator3d} 3d\n * @for anim8.Calculators\n */\nCalculators['3d'] = new Calculator3d();\n\n/**\n * A calculator for quaternions; objects with x, y, z, & angle Number components.\n *\n * @property {CalculatorQuaternion} quaternion\n * @for anim8.Calculators\n */\nCalculators['quaternion'] = new CalculatorQuaternion();\n\n/**\n * A calculator for opaque colors; objects with r, g, & b Number components.\n *\n * @property {CalculatorRGB} rgb\n * @for anim8.Calculators\n */\nCalculators['rgb'] = new CalculatorRGB();\n\n/**\n * A calculator for colors; objects with r, g, b, & a Number components.\n *\n * @property {CalculatorRGBA} rgba\n * @for anim8.Calculators\n */\nCalculators['rgba'] = new CalculatorRGBA();\n\n/**\n * A calculator for strings.\n *\n * @property {CalculatorString} string\n * @for anim8.Calculators\n */\nCalculators['string'] = new CalculatorString();\n\n/**\n * The default calculator.\n *\n * @property {CalculatorNumber} default\n * @for anim8.Calculators\n */\nCalculators['default'] = Calculators['number'];\n\n\nvar Factories = {};\n\n/**\n * Registers the object factory.\n */\nFactories['object'] = new FactoryObject();\n\n/**\n * Registers the default factory.\n */\nFactories['default'] = Factories['object'];\n\n\nvar Paths = {};\n\n/**\n * Parses an object for a point path.\n *\n * @param {Object} path\n * @return {PathCombo}\n */\nPaths['point'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathPoint(\n    path.name,\n    calc,\n    calc.parse( path.point, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a combo path.\n *\n * @param {Object} path\n * @return {PathCombo}\n */\nPaths['combo'] = function(path)\n{\n  var paths = path.paths;\n\n  for (var i = 0; i < paths.length; i++)\n  {\n    paths[ i ] = $path( paths[ i ] );\n  }\n\n  return new PathCombo(\n    path.name,\n    paths,\n    path.uniform,\n    path.granularity\n  );\n};\n\n\n/**\n * Parses an object for a compiled path.\n *\n * @param {Object} path\n * @return {PathCompiled}\n */\nPaths['compiled'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathCompiled(\n    path.name,\n    parent,\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a cubic path.\n *\n * @param {Object} path\n * @return {PathCubic}\n */\nPaths['cubic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathCubic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue ),\n    calc.parse( path.p3, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a delta path.\n *\n * @param {Object} path\n * @return {PathDelta}\n */\nPaths['delta'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  return new PathDelta(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.deltas\n  );\n};\n\n/**\n * Parses an object for a jump path.\n *\n * @param {Object} path\n * @return {PathJump}\n */\nPaths['jump'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathJump(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue )\n  );\n};\n\n/**\n * Parses an object for a keyframe path.\n *\n * @param {Object} path\n * @return {PathKeyframe}\n */\nPaths['keyframe'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  if (!path.deltas)\n  {\n    path.deltas = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  var defaultEasing = $easing( path.easings, null );\n\n  if ( !isDefined( path.easings ) || !isArray( path.easings ) || defaultEasing !== null )\n  {\n    path.easings = [];\n\n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.easings[ i ] = defaultEasing;\n    }\n  }\n\n  for (var i = 0; i < path.easings.length; i++)\n  {\n    path.easings[ i ] = $easing( path.easings[ i ] );\n  }\n\n  return new PathKeyframe(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.deltas,\n    path.easings\n  );\n};\n\n\n/**\n * Parses an object for a quadratic path.\n *\n * @param {Object} path\n * @return {PathQuadratic}\n */\nPaths['quadratic'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathQuadratic(\n    path.name,\n    calc,\n    calc.parse( path.p0, defaultValue ),\n    calc.parse( path.p1, defaultValue ),\n    calc.parse( path.p2, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a tween path.\n *\n * @param {Object} path\n * @return {Tween}\n */\nPaths['tween'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new Tween(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.end, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a sub path.\n *\n * @param {Object} path\n * @return {PathSub}\n */\nPaths['sub'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathSub(\n    path.name,\n    parent,\n    coalesce( path.start, 0 ),\n    coalesce( path.end, 1 )\n  );\n};\n\n/**\n * Parses an object for a quadratic corner path.\n *\n * @param {Object} path\n * @return {PathQuadraticCorner}\n */\nPaths['quadratic-corner'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathQuadraticCorner(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.midpoint,\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a linear path.\n *\n * @param {Object} path\n * @return {PathLinear}\n */\nPaths['linear'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathLinear(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue )\n  );\n};\n\n\n/**\n * Parses an object for a uniform path.\n *\n * @param {Object} path\n * @return {PathUniform}\n */\nPaths['uniform'] = function(path)\n{\n  var parent = $path( path.path );\n\n  return new PathUniform(\n    path.name,\n    parent,\n    path.n || path.pointCount\n  );\n};\n\n/**\n * Parses an object for a hermite path.\n *\n * @param {Object} path\n * @return {PathHermite}\n */\nPaths['hermite'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n  var defaultValue = calc.parse( path.defaultValue, calc.ZERO );\n\n  return new PathHermite(\n    path.name,\n    calc,\n    calc.parse( path.start, defaultValue ),\n    calc.parse( path.startTangent, defaultValue ),\n    calc.parse( path.end, defaultValue ),\n    calc.parse( path.endTangent, defaultValue )\n  );\n};\n\n/**\n * Parses an object for a bezier path.\n *\n * @param {Object} path\n * @return {PathBezier}\n */\nPaths['bezier'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathBezier(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.weights\n  );\n};\n\n/**\n * Parses an object for a parametric cubic curve path.\n *\n * @param {Object} path\n * @return {PathParametric}\n */\nPaths['parametric'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathParametric(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop,\n    path.matrix,\n    path.weight\n  );\n};\n\n/**\n * Parses an object for a parametric cubic curve path.\n *\n * @param {Object} path\n * @return {PathParametric}\n */\nPaths['catmull-rom'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathCatmullRom(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n/**\n * Parses an object for a basis spline path.\n *\n * @param {Object} path\n * @return {PathBasisSpline}\n */\nPaths['basis-spline'] = function(path)\n{\n  var calc = $calculator( path.calculator );\n\n  return new PathBasisSpline(\n    path.name,\n    calc,\n    calc.parseArray( path.points, path.points, path.defaultValue ),\n    path.loop\n  );\n};\n\n\nvar Springs = {};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringDistance}\n */\nSprings['distance'] = function(spring)\n{\n  return new SpringDistance(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.distance,\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n/**\n * Register the spring builder.\n *\n * @param {Object}\n * @return {SpringLinear}\n */\nSprings['linear'] = function(spring)\n{\n  return new SpringLinear(\n    spring.attribute,\n    spring.calculator,\n    coalesce( spring.position, true ),\n    coalesce( spring.rest, true ),\n    spring.damping,\n    spring.stiffness,\n    spring.velocity,\n    spring.gravity,\n    spring.finishOnRest\n  );\n};\n\n\n/**\n * Returns an instance of {{#crossLink \"Animation\"}}{{/crossLink}} based on the\n * given input & options. If the input is a string the animation with that name\n * is returned. If the input is a string with an animation name and an option\n * string the animation with the given name modified by any additional options\n * is returned. Commas can be used to queue animation & option pairs one after\n * another. Ampersands can be used to play animations at the same time. If the\n * input is an object an anonymous animation is created. If no animation could\n * be determined then false is returned.\n *\n * **Examples:**\n *\n *     animation('wiggle');\n *     animation('wiggle ~1s 4s z40ms x5 !1.2');\n *     animation('wiggle', {...options...});\n *     animation('wiggle, tada ~50ms, fadeOut 2s');\n *     animation('wiggle & tada !3, fadeOut');\n *     animation({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method animation\n * @for Core\n * @param {Animation|String|Object} animation\n * @param {String|Object} [options]\n * @param {Boolean} [cache=false]\n * @return {Animation|False}\n * @throws {String} The animation string has an invalid animation name or the\n *    animation fails to create attrimators from the animation definition.\n */\nfunction $animation(animation, options, cache, forObject)\n{\n  var options = $options( options, cache );\n  var hasOptions = !isEmpty( options );\n\n  if ( animation instanceof Animation )\n  {\n    if ( hasOptions )\n    {\n      var attrimators = animation.newAttrimators();\n\n      animation.merge( options, attrimators );\n\n      return new Animation( false, animation.input, options, attrimators);\n    }\n\n    return animation;\n  }\n  if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    var attrimators = $attrimatorsFor( animation, options, cache );\n\n    if ( key in Animations && !hasOptions )\n    {\n      return Animations[ key ];\n    }\n\n    return new Animation( false, {}, options, attrimators );\n  }\n  if ( isObject( animation ) )\n  {\n    var attrimators = $attrimatorsFor( animation, options, cache, forObject );\n\n    return new Animation( false, animation, options, attrimators );\n  }\n\n  return false;\n}\n\n\n\n/**\n * Generates an AttrimatorMap for the given animation and options. If the\n * animation given is an instance of {{#crossLink \"Animation\"}}{{/crossLink}}\n * then a copy of that animations attrimators is returned, and if options are\n * specified then they are merged into the generated attrimators. If the\n * animation given is an object it's properties are iterated and for each builder\n * with a matching name attrimators are generated. If the animation given is a\n * string of a cached or saved animation then it's handled as if an instance of\n * {{#crossLink \"Animation\"}}{{/crossLink}} was given. If the animation given\n * is a string which isn't saved or cached it goes through the following parsing\n * logic.\n *\n * - Split up the string into sections with `,` which queues animations.\n * - Split up each of the sections with `&` which enables animations to play\n *   simultaneously.\n * - For each of those sections, take the first word as the name of the\n *   animation and any remaining text as the options for that animation.\n *\n * If no attrimators could be parsed, an empty attrimator map is returned. If\n * the animation given is a string that specifies animations that don't exist\n * an error is thrown.\n *\n * **Examples:**\n *\n *     anim8.attrimatorsFor('wiggle');\n *     anim8.attrimatorsFor('wiggle ~1s 4s z40ms x5 !1.2');\n *     anim8.attrimatorsFor('wiggle', {...options...});\n *     anim8.attrimatorsFor('wiggle, tada ~50ms, fadeOut 2s');\n *     anim8.attrimatorsFor('wiggle & tada !3, fadeOut');\n *     anim8.attrimatorsFor({...definition...});\n *\n * If the given input is a string you can cache it. An example would be\n * 'wiggle ~1s 2s x3' - if `cache` is true and you call this method again it won't\n * need to be parsed again.\n *\n * **See:** {{#crossLink \"Core/options:method\"}}{{/crossLink}}\n *\n * @method anim8.attrimatorsFor\n * @for Core\n * @param {Object|String} animation\n * @param {Object|String} [options]\n * @param {Boolean} [cache=false]\n * @return {AttrimatorMap}\n */\nfunction $attrimatorsFor( animation, options, cache, forObject )\n{\n  var parsedOptions = $options( options, cache );\n  var hasOptions = !isEmpty( parsedOptions );\n  var attrimators = new AttrimatorMap();\n\n  if ( animation instanceof Animation )\n  {\n    attrimators.putMap( animation.newAttrimators() );\n\n    if ( hasOptions )\n    {\n      animation.merge( parsedOptions, attrimators );\n    }\n  }\n  else if ( isObject( animation ) )\n  {\n    var helper = new BuilderHelper( animation, parsedOptions, {}, forObject );\n\n    for (var builderName in animation)\n    {\n      var builder = $builder( builderName );\n\n      if ( builder !== false )\n      {\n        builder.parse( animation, parsedOptions, attrimators, helper );\n      }\n    }\n  }\n  else if ( isString( animation ) )\n  {\n    var key = animation.toLowerCase();\n    var saved = Animations[ key ];\n    var cacheIt = coalesce( cache, Defaults.cache );\n\n    if ( saved )\n    {\n      attrimators.putMap( saved.newAttrimators() );\n\n      if ( hasOptions )\n      {\n        saved.merge( parsedOptions, attrimators );\n      }\n    }\n    else\n    {\n      var animationsQueued = animation.split( /\\s*,\\s*/ );\n\n      for (var k = 0; k < animationsQueued.length; k++)\n      {\n        var animationsMerged = animationsQueued[ k ].split( /\\s*&\\s*/ );\n        var base = new AttrimatorMap();\n\n        for (var j = 0; j < animationsMerged.length; j++)\n        {\n          var animationString = trim( animationsMerged[ j ].toLowerCase() );\n          var animationSplit = animationString.split( /\\s+/ );\n          var parsedAnimation = Animations[ animationSplit[ 0 ] ];\n\n          if ( parsedAnimation )\n          {\n            var additionalOptions = $options( animationSplit.slice( 1 ), cache );\n            var hasAdditionalOptions = !isEmpty( additionalOptions );\n            var parsedAttrimators = parsedAnimation.newAttrimators();\n\n            if ( hasOptions && hasAdditionalOptions )\n            {\n              parsedAnimation.merge( extend( {}, parsedOptions, additionalOptions ), parsedAttrimators );\n            }\n            else if ( hasAdditionalOptions )\n            {\n              parsedAnimation.merge( additionalOptions, parsedAttrimators );\n            }\n            else if ( hasOptions )\n            {\n              parsedAnimation.merge( parsedOptions, parsedAttrimators );\n            }\n\n            base.putMap( parsedAttrimators );\n          }\n          else\n          {\n            throw animationString + ' is not a valid animation in \"' + animationsQueued[ k ] + '\"';\n          }\n        }\n\n        attrimators.queueMap( base );\n      }\n\n      if ( cacheIt && !hasOptions )\n      {\n        Animations[ key ] = new Animation( animation, {}, {}, attrimators );\n      }\n    }\n  }\n\n  return attrimators;\n}\n\n\n/**\n * A collection of {{#crossLink \"Builder\"}}builders{{/crossLink}} which takes\n * animation definitions (an Object passed to {{#crossLink \"Core/anim8.animation:method\"}}{{/crossLink}})\n * and generates {{#crossLink \"Attrimator\"}}Attrimators{{/crossLink}}.\n *\n * @class anim8.builder\n */\n\n/**\n * Returns a builder based on the input. If the input is an instance of Builder\n * it's returned immediately. If the input is a string the builder with that name\n * is returned. If no builder could be determined then false is returned.\n *\n * **See:** {{#crossLink \"anim8.builder\"}}{{/crossLink}}\n *\n * @method anim8.builder\n * @for Core\n * @param {Builder|String} builderInput\n * @return {Builder|false}\n */\nfunction $builder(builderInput)\n{\n  if ( builderInput instanceof Builder )\n  {\n    return builderInput;\n  }\n  if ( isString( builderInput ) && builderInput in Builders )\n  {\n    return Builders[ builderInput ];\n  }\n\n  return false;\n}\n\n\n/**\n* Returns a calculator based on the input. If the input is an instance of\n* {{#crossLink \"Calculator\"}}{{/crossLink}} it is immediately returned. If the\n* input is a string the calculator with that name is returned. If no calculator\n* could be determined the default calculator is returned.\n*\n* @method anim8.calculator\n* @for Core\n* @param {Calculator|String} calculatorInput\n* @return {Calculator}\n*/\nfunction $calculator(calculatorInput)\n{\n if ( calculatorInput instanceof Calculator )\n {\n   return calculatorInput;\n }\n if ( isString( calculatorInput ) && calculatorInput in Calculators )\n {\n   return Calculators[ calculatorInput ];\n }\n\n return Calculators['default'];\n}\n\n\n\n/**\n * Parses delay from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/delay:property\"}}anim8.defaults.delay{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.delay\n * @param {String|Number} time\n */\nfunction $delay(time)\n{\n  return $time( time, Defaults.delay );\n}\n\n\n\n/**\n * Parses an array of delta values and normalizes them between the range of\n * 0 and 1. Optionally the array can be cloned.\n *\n * @method anim8.deltas\n * @param {Number[]} deltas\n * @param {Boolean} clone\n */\nfunction $deltas(deltas, clone)\n{\n  var max = deltas[ 0 ];\n\n  for (var i = 1; i < deltas.length; i++)\n  {\n    max = Math.max( max, deltas[ i ] );\n  }\n\n  var target = clone ? [] : deltas;\n  var invertMax = 1.0 / max;\n\n  for (var i = 0; i < deltas.length; i++)\n  {\n    target[ i ] = deltas[ i ] * invertMax;\n  }\n\n  return target;\n}\n\n\n/**\n * Parses duration from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/duration:property\"}}anim8.defaults.duration{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.duration\n * @param {String|Number} time\n */\nfunction $duration(time)\n{\n  return $time( time, Defaults.duration );\n}\n\n\n/**\n * Returns an easing based on the given input. If the input is a function it's\n * assumed to be an easing function and is returned immediately. If the input is\n * a string the easing with that name is returned. If the input is a string in\n * the format 'easing-easingType' then an easing is returned that is a\n * combination of the easing with the given name and the easingType with the\n * given name. If the given input is an array with 4 elements it's assumed to be\n * a bezier path and one is created and returned. If no input is given the\n * default easing is returned. If an easing cannot be determined then an error\n * is thrown.\n *\n * **Examples:**\n *\n *     anim8.easing();               // anim8.defaults.easing\n *     anim8.easing( 'linear' );     // anim8.easing.linear\n *     anim8.easing( 'reverse' );    // anim8.easingType.reverse( anim8.defaults.easing )\n *     anim8.easing( 'ease-yoyo' );  // anim8.easingType.yoyo( anim8.easing.ease )\n *     anim8.easing( [0,0,1,1] );    // anim8.easing.bezier( 0, 0, 1, 1 )\n *     anim8.easing( 5, false );     // false\n *     anim8.easing( 'invalid', 1 ); // 1\n *     anim8.easing( [0,0,1], 1 );   // 1\n *\n * @method anim8.easing\n * @for Core\n * @param {Function|String|Array} easing\n * @param {E} [returnOnInvalid]\n * @return {Function|E}\n */\nfunction $easing(easing, returnOnInvalid)\n{\n  if ( isFunction( easing ) )\n  {\n    return easing;\n  }\n  if ( isString( easing ) )\n  {\n    var result = null;\n    var scale = 1;\n\n    var scaleIndex = easing.indexOf('*');\n\n    if ( scaleIndex !== -1 )\n    {\n      scale = parseFloat( easing.substring( scaleIndex + 1 ) );\n      easing = easing.substring( 0, scaleIndex );\n    }\n\n    if ( easing in Easings )\n    {\n      result = Easings[ easing ];\n    }\n    else if ( easing in EasingTypes )\n    {\n      result = EasingTypes[ easing ]( $easing( Defaults.easing ) );\n    }\n    else if ( easing.indexOf('-') !== -1 )\n    {\n      var pair = easing.split('-');\n      var e = pair[0];\n      var t = pair[1];\n\n      if ( pair.length >= 2 && e in Easings && t in EasingTypes )\n      {\n        result = EasingTypes[ t ]( Easings[ e ] );\n      }\n    }\n\n    if ( result !== null && isFinite( scale ) && scale !== 1 )\n    {\n      result = Easings.scale( scale, result );\n    }\n\n    if ( result !== null )\n    {\n      return result;\n    }\n  }\n  if ( isArray( easing ) && easing.length === 4 && isNumber( easing[0] ) && isNumber( easing[1] ) && isNumber( easing[2] ) && isNumber( easing[3] ) )\n  {\n    return Easings.bezier.apply( null, easing );\n  }\n  if ( !isDefined( easing ) )\n  {\n    return $easing( Defaults.easing );\n  }\n\n  if ( isDefined( returnOnInvalid ) )\n  {\n    return returnOnInvalid;\n  }\n\n  throw easing + ' is not a valid easing';\n}\n\n\n/**\n * Returns an easing type based on the input. If the input is a function that\n * function is immediately returned. If the input is a string the easing type\n * with that name is returned. If no easing type could be determined an error is\n * thrown.\n *\n * @param {Function|String} easingType\n * @param [Boolean] optional\n * @return {Function|false}\n */\nfunction $easingType(easingType, optional)\n{\n  if ( isFunction( easingType ) )\n  {\n    return easingType;\n  }\n  if ( isString( easingType ) && easingType in EasingTypes )\n  {\n    return EasingTypes[ easingType ];\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw easingType + ' is not a valid easing type';\n}\n\n\n/**\n * Returns a factory given the input and returns the default if none is found.\n *\n * @method factory\n * @for Core\n * @param {String|Factory} [factory]\n * @return {Factory}\n */\nfunction $factory(factoryInput, forObject)\n{\n  if ( factoryInput instanceof Factory )\n  {\n    return factoryInput;\n  }\n  if ( isString( factoryInput ) && factoryInput in Factories )\n  {\n    return Factories[ factoryInput ];\n  }\n  if ( forObject )\n  {\n    if ( forObject instanceof Factory )\n    {\n      return forObject;\n    }\n\n    if ( forObject instanceof Sequence )\n    {\n      forObject = forObject.animators;\n    }\n\n    if ( forObject instanceof Animators )\n    {\n      forObject = forObject.$[0];\n    }\n\n    if ( forObject instanceof Animator && forObject.factory )\n    {\n      return forObject.factory;\n    }\n  }\n\n  return Factories['default'];\n}\n\n\n/**\n * Returns a factory for the given subject and optionally throws an error if no\n * factory exists.\n *\n * @method factoryFor\n * @for Core\n * @param {Any} subject\n * @param {Boolean} [optional]\n * @return {Factory}\n */\nfunction $factoryFor(subject, optional)\n{\n  var highestPriorityFactory = false;\n\n  for (var factoryName in Factories)\n  {\n    var factory = Factories[ factoryName ];\n\n    if ( factory.is( subject ) && (highestPriorityFactory === false || highestPriorityFactory.priority < factory.priority) )\n    {\n      highestPriorityFactory = factory;\n    }\n  }\n\n  if ( highestPriorityFactory )\n  {\n    return highestPriorityFactory;\n  }\n\n  if ( optional )\n  {\n    return false;\n  }\n\n  throw 'No factory exists for subject ' + subject;\n}\n\n\n/**\n * Parses a number from the given input and if the input isn't a valid number\n * then returnOnInvalid is returned.\n *\n * **Examples:**\n *\n *     anim8.number( 5 );       // 5\n *     anim8.number( '5' );     // 5\n *     anim8.number( '5e4' );   // 50000\n *     anim8.number( 'x' );     // undefined\n *     anim8.number( 'x', 23 ); // 23\n *\n * @method anim8.number\n * @param {String|Number} value\n * @param {E} returnOnInvalid\n * @return {Number|E}\n */\nfunction $number(value, returnOnInvalid)\n{\n  var parsed = parseFloat( value );\n\n  return isNaN( parsed ) ? returnOnInvalid : parsed;\n}\n\n\n\n/**\n * Parses offset from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/offset:property\"}}anim8.defaults.offset{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.offset\n * @param {String|Number} time\n */\nfunction $offset(time)\n{\n  return $time( time, Defaults.offset );\n}\n\n\nvar Options = {};\n\n/**\n * Parses a value into an options object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [duration] x[repeat] z[sleep] ~[delay] @[offset] ![scale] [[easing][-easingType]]\n *\n * This is also a registry of options, you can add your own options that\n * can be used later with syntax like:\n *\n *     anim8.options['myOptions'] = anim8.options('1.5s x2 !2');\n *\n * So you can use 'myOptions' as the options input.\n *\n * You can also specify relative values & scaling values. If you have the\n * following options:\n *\n *     +2s x*2 ~-1s\n *\n * It will result in adding 2 seconds to the duration, repeating it twice as\n * much, and subtracting one second from the delay.\n *\n * For more information on acceptable values in options:\n *\n * **See:** {{#crossLink \"Core/anim8.duration:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.repeat:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.sleep:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.delay:method\"}}{{/crossLink}},\n *          {{#crossLink \"Core/anim8.scale:method\"}}{{/crossLink}}, and\n *          {{#crossLink \"Core/anim8.easing:method\"}}{{/crossLink}}\n *\n * @method anim8.options\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $options(options, cache)\n{\n  var originalInput = options;\n  var cacheIt = coalesce( cache, Defaults.cacheOptions );\n\n  if ( isString( options ) )\n  {\n    if ( options in Options )\n    {\n      return Options[ options ];\n    }\n\n    options = options.toLowerCase().split(/\\s+/);\n  }\n\n  if ( isArray( options ) )\n  {\n    var parsed = {};\n\n    for (var i = 0; i < options.length; i++)\n    {\n      var part = options[i];\n      var first = part.charAt( 0 );\n      var paramSplit = part.indexOf( '=' );\n\n      // Parameters\n      if ( paramSplit !== -1 )\n      {\n        var paramName = part.substring( 0, paramSplit );\n        var paramValue = part.substring( paramSplit + 1 );\n\n        if ( !parsed.parameters )\n        {\n          parsed.parameters = {};\n        }\n\n        parsed.parameters[ paramName ] = paramValue;\n      }\n      // Repeats\n      else if ( first === 'x' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n      }\n      // Sleeping\n      else if ( first === 'z' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'sleep', 'sleepAdd', 'sleepScale' );\n      }\n      // Delay\n      else if ( first === '~' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'delay', 'delayAdd', 'delayScale' );\n      }\n      // Scaling\n      else if ( first === '!' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $number, 'scale', 'scaleAdd', 'scaleScale' );\n      }\n      // Offset\n      else if ( first === '@' )\n      {\n        parseOptionProperty( part.substring(1), parsed, $time, 'offset', 'offsetAdd', 'offsetScale' );\n      }\n      else\n      {\n        // Easing?\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          parsed.easing = easing;\n        }\n\n        // Duration?\n        var duration = parseOptionProperty( part, parsed, $time, 'duration', 'durationAdd', 'durationScale' );\n\n        if ( duration === false )\n        {\n          // If not a duration, might be an alternative repeat? (doesn't start with x)\n          parseOptionProperty( part, parsed, $repeat, 'repeat', 'repeatAdd', 'repeatScale' );\n        }\n      }\n    }\n\n    if ( isString( originalInput ) && cacheIt )\n    {\n      Options[ originalInput ] = parsed;\n    }\n\n    return parsed;\n  }\n\n  if ( isObject( options ) )\n  {\n    return options;\n  }\n\n  return Defaults.noOptions;\n}\n\nfunction parseOptionProperty(input, out, parseFunction, property, propertyAdd, propertyScale)\n{\n  var first = input.charAt( 0 );\n\n  if ( first === '*' )\n  {\n    parsed = $number( input.substring( 1 ), false );\n\n    if ( parsed !== false )\n    {\n      out[ propertyScale ] = parsed;\n    }\n  }\n  else\n  {\n    if ( first === '+' || first === '-' )\n    {\n      property = propertyAdd;\n      input = input.substring( 1 );\n    }\n\n    var parsed = parseFunction( input, false );\n\n    if ( parsed !== false )\n    {\n      out[ property ] = parsed;\n    }\n  }\n\n  return parsed;\n}\n\n\n/**\n * Parses a path given the input and returns an instance of anim8.Path or throws\n * an error if the path could not be parsed. If the input is an object and has\n * a type property with a value that maps to a path type the path's parsing\n * function is invoked with the object.\n *\n * @method anim8.path\n * @for Core\n * @param  {anim8.Path|String|Object} pathInput\n * @return {anim8.Path}\n * @throws {String} If the input is not a valid path.\n */\nfunction $path(pathInput)\n{\n  if ( pathInput instanceof Path )\n  {\n    return pathInput;\n  }\n  if ( isString( pathInput ) && pathInput in Paths )\n  {\n    return Paths[ pathInput ];\n  }\n  if ( isObject( pathInput ) && pathInput.type in Paths )\n  {\n    return Paths[ pathInput.type ]( pathInput );\n  }\n\n  throw pathInput + ' is not a valid path';\n}\n\n\n\n/**\n * Parses repeats from a string or number. If a valid repeat is not given then\n * `returnOnInvalid` is returned, if that is not given then\n * {{#crossLink \"anim8.defaults/repeat:property\"}}anim8.defaults.repeat{{/crossLink}}\n * is returned.\n *\n * **Examples:**\n *\n *     anim8.repeat( 5 );            // 5\n *     anim8.repeat( 'inf' );        // Infinity\n *     anim8.repeat( 'infinity' );   // Infinity\n *     anim8.repeat( 'infinite' );   // Infinity\n *     anim8.repeat( 'once' );       // 1\n *     anim8.repeat( 'twice' );      // 2\n *     anim8.repeat( 'thrice' );     // 3\n *     anim8.repeat( 'dozen' );      // 12\n *     anim8.repeat( 'random' );     // 4\n *     anim8.repeat( 'invalid', 6 ); // 6\n *     anim8.repeat( false, 7 );     // 7\n *     anim8.repeat();               // anim8.defaults.repeat\n *\n * @method anim8.repeat\n * @param {String|Number} time\n * @param {E} [returnOnInvalid]\n * @return {Number|E}\n */\nvar $repeat = (function()\n{\n  var conversions = {\n    inf:        Number.POSITIVE_INFINITY,\n    infinity:   Number.POSITIVE_INFINITY,\n    infinite:   Number.POSITIVE_INFINITY,\n    once:       1,\n    twice:      2,\n    thrice:     3,\n    dozen:      12,\n    random:     4 // chosen by fair dice roll. guaranteed to be random.\n  };\n\n  return function(repeat, returnOnInvalid)\n  {\n    if ( isNumber( repeat ) )\n    {\n      return repeat;\n    }\n    if ( isString( repeat ) )\n    {\n      repeat = repeat.toLowerCase();\n\n      if ( repeat in conversions )\n      {\n        return conversions[ repeat ];\n      }\n      else\n      {\n        var parsed = parseInt( repeat );\n\n        if ( !isNaN(parsed) )\n        {\n          return parsed;\n        }\n      }\n    }\n\n    return coalesce( returnOnInvalid, Defaults.repeat );\n  };\n\n})();\n\n\n/**\n * Parses scale from a string or number.\n *\n * **See:** {{#crossLink \"Core/anim8.number:method\"}}anim8.number{{/crossLink}}\n *\n * @method anim8.scale\n * @param {String|Number} scale\n * @return {Number}\n */\nfunction $scale(scale)\n{\n  return $number( scale, Defaults.scale );\n}\n\n\n\n/**\n * Parses sleep from a string or number. If the input is not a valid time then\n * {{#crossLink \"anim8.defaults/sleep:property\"}}anim8.defaults.sleep{{/crossLink}}\n * is returned.\n *\n * **See:** {{#crossLink \"Core/anim8.time:method\"}}anim8.time{{/crossLink}}\n *\n * @method anim8.sleep\n * @param {String|Number} time\n */\nfunction $sleep(time)\n{\n  return $time( time, Defaults.sleep );\n}\n\n/**\n * Returns a spring if the provided argument is a spring, the name of a spring,\n * or an object with a spring type to be created. If none of these conditions\n * are true then an error is thrown.\n *\n * @method anim8.spring\n * @for Core\n * @param {Spring|String|Object} springInput\n * @return {Spring}\n */\nfunction $spring(springInput)\n{\n  if ( springInput instanceof Spring )\n  {\n    return springInput;\n  }\n  if ( isString( springInput ) && springInput in Springs )\n  {\n    return Springs[ springInput ];\n  }\n  if ( isObject( springInput ) && springInput.type in Springs )\n  {\n    return Springs[ springInput.type ]( springInput );\n  }\n\n  throw springInput + ' is not a valid spring';\n}\n\n\n/**\n * Parses milliseconds from a string or number. If a number is given it's\n * assumed to be milliseconds and is returned immediately. If a string is given\n * a unit is looked for to determine how to scale the number into milliseconds.\n * If the given time is invalid and returnOnInvalid is not given then zero is\n * returned.\n *\n * **Examples:**\n *\n *     anim8.time( 45 );       // 45\n *     anim8.time( 45.9 );     // 45\n *     anim8.time( -4.1 );     // -5\n *     anim8.time( '5ms' );    // 5\n *     anim8.time( '23' );     // 23\n *     anim8.time( '5c' );     // 500\n *     anim8.time( '5cs' );    // 500\n *     anim8.time( '5jiffy' ); // 833\n *     anim8.time( '5third' ); // 833\n *     anim8.time( '10s' );    // 10000\n *     anim8.time( '10sec' );  // 10000\n *     anim8.time( '1.5m' );   // 90000\n *     anim8.time( '1.5min' ); // 90000\n *     anim8.time( '0.4h' );   // 144000\n *     anim8.time( '0.4hr' );  // 144000\n *\n * @method anim8.time\n * @param {String|Number} time\n * @param {Any} [returnOnInvalid]\n */\nvar $time = (function()\n{\n  var regex = /^(-?\\d*(\\.\\d+)|-?\\d+)(ms|s|c|cs|third|jiffy|sec|m|min|h|hr)?$/;\n\n  var conversions = {\n    ms:     1,\n    c:      100,\n    cs:     100,\n    jiffy:  1000 / 60,\n    third:  1000 / 60,\n    s:      1000,\n    sec:    1000,\n    m:      1000 * 60,\n    min:    1000 * 60,\n    h:      1000 * 60 * 60,\n    hr:     1000 * 60 * 60\n  };\n\n  return function(time, returnOnInvalid)\n  {\n    if ( isNumber( time ) )\n    {\n      // raw numbers are considered milliseconds\n      return Math.floor( time );\n    }\n    if ( isString( time ) )\n    {\n      var parsed = regex.exec( time );\n\n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n\n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n\n        return Math.floor( time );\n      }\n    }\n\n    return coalesce( returnOnInvalid, 0 );\n  };\n\n})();\n\n\nvar Transitions = {};\n\n/**\n * Parses a value into a transition object. If the given input is a string it's\n * expected to be in a similar format to:\n *\n *     [time] [easing[-easingType]] >[outro] <[intro] /[granularity] ^[lookup]\n *\n * This is also a registry of transitions, you can add your own transitions that\n * can be used later with syntax like:\n *\n *     anim8.transition['myTransition'] = anim8.transition('50ms 0.05 linear');\n *\n * So you can use 'myTransition' as the transition input.\n *\n *     animator.transition('myTransition', 'myAnimation');\n *\n * @method anim8.transition\n * @for Core\n * @param {Object|String|Array} options\n * @param {Boolean} [cache]\n * @return {Object}\n */\nfunction $transition(transition, cache)\n{\n  // 1. If it's a string, convert it into an array.\n  // 2. If it's an array, parse it and convert it into an object.\n  // 3. If it's an object, fill in any missing values with the defaults.\n\n  var originalInput = transition;\n\n  if ( isString( transition ) )\n  {\n    if ( transition in Transitions )\n    {\n      return Transitions[ transition ];\n    }\n\n    transition = transition.toLowerCase().split(/\\s+/);\n  }\n\n  if ( isArray( transition ) )\n  {\n    var transitionArray = transition;\n\n    transition = {};\n\n    for (var i = 0; i < transitionArray.length; i++)\n    {\n      var part = transitionArray[i];\n      var first = part.charAt( 0 );\n\n      // Introduction Time (into next event)\n      if ( first === '<' )\n      {\n        var intro = $time( part.substring(1), false );\n\n        if ( !isNaN( intro ) )\n        {\n          transition.intro = intro;\n        }\n      }\n      // Outroduction Time (out of current event)\n      else if ( first === '>' )\n      {\n        var outro = $time( part.substring(1), false );\n\n        if ( !isNaN( outro ) )\n        {\n          transition.outro = outro;\n        }\n      }\n      // Granularity (for velocity conscious transitions)\n      else if ( first === '/' )\n      {\n        var granularity = $number( part.substring(1), false );\n\n        if ( granularity !== false )\n        {\n          transition.granularity = granularity;\n        }\n      }\n      // Lookup (for velocity conscious transitions)\n      else if ( first === '^' )\n      {\n        var lookup = $time( part.substring(1), false );\n\n        if ( lookup !== false )\n        {\n          transition.lookup = lookup;\n        }\n      }\n      else\n      {\n        // Easing\n        var easing = $easing( part, false );\n\n        if ( easing !== false )\n        {\n          transition.easing = easing;\n        }\n\n        // Time\n        var time = $time( part, false );\n\n        if ( time !== false )\n        {\n          transition.time = time;\n        }\n      }\n    }\n  }\n\n  if ( isObject( transition ) )\n  {\n    transition.time        = $time( transition.time, Defaults.transitionTime );\n    transition.outro       = $time( transition.outro, Defaults.transitionOutro );\n    transition.intro       = $time( transition.intro, Defaults.transitionIntro );\n    transition.easing      = $easing( coalesce( transition.easing, Defaults.transitionEasing ) );\n    transition.granularity = $number( transition.granularity, Defaults.transitionGranularity );\n    transition.lookup      = $time( transition.lookup, Defaults.transitionLookup );\n\n    if ( isString( originalInput ) && coalesce( cache, Defaults.cacheTransitions ) )\n    {\n      Transitions[ originalInput ] = transition;\n    }\n\n    return transition;\n  }\n\n  return Defaults.noTransition;\n}\n\n\n  // Add events to the animation cycle: begin, end, finished, starting\n  eventize( anim8 );\n\n  // anim8.js\n  anim8.anim8s = anim8s;\n  anim8.fn = Animator.prototype;\n  anim8s.fn = Animators.prototype;\n  anim8.isRunning = isRunning;\n  anim8.isLive = isLive;\n  anim8.setLive = setLive;\n  anim8.animating = animating;\n  anim8.requestRun = requestRun;\n  anim8.activateAnimator = activateAnimator;\n  anim8.pushAnimator = pushAnimator;\n  anim8.activate = activate;\n  anim8.run = run;\n  anim8.pause = pause;\n  anim8.resume = resume;\n  anim8.stop = stop;\n  anim8.end = end;\n  anim8.finish = finish;\n  anim8.nopeat = nopeat;\n\n  // Core\n  anim8.noop = noop;\n  anim8.isDefined = isDefined;\n  anim8.isFunction = isFunction;\n  anim8.isNumber = isNumber;\n  anim8.isBoolean = isBoolean;\n  anim8.isString = isString;\n  anim8.isArray = isArray;\n  anim8.isObject = isObject;\n  anim8.isEmpty = isEmpty;\n  anim8.now = now;\n  anim8.trim = trim;\n  anim8.toArray = toArray;\n  anim8.copy = copy;\n  anim8.extend = extend;\n  anim8.coalesce = coalesce;\n  anim8.constant = constant;\n  anim8.resolve = resolve;\n  anim8.id = id;\n  anim8.Class = Class;\n  anim8.Defaults = Defaults;\n\n  // Math\n  anim8.clamp = clamp;\n  anim8.clamper = clamper;\n  anim8.gcd = gcd;\n  anim8.choose = choose;\n  anim8.toDegrees = toDegrees;\n  anim8.toRadians = toRadians;\n  anim8.modder = modder;\n\n  // Registries\n  anim8.Animations = Animations;\n  anim8.Calculators = Calculators;\n  anim8.Factories = Factories;\n  anim8.Builders = Builder;\n  anim8.Paths = Paths;\n  anim8.Springs = Springs;\n  anim8.Easings = Easings;\n  anim8.EasingTypes = EasingTypes;\n  anim8.Options = Options;\n  anim8.Transitions = Transitions;\n\n  // Parsing\n  anim8.animation = $animation;\n  anim8.attrimatorsFor = $attrimatorsFor;\n  anim8.calculator = $calculator;\n  anim8.delay = $delay;\n  anim8.duration = $duration;\n  anim8.easing = $easing;\n  anim8.easingType = $easingType;\n  anim8.factory = $factory;\n  anim8.factoryFor = $factoryFor;\n  anim8.number = $number;\n  anim8.offset = $offset;\n  anim8.options = $options;\n  anim8.builder = $builder;\n  anim8.path = $path;\n  anim8.repeat = $repeat;\n  anim8.scale = $scale;\n  anim8.sleep = $sleep;\n  anim8.spring = $spring;\n  anim8.time = $time;\n  anim8.transition = $transition;\n  anim8.deltas = $deltas;\n\n  // Modules\n  // - color.js\n  anim8.Color = Color;\n  // - computed.js\n  anim8.computed = computed;\n  anim8.isComputed = isComputed;\n  anim8.resolveComputed = resolveComputed;\n  // - dynamic.js\n  anim8.composite = composite;\n  anim8.partial = partial;\n  anim8.spread = spread;\n  // - eventize.js\n  anim8.eventize = eventize;\n  // - save.js\n  anim8.save = save;\n  anim8.saveGroup = saveGroup;\n  anim8.SaveOptions = SaveOptions;\n  // - translate.js\n  anim8.translate = translate;\n  // - param.js\n  anim8.param = param;\n  anim8.paramFactory = paramFactory;\n  anim8.paramCalculator = paramCalculator;\n  anim8.Parameters = Parameters;\n\n  // Classes\n  anim8.Aninmation = Animation;\n  anim8.Animator = Animator;\n  anim8.Animators = Animators;\n  anim8.Attrimator = Attrimator;\n  anim8.AttrimatorMap = AttrimatorMap;\n  anim8.Calculator = Calculator;\n  anim8.Defer = Defer;\n  anim8.DeferAnimator = DeferAnimator;\n  anim8.Event = Event;\n  anim8.EventState = EventState;\n  anim8.Factory = Factory;\n  anim8.FastMap = FastMap;\n  anim8.Oncer = Oncer;\n  anim8.Builder = Builder;\n  anim8.Path = Path;\n  anim8.Physics = Physics;\n  anim8.Sequence = Sequence;\n  anim8.Spring = Spring;\n\n  // Movie\n  anim8.Movie = Movie;\n  anim8.MoviePlayer = MoviePlayer;\n  anim8.MovieTimeline = MovieTimeline;\n\n  // Calculators\n  anim8.Calculator2d = Calculator2d;\n  anim8.Calculator3d = Calculator3d;\n  anim8.CalculatorNumber = CalculatorNumber;\n  anim8.CalculatorQuaternion = CalculatorQuaternion;\n  anim8.CalculatorRGB = CalculatorRGB;\n  anim8.CalculatorRGBA = CalculatorRGBA;\n  anim8.CalculatorString = CalculatorString;\n\n  // Factories\n  anim8.object = object;\n  anim8.FactoryObject = FactoryObject;\n\n  // Builders\n  anim8.BuilderAnd = BuilderAnd;\n  anim8.BuilderDeltas = BuilderDeltas;\n  anim8.BuilderFinal = BuilderFinal;\n  anim8.BuilderInitial = BuilderInitial;\n  anim8.BuilderKeyframe = BuilderKeyframe;\n  anim8.BuilderMove = BuilderMove;\n  anim8.BuilderPath = BuilderPath;\n  anim8.BuilderPhysics = BuilderPhysics;\n  anim8.BuilderQueue = BuilderQueue;\n  anim8.BuilderSpring = BuilderSpring;\n  anim8.BuilderTravel = BuilderTravel;\n  anim8.BuilderTweenFrom = BuilderTweenFrom;\n  anim8.BuilderTweenTo = BuilderTweenTo;\n\n  // Paths\n  anim8.PathBasisSpline = PathBasisSpline;\n  anim8.PathBezier = PathBezier;\n  anim8.PathCatmullRom = PathCatmullRom;\n  anim8.PathCombo = PathCombo;\n  anim8.PathCompiled = PathCompiled;\n  anim8.PathCubic = PathCubic;\n  anim8.PathDelta = PathDelta;\n  anim8.PathHermite = PathHermite;\n  anim8.PathJump = PathJump;\n  anim8.PathKeyframe = PathKeyframe;\n  anim8.PathLinear = PathLinear;\n  anim8.PathParametric = PathParametric;\n  anim8.PathQuadratic = PathQuadratic;\n  anim8.PathQuadraticCorner = PathQuadraticCorner;\n  anim8.PathSub = PathSub;\n  anim8.PathUniform = PathUniform;\n  anim8.PathTween = Tween;\n  anim8.PathPoint = PathPoint;\n\n  // Springs\n  anim8.SpringDistance = SpringDistance;\n  anim8.SpringLinear = SpringLinear;\n\n  return anim8;\n\n}));\n"],"sourceRoot":"/source/"}