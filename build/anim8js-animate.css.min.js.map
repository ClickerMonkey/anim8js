{"version":3,"sources":["anim8js-core.js","anim8js-easing.js","anim8js-path.js","anim8js-spring.js","anim8js-event.js","anim8js-animation.js","anim8js-animator.js","anim8js-sequence.js","anim8js-color.js","anim8js-calculator.js","anim8js-parser-deltavalues.js","anim8js-parser-final.js","anim8js-parser-initial.js","anim8js-parser-keyframe.js","anim8js-object.js","anim8js-dom-core.js","anim8js-dom-property.js","anim8js-dom-attribute.js","anim8js-dom-animator.js","anim8js-animate.css.js"],"names":["m8","anim8","subjects","this","window","args","Array","prototype","slice","call","arguments","isArray","i","length","push","animators","arg","Animator","factory","factories","parseAnimators","noop","isDefined","x","isFunction","constructor","apply","isNumber","isString","isObject","isElement","HTMLElement","nodeType","nodeName","now","Date","getTime","copy","p","coalesce","a","b","c","d","delegate","functionName","returning","RETURN_THIS","RETURN_RESULTS","results","RETURN_FIRST","undefined","eventize","object","onListeners","$this","property","events","callback","context","split","on","once","offListeners","listeners","event","eventListeners","k","splice","off","$on","$once","triggerListeners","argument","clear","trigger","time","regex","conversions","s","sec","min","ms","hr","parsed","exec","parseFloat","unit","Math","floor","constant","variable","subject","optional","factoryName","is","attribute","attr","defaultValue","easing","indexOf","pair","e","t","easingType","bezier","isEasingName","calculator","calc","parser","animation","options","Animation","parserName","defaults","duration","teasing","delay","sleep","repeat","each","iterator","filter","filterer","alive","remove","isAnimating","first","sequence","Sequence","pause","transition","play","resume","stop","finish","end","queue","restore","eventsFor","set","get","spring","unspring","springsFor","applyInitialState","running","live","animating","requestRun","vendors","requestor","requestAnimationFrame","lastTime","timeToCall","max","currTime","id","setTimeout","add","animator","active","run","preupdate","update","finished","cleanup","out","inout","pong","linear","quad","ease","i2","x2","eq1","eq2","cubic","quartic","quintic","back","x3","sine","sin","overshot","elastic","scale","wave","revisit","abs","lasso","cos","slowbounce","bounce","smallbounce","inv","tinybounce","hesitant","sqrt","sqrtf","log10","slingshot","circular","gentle","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","cssEase","cssEaseIn","cssEaseOut","cssEaseInOut","cssLinear","path","Path","type","reset","name","points","trues","hasTrue","compute","ps","reference","last","point","resolvePoint","DeltaPath","deltas","delta","ds","d0","d1","pd","p0","p1","interpolate","parse","PointPath","KeyframePath","easings","ea","keyframe","defaultEasing","CubicPath","p2","p3","d2","d3","i1","i3","adds","QuadraticPath","quadratic","CompiledPath","pointCount","create","index","compiled","Tween","start","tween","JumpPath","jump","Spring","rest","position","gravity","velocity","frame","dt","MAX_DT","starting","updateVelocity","updated","isEqual","EPSILON","resolveRest","BoxSpring","acceleration","sub","mul","box","LinearSpring","damping","stiffness","temp0","temp1","DistanceSpring","distance","temp","EventState","CREATED","DELAYED","ANIMATING","SLEEPING","PAUSED","FINISHED","Event","totalTime","newInstance","EventInstance","state","pauseTime","pauseState","elapsed","next","catchup","isInfinite","progress","applyValue","getPoint","getFuture","fdelta","getDelta","getStart","getEnd","baseValue","value","isPaused","isDelayed","isSleeping","cycle","cycleCount","maxCycles","newState","timeRemaining","timeRemainingInChain","Number","POSITIVE_INFINITY","hasStarted","isFinished","hasStates","states","stateText","input","isSaved","mergeOptions","durations","delays","sleeps","repeats","newEvents","save","springs","attributes","wasFinished","placeSpring","placeEvent","trimEvents","createEvents","onAnimation","all","attrs","maxRemaining","transitionTime","transitionDelta","transitionEasing","e1","e2","transitionPath","transitionEvent","eventCount","ref","request","current","follow","objectsFor","objects","resulting","objectCount","hasEvents","hasSprings","maxDelay","delayOffset","color","r","g","parsers","parseComponent","parseFunction","v","vparsed","isNaN","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","named","matches","parseInt","invalidColor","format","ca","cr","cg","cb","toString","methods","defaultMethods","clone","amount","zero","distanceSq","isPristine","method","amountScale","ab","isValid","isZero","epsilon","y","aliases","left","right","middle","center","top","bottom","_x","_y","dx","dy","z","dz","angle","da","dr","dg","db","number","values","deltaObject","calculators","initial","kframes","sort","from","half","to","times","maxTime","order","key","pathEasings","$animator","prop","style","hyphenize","str","replace","currentStyle","document","defaultView","getComputedStyle","getPropertyValue","prefix","createElement","prefixes","toPixels","baseUnit","defaultRate","body","div","appendChild","width","pixels","offsetWidth","removeChild","parseValue","convert","getFontSize","notUnit","fontSize","getConverterScale","px","relativeTo","variables","parentWidth","parentNode","scrollWidth","parentHeight","scrollHeight","height","offsetHeight","parentFontSize","htmlFontSize","htmlElement","getElementsByTagName","pt","cm","mm","vw","deg","rad","PI","em","rem","given","converter","toUnit","fromUnit","converter1","converter2","dom","ids","cached","has","getAttribute","animatorId","DomAnimator","setAttribute","nm","anim","converted","units","styles","unset","factoryDerivable","deriver","factoryColor","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","outlineWidth","textIndent","borderSpacing","lineHeight","zIndex","backgroundColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","outlineColor","minWidth","maxWidth","minHeight","maxHeight","offsetTop","offsetLeft","visibility","backface","css","transformOrigin","keywords","setOriginAttribute","setOrigin","origin","originZ","valueOr","transform","translate","translate3d","scale3d","d4","rotate3d","translateX","translateY","translateZ","scaleX","scaleY","scaleZ","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY","desiredUnit","transforms","join","opacity","grayscale","sepia","saturate","hueRotate","invert","brightness","contrast","blur","patterns","RegExp","filters","cx","cy","ccx","ccy","centerX","centerY","preset","rw","rh","orbit","DEGREE_TO_RADIAN","RADIAN_TO_DEGREE","ox","oy","orbitOffset","cunit","cox","coy","atan2","orbitX","orbitY","originUnit","originX","originY","defaultUnit","outlineOffset","saturation","properties","truesUpdated","attributeToProperty","styled","stylesUpdated","getStyles","applyProperties","props","flash","other","subproperty","0,20,53,80,100","40,43","70","90","0,100","30","40","50","65","75","0,50,100","25,75","0","100","10,30,50,70,90","20,40,60,80","20","60","80","10,20","30,50,70,90","40,60,80","15","45","50,55","40,45","final","20,60","actions","slide","fade","zoom","directions","Out","In","vertical","Down","Up","horizontal","Right","Left","sizes","Big","dir","ver","h","hor","siz","animName"],"mappings":"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","file":"anim8js-animate.css.min.js","sourcesContent":["\n/**\n * The core object of the framework. It extends Array and the method can be used \n * to construct an array of animators from subjects.\n * \n * @param {array} subjects\n */\nm8 = anim8 = function(subjects) \n{\n  if ( this === window ) \n  {\n\t\tvar args = Array.prototype.slice.call( arguments );\n\t\t\n\t\tif ( !anim8.isArray( subjects ) )\n\t\t{\n\t\t\tsubjects = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < args.length; i++)\n\t\t\t{\n\t\t\t\tsubjects.push( args[i] );\n\t\t\t}\n\t\t}\n\t\t\n    var animators = [];\n    \n    for (var i = 0; i < subjects.length; i++) \n    {\n      var arg = subjects[ i ];\n      \n      if ( arg instanceof anim8.Animator ) \n      {\n        animators.push( arg );\n      } \n      else\n      {\n\t\t\t\tvar factory = anim8.factories( arg );\n\t\t\t\t\n\t\t\t\tif (factory !== false)\n\t\t\t\t{\n          factory.parseAnimators( arg, animators );\n\t\t\t\t}\n      }\n    }\n\t\t\n\t\treturn new anim8( animators );\n  } \n  else \n  {\n    for (var i = 0; i < subjects.length; i++) \n    {\n      this.push( subjects[ i ] );\n    }\n  }\n};\n\n/*****************************************************************\n  UTILITY FUNCTIONS\n******************************************************************/\n\n/**\n * A function that does nothing.\n */\nanim8.noop = function() {};\n\n/**\n * Returns true if the given variable is defined.\n */\nanim8.isDefined = function(x) \n{\n  return typeof x !== 'undefined';\n};\n\n/**\n * Returns true if the given variable is a function.\n */\nanim8.isFunction = function(x) \n{\n  return !!(x && x.constructor && x.call && x.apply);\n};\n\n/**\n * Returns true if the given variable is a number.\n */\nanim8.isNumber = function(x) \n{\n  return typeof x === 'number';\n};\n\n/**\n * Returns true if the given variable is a string.\n */\nanim8.isString = function(x) \n{\n  return typeof x === 'string';\n};\n\n/**\n * Returns true if the given variable is an array. This should be checked before\n * anim8.isObject since Arrays are objects.\n */\nanim8.isArray = function(x) \n{\n  return x instanceof Array;\n};\n\n/**\n * Returns true if the given variable is an object.\n */\nanim8.isObject = function(x) \n{\n  return typeof x === 'object';\n};\n\n/**\n * Returns true if the given variable is an HTML element.\n */\nanim8.isElement = function(x)\n{\n  return typeof HTMLElement === \"object\" ? x instanceof HTMLElement :\n  x && typeof x === \"object\" && x !== null && x.nodeType === 1 && typeof x.nodeName === \"string\";\n};\n\n/**\n * Returns the current time in milliseconds.\n */\nanim8.now = (function() {\n\n  return Date.now ? Date.now : function() \n  {\n    return new Date().getTime();\n  };\n  \n})();\n\n\n/**\n * Performs a deep copy of the given variable. If the variable is an array or object a new instance\n * of that type is created where the values are copied as well. All other types can't be copied\n * (most likely because they're scalar) so they are returned as-is.\n *\n * @param {any} x\n */\nanim8.copy = function(x) \n{\n  if ( anim8.isArray(x) ) \n  {\n    var copy = [];\n    for (var i = 0; i < x.length; i++) \n    {\n      copy.push( anim8.copy( x[i] ) );\n    }\n    x = copy;\n  }\n  else if ( anim8.isObject(x) ) \n  {\n    var copy = {};\n    for (var p in x) \n    {\n      copy[p] = anim8.copy( x[p] );\n    }\n    x = copy;\n  }\n  \n  return x;\n};\n\n/**\n * Returns the first defined variable of a possible 4 variables.\n */\nanim8.coalesce = function(a, b, c, d) \n{\n  if (anim8.isDefined(a)) return a;\n  if (anim8.isDefined(b)) return b;\n  if (anim8.isDefined(c)) return c;\n  return d;\n};\n\n/**\n * Creates a function which calls a method on all elements in the array or on the first element.\n *\n * @param {string} functionName\n * @param {string} returning\n */\nanim8.delegate = function(functionName, returning) \n{  \n  switch (returning)\n  {\n  case anim8.delegate.RETURN_THIS:\n    return function() \n    {\n      for (var i = 0; i < this.length; i++) \n      {\n        this[i][functionName].apply( this[i], arguments );\n      }\n      \n      return this;  \n    };\n    \n  case anim8.delegate.RETURN_RESULTS:\n    return function() \n    {\n      var results = [];\n    \n      for (var i = 0; i < this.length; i++) \n      {\n        results.push( this[i][functionName].apply( this[i], arguments ) );\n      }\n    \n      return results;\n    };\n    \n  case anim8.delegate.RETURN_FIRST:\n    return function()\n    {\n      return this.length === 0 ? undefined : this[0][functionName].apply( this[0], arguments );\n    };\n  }\n  \n  return anim8.noop;\n};\n\n/**\n * this is returned at the end.\n */\nanim8.delegate.RETURN_THIS = 'this';\n\n/**\n * An array of results for each method call is returned.\n */\nanim8.delegate.RETURN_RESULTS = 'results';\n\n/**\n * The result of the first element.\n */\nanim8.delegate.RETURN_FIRST = 'first';\n\n\n/**\n * Adds functions to the given object (or prototype) so you can listen for any number of events\n * on the given object, optionally once. Listeners can be removed later.\n */\nanim8.eventize = function(object)\n{\n  var onListeners = function($this, property, events, callback, context)\n  {\n    events = events.split(' ');\n    \n    if ( !anim8.isDefined( $this[ property ] ) )\n    {\n      $this[ property ] = {};\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      if ( !anim8.isDefined( $this[ property ][ events[i] ] ) )\n      {\n        $this[ property ][ events[i] ] = [];\n      }\n      \n      $this[ property ][ events[i] ].push( [ callback, context || $this ] );\n    }\n  };\n  \n  object.on = function(events, callback, context)\n  {\n    onListeners( this, '$on', events, callback, context );\n  };\n  \n  object.once = function(events, callback, context)\n  {\n    onListeners( this, '$once', events, callback, context );\n  };\n  \n  var offListeners = function(listeners, event, callback)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var k = eventListeners.length - 1; k >= 0; k--)\n      {\n        if (eventListeners[ k ][0] === callback)\n        {\n          eventListeners.splice( k, 1 );\n        }\n      }  \n    }\n  };\n  \n  object.off = function(events, callback)\n  {\n    events = events.split(' ');\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      offListeners( this.$on, events[i] );\n      offListeners( this.$once, events[i] );\n    }\n  };\n  \n  var triggerListeners = function(listeners, event, argument, clear)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var i = 0; i < eventListeners.length; i++)\n      {\n        var callback = eventListeners[ i ];\n        \n        callback[0].call( callback[1], argument );\n      }\n      \n      if ( clear )\n      {\n        eventListeners.length = 0;\n      }\n    }\n  }\n  \n  object.trigger = function(event, argument)\n  {\n    triggerListeners( this.$on, event, argument, false );\n    triggerListeners( this.$once, event, argument, true );\n  };\n};\n\n/**\n * Parses milliseconds from a string or number. If a number is given it's assumed to be milliseconds\n * and is returned immediately.\n *\n * @param {string|number} time\n */\nanim8.time = (function()\n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(s|sec|min|ms|hr)?/;\n  \n  var conversions = {\n    s:    1000,\n    sec:  1000,\n    min:  1000 * 60,\n    ms:   1,\n    hr:   1000 * 60 * 60\n  };\n  \n  return function(time) \n  {  \n    if ( anim8.isNumber( time ) )\n    {\n      return time;\n    }\n    if ( anim8.isString( time ) )\n    {\n      var parsed = regex.exec( time );\n      \n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n        \n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n        \n        return Math.floor(time);\n      }\n    }\n    \n    return false;\n  };\n  \n})();\n\n/**\n * Provides a way to wrap a variable so calculators don't try copying it on parse.\n *\n * @param {any} variable\n */\nanim8.constant = function(variable)\n{\n  return function() \n  {\n    return variable;\n  };\n};\n\n\n/*****************************************************************\n  REGISTRIES\n******************************************************************/\n\n/**\n * Returns a factory for the given subject or throws an error if no factory exists.\n *\n * @param {any} subject\n */\nanim8.factories = function(subject, optional) \n{\n\tfor (var factoryName in anim8.factories) \n\t{\n\t\tvar factory = anim8.factories[ factoryName ];\n\t\t\t\n\t\tif ( factory.is( subject ) )\n\t\t{\t\t\t\n\t\t\treturn factory;\n\t\t}\n\t}\n  \n  if ( optional )\n  {\n    return false;\n  }\n\t\n\tthrow 'No factory exists for subject ' + subject;\n};\n\n/* Attributes are the animatable properties of a subject\n\n  anim8.attribute[name] = {\n    // the default value for an attribute if none exists on the subject\n    defaultValue: 0,\n    // the name of the calculator this attribute requires for mathematical operations. default value: anim8.calculator.default\n    calculator: calculatorName,\n    // other values can be specified here that the respective factory might use\n    \"factory specific attributes\"\n  }\n*/\n\n/**\n * Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\n * returned immediately. If the input is a string the attribute with the given name is returned. Otherwise\n * the default attribute is returned.\n *\n * @param {object|string} attr\n */\nanim8.attribute = function(attr) \n{\n  if ( anim8.isObject(attr) && anim8.isDefined(attr.defaultValue) ) \n\t{\n    return attr;\n  }\n  if ( anim8.isString(attr) && attr in anim8.attribute ) \n\t{\n    return anim8.attribute[ attr ];\n  }\n\t\n  return anim8.attribute.default;\n};\n\n/**\n * The default attribute.\n */\nanim8.attribute.default = {defaultValue: 0};\n \n/* Easings are functions that are magic\n\n  anim8.applier[name] = {\n    // array of properties required \n    properties: [],\n    // function to invoke each frame\n    apply: function(e, anim)\n  }\n*/\n\n/**\n * Returns an easing based on the given input. If the input is a function it's assumed to be an easing function and is\n * returned immediately. If the input is a string the easing with that name is returned. If the input is a string in the\n * format 'easing-easingType' then an easing is returned that is a combination of the easing with the given name and the\n * easingType with the given name. If the given input is an array with 4 elements it's assumed to be a bezier path and\n * one is created and returned. If no input is given the default easing is returned. If an easing cannot be determined\n * then an error is thrown.\n * \n * @param {function|string|array} easing\n */\nanim8.easing = function(easing, optional) \n{\n  if ( anim8.isFunction( easing ) ) \n\t{\n    return easing;\n  }\n\tif ( anim8.isString( easing ) )\n\t{\n\t\tif ( easing in anim8.easing )\n\t\t{\n\t\t\treturn anim8.easing[ easing ];\n\t\t}\n\t\tif ( easing.indexOf('-') !== -1 )\n\t\t{\n\t\t\tvar pair = easing.split('-');\n\t\t\tvar e = pair[0];\n\t\t\tvar t = pair[1];\n\t\t\t\n\t\t\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t\t\t{\t\t\t\t\n\t\t\t\treturn anim8.easingType[ t ]( anim8.easing[ e ] );\n\t\t\t}\n\t\t}\n\t}\n  if ( anim8.isArray( easing ) && easing.length === 4 && anim8.isNumber( easing[0] ) && anim8.isNumber( easing[1] ) && anim8.isNumber( easing[2] ) && anim8.isNumber( easing[3] ) ) \n\t{\n    return anim8.easing.bezier.apply( null, easing );\n  }\n  if ( !anim8.isDefined( easing ) ) \n\t{\n    return anim8.easing.default;\n  }\n\t\n  if ( optional )\n  {\n    return false;\n  }\n  \n  throw easing + ' is not a valid easing';\n};\n\n/**\n * Returns true if the given string would result in returning an easing.\n * \n * @see anim8.easing\n * @param {string} easing\n */\nanim8.isEasingName = function(easing)\n{\n  if ( easing in anim8.easing )\n  {\n    return true;\n  }\n  \n\tvar pair = easing.split('-');\n\tvar e = pair[0];\n\tvar t = pair[1];\n\t\n\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t{\t\t\t\t\n    return true;\n\t}\n  \n  return false;\n};\n\n/**\n * Returns an easing type based on the input. If the input is a function that function is immediately returned. \n * If the input is a string the easing type with that name is returned. If no easing type could be determined\n * an error is thrown.\n *\n * @param {function|string} easingType\n */\nanim8.easingType = function(easingType, optional)\n{\n\tif ( anim8.isFunction( easingType ) )\n\t{\n\t\treturn easingType;\n\t}\n\tif ( anim8.isString( easingType ) && easingType in anim8.easingType )\n\t{\n\t\treturn anim8.easingType[ easingType ];\n\t}\n  \n  if ( optional )\n  {\n    return false;\n  }\n\t\n\tthrow easingType + ' is not a valid easing type';\n};\n\n/**\n * Returns a calculator based on the input. If the input is an object that object is immediately returned.\n * If the input is a string the calculator with that name is returned. If no calculator could be determined\n * the default calculator is returned.\n *\n * @param {object|string} calc\n */\nanim8.calculator = function(calc)\n{\n\tif ( anim8.isObject(calc) )\n\t{\n\t\treturn calc;\n\t}\n\tif ( anim8.isString( calc ) && calc in anim8.calculator )\n\t{\n\t\treturn anim8.calculator[ calc ];\n\t}\n\t\n\treturn anim8.calculator.default;\n};\n\n/**\n * Returns a parser based on the input. If the input is a function that function is immediately returned.\n * If the input is a string the parser with that name is returned. If no parser could be determined then\n * false is returned.\n * \n * @param {function|string} parser\n */\nanim8.parser = function(parser)\n{\n\tif ( anim8.isFunction( parser ) )\n\t{\n\t\treturn parser;\n\t}\n\tif ( anim8.isString( parser ) && parser in anim8.parser )\n\t{\n\t\treturn anim8.parser[ parser ];\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Returns an animation based on the input. If the input is an instance of anim8.Animation that instance\n * is immediately returned. If the input is a string the animation with that name is returned. If the\n * input is an object an anonymous animation is created using the second options argument. If no animation\n * could be determined then false is returned.\n * \n * @param {anim8.Animation|string|object} animation\n * @param [object] options\n */\nanim8.animation = function(animation, options)\n{\n  if ( animation instanceof anim8.Animation )\n  {\n    return animation;\n  }\n\tif ( anim8.isString( animation ) && animation in anim8.animation )\n\t{\n\t\treturn anim8.animation[ animation ];\n\t}\n\tif ( anim8.isObject( animation ) )\n\t{\n\t\tvar events = [];\n\t\t\n\t\toptions = options || {};\n\t\t\n\t\tfor (var parserName in animation)\n\t\t{\n\t\t\tvar parser = anim8.parser( parserName );\n\t\t\t\n\t\t\tif ( parser !== false )\n\t\t\t{\n\t\t\t\tparser( animation, options, events );\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (events.length)\n\t\t{\n\t\t\treturn new anim8.Animation( false, animation, options, events );\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * The default values for event properties.\n */\nanim8.defaults = \n{\n  duration: 1000,\n  easing: 'ease',\n  teasing: 'linear',\n  delay: 0,\n  sleep: 0,\n  repeat: 1\n};\n\n\n/*****************************************************************\n  ANIM8 DEFINITION\n******************************************************************/\n\n/**\n * anim8 is an instance of Array. All array methods are supported.\n */\nanim8.prototype = new Array();\n\n/**\n * Invokes a callback for each element in the array.\n * \n * @param {function} iterator\n */\nanim8.prototype.each = function(iterator, context) \n{\n  for (var i = 0; i < this.length; i++) \n  {\n    if ( iterator.call( context || this[i], this[i], i ) === false ) \n    {\n      break;\n    }\n  }\n\t\n\treturn this;\n};\n\n/**\n * Invokes a callback for each element in the array and if true is returned that element is removed from the array.\n *\n * @param {function} filterer\n */\nanim8.prototype.filter = function(filterer)\n{\t\n\tvar alive = 0;\n\t\n\tfor (var i = 0; i < this.length; i++)\n\t{\n\t\tvar remove = filterer( this[i] );\n\t\t\n\t\tif ( !remove )\n\t\t{\n\t\t\tthis[alive++] = this[i];\n\t\t}\n\t}\n\t\n\tthis.length = alive;\n\t\n\treturn this;\n};\n\n/**\n * Returns true if any of the animators in the array are animating.\n */\nanim8.prototype.isAnimating = function() \n{\n  for (var i = 0; i < this.length; i++)\n  {\n    if ( this[i].isAnimating() )\n    {\n      return true;\n    }\n  }\n  \n  return false;\n};\n\n/**\n * Returns the first animator in the array.\n */\nanim8.prototype.first = function()\n{\n  return this[0];\n};\n\n/**\n * Plays a sequence of events separated by a delay given an animation to play on all Animators.\n */\nanim8.prototype.sequence = function(delay, easing, animation, options)\n{\n  return new anim8.Sequence( this, delay, easing, animation, options );\n};\n\n/**\n * Adds the following methods to anim8 to make an array of Animators appear like a single Animator.\n */\nanim8.prototype.pause \t\t\t= anim8.delegate( 'pause', anim8.delegate.RETURN_THIS );\nanim8.prototype.transition \t= anim8.delegate( 'transition', anim8.delegate.RETURN_THIS );\nanim8.prototype.play \t\t\t\t= anim8.delegate( 'play', anim8.delegate.RETURN_THIS );\nanim8.prototype.resume \t\t\t= anim8.delegate( 'resume', anim8.delegate.RETURN_THIS );\nanim8.prototype.stop \t\t\t\t= anim8.delegate( 'stop', anim8.delegate.RETURN_THIS );\nanim8.prototype.finish \t\t\t= anim8.delegate( 'finish', anim8.delegate.RETURN_THIS );\nanim8.prototype.end   \t\t\t= anim8.delegate( 'end', anim8.delegate.RETURN_THIS );\nanim8.prototype.queue \t\t\t= anim8.delegate( 'queue', anim8.delegate.RETURN_THIS );\nanim8.prototype.restore\t\t\t= anim8.delegate( 'restore', anim8.delegate.RETURN_THIS );\nanim8.prototype.eventsFor   = anim8.delegate( 'eventsFor', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.set         = anim8.delegate( 'set', anim8.delegate.RETURN_THIS );\nanim8.prototype.get         = anim8.delegate( 'get', anim8.delegate.RETURN_FIRST );\nanim8.prototype.spring \t\t\t= anim8.delegate( 'spring', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.unspring \t\t= anim8.delegate( 'unspring', anim8.delegate.RETURN_THIS );\nanim8.prototype.springsFor \t= anim8.delegate( 'springsFor', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.applyInitialState = anim8.delegate( 'applyInitialState', anim8.delegate.RETURN_THIS );\n\nanim8.prototype.on\t\t\t    = anim8.delegate( 'on', anim8.delegate.RETURN_THIS );\nanim8.prototype.once\t\t    = anim8.delegate( 'once', anim8.delegate.RETURN_THIS );\nanim8.prototype.off\t\t\t    = anim8.delegate( 'off', anim8.delegate.RETURN_THIS );\nanim8.prototype.trigger     = anim8.delegate( 'trigger', anim8.delegate.RETURN_THIS );\n\n/*****************************************************************\n  ANIM8 ANIMATION LOOP\n******************************************************************/\n\n/**\n * Whether the animation cycle is currently running. This is true\n * when where are active animators and anim8.run is being called\n * and false otherwise.\n */\nanim8.running = false;\n\n/**\n * Live Mode keeps the animation cycles running even when there aren't\n * Animators. For highly interactive applications enabling this may\n * take up more resources but it will result in smoother animations. When\n * the animation cycle goes from stopped to running it takes a few frames\n * to smooth out when this is false.\n */\nanim8.live = false;\n\n/**\n * The anim8 instance for all active animators.\n */\nanim8.animating = anim8();\n\n/**\n * The function to call if animations need to be done.\n *\n * @param {function} callback\n */\nanim8.requestRun = (function() \n{  \n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n  var requestor = window.requestAnimationFrame;\n  \n  for (var x = 0; x < vendors.length && !requestor; ++x) \n  {\n    requestor = window[ vendors[x] + 'RequestAnimationFrame' ];\n  }\n  \n  if (!requestor)\n  {\n    var lastTime = 0;\n    \n    return function(callback)\n    {\n      var now = anim8.now();\n      var timeToCall = Math.max( 0, 16 - (currTime - lastTime) );\n      var id = window.setTimeout( function() { callback( currTime + timeToCall ); }, timeToCall );\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n  \n  return function(callback)\n  {\n    requestor( callback );\n  };\n  \n})();\n\n/**\n * Adds an animator to the list if animating if it isn't there already. If the animation\n * loop isn't currently running it's started.\n * \n * @param {anim8.Animator} animator\n */\nanim8.add = function(animator)\n{\n  if ( !animator.active )\n  {\n    anim8.animating.push( animator );\n    \n    animator.active = true;\n  }\n  \n  if ( !anim8.running )\n  {\n    anim8.running = true;\n\t\tanim8.trigger('starting');\n\t\tanim8.requestRun( anim8.run );\n  }\n}\n\n/**\n * Executes an animation cycle which consists of four operations:\n *   1. Call preupdate on all Animators\n *   2. Call update on all Animators\n *   3. Call apply on all Animators\n *   4. Remove finished Animators\n * When there are no more animating the cycle is stopped.\n */\nanim8.run = function() \n{\n\tanim8.trigger('begin');\n\t\n  var now = anim8.now();\n  \n  // notify animators that we're about to update\n  anim8.animating.each(function(animator)\n  {\n    animator.preupdate();\n  });\n  \n  // update animating based on the current time\n  anim8.animating.each(function(animator)\n  {\n    animator.update( now );\n  });\n  \n  // apply the attributes calculated\n  anim8.animating.each(function(animator)\n  {\n    animator.apply();\n  });\n  \n  // if the animator is done remove it\n  anim8.animating.filter(function(animator)\n  {\n    if ( animator.finished )\n    {\n\t\t\tanimator.cleanup();\n      animator.active = false;\n    }\n    \n    return animator.finished;\n  });\n\t\n\tanim8.trigger('end');\n  \n  // if there are animators still remaining call me again!\n  if ( anim8.animating.length || anim8.live )\n  {\n\t\tanim8.requestRun( anim8.run );\n  } \n  else \n  {\n    anim8.running = false;\n\t\tanim8.trigger('finished');\n  }\n};\n\n/**\n * Add events to the animation cycle: begin, end, finished, starting\n */\nanim8.eventize( anim8 );","\n/**\n * Easing & Easing Type functions\n */\n\nanim8.easingType.in = function(easing) \n{\n\treturn function(x) {\n\t\treturn easing( x );\n\t};\n};\n\nanim8.easingType.out = function(easing) \n{\n\treturn function(x) {\n\t\treturn 1.0 - easing( 1.0 - x );\n\t};\n};\n\nanim8.easingType.inout = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x ) * 0.5;\n\t  } else {\n\t    return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n\t  }\n\t};\n};\n\nanim8.easingType.pong = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x );\n\t  } else {\n\t    return easing( 2.0 - 2.0 * x );\n\t  }\n\t};\n};\n\nanim8.easing.linear = function(x) \n{\n  return x;\n};\n\nanim8.easing.quad = function(x)\n{\n  return x * x;\n};\n\nanim8.easing.ease = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n  \n  return eq1 * i + eq2 * x;\n};\n\nanim8.easing.cubic = function(x) \n{\n  return x * x * x;\n};\n\nanim8.easing.quartic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\nanim8.easing.quintic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\nanim8.easing.back = function(x) \n{\n  var x2 = x * x;\n\tvar x3 = x2 * x;\n\treturn x3 + x2 - x;\n};\n\nanim8.easing.sine = function(x) \n{\n\treturn Math.sin( x * 1.57079632679 );\n};\n\nanim8.easing.overshot = function(x)\n{\n  return (1.0 - x * (7.0 / 10/0)) * x * (10.0 / 3.0);\n};\n\nanim8.easing.elastic = function(x) \n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n\tvar wave = -Math.sin(x * 10.9955742876);\n\treturn scale * wave;\n};\n\nanim8.easing.revisit = function(x) \n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\nanim8.easing.lasso = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x))\n};\n\nanim8.easing.slowbounce = function(x) \n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\nanim8.easing.bounce = function(x) \n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.smallbounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.tinybounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\nanim8.easing.hesitant = function(x) \n{\n\treturn (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\nanim8.easing.lasso = function(x)\n{\n  var x2 = x * x;\n\treturn (1.0 - Math.cos(x2 * x * 36.0) * (1.0 - x));\n};\n\nanim8.easing.sqrt = function(x)\n{\n  return Math.sqrt( x );\n};\n\nanim8.easing.sqrtf = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\nanim8.easing.log10 = function(x)\n{\n  return (Math.log10(x) + 2.0) * 0.5;\n};\n\nanim8.easing.slingshot = function(x)\n{\n  if (x < 0.7) {\n\t\treturn (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\nanim8.easing.circular = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\nanim8.easing.gentle = function(x)\n{\n  return  (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\nanim8.easing.bezier = function(mX1, mY1, mX2, mY2) \n{\n  // https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\n  \n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope == 0.0) return aGuessT;\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n  \n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\nanim8.easing.cssEase      = anim8.easing.ease;\nanim8.easing.cssEaseIn    = anim8.easing.quad;\nanim8.easing.cssEaseOut   = anim8.easingType.out( anim8.easing.quad );\nanim8.easing.cssEaseInOut = anim8.easingType.inout( anim8.easing.quad );\nanim8.easing.cssLinear    = anim8.easing.linear;\n\nanim8.easing.default      = anim8.easing.ease;","anim8.path = function(path)\n{\n  if ( path instanceof anim8.Path )\n  {\n    return path;\n  }\n  if ( anim8.isString( path ) && path in anim8.path )\n  {\n    return anim8.path[ spring ];\n  }\n  if ( anim8.isObject( path ) && path.type in anim8.path )\n  {\n    return anim8.path[ path.type ]( path );\n  }\n  \n  return false;\n};\n\n\nanim8.Path = function()\n{\n};\n\nanim8.Path.prototype = \n{\n  reset: function(name, calculator, points)\n  {\n    this.name = name;\n    this.calculator = anim8.calculator( calculator );\n    this.points = points;\n    this.trues = this.hasTrue();\n  },\n  compute: function(out, delta) \n\t{\n    return out;\n  },\n  hasTrue: function() \n\t{\n    var ps = this.points;\n    \n    for (var i = 0; i < ps.length; i++) \n    {\n      if (ps[i] === true) \n      {\n        return true;\n      }\n    }\n    return false;\n  },\n  reference: function() \n\t{\n    return this.trues ? this.copy() : this;\n  },\n  last: function()\n  {\n    return this.points[ this.points.length - 1 ];\n  },\n  first: function()\n  {\n    return this.points[ 0 ];\n  },\n  point: function(i)\n  {\n    return this.points[ i ];\n  },\n  resolvePoint: function(i)\n  {\n    var p = this.points[ i ];\n    \n    if ( anim8.isFunction( p ) )\n    {\n      p = p();\n    }\n    \n    return p;\n  }\n};\n\n\n\n\n\nanim8.DeltaPath = function(name, calculator, points, deltas) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n};\n\nanim8.DeltaPath.prototype = new anim8.Path();\n\nanim8.DeltaPath.prototype.compute = function(out, delta) \n{\n  var ds = this.deltas;\n  var end = ds.length - 2;\n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.resolvePoint( i );\n  var p1 = this.resolvePoint( i + 1 );\n  \n  return this.calculator.interpolate( out, p0, p1, pd );\n};\n  \nanim8.DeltaPath.prototype.copy = function() \n{\n    return new anim8.DeltaPath( this.name, anim8.copy(this.points), anim8.copy(this.deltas), this.calculator );\n};\n\nanim8.path.delta = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  if (!path.deltas)\n  {\n    path.deltas = [];\n    \n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n\n  for (var i = 0; i < path.points.length; i++)\n  {\n    path.points[ i ] = calc.parse( path.points[i] );\n  }\n  \n  return new anim8.DeltaPath(\n    path.name,\n    calc,\n    path.points,\n    path.deltas\n  );\n};\n\n\n\nanim8.PointPath = function(name, calculator, point)\n{\n  this.reset( name, calculator, [point] );\n};\n\nanim8.PointPath.prototype = new anim8.Path();\n\nanim8.PointPath.prototype.compute = function(out, delta)\n{\n  return this.calculator.copy( out, this.resolvePoint( 0 ) );\n};\n  \nanim8.PointPath.prototype.copy = function() \n{\n  return new anim8.PointPath( this.name, this.calculator, this.points[0] );\n};\n\nanim8.path.point = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  return new anim8.PointPath(\n    path.name,\n    calc,\n    calc.parse( path.point )\n  );\n};\n\n\n\nanim8.KeyframePath = function(name, calculator, points, deltas, easings) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n  this.easings = easings;\n};\n\nanim8.KeyframePath.prototype = new anim8.Path();\n\nanim8.KeyframePath.prototype.compute = function(out, delta) \n{  \n  var ds = this.deltas;\n  var end = ds.length - 2;\n  \n  if ( delta < ds[0] ) {\n    return false;\n  }\n  \n  if ( delta > ds[ds.length - 1] ) {\n    return this.points[ds.length - 1];\n  }\n  \n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.resolvePoint( i );\n  var p1 = this.resolvePoint( i + 1 );\n  var ea = this.easings[i];\n  \n  return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n};\n  \nanim8.KeyframePath.prototype.copy = function() \n{\n  return new anim8.KeyframePath( this.name, this.calculator, anim8.copy(this.points), anim8.copy(this.deltas), anim8.copy(this.easings) );\n};\n\nanim8.path.keyframe = function(point)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  if (!path.deltas)\n  {\n    path.deltas = [];\n    \n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.deltas[ i ] = i / ( path.points.length - 1 );\n    }\n  }\n  \n  var defaultEasing = anim8.easing( path.easings, true );\n  \n  if ( !anim8.isDefined( path.easings ) || !anim8.isArray( path.easings ) || defaultEasing !== null )\n  {\n    path.easings = [];\n    \n    for (var i = 0; i < path.points.length; i++)\n    {\n      path.easings[ i ] = defaultEasing;\n    }\n  }\n  \n  for (var i = 0; i < path.easings.length; i++)\n  {\n    path.easings[ i ] = anim8.easing( path.easings[ i ] );\n  }\n  \n  for (var i = 0; i < path.points.length; i++)\n  {\n    path.points[ i ] = calc.parse( path.points[i] );\n  }\n  \n  return new anim8.KeyframePath(\n    path.name,\n    calc,\n    path.points,\n    path.deltas,\n    path.easings\n  );\n};\n\n\n\n\nanim8.CubicPath = function(name, calculator, p0, p1, p2, p3)\n{\n  this.reset( name, calculator, [p0, p1, p2, p3] );\n};\n\nanim8.CubicPath.prototype = new anim8.Path();\n\nanim8.CubicPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var d3 = d1 * d2;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  var i3 = i1 * i2;\n  \n  out = calc.copy( out, this.resolvePoint( 0 ) );\n  out = calc.scale( out, i3 );\n  out = calc.adds( out, this.resolvePoint( 1 ), 3 * i2 * d1 );\n  out = calc.adds( out, this.resolvePoint( 2 ), 3 * i1 * d2 );\n  out = calc.adds( out, this.resolvePoint( 3 ), d3 );\n  \n  return out;\n};\n  \nanim8.CubicPath.prototype.copy = function() \n{\n  return new anim8.CubicPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n};\n\nanim8.path.cubic = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  return new anim8.CubicPath(\n    path.name,\n    calc,\n    calc.parse( path.p0 ),\n    calc.parse( path.p1 ),\n    calc.parse( path.p2 ),\n    calc.parse( path.p3 )\n  );\n};\n\n\n\n\nanim8.QuadraticPath = function(name, calculator, p0, p1, p2)\n{\n  this.reset( name, calculator, [p0, p1, p2] );\n};\n\nanim8.QuadraticPath.prototype = new anim8.Path();\n\nanim8.QuadraticPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  \n  out = calc.copy( out, this.resolvePoint( 0 ) );\n  out = calc.scale( out, i2 );\n  out = calc.adds( out, this.resolvePoint( 1 ), 2 * i1 * d1 );\n  out = calc.adds( out, this.resolvePoint( 2 ), d2 );\n    \n  return out;\n};\n  \nanim8.QuadraticPath.prototype.copy = function() \n{\n  return new anim8.QuadraticPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n};\n\nanim8.path.quadratic = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  return new anim8.QuadraticPath(\n    path.name,\n    calc,\n    calc.parse( path.p0 ),\n    calc.parse( path.p1 ),\n    calc.parse( path.p2 )\n  );\n};\n\n\n\nanim8.CompiledPath = function(name, path, pointCount)\n{\n  var calc = path.calculator;\n  var points = [];\n  \n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n  \n  this.reset( name, calc, points );\n};\n\nanim8.CompiledPath.prototype = new anim8.Path();\n\nanim8.CompiledPath.prototype.compute = function(out, delta)\n{\n  var a = Math.floor( delta * this.points.length );\n  var index = Math.min( a, this.points.length - 1 );\n  \n  return this.calculator.copy( out, this.resolvePoint( index ) );\n};\n  \nanim8.CompiledPath.prototype.copy = function() \n{\n  return new anim8.CompiledPath( this.name, this, this.points.length );\n};\n\nanim8.path.compiled = function(path)\n{\n  return new anim8.CompiledPath(\n    path.name,\n    anim8.path( path.path ),\n    path.pointCount\n  );\n};\n\n\n\n\n\nanim8.Tween = function(name, calculator, start, end)\n{\n  this.reset( name, calculator, [start, end] );\n};\n\nanim8.Tween.prototype = new anim8.Path();\n\nanim8.Tween.prototype.compute = function(out, delta)\n{\n  return this.calculator.interpolate( out, this.resolvePoint( 0 ), this.resolvePoint( 1 ), delta );\n};\n  \nanim8.Tween.prototype.copy = function() \n{\n    return new anim8.Tween( this.name, this.calculator, this.points[0], this.points[1] );\n};\n\nanim8.path.tween = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  return new anim8.Tween(\n    path.name, \n    calc,\n    calc.parse( path.start ),\n    calc.parse( path.end )\n  );\n};\n\n\n\n\nanim8.JumpPath = function(name, calculator, points)\n{\n  this.reset( name, calculator, points );\n};\n\nanim8.JumpPath.prototype = new anim8.Path();\n\nanim8.JumpPath.prototype.compute = function(out, delta)\n{\n  var a = Math.floor( delta * this.points.length );\n  var index = Math.min( a, this.points.length - 1 );\n  \n  return this.calculator.copy( out, this.resolvePoint( index ) );\n};\n  \nanim8.JumpPath.prototype.copy = function() \n{\n  return new anim8.JumpPath( this.name, this.calculator, anim8.copy(this.points) );\n};\n\nanim8.path.jump = function(path)\n{\n  var calc = anim8.calculator( path.calculator );\n  \n  for (var i = 0; i < path.points.length; i++)\n  {\n    path.points[ i ] = calc.parse( path.points[i] );\n  }\n  \n  return new anim8.JumpPath(\n    path.name, \n    calc,\n    path.points\n  );\n};\n\n","/**\n * Returns a spring if the provided argument is a spring, the name of a spring, or\n * an object with a spring type to be created. If none of these conditions are true\n * then false is returned.\n *\n * @param {anim8.Spring|string|object} spring\n */\nanim8.spring = function(spring)\n{\n  if ( spring instanceof anim8.Spring )\n  {\n    return spring;\n  }\n  if ( anim8.isString( spring ) && spring in anim8.spring )\n  {\n    return anim8.spring[ spring ];\n  }\n  if ( anim8.isObject( spring ) && spring.type in anim8.spring )\n  {\n    return anim8.spring[ spring.type ]( spring );\n  }\n  \n  return false;\n};\n\n\n/**\n * A spring has a resting point, a current position, and the velocity currently enacting on the position\n * based on the implementing classes logic.\n */\nanim8.Spring = function()\n{\n};\n\nanim8.Spring.prototype = \n{\n  /**\n   * Resets the spring's properties.\n   * \n   * @param {string} attribute\n   * @param {string|object} calculator\n   * @param {any} rest\n   * @param {any} position\n   */\n  reset: function(attribute, calculator, rest, position, gravity)\n  {\n    var calc = anim8.calculator( calculator );\n    var a = anim8.attribute( attribute );\n    \n    this.attribute    = attribute;\n    this.calculator   = calc;\n    this.rest         = calc.parse( rest, a.defaultValue );\n    this.position     = calc.parse( position, a.defaultValue );\n    this.gravity      = calc.parse( gravity, calc.create() );\n    this.velocity     = calc.create();\n    this.time         = 0;\n  },\n  \n  /**\n   * Updates the spring given the current time in milliseconds and the frame which\n   * contains (or will contain) the attribute to which this spring is animating.\n   *\n   * @param {number} now\n   * @param {object} frame\n   */\n  update: function(now, frame)\n  {\n    if (this.time === 0)\n    {\n      this.time = now;\n    }\n    \n    var calc = this.calculator;\n    \n    // the number of elapsed seconds (maxed to avoid crazy behavior with low FPS)\n    var dt = Math.min( (now - this.time) * 0.001, anim8.Spring.MAX_DT );\n    \n    // keep track of the starting position to determine whether the position has updated.\n    var starting = calc.copy( {}, this.position );\n    \n    // call the update method which should update the position\n    this.updateVelocity( dt );\n    this.velocity = calc.adds( this.velocity, this.gravity, dt );\n    this.position = calc.adds( this.position, this.velocity, dt );\n    \n    this.time = now;\n    \n    // track whether the attribute has updated so the animator knows if it needs to apply the attribute to the subject.\n    var updated = !calc.isEqual( starting, this.position, anim8.Spring.EPSILON );\n    \n    if ( updated )\n    {\n      frame[ this.attribute ] = this.position;\n    }\n    \n    return updated;\n  },\n  \n  /**\n   * Resolves the position to the expected format.\n   */\n  resolveRest: function()\n  {\n    return anim8.isFunction( this.rest ) ? this.rest() : this.rest;\n  },\n  \n  /**\n   * Method that's invoked on each update.\n   *\n   * @param {number} dt\n   */\n  updateVelocity: function(dt)\n  {\n    \n  }\n};\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nanim8.Spring.MAX_DT = 0.1;\n\n/**\n * The value used to determine whether two positions in a spring are different.\n */\nanim8.Spring.EPSILON = 0.0001;\n\n\n\n\n/**\n * A box spring is a simple string\n */\nanim8.BoxSpring = function(attribute, calculator, position, rest, constant, gravity)\n{\n  var a = anim8.attribute( attribute );\n    \n  this.reset( attribute, calculator, rest, position, gravity );\n  \n  this.acceleration   = this.calculator.create();\n  this.constant       = this.calculator.parse( constant, a.defaultValue );\n};\n\nanim8.BoxSpring.prototype = new anim8.Spring();\n\nanim8.BoxSpring.prototype.updateVelocity = function(dt)\n{\n  var calc = this.calculator;\n  \n  this.acceleration = calc.copy( this.acceleration, this.resolveRest() );\n  this.acceleration = calc.sub( this.acceleration, this.position );\n  this.acceleration = calc.mul( this.acceleration, this.constant );\n  this.velocity     = calc.adds( this.velocity, this.acceleration, dt );\n};\n\nanim8.spring.box = function(spring)\n{ \n  return new anim8.BoxSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.constant,\n    spring.gravity\n  );\n};\n\n\n\n\nanim8.LinearSpring = function(attribute, calculator, position, rest, damping, stiffness, gravity)\n{\n  var a = anim8.attribute( attribute );\n  \n  this.reset( attribute, calculator, rest, position, gravity );\n  \n  this.damping      = this.calculator.parse( damping, a.defaultValue );\n  this.stiffness    = this.calculator.parse( stiffness, a.defaultValue );\n  this.temp0        = this.calculator.create();\n  this.temp1        = this.calculator.create();\n};\n\nanim8.LinearSpring.prototype = new anim8.Spring();\n\nanim8.LinearSpring.prototype.updateVelocity = function(dt)\n{\n  // velocity += ((stiffness * (position - rest)) - (damping * velocity)) * elapsed.seconds;\n\t// position += velocity * elapsed.seconds;\n    \n  var calc = this.calculator;\n\n  this.temp1 = calc.copy( this.temp1, this.damping );\n  this.temp1 = calc.mul( this.temp1, this.velocity );\n  \n  this.temp0 = calc.copy( this.temp0, this.position );\n  this.temp0 = calc.sub( this.temp0, this.resolveRest() );\n  this.temp0 = calc.mul( this.temp0, this.stiffness );\n  this.temp0 = calc.sub( this.temp0, this.temp1 );\n  \n  this.velocity = calc.adds( this.velocity, this.temp0, dt );\n};\n\nanim8.spring.linear = function(spring)\n{ \n  return new anim8.LinearSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.damping,\n    spring.stiffness,\n    spring.gravity\n  );\n};\n\n\n\n\n\n\n\nanim8.DistanceSpring = function(attribute, calculator, position, rest, distance, damping, stiffness, gravity)\n{\n  this.reset( attribute, calculator, rest, position, gravity );\n  \n  this.distance   = distance;\n  this.damping    = damping;\n  this.stiffness  = stiffness;\n  this.temp       = this.calculator.create();\n};\n\nanim8.DistanceSpring.prototype = new anim8.Spring();\n\nanim8.DistanceSpring.prototype.updateVelocity = function(dt)\n{\n  // d = DISTANCE( position, rest )\n  // velocity += ((position - rest) / d * stiffness * |distance - d| - (damping * velocity)) * elapsed.seconds;\n  // position += velocity * elapsed.seconds;\n\n  var calc = this.calculator;\n  var rest = this.resolveRest();\n  \n  var d = calc.distance( this.position, rest );\n  \n  this.temp = calc.copy( this.temp, this.position )\n  this.temp = calc.sub( this.temp, rest );\n  \n  if ( d !== 0 )\n  {\n  \tthis.temp = calc.scale( this.temp, 1.0 / d );\n  \tthis.temp = calc.scale( this.temp, (d - this.distance) * this.stiffness );\n  }\n\n  this.temp = calc.adds( this.temp, this.velocity, -this.damping );\n\n  this.velocity = calc.adds( this.velocity, this.temp, dt );\n};\n\nanim8.spring.distance = function(spring)\n{ \n  return new anim8.DistanceSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.distance,\n    spring.damping,\n    spring.stiffness,\n    spring.gravity\n  );\n};","\nanim8.EventState = \n{\n  CREATED: 0,\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  PAUSED: 8,\n  FINISHED: 16\n};\n\nanim8.Event = function(attribute, path, duration, easing, delay, sleep, repeat) \n{\n  this.attribute \t= attribute;\n  this.path \t\t\t= path;\n  this.easing \t\t= anim8.easing( easing );\n  this.delay \t\t\t= anim8.coalesce( delay, anim8.defaults.delay );\n  this.duration \t= anim8.coalesce( duration, anim8.defaults.duration );\n  this.sleep \t\t\t= anim8.coalesce( sleep, anim8.defaults.sleep );\n  this.repeat \t\t= anim8.coalesce( repeat, anim8.defaults.repeat );\n};\n\nanim8.Event.prototype = \n{\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  newInstance: function()\n  {\n    return new anim8.EventInstance( this );\n  }\n};\n\nanim8.EventInstance = function(event)\n{\n\tthis.event \t\t\t= event;\n\tthis.attribute \t= event.attribute;\n\tthis.path \t\t\t= event.path;\n\tthis.duration \t= event.duration;\n\tthis.easing \t\t= event.easing;\n\tthis.delay \t\t\t= event.delay;\n\tthis.sleep \t\t\t= event.sleep;\n\tthis.repeat \t\t= event.repeat;\n  this.state \t\t\t= anim8.EventState.CREATED;\n  this.time \t\t\t= 0;\n  this.pauseTime \t= 0;\n  this.pauseState = 0;\n\tthis.elapsed\t\t= 0;\n\tthis.next\t\t\t\t= null;\n};\n\nanim8.EventInstance.prototype = \n{\n  update: function(now, frame) \n\t{\n    var updated = false;\n    var elapsed = this.catchup( now, frame );\n    \n    if ( this.isAnimating() ) \n\t\t{\t\t\t\n      var delta = elapsed / this.duration;\n      \n      if (delta >= 1 || this.duration === 0)\n\t\t\t{\n        if (!this.isInfinite() && --this.repeat === 0) \n\t\t\t\t{\n          this.finish(frame);\n\t\t\t\t\t\n          return true;\n        } \n\t\t\t\telse \n\t\t\t\t{\n          if (this.sleep)\n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.SLEEPING ); \n            delta = 1;\n            \n            this.trigger('sleeping', this);\n          } \n\t\t\t\t\telse \n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.ANIMATING );\n            delta -= 1;\n          }\n        }\n      }\n      \n      this.applyValue( frame, frame[this.attribute], delta );\n      updated = true;\n    }\n    \n    return updated;\n  },\n  getPoint: function(delta)\n  {\n    return this.path.compute( this.path.calculator.create(), this.easing( delta ) );\n  },\n  getFuture: function(fdelta)\n  {\n    return this.getPoint( Math.min( 1.0, this.getDelta() + fdelta ) );\n  },\n  getDelta: function()\n  {\n    return this.isAnimating() ? Math.min( 1.0, (anim8.now() - this.time) / this.duration ) : 0.0;\n  },\n  getStart: function()\n  {\n    return this.getPoint( 0 );\n  },\n  getEnd: function() \n\t{\n    return this.getPoint( 1 );\n  },\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n        \n    if ( value !== false )\n    {\n      frame[this.attribute] = value;\n    }\n  },\n  catchup: function(now, frame)\n\t{\n    if ( this.isPaused() )\n    {\n      return;\n    }\n    \n    if ( this.state === anim8.EventState.CREATED )\n\t\t{\n      this.time = now;\n\t\t\t\n      if ( this.delay )\n\t\t\t{\n        this.state = anim8.EventState.DELAYED;\n        \n        this.trigger('delaying', this);\n      } \n\t\t\telse \n\t\t\t{\n        this.state = anim8.EventState.ANIMATING;\n      }\n    }\n    \n\t\tvar elapsed = now - this.time;\n    \n    if ( this.isDelayed() )\n\t\t{\n      if ( elapsed > this.delay ) \n\t\t\t{\n        this.trigger('delayed', this);\n        \n        elapsed = this.progress( elapsed, this.delay, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n    if ( this.isSleeping() )\n\t\t{\n      if ( elapsed > this.sleep )\n\t\t\t{\n        this.trigger('slept', this);\n        \n        elapsed = this.progress( elapsed, this.sleep, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n    if ( this.isAnimating() && this.duration )\n    {\n      var cycle = this.duration + this.sleep;\n      var cycleCount = Math.floor( ( elapsed + this.sleep ) / cycle );\n      var maxCycles = Math.min( this.repeat, cycleCount );\n            \n      elapsed = this.progress( elapsed, maxCycles * cycle, anim8.EventState.ANIMATING );\n      \n      if ( !this.isInfinite() )\n      { \n        if (maxCycles === this.repeat)\n        {\n          elapsed = this.duration;\n          this.repeat = 1;\n        }\n        else\n        {\n          this.repeat -= cycleCount;\n        }\n      }\n      \n      if ( elapsed > this.duration )\n      {\n        elapsed = this.progress( elapsed, this.duration, anim8.EventState.SLEEPING );\n        \n        this.trigger('sleeping', this);\n      }\n    }\n\t\t\n\t\treturn elapsed;\n  },\n  progress: function(elapsed, time, newState) \n\t{\n    this.time += time;\n\t\tthis.elapsed += time;\n    this.state = newState;\n\t\t\n    return elapsed - time;\n  },\n  finish: function(frame) \n\t{\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = anim8.EventState.FINISHED;\n    \n    this.trigger('finish', this);\n  },\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  timeRemaining: function() \n\t{    \n\t\treturn this.totalTime() - this.elapsed;\n  },\n  timeRemainingInChain: function()\n  {\n    return this.timeRemaining() + (this.next ? this.next.timeRemainingInChain() : 0);\n  },\n  queue: function(e)\n  {\n    if ( this.next )\n    {\n      this.next.queue( e );\n    }\n    else\n    {\n      this.next = e;\n    }\n  },\n  pause: function() \n\t{\n    if (this.state !== anim8.EventState.PAUSED) \n\t\t{\n      this.pauseTime = anim8.now();\n      this.pauseState = this.state;\n      this.state = anim8.EventState.PAUSED; \n    }\n  },\n  resume: function() \n\t{\n    if (this.state === anim8.EventState.PAUSED) \n\t\t{\n      this.time += anim8.now() - this.pauseTime;\n      this.state = this.pauseState; \n    }\n  },\n  isInfinite: function()\n  {\n    return (this.repeat === Number.POSITIVE_INFINITY);\n  },\n\thasStarted: function()\n\t{\n\t\treturn (this.state !== anim8.EventState.CREATED && this.state !== anim8.EventState.DELAYED);\n\t},\n  isAnimating: function() \n\t{\n    return (this.state === anim8.EventState.ANIMATING);\n  },\n  isFinished: function() \n\t{\n    return (this.state === anim8.EventState.FINISHED);\n  },\n  isDelayed: function() \n\t{\n    return (this.state === anim8.EventState.DELAYED);\n  },\n  isPaused: function() \n\t{\n    return (this.state === anim8.EventState.PAUSED);\n  },\n  isSleeping: function() \n\t{\n    return (this.state === anim8.EventState.SLEEPING);\n  },\n  hasStates: function(states) \n\t{\n    return (this.state & states) !== 0;\n  },\n  stateText: function() \n\t{\n    switch(this.state) \n    {\n      case anim8.EventState.CREATED:            return \"created\";\n      case anim8.EventState.DELAYED:            return \"delayed\";\n      case anim8.EventState.ANIMATING:          return \"animating\";\n      case anim8.EventState.SLEEPING:           return \"sleeping\";\n      case anim8.EventState.FINISHED:           return \"finished\";\n    }\n  },\n  hasTrue: function()\n  {\n    return this.path.trues;\n  }\n};\n\n/**\n * Adds the following event methods to EventInstances: on, once, off, trigger.\n */\nanim8.eventize( anim8.EventInstance.prototype );","\n/**\n * Instantiates a new Animation given it's name, the input & options passed, and the events that\n * were generated from the input & options. If the name is false this is an anonymous animation.\n * Input & Options are used by parsers to generate events, options allow for an animations\n * default event properties to be overriden.\n *\n * @param {string} name\n * @param {object} input\n * @param [object] options\n * @param {array:anim8.Event} events\n */\nanim8.Animation = function(name, input, options, events)\n{\n\tthis.name = name;\n\tthis.input = input;\n\tthis.options = options;\n\tthis.events = events;\n};\n\nanim8.Animation.prototype = \n{\n  /**\n   * Returns true if this animation was a saved animation, otherwise it's an anonymous one\n   * and false is returned.\n   */\n  isSaved: function()\n  {\n    return (this.name !== false);\n  },\n  /**\n   * Merges options provided during play to override the defaults in the events.\n   *\n   * @param {object} options\n   * @param {array:anim8.EventInstance} events\n   */\n  mergeOptions: function(options, events)\n  { \n    // TODO move to parsers\n    \n    var durations = this.input.durations || {};\n    var easings   = this.input.easings || {};\n    var delays    = this.input.delays || {};\n    var sleeps    = this.input.sleeps || {};\n    var repeats   = this.input.repeats || {};\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      e.easing   = anim8.easing( anim8.coalesce( easings[attr], options.easing, this.options.easing, e.easing ) );\n      e.duration = anim8.coalesce( durations[attr], options.duration, this.options.duration, e.duration );\n      e.delay    = anim8.coalesce( delays[attr], options.delay, this.options.delay, e.delay );\n      e.sleep    = anim8.coalesce( sleeps[attr], options.sleep, this.options.sleep, e.sleep );\n      e.repeat   = anim8.coalesce( repeats[attr], options.repeat, this.options.repeat, e.repeat );\n    }\n  },\n  /**\n   * Generates an array of event instances from the events in this animation.\n   */\n  newEvents: function()\n  {\n    var e = [];\n    \n    for (var i = 0; i < this.events.length; i++)\n    {\n      e.push( this.events[i].newInstance() );\n    }\n    \n    return e;\n  }\n};\n\n/**\n * Saves an animation under the given name. It can be played, queued, and transitioned into\n * at a later time providing the name and optionally options to override with.\n *\n * @param {string} name\n * @param {object} animation\n * @param [object] options\n */\nanim8.save = function(name, animation, options)\n{\n  var animation = anim8.animation( animation, options );\n  \n  animation.name = name;\n  \n\tanim8.animation[name] = animation;\n};","\n/**\n * Instantiates a new Animator given a subject to animate.\n *\n * @param {any} e\n */\nanim8.Animator = function(e) \n{\n\tthis.reset( e );\n};\n\nanim8.Animator.prototype = \n{\n  /**\n   * Resets the animator given a subject to animate.\n   *\n   * @param {any} e\n   */\n\treset: function(e)\n\t{\n\t  this.e = e;\n\t  this.events = {};\n    this.springs = {};\n\t  this.attributes = {};\n\t  this.frame = {};\n    this.updated = {};\n\t  this.finished = false;\n\t\tthis.factory = null;\n    this.active = false;\n    \n    return this;\n\t},\n  \n  /**\n   * Restores any temporary state that may exist on this Animator that\n   * is a result from animations.\n   */\n  restore: function()\n  {\n    \n    return this;\n  },\n  \n  /**\n   * A method thats invoked along with all other animators before updates are called.\n   * This is used to make any necessary preparations before the animator is updated.\n   */\n  preupdate: function()\n  {\n\t\tthis.trigger('preupdate');\n    \n    return this;\n  },\n  \n  /**\n   * Updates the animator with the current time. All events and springs in this\n   * animator are updated.\n   *\n   * @param {number} now\n   */\n  update: function(now) \n\t{  \n    this.wasFinished = this.finished;\n    \n    this.finished = true;\n\t\t\n    for (var attr in this.events)\n    {\n      var e = this.events[ attr ];\n      \n      this.updated[ attr ] = e.update( now, this.frame );\n      \n      this.finished = this.finished && e.isFinished();\n    }\n    \n    for (var attr in this.springs)\n    {\n      var s = this.springs[ attr ];\n      \n      this.updated[ attr ] = s.update( now, this.frame );\n      \n      this.finished = false;\n    }\n\t\n\t\tthis.trigger('update');\n    \n    return this;\n  },\n  \n  /**\n   * Places the spring in this animator replacing any spring that exists for the same\n   * attribute. The next time the animator is updated the spring will be started.\n   *\n   * @param {anim8.Spring} s\n   */\n  placeSpring: function(s)\n  {\n    var attr = s.attribute;\n    \n    this.springs[ attr ] = s;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n  },\n  \n  /**\n   * Places the event in this animator replacing any event that exists for the same\n   * attribute. The next time the animator is updated the event will be started.\n   *\n   * @param {anim8.EventInstance} e\n   */\n  placeEvent: function(e)\n  {\n    var attr = e.attribute;\n    \n    this.events[ attr ] = e;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n  },\n  \n  /**\n   * Applies all updated attributes to the subject. This method is invoked with all of the other\n   * animators at the end of the animation cycle.\n   */\n  apply: function()\n\t{\n    for (var attr in this.frame)\n    {\n      if ( this.updated[ attr ] )\n      {\n        this.e[ attr ] = this.frame[ attr ]; \n\t\t\t\tthis.updated[ attr ] = false;\n      }\n    }\n\t\n\t\tthis.trigger('apply');\n\t\n    this.trimEvents();\n    \n    return this;\n  },\n  \n  /**\n   * Removes any finished events and places queued events. If the animator previously wasn't finished\n   * but now it is the 'finished' event will be triggered.\n   */\n  trimEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      var e = this.events[attr];\n      \n      if ( e.isFinished() )\n      {\n        if ( e.next )\n        {                    \n          this.placeEvent( e.next );\n          this.finished = false;\n        }\n        else\n        {\n          delete this.events[attr];\n        }\n      }\n    }\n    \n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n  },\n  \n  /**\n   * Returns the current value for the given attribute (or undefined if the attribute is not or \n   * has not animated).\n   *\n   * @param {string} attr\n   */\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n  \n  /**\n   * A method that is invoked when an animator is finished and is being removed from the list\n   * of currently animating Animators.\n   */\n\tcleanup: function()\n\t{ \n    this.trigger('cleanup', this);\n\t},\n  \n  /**\n   * Creates event instances for the given animation and options. The animation can be an animation\n   * object or an animation name. If a name is provided the options are merged in.\n   *\n   * @param {anim8.Animation|string|object} animation\n   * @param [object] options\n   */\n  createEvents: function(animation, options)\n  {\n    options = options || {};\n    \n    var animation = anim8.animation( animation, options );\n  \n    if (animation === false)\n    {\n      return false;\n    }\n    \n    var events = animation.newEvents();\n    \n    if ( animation.isSaved() )\n    {\n      animation.mergeOptions( options, events );\n    }\n    \n    this.onAnimation( animation, options, events );\n    \n    return events;\n  },\n  \n  /**\n   * A method invoked when an animation is about to be played in the Animator.\n   * \n   * @param {anim8.Animation} animation\n   * @param {object} options\n   * @param {array:anim8.EventInstance} events\n   */\n  onAnimation: function(animation, options, events)\n  {\n    \n  },\n  \n  /**\n   * Adds a spring to this animator replacing any existing spring for the same attribute.\n   * A spring object can be given, an instance of anim8.Spring, or a name of a saved Spring.\n   * \n   * @param {anim8.Spring|string|object} spring\n   */\n  spring: function(spring)\n  {\n    var spring = anim8.spring( spring );\n    \n    if ( spring === false )\n    {\n      return false;\n    }\n\n    this.placeSpring( spring );\n    \n    anim8.add( this );\n    \n    return spring;\n  },\n  \n  /**\n   * Removes springs for the specified attributes. If no attributes are specified then all springs\n   * are removed. Attributes can be specified as an array of attribute names or a string with attribute\n   * names separated by a space.\n   *\n   * @param {string|Array} attributes\n   */\n  unspring: function(attributes)\n  {\n    return this.springsFor( attributes, function(s)\n    {\n      delete this.springs[ s.attribute ];\n    });\n  },\n  \n  /**\n   * Adds an animation to this Animator optionally finishing events for attributes not specified in the\n   * given attribute. Events will be replaced immediately.\n   *\n   * @param {string|object|anim8.Animation} animation\n   * @param [object] options\n   * @param [boolean] all \n   */\n\tplay: function(animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    var attrs = {};\n    \n    for (var i = 0; i < events.length; i++)\n    { \n      this.placeEvent( events[i] );\n      \n      attrs[ events[i].attribute ] = true;\n    }\n    \n    if ( all )\n    {\n      for (var attr in this.events)\n      {\n        if ( !(attr in attrs) )\n        {\n          this.events[ attr ].finish( this.frame );\n        }\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n  \n  /**\n   * Queues an animation on this Animator. The events generated for the given animation\n   * will all start at the same time - at the end of the events currently on the Animator.\n   *\n   * @param {string|object|anim8.Animation} animation\n   * @param [object] options\n   */\n\tqueue: function(animation, options)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n        \n    var maxRemaining = 0.0;\n    \n    for (var attr in this.events)\n    {\n      var e = this.events[ attr ];\n      \n      if ( !e.isInfinite() )\n      {\n        maxRemaining = Math.max( maxRemaining, this.events[attr].timeRemainingInChain() );  \n      }\n    }\n        \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      if ( attr in this.events  && !this.events[ attr ].isInfinite() )\n      {    \n        e.delay += (maxRemaining - this.events[attr].timeRemainingInChain());\n        \n        this.events[attr].queue( e );\n      }\n      else\n      {\n        e.delay += maxRemaining;\n        \n        this.placeEvent( e );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n  \n  /**\n   * Transitions from the currently playing events into a new animation. The transition is made\n   * by constructing a quadratic curve from the current value to a point further on the current\n   * path to the starting point of the new animation.\n   *\n   * @param {number} transitionTime \n   * @param {number} transitionDelta\n   * @param {string|function|array} transitionEasing\n   * @param {string|object|anim8.Animation} animation\n   * @param [object] options\n   * @param [boolean] all\n   */\n\ttransition: function(transitionTime, transitionDelta, transitionEasing, animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    // Check if we even need to transition\n    var transition = false;\n    \n    for (var i = 0; i < events.length && !transition; i++)\n    {      \n      if ( events[i].attribute in this.events )\n      {\n        transition = true;\n      }\n    }\n    \n    // Only transition if we need to\n    if ( transition )\n    {\n      for (var i = 0; i < events.length; i++)\n      {\n        var e1 = events[i];\n        var attr = e1.attribute;\n      \n        if ( attr in this.events )\n        {\n          var path = e1.path;\n          var calc = path.calculator;\n          var e2 = this.events[attr];\n        \n          var p0 = calc.copy( calc.create(), this.frame[attr] );\n          var p1 = e2.getFuture( transitionDelta );\n          var p2 = e1.getPoint( 0 );\n        \n          var transitionPath = new anim8.QuadraticPath( attr, calc, p0, p1, p2 );\n          var transitionEvent = new anim8.Event( attr, transitionPath, transitionTime, transitionEasing, 0, 0, 1 ).newInstance();\n        \n          transitionEvent.next = e1;\n        \n          this.placeEvent( transitionEvent );\n        }\n        else\n        {\n          e1.delay += transitionTime;\n     \n          this.placeEvent( e1 );\n        }\n      }\n    }\n    // We don't need to transition, just play the events\n    else\n    {\n      for (var i = 0; i < events.length; i++)\n      { \n        this.placeEvent( events[i] );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\t\n\t/**\n\t * Applies the initial state of all unstarted current events for the specified attributes immediately. \n\t * Attribute names can be given as an array or a space separated string. If no attributes are given all \n\t * attributes are assumed.\n\t *\n   * @param {string|array} attributes\n\t */\n\tapplyInitialState: function(attributes)\n\t{\n\t\tvar eventCount = this.eventsFor( attributes, function(event, attr) \n\t\t{\n\t\t\tif ( !event.hasStarted() )\n\t\t\t{\n\t\t\t\tevent.applyValue( this.frame, this.frame[ attr ], 0.0 );\n\t\t\t\t\n\t\t\t\tthis.updated[ attr ] = true;\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tthis.apply();\n\t\t\n\t\treturn eventCount;\n\t},\n  \n  /**\n   * Returns a function that returns the current value for the given attribute when invoked.\n   * \n   * @param {string} attribute\n   */\n  ref: function(attribute)\n  {\n    var animator = this;\n    var request = {};\n    \n    return function()\n    {\n      if ( attribute in animator.frame )\n      {\n        return animator.frame[ attribute ];\n      }\n      \n      request[ attribute ] = true;\n      \n      var current = animator.get( request );\n      \n      if ( anim8.isDefined( current[ attribute ] ) )\n      {\n        return current[ attribute ];\n      }\n      \n      return anim8.attribute( attribute ).defaultValue;\n    };\n  },\n  \n  /**\n   * Follows the attribute along the given path definition.\n   * \n   * @param {string} attribute\n   * @param {anim8.Path|object|string} path\n   * @param [number] duration\n   * @param [number] delay\n   * @param [function|string] easing\n   * @param [number] repeat\n   * @param [number] sleep  \n   */\n  follow: function(attribute, path, duration, delay, easing, repeat, sleep)\n  {\n    var path = anim8.path( path );\n    \n    // attribute, path, duration, easing, delay, sleep, repeat) \n    var event = new anim8.Event( \n      attribute, \n      path, \n      anim8.coalesce( duration, anim8.defaults.duration ),\n      anim8.easing( easing ),\n      anim8.coalesce( delay, anim8.defaults.delay ),\n      anim8.coalesce( sleep, anim8.defaults.sleep ),\n      anim8.coalesce( repeat, anim8.defaults.repeat )\n    );\n    \n    this.placeEvent( event.newInstance() );\n    \n    anim8.add( this );\n    \n    return this;\n  },\n  \n  /**\n   * Helper method that calls a callback for each object in the given map that exists\n   * in the attribute string/array.\n   *\n   * @param {string|array} attributes\n   * @param {function} callback\n   * @param {object} objects\n   */\n  objectsFor: function(attributes, callback, objects)\n  {\n\t\tif ( anim8.isString( attributes ) )\n\t\t{\n\t\t\tattributes = attributes.split( ' ' );\n\t\t}\n    \n    var resulting = !anim8.isFunction( callback );\n    var objectCount = 0;\n    var results = [];\n    \n\t\tif ( anim8.isArray( attributes ) )\n\t\t{\n      for (var i = 0; i < attributes.length; i++)\n      {\n        var attr = attributes[i];\n        \n        if ( attr in objects )\n        {\n          if ( resulting )\n          {\n            results.push( objects[attr] );\n          }\n          else\n          {\n            callback.call( this, objects[attr], attr ); \n            \n            objectCount++;\n          }\n        }\n      }\n\t\t}\n    else\n    {\n      for (var attr in objects)\n      {\n        if ( resulting )\n        {\n          results.push( objects[attr] );\n        }\n        else\n        {\n          callback.call( this, objects[attr], attr ); \n          \n          objectCount++;\n        }\n      }\n    }\n    \n\t\treturn resulting ? results : objectCount;\n  },\n  \n  /**\n   * Invokes the callback for each event for the given attributes.\n   * \n   * @param {string|array} attributes\n   * @param {function} callback\n   */\n\teventsFor: function(attributes, callback)\n\t{\n\t\treturn this.objectsFor( attributes, callback, this.events );\n\t},\n  \n  /**\n   * Invokes the callback for each spring for the given attributes.\n   *\n   * @param {string|array} attributes\n   * @param {function} callback\n   */\n\tspringsFor: function(attributes, callback)\n\t{\n\t\treturn this.objectsFor( attributes, callback, this.springs );\n\t},\n\t\n  /**\n   * Stops all events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tstop: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event, attr) \n\t\t{\n\t\t\tdelete this.events[ attr ];\n\t\t});\n\t},\n  \n  /**\n   * Ends all events for the specified attributes. If events are queued the last value of the last event\n   * is applied to this Animator before being completely removed. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tend: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event) \n\t\t{\n\t\t\twhile (event.next)\n\t\t\t{\n\t\t\t\tevent = event.next;\n\t\t\t}\n\t\t\t\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n  \n  /**\n   * Finishes all current events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tfinish: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n  \n  /**\n   * Pauses all current events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tpause: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.pause();\n\t\t});\n\t},\n  \n  /**\n   * Resumes all current events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tresume: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.resume();\n\t\t});\n\t},\n  \n  /**\n   * Sets the given attributes to this Animator immediately.\n   *\n   * @param {object} attributes\n   */\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n\t\t\tthis.updated[ attr ] = true;\n    }\n    \n    this.apply();\n    \n    return this;\n  },\n  \n  /**\n   * Gets the current attribute values for all attributes specified. The argument must be an object\n   * where the key is the name of an attribute.\n   *\n   * @param {object} attributes\n   */\n  get: function(attributes)\n  {\n    var out = {};\n    \n    for (var attr in attributes)\n    {\n      out[ attr ] = this.frame[ attr ];\n    }\n    \n    return out;\n  },\n  \n  /**\n   * Returns true if there are any events on this Animator.\n   */\n  hasEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      return true;\n    }\n    \n    return false;\n  },\n  \n  /**\n   * Returns true if there are any springs on this Animator.\n   */\n  hasSprings: function()\n  {\n    for (var attr in this.springs)\n    {\n      return true;\n    }\n    \n    return false;\n  },\n  \n  /**\n   * Returns true if there are any springs on this Animator or animating events.\n   */\n  isAnimating: function()\n  {\n    if ( this.hasSprings() )\n    {\n      return true;\n    }\n    \n    for (var attr in this.events)\n    {\n      if ( this.events[attr].isAnimating() )\n      {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n};\n\n/**\n * Adds the following event methods to Animators: on, once, off, trigger.\n */\nanim8.eventize( anim8.Animator.prototype );","anim8.Sequence = function(animators, delay, easing, animation, options)\n{\n  this.animators = animators;\n  this.delay = delay;\n  this.easing = anim8.easing( easing );\n  this.animation = anim8.animation( animation, options );\n  this.options = options;\n};\n\nanim8.Sequence.prototype =\n{\n  maxDelay: function()\n  {\n    return this.delay * (this.animators.length - 1);\n  },\n  \n  createEvents: function(i)\n  {\n    var events = this.animation.newEvents();\n    var delta = i / (this.animators.length - 1);\n    var delayOffset = this.easing( delta ) * this.maxDelay();\n    \n    for (var k = 0; k < events.length; k++)\n    {\n      events[k].delay += delayOffset;\n    }\n    \n    return events;\n  },\n  \n  play: function()\n  {    \n    this.animators.each(function(animator, i)\n    {\n      var events = this.createEvents(i);\n      \n      for (var k = 0; k < events.length; k++)\n      {\n        animator.placeEvent( events[k] );\n      }\n            \n    }, this);\n    \n    return this.add();\n  },\n  \n  add: function()\n  {\n    this.animators.each(function(animator)\n    {\n      if ( !animator.active )\n      {\n        animator.active = true;\n        anim8.animating.push( animator ); \n      }\n    });\n    \n    this.animators.applyInitialState();\n    \n    if ( !anim8.running )\n    {\n      anim8.running = true;\n  \t\tanim8.trigger('starting');\n  \t\tanim8.requestRun( anim8.run );\n    }\n    \n    return this;\n  }\n  \n};","\n/**\n * Instantiates a new color given red, green, blue, and white components.\n * If a component is missed it's default value is either 255 (white) or\n * 1.0 (opaque).\n */\nanim8.color = function(r, g, b, a) \n{\n  return {\n    r: anim8.coalesce( r, 255 ),\n    g: anim8.coalesce( g, 255 ),\n    b: anim8.coalesce( b, 255 ),\n    a: anim8.coalesce( a, 1.0 )\n  };\n};\n\n/**\n * The array of parsing methods to execute sequentally until a color is returned.\n */\nanim8.color.parsers = \n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, 'parseInt', 255),\n          g: this.parseComponent(input.g, 'parseInt', 255),\n          b: this.parseComponent(input.b, 'parseInt', 255),\n          a: this.parseComponent(input.a, 'parseFloat', 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = window[parseFunction](t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  }, \n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n/**\n * Parses a color from a string.\n *\n * @param {string} input\n */\nanim8.color.parse = function(input)\n{\n  var cp = m8.color.parsers;\n  \n  for (var i = 0; i < this.parsers.length; i++)\n  {\n    var parsed = this.parsers[i].parse(input);\n    \n    if (parsed !== false) \n    {\n      return parsed;\n    }\n  }\n  \n  return this.invalidColor;\n};\n\n/**\n * Formats a color to a string.\n * \n * @param {object} color\n */\nanim8.color.format = function(color)\n{\n  var ca = anim8.coalesce( color.a, 1.0 );\n  var cr = anim8.coalesce( color.r, 255 );\n  var cg = anim8.coalesce( color.g, 255 );\n  var cb = anim8.coalesce( color.b, 255 );\n  \n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n    \n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    \n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n/**\n * The color to return when input is invalid.\n */\nanim8.color.invalidColor = anim8.color.defaultValue =\n{\n  r: 255,\n  g: 255,\n  b: 255,\n  a: 1.0\n};","/**\n * Calculators perform math and basic operations for a specific data structure. Calculators have the following methods.\n *\n *  parse(x, default)\n *  copy(out, copy)\n * -clone(out)\n *  create()\n *  zero(out)\n * -scale(out, scale)\n * -add(out, amount)\n *  adds(out, amount, amountScale)\n * -sub(out, amount)\n *  mul(out, scale)\n * -interpolate(out, start, end, delta)\n *  distanceSq(a, b)\n *  isValid(a)\n *  isNaN(a)\n *  isZero(a, epsilon)\n *  isEqual(a, b, epsilon)\n */\n\n/**\n * Creates a calculator and fills in any missing methods where possible.\n * \n * @param {string} name\n * @param {object} methods\n */\nanim8.calculator.create = function(name, methods)\n{\n  var defaultMethods = \n\t{\n\t  clone: function(out) \n\t\t{\n\t    return this.copy( this.create(), out );\n\t  },\n\t  scale: function(out, scale) \n\t\t{\n\t    return this.adds( out, out, scale - 1 );\n\t  },\n\t  add: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, 1 );\n\t  },\n\t  sub: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, -1 );\n\t  },\n\t  interpolate: function(out, start, end, delta) \n\t\t{\n\t    out = this.zero( out );\n\t    out = this.adds( out, start, 1 - delta );\n\t    out = this.adds( out, end, delta );\n\t    return out;\n\t  },\n\t\tdistance: function(a, b)\n\t\t{\n\t\t\treturn Math.sqrt( this.distanceSq( a, b ) );\n\t\t},\n    isPristine: function(x)\n    {\n      return ( x === true || anim8.isFunction( x ) );\n    }\n\t};\n  \n  for (var method in defaultMethods)\n  {\n    if ( !(method in methods) )\n    {\n      methods[ method ] = defaultMethods[ method ];\n    }\n  }\n  \n\tanim8.calculator[name] = methods; \n};\n\n/**\n * A calculator for number primitives.\n */\nanim8.calculator.create('number', \n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn x;\n\t\t}\n\t\tif ( anim8.isString( x ) )\n\t\t{\n\t\t\tx = parseFloat( x );\n\t\t\t\n\t\t\tif (!isNaN(x))\n\t\t\t{\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn defaultValue;\n\t},\n  copy: function(out, copy) \n\t{\t\n    return copy;\n  },\n  create: function() \n\t{\n    return 0.0;\n  },\n  zero: function(out) \n\t{\n    return 0.0;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale) \n\t{\n    return out *= scale;\n  },\n  distanceSq: function(a, b) \n\t{\n    var ab = a - b;\n    return ab * ab;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'number';\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a - b) < epsilon;\n  }\n});\n\n/*\n * A calculator for objects with an x and y component (number)\n */\nanim8.calculator.create('2d', \n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y )\n\t\t\t};\n\t\t}\n    if ( anim8.isString( x ) )\n    {\n      var aliases = {\n        'left':   0,\n        'right':  100,\n        'middle': 50,\n        'center': 50,\n        'top':    0,\n        'bottom': 100\n      };\n      \n      if ( x.indexOf(' ') === -1 )\n      {\n        var _x = parseFloat( x );\n        \n        if ( !isNaN(_x) || x in aliases )\n        {\n          return {\n            x: x in aliases ? aliases[x] : _x,\n            y: x in aliases ? aliases[x] : _x\n          };\n        }\n      }\n      else\n      {\n        var pair = x.split(' ');\n        var _x = parseFloat( pair[0] );\n        var _y = parseFloat( pair[1] );\n        \n        if ((!isNaN(_x) || pair[0] in aliases) && (!isNaN(_y) || pair[1] in aliases))\n        {\n          return {\n            x: pair[0] in aliases ? aliases[pair[0]] : _x,\n            y: pair[1] in aliases ? aliases[pair[1]] : _y\n          };\n        }\n      }\n    }\n    \n    if ( anim8.isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );      \n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;    \n    return dx * dx + dy * dy;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with an x, y, and z component (number)\n */\nanim8.calculator.create('3d',\n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x,\n\t\t\t\tz: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\t\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z )\n\t\t\t};\n\t\t}\n    \n    if ( anim8.isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );      \n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out) \n\t{ \n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t  \t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t\t Math.abs(a.z - b.z) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with an x, y, z, and angle components.\n */\nanim8.calculator.create('quaternion', \n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: 1,\n\t\t\t\tangle: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z ),\n\t\t\t\tangle: anim8.coalesce( x.angle, defaultValue.angle )\n\t\t\t};\n\t\t}\n    \n    if ( anim8.isDefined( defaultValue ) )\n    {\n      return this.clone( defaultValue );      \n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n\t\tout.angle = copy.angle;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n\t\tout.angle = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n\t\tout.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n\t\tout.angle *= scale.angle;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n\t\tvar da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t  \t\t Math.abs(a.y) < epsilon && \n\t\t       Math.abs(a.z) < epsilon && \n\t\t       Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t   Math.abs(a.z - b.z) < epsilon && \n\t\t       Math.abs(a.angle - b.angle) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n */\nanim8.calculator.create('rgb', \n{\n\tparse: function(x, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: x,\n\t\t\t\tg: x,\n\t\t\t\tb: x\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( x );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with r, g, & b components \n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n */\nanim8.calculator.create('rgba', \n{\n\tparse: function(a, defaultValue)\n\t{\n    if ( this.isPristine( x ) )\n    {\n      return x;\n    }\n\t\tif ( anim8.isNumber( a ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: a,\n\t\t\t\tg: a,\n\t\t\t\tb: a,\n\t\t\t\ta: 1.0\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( a );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    var da = a.a - b.a;    \n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon && \n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon && \n           Math.abs(a.a - b.a) < epsilon;\n  }\n});\n\n/**\n * Sets the default calculator to the numeric calculator.\n */\nanim8.calculator.default = anim8.calculator.number;","anim8.parser.deltas = function( animation, options, events ) \n{\n\tvar deltas = animation.deltas;\n\tvar values = animation.values;\n\t\n\tif ( anim8.isArray( deltas ) )\n\t{\n\t\tvar deltaObject = {};\n\t\t\n\t\tfor (var attr in values)\n\t\t{\n\t\t\tdeltaObject[attr] = deltas;\t\n\t\t}\n\t\t\n\t\tdeltas = deltaObject;\n\t}\n\t\n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculators[attr] = anim8.calculator.default;\n\t\t\tdefaults[attr] = calculators[attr].create();\n    }\n\t\t\n\t\tfor (var k = 0; k < value.length; k++)\n\t\t{\n      if ( value[k] !== true )\n      {\n  \t\t\tvalue[k] = calculators[attr].parse( value[k], defaults[attr] ); \n      }\n\t\t}\n\t\t\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var easing   = anim8.coalesce( easings[attr], options.easing, anim8.defaults.easing );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.DeltaPath( attr, calculators[attr], values[attr], deltas[attr] );\n    var event    = new anim8.Event( attr, path, duration, anim8.easing( easing ), delay, sleep, repeat );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.final = function( animation, options, events ) \n{\n\tvar values = animation.final;\n\t\n  var delays = animation.delays || {};\n  var durations = animation.durations || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n\n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay + duration, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.initial = function( animation, options, events ) \n{\n\tvar values = animation.initial;\n\t\n  var delays = animation.delays || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n    \n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.keyframe = function( animation, options, events ) \n{\n  var kframes = animation.keyframe;\n  \n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  \n  var teasing = anim8.easing( anim8.coalesce( options.teasing, anim8.defaults.teasing ) );\n  \n  var sort = false;\n  \n  var aliases = {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  };\n  \n  // split up comma delimited times\n  for (var time in kframes)\n  {\n    if ( time in aliases )\n    {\n      kframes[ aliases[time] ] = kframes[ time ];\n      \n      delete kframes[ time ];\n    }\n    else if ( time.indexOf(',') !== -1 )\n    {\n      var times = time.split(',');\n      \n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i]] = kframes[time];\n      }\n      \n      delete kframes[time];\n      \n      sort = true;\n    }\n  }\n  \n  var times = [];\n  \n  // validate times\n  var lastTime = 0.0;\n  var maxTime = 0.0;\n  \n  for (var time in kframes)\n  {\n    var t = parseFloat(time);\n    \n    if (isNaN(t))\n    {\n      delete kframes[time];\n    }\n    else\n    {\n      if (t < lastTime)\n      {\n        sort = true;\n      }\n      \n      times.push({\n        order: t,\n        key: time,\n        value: kframes[time]\n      });\n      \n      lastTime = t;\n      \n      maxTime = Math.max( maxTime, t );\n    }\n  }\n  \n  // sort if necessary\n  if (sort)\n  {\n    times.sort(function(a, b) {\n      return a.order - b.order;\n    });\n    \n    kframes = {};\n    \n    for (var i = 0; i < times.length; i++)\n    {\n      kframes[times[i].key] = times[i].value;\n    }\n  }\n  \n  // split up into deltas and values\n  var deltas = {};\n  var values = {};\n  var calculators = {};\n\tvar defaults = {};\n  var pathEasings = {};\n  \n  for (var i = 0; i < times.length; i++)\n  {\n    var frame = times[i];\n    var easing = anim8.coalesce( frame.value.easing, options.easing );\n    \n    delete frame.value.easing;\n    \n    for (var attr in frame.value)\n    {\n      if ( !(attr in deltas) )\n      {\n        deltas[attr] = [];\n        values[attr] = [];\n        pathEasings[attr] = [];\n        \n        if (attr in anim8.attribute)\n        {\n          calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n        }\n        else\n        {\n          calculators[attr] = anim8.calculator.default;\n\t\t\t\t\tdefaults[attr] = calculators[attr].create();\n        }\n      }\n\t\t\t\n      deltas[attr].push( frame.order / maxTime );\n      values[attr].push( frame.value[attr] === true ? true : calculators[attr].parse( frame.value[attr], defaults[attr] ) );\n      pathEasings[attr].push( anim8.easing( anim8.coalesce( easings[attr], easing ) ) );\n    }\n  }\n\t\n  // create events & paths\n  for (var attr in deltas)\n  {\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.KeyframePath( attr, calculators[attr], values[attr], deltas[attr], pathEasings[attr] );\n    var event    = new anim8.Event( attr, path, duration, teasing, delay, sleep, repeat );\n    \n    events.push( event );\n  }\n};","\n/**\n * The factory for Plain-Old-Javascript-Objects.\n */\nanim8.factories.object = \n{\n  is: function(subject) \n\t{\n    return anim8.isObject( subject ) && !anim8.isElement( subject );\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n    var animator = from.$animator;\n    \n    if ( !animator )\n    {\n      animator = new anim8.Animator( from );\n      animator.factory = this;\n      \n      from.$animator = animator;\n    }\n    \n    animators.push( animator );\n  }\n};","\n/*\n  DOM create styles to apply, then apply them all at the same time\n  don't apply styles if they're impercivable (convert value to pixels of applicable)\n\n*/\n\n/* \n  anim8.property[name] = {\n    get: function(e, anim) {\n      // based on anim.animating, gets one or more value from the entity and places it on anim.frame. this function should only do this for an attribute if\n      // anim.animating[attribute] === false. When it successfully gets a value anim.animating[attribute] should be set to true. This is called before an animation\n      // begins on attributes that will be animated based on the current value. \n    },\n    set: function(e, anim) {\n      // applies the applicable attributes in anim.frame to the entity, \n    }\n }\n*/\nanim8.property = function(prop) \n{\n  if ( anim8.isObject( prop ) && anim8.isFunction( prop.get ) && anim8.isFunction( prop.set ) ) \n  {\n    return prop;\n  }\n  if ( anim8.isString( prop ) && prop in anim8.property )\n  {\n\t  return anim8.property[ prop ];\n  }\n\t\n  throw prop + ' is not a valid property';\n}\n\n/**\n * Computes the desired style of the given element and returns it as a string. The style\n * given must be in hyphenated format like so: anim8.style( element, 'font-size' ) = '12px'\n */\nanim8.style = (function()\n{\n  var hyphenize = function(str) \n\t{\n    str = str.replace(/[a-z][A-Z]/g, function(str, letter)\n    {\n     return str[0] + '-' + str[1].toLowerCase();\n    });\n    \n    str = str.replace(/^Webkit/, '-webkit');\n    str = str.replace(/^Moz/, '-moz');\n    str = str.replace(/^Ms/, '-ms');\n    str = str.replace(/^O/, '-o');\n    str = str.replace(/^Khtml/, '-khtml');\n    \n    return str;\n  };\n\t\n\treturn function(e, style) \n\t{\n\t  if (e.currentStyle)\n\t\t{\n\t    return e.currentStyle[ style ];\n\t  } \n\t\telse if (document.defaultView && document.defaultView.getComputedStyle) \n\t\t{\n\t    return document.defaultView.getComputedStyle( e, null ).getPropertyValue( hyphenize( style ) );\n\t  } \n\t\telse \n\t\t{\n\t    return e.style[ style ]; \n\t  }\n\t};\n\t\n})();\n\n/**\n * Given an array of styles this will return the first one that is present on elements in the current browser.\n */\nanim8.prefix = (function() \n{\n  var a = document.createElement('a');\n  \n  return function(prefixes) \n  {\n    for (var i = 0; i < prefixes.length; i++) \n    {\n      if ( anim8.isDefined( a.style[ prefixes[ i ] ] ) ) \n      {\n        return prefixes[i];\n      }\n    }\n    return false;\n  };\n  \n})();\n\n/**\n * Calculators how many pixels a given value & unit is.\n * \n * For Example: anim8.toPixels( 100, 'in' ) \n *    returns how many pixels are in 1 inch, with up to 2 decimal points of accuracy.\n */\nanim8.toPixels = function(baseValue, baseUnit, defaultRate)\n{\n  if ( document.body )\n  {\n    var div = document.createElement('div');\n    document.body.appendChild( div );\n    div.style.width = baseValue + baseUnit;\n    var pixels = (div.offsetWidth / baseValue);\n    document.body.removeChild( div );\n    return pixels || defaultRate;\n  }\n  \n  return defaultRate;\n};\n\n/**\n * Parses the string for a value and a unit.\n *\n * @param {string} value\n */\nanim8.parseValue = (function()\n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(px|em|%|vw|ex|cm|mm|in|pt|pc|deg|rad)?/;\n  \n  return function(x)\n  {\n    var parsed = regex.exec( x );\n    \n    if (parsed) \n    {      \n      return {\n        value: parseFloat( parsed[1] ),\n        unit: parsed[3]\n      }\n    }\n    \n    return false;\n  };\n})();\n\n\n/**\n * Converts one unit to another for a given element.\n *\n * For Example: anim8.convert( element, '100px', '%', 'parentWidth' )\n *    returns how much percent 100px relativeTo parentWidth of the given element\n *\n * @param {HTMLElement} e\n * @param {string} from\n * @param {string} toUnit\n * @param {string} relativeTo\n */\nanim8.convert = (function()\n{  \n  var getFontSize = function(e, notUnit)\n  {\n    var fontSize = anim8.style( e, 'fontSize' );\n    var parsed = anim8.parseValue( fontSize );\n    \n    if ( !parsed || parsed.unit === notUnit )\n    {\n      return 12;\n    }\n    \n    if ( parsed.unit === 'px' ) \n    {\n      return parsed.value;\n    }\n    \n    return getConverterScale( e, conversions[ parsed.unit ].px, relativeTo );\n  };\n\n  var variables = {};\n  \n  variables.parentWidth = function(e)\n  {\n    return e.parentNode.scrollWidth;\n  };\n  variables.parentHeight = function(e)\n  {\n    return e.parentNode.scrollHeight;\n  };\n  variables.width = function(e)\n  {\n    return e.offsetWidth;\n  };\n  variables.height = function(e)\n  {\n    return e.offsetHeight;\n  };\n  variables.fontSize = function(e)\n  {\n    return getFontSize( e, '%' );\n  };\n  variables.parentFontSize = function(e)\n  {\n    return getFontSize( e.parentNode, '%' );\n  };\n  variables.htmlFontSize = function(e)\n  {\n    var htmlElement = document.getElementsByTagName(\"html\")[0];\n    \n    return getFontSize( htmlElement, '%' );\n  };\n  \n  var conversions = {};\n  \n  conversions.pt  = { px: anim8.toPixels(100, 'pt') };\n  conversions.in  = { px: anim8.toPixels(100, 'in') };\n  conversions.cm  = { px: anim8.toPixels(1000, 'cm') };\n  conversions.mm  = { px: anim8.toPixels(100000, 'mm') };\n  conversions.vw  = { px: anim8.toPixels(1000, 'vw') };\n  conversions.deg = { rad: Math.PI / 180.0};\n\n  conversions.em = \n  {\n    px: function(e, relativeTo) \n    {\n      return getFontSize( e, 'em' );\n    }\n  };\n  \n  conversions.rem = \n  {\n    px: function(e, relativeTo) \n    {\n      var htmlElement = document.getElementsByTagName(\"html\")[0];\n      \n      return getFontSize( htmlElement, 'rem' );\n    }\n  };\n  \n  conversions['%'] = \n  {\n    px: function(e, relativeTo) \n    {\n      if ( anim8.isNumber( relativeTo ) )\n      {\n        return relativeTo;\n      }\n      if ( relativeTo in variables )\n      {\n        return variables[ relativeTo ]( e ) / 100.0;\n      }\n      \n      return 1.0;\n    }\n  };\n  \n  // Populate conversions going other way.\n  for (var unit in conversions)\n  {\n    for (var to in conversions[ unit ])\n    {\n      if ( !(to in conversions) )\n      {\n        conversions[ to ] = {};\n      }\n      \n      if ( !(unit in conversions[ to ]) )\n      {\n        var given = conversions[ unit ][ to ];\n        \n        if ( anim8.isNumber( given ) )\n        {\n          conversions[ to ][ unit ] = 1.0 / given;  \n        }\n        if ( anim8.isFunction( given ) )\n        {\n          conversions[ to ][ unit ] = (function(converter) \n          {\n            return function(e, relativeTo) \n            {\n              return 1.0 / converter( e, relativeTo );\n            };\n          })( given );\n        }\n      }\n    }\n  }\n  \n  // Given an element, convert, and relativeTo - return the number we need to multiply by.\n  var getConverterScale = function(e, converter, relativeTo)\n  {\n    if ( anim8.isNumber( converter ) )\n    {\n      return converter;\n    }\n    else if ( anim8.isFunction( converter ) )\n    {\n      return converter( e, relativeTo );\n    }\n    \n    return 1.0;\n  };\n  \n  return function(e, from, toUnit, relativeTo)\n  {\n    if ( anim8.isNumber( from ) )\n    {\n      return from;\n    }\n    \n    var parsed = anim8.parseValue( from );\n    \n    if ( !parsed )\n    {\n      return false;\n    }\n    \n    var value = parsed.value;\n    var fromUnit = parsed.unit;\n    \n    if ( !fromUnit || fromUnit === toUnit )\n    {\n      return value;\n    }\n    \n    // First see if we have a direct conversion available...\n    if ( fromUnit in conversions && toUnit in conversions[ fromUnit ] )\n    {\n      var converter = conversions[ fromUnit ][ toUnit ];\n      \n      value *= getConverterScale( e, converter, relativeTo );\n    }\n    // Otherwise convert it to px, then to the desired unit\n    else if ( fromUnit in conversions && conversions[ fromUnit ].px && toUnit in conversions.px )\n    {\n      var converter1 = conversions[ fromUnit ].px;\n      var converter2 = conversions.px[ toUnit ];\n      \n      value *= getConverterScale( e, converter1, relativeTo );\n      value *= getConverterScale( e, converter2, relativeTo );\n    }\n    \n    return value;\n  };\n  \n})();\n\n\nanim8.factories.dom = \n{\n\tids: 0,\n  \n\tcached: {},\n  \n  attribute: 'anim8',\n  \n  is: function(subject) \n\t{\n    return anim8.isElement( subject );\n  },\n  \n  has: function(from)\n  {\n    return from.getAttribute( this.attribute ) in this.cached;\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n\t\tvar animatorId = from.getAttribute( this.attribute );\n\t\t\n\t\tif (!(animatorId in this.cached)) \n\t\t{\n\t\t\tvar animator = new anim8.DomAnimator( from );\n\t\t\t\n\t\t\tfrom.setAttribute( this.attribute, animatorId = animator.id = ++this.ids );\n\t\t\t\n\t\t\tanimator.factory = this;\n\t\t\t\n\t\t\tthis.cached[animatorId] = animator;\n\t\t}\n\t\t\n\t\tanimators.push( this.cached[animatorId] );\n  },\n  \n\tcleanup: function(animator) \n\t{\n\t\tdelete this.cached[ animator.id ];\n\t}\n};","\nanim8.property.factory = function(nm, relativeTo) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var style = anim8.style( e, nm );\n        var converted = anim8.convert( e, style, anim.units[ nm ], relativeTo );\n        \n        if ( converted !== false ) \n        {\n          anim.frame[nm] = converted;\n          anim.animating[nm] = true;\n        }\n      }\n    },\n    set: function(e, anim) \n    { \n      anim.styles[nm] = anim.value( nm );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.factoryDerivable = function(nm, relativeTo, deriver) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var style = anim8.style( e, nm );\n        var converted = anim8.convert( e, style, anim.units[ nm ], relativeTo );\n        \n        if ( converted !== false ) \n        {\n          anim.frame[nm] = converted;\n          anim.animating[nm] = true;\n        }\n        else if ( anim8.isFunction( deriver ) )\n        {\n          converted = anim8.convert( e, deriver( e ), anim.units[ nm ], relativeTo );\n          \n          if ( converted !== false )\n          {\n            anim.frame[nm] = converted;\n            anim.animating[nm] = true;\n          }\n        }\n      }\n    },\n    set: function(e, anim) \n    { \n      anim.styles[nm] = anim.value( nm );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.factoryColor = function(nm) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var parsed = anim8.color.parse( e.style[nm] );\n        \n        if (parsed !== anim8.color.invalidColor) \n        {\n          anim.frame[nm] = parsed;\n          anim.animating[nm] = true;\n        }              \n      }\n    },\n    set: function(e, anim) \n    {\n      anim.styles[nm] = anim8.color.format( anim.frame[nm] );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.padding                  = anim8.property.factory( 'padding', 'parentWidth' );\nanim8.property.paddingTop               = anim8.property.factory( 'paddingTop', 'parentWidth' );\nanim8.property.paddingRight             = anim8.property.factory( 'paddingRight', 'parentWidth' );\nanim8.property.paddingBottom            = anim8.property.factory( 'paddingBottom', 'parentWidth' );\nanim8.property.paddingLeft              = anim8.property.factory( 'paddingLeft', 'parentWidth' );\n\nanim8.property.margin                   = anim8.property.factory( 'margin', 'parentWidth' );\nanim8.property.marginTop                = anim8.property.factory( 'marginTop', 'parentWidth' );\nanim8.property.marginRight              = anim8.property.factory( 'marginRight', 'parentWidth' );\nanim8.property.marginBottom             = anim8.property.factory( 'marginBottom', 'parentWidth' );\nanim8.property.marginLeft               = anim8.property.factory( 'marginLeft', 'parentWidth' );\n\nanim8.property.borderRadius             = anim8.property.factory( 'borderRadius', 'width' );\nanim8.property.borderTopLeftRadius      = anim8.property.factory( 'borderTopLeftRadius', 'width' );\nanim8.property.borderTopRightRadius     = anim8.property.factory( 'borderTopRightRadius', 'width' );\nanim8.property.borderBottomLeftRadius   = anim8.property.factory( 'borderBottomLeftRadius', 'width' );\nanim8.property.borderBottomRightRadius  = anim8.property.factory( 'borderBottomRightRadius', 'width' );\n\nanim8.property.borderWidth              = anim8.property.factory( 'borderWidth' );\nanim8.property.borderTopWidth           = anim8.property.factory( 'borderTopWidth' );\nanim8.property.borderRightWidth         = anim8.property.factory( 'borderRightWidth' );\nanim8.property.borderBottomWidth        = anim8.property.factory( 'borderBottomWidth' );\nanim8.property.borderLeftWidth          = anim8.property.factory( 'borderLeftWidth' );\n\nanim8.property.outlineWidth             = anim8.property.factory( 'outlineWidth' );\nanim8.property.textIndent               = anim8.property.factory( 'textIndent', 'parentWidth' );\nanim8.property.borderSpacing            = anim8.property.factory( 'borderSpacing' );\nanim8.property.fontSize                 = anim8.property.factory( 'fontSize', 'parentFontSize' );\nanim8.property.lineHeight               = anim8.property.factory( 'lineHeight', 'fontSize' );\nanim8.property.zIndex                   = anim8.property.factory( 'zIndex' );\n\nanim8.property.color                    = anim8.property.factoryColor( 'color' );\nanim8.property.backgroundColor          = anim8.property.factoryColor( 'backgroundColor' );\nanim8.property.borderTopColor           = anim8.property.factoryColor( 'borderTopColor' );\nanim8.property.borderRightColor         = anim8.property.factoryColor( 'borderRightColor' );\nanim8.property.borderBottomColor        = anim8.property.factoryColor( 'borderBottomColor' );\nanim8.property.borderLeftColor          = anim8.property.factoryColor( 'borderLeftColor' );\nanim8.property.outlineColor             = anim8.property.factoryColor( 'outlineColor' );\n\nanim8.property.minWidth                 = anim8.property.factory( 'minWidth', 'parentWidth' );\nanim8.property.maxWidth                 = anim8.property.factory( 'maxWidth', 'parentWidth' );\nanim8.property.minHeight                = anim8.property.factory( 'minHeight', 'parentHeight' );\nanim8.property.maxHeight                = anim8.property.factory( 'maxHeight', 'parentHeight' );\n\nanim8.property.width                    = anim8.property.factoryDerivable('width', 'parentWidth', function(e) { return e.offsetWidth + 'px'; });\nanim8.property.height                   = anim8.property.factoryDerivable('height', 'parentHeight', function(e) { return e.offsetHeight + 'px'; });\n\nanim8.property.top                      = anim8.property.factoryDerivable('top', 'parentHeight', function(e) { return e.offsetTop + 'px'; });\nanim8.property.right                    = anim8.property.factoryDerivable('right', 'parentWidth', function(e) { return (e.parentNode.scrollWidth - (e.offsetLeft + e.offsetWidth)) + 'px'; });\nanim8.property.bottom                   = anim8.property.factoryDerivable('bottom', 'parentHeight', function(e) { return (e.parentNode.scrollHeight - (e.offsetTop + e.offsetHeight)) + 'px'; });\nanim8.property.left                     = anim8.property.factoryDerivable('left', 'parentWidth', function(e) { return e.offsetLeft + 'px'; });\n\nanim8.property.visibility = \n{\n  get: function(e, anim) \n  {\n    if (anim.animating.visibility === false) \n    {\n      var style = anim8.style( e, 'visibility' );\n      anim.frame.visibility = style === 'hidden' ? 0.0 : 1.0;\n      anim.animating = true;\n    }\n  },\n  set: function(e, anim) \n  {\n    anim.styles.visibility = anim.frame.visibility < 0.5 ? 'hidden' : 'visible'\n  },\n  unset: function(e, anim)\n  {\n    e.style.visibility = null;\n  }\n}\n\nanim8.property.backface = (function()\n{\n  var css = anim8.prefix(['WebkitBackfaceVisibility', 'MozBackfaceVisibility', 'msBackfaceVisibility', 'BackfaceVisibility']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  return {\n    \n    get: function(e, anim)\n    {\n      if ( anim.animating.backface === false )\n      {\n        var style = anim8.style( e, css ); \n        \n        anim.frame.backface = (style === 'visible') ? 1.0 : 0.0;\n        anim.animating.backface = true;\n      }\n    },\n    set: function(e, anim)\n    {\n      anim.styles[css] = anim.frame.backface < 0.5 ? 'none' : 'visible';\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n    \n  };\n  \n})();\n\nanim8.property.transformOrigin = (function() \n{\n  var css = anim8.prefix(['WebkitTransformOrigin', 'MozTransformOrigin', 'OTransformOrigin', 'msTransformOrigin', 'transformOrigin']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  var keywords = \n  {\n    'left':   '0%',\n    'center': '50%',\n    'right':  '100%',\n    'top':    '0%',\n    'bottom': '100%'\n  };\n  \n  var setOriginAttribute = function(e, value, anim, attr, relativeTo ) \n  {\n    if (anim.animating[attr] === false) \n    {\n      if ( value in keywords )\n      {        \n        value = keywords[ value ];\n      }\n\n      var converted = anim8.convert( e, value, anim.units[ attr ], relativeTo );\n      \n      if ( converted !== false )\n      {\n        anim.frame[ attr ] = converted;\n        anim.animating[ attr ] = true;\n      }\n    }\n  };\n  \n  var setOrigin = function(e, split, anim) \n  {\n    if (anim.animating.origin === false) \n    {\n      if ((split.length === 1) || \n          (split.length === 2 && split[0] === split[1]) || \n          (split.length === 3 && split[0] === split[1] && split[1] === split[2])) \n      {     \n        setOriginAttribute( e, split[0], anim, 'origin', 'width' );\n      }            \n    }\n  };\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      var style = anim8.style( e, css );\n      \n      if (style) \n      {\n        var origin = style.toLowerCase();\n        var split = origin.split(' ');\n        \n        switch (split.length) \n        {\n        case 3:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[1], anim, 'originY', 'height' );\n          setOriginAttribute( e, split[2], anim, 'originZ' );\n          setOrigin( e, split, anim );\n          break;\n        case 2:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[1], anim, 'originY', 'height' );\n          setOrigin( e, split, anim );\n          break;\n        case 1:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[0], anim, 'originY', 'height' );\n          setOrigin( e, split, anim );\n          break;\n        }\n      }\n    },\n    set: function(e, anim) \n    {      \n      var style = null;\n      \n      if ( anim8.isDefined( anim.frame.originZ ) )\n      {\n        style = anim.valueOr( 'originX', 'origin', 'x' ) + ' ' + anim.valueOr( 'originY', 'origin', 'y' ) + ' ' + anim.valueOr( 'originZ', 'origin', 'z' );\n      } \n      else \n      {\n        style = anim.valueOr( 'originX', 'origin', 'x' ) + ' ' + anim.valueOr( 'originY', 'origin', 'y' );\n      }\n      \n      anim.styles[css] = style;\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n  };\n  \n})();\n\nanim8.property.transform = (function() \n{\n  var css = anim8.prefix(['WebkitTransform', 'MozTransform', 'OTransform', 'msTransform', 'transform']);\n   \n  if ( !css )\n  {\n    return false;\n  }\n\n  var d2 = { translate: true, scale: true };\n  var d3 = { translate3d: true, scale3d: true };\n  var d4 = { rotate3d: true };\n  var axis = ['X', 'Y', 'Z'];\n    \n  var regex = \n  {\n    translate: /translate\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    translate3d: /translate3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    translateX: /translateX\\(([^\\)]+)\\)/i,\n    translateY: /translateY\\(([^\\)]+)\\)/i,\n    translateZ: /translateZ\\(([^\\)]+)\\)/i,\n    scale: /scale\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    scale3d: /scale3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    scaleX: /scaleX\\(([^\\)]+)\\)/i,\n    scaleY: /scaleY\\(([^\\)]+)\\)/i,\n    scaleZ: /scaleZ\\(([^\\)]+)\\)/i,\n    rotate: /rotate\\(([^\\)]+)\\)/i,\n    rotate3d: /rotate3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    rotateX: /rotateX\\(([^\\)]+)\\)/i,\n    rotateY: /rotateY\\(([^\\)]+)\\)/i,\n    rotateZ: /rotateZ\\(([^\\)]+)\\)/i,\n    skew: /skew\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    skewX: /skewX\\(([^\\)]+)\\)/i,\n    skewY: /skewY\\(([^\\)]+)\\)/i\n  };\n  \n  var parse = function( e, value, anim, attr, relativeTo )\n  {\n    var desiredUnit = anim.units[ attr ];\n    var converted = anim8.convert( e, value, desiredUnit, relativeTo );\n    \n    if ( converted !== false )\n    {\n      return converted;\n    }\n    \n    // TODO show convert this to desiredUnit, however defaultValue may be non-scalar.\n    return anim8.attribute( attr ).defaultValue;    \n  };\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      var style = anim8.style( e, css );\n      \n      for (var attr in anim.animating) \n      {\n        if ( anim.animating[ attr ] === false && attr in regex ) \n        {\n          var parsed = regex[ attr ].exec( style );\n          \n          if ( parsed ) \n          {\n            if ( attr in d4 ) \n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' ),\n                z: parse( e, parsed[3], anim, attr ),\n                angle: parse( e, parsed[4], anim, attr )\n              };\n            }\n            else if ( attr in d3 )\n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' ),\n                z: parse( e, parsed[3], anim, attr )\n              };\n            }\n            else if ( attr in d2 ) \n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' )\n              };\n            }\n            else \n            {\n              anim.frame[attr] = parse( e, parsed[1], anim, attr, 'width' );\n            }\n            \n            anim.animating[attr] = true;\n          }\n        }\n      }\n    },\n    set: function(e, anim) \n    {  \n      // we don't check anim.updated[attr] here since the current value of a transform property is important\n      \n      var transforms = [];\n      \n      for (var attr in regex) \n      {\n        if (attr in anim.frame) \n        { \n          var value = anim.frame[ attr ];\n          var unit = anim.units[ attr ];\n          \n          if (attr in d4) \n          {\n            transforms.push( attr + '(' + value.x + ',' + value.y + ',' + value.z + ',' + value.angle + unit + ')' );\n          }\n          else if (attr in d3) \n          {\n            transforms.push( attr + '(' + value.x + unit + ',' + value.y + unit + ',' + value.z + unit + ')' );\n          }\n          else if (attr in d2) \n          {\n            transforms.push( attr + '(' + value.x + unit + ',' + value.y + unit + ')' );\n          }\n          else\n          {\n            transforms.push( attr + '(' + value + unit + ')' );\n          }\n        }\n      }\n\t\t\t\n      if (transforms.length) \n      {\n        anim.styles[css] = transforms.join(' ');\n      }\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n  };\n  \n})();\n\nanim8.property.opacity = (function() \n{\n  var css = anim8.prefix(['WebkitOpacity', 'MozOpacity', 'KhtmlOpacity', 'opacity']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating.opacity === false) \n      {\n        var style = anim8.style( e, css );\n        var opacity = parseFloat( style );\n        \n        if ( !isNaN(opacity) ) \n        {\n          anim.frame.opacity = opacity\n          anim.animating.opacity = true;\n        }\n      }\n    },\n    set: function(e, anim) \n    {\n      anim.styles[ css ] = anim.frame.opacity;\n    },\n    unset: function(e, anim)\n    {\n      e.style[ css ] = null;\n    }\n  };\n  \n})();\n\nanim8.property.filter = (function() \n{\n  var css = anim8.prefix(['WebkitFilter', 'MozFilter', 'OFilter', 'msFilter', 'filter']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n\tvar methods = \n  {\n\t\tgrayscale: \t'grayscale',\n\t\tsepia: \t\t\t'sepia',\n\t\tsaturate: \t'saturate',\n\t\thueRotate: \t'hue-rotate',\n\t\tinvert: \t\t'invert',\n\t\tbrightness: 'brightness',\n\t\tcontrast: \t'contrast',\n    blur:       'blur'\n\t};\n\t\n\tvar patterns = {};\n\t\n\tfor (var attr in methods) \n  {\n\t\tpatterns[attr] = new RegExp( methods[attr] + '\\(([^\\)]+)\\)', 'i');\n\t}\n  \n\treturn {\n    \n\t\tget: function(e, anim) \n    {\n\t\t\tvar style = anim8.style( e, css );\n      \n\t\t\tfor (var attr in patterns) \n      {\n\t\t\t\tif ( anim.animating[attr] === false ) \n        {\n\t\t\t\t\tvar parsed = patterns[attr].exec( style );\n          \n\t\t\t\t\tif (parsed !== false) \n          {\n            var converted = anim8.convert( e, parsed[1], anim.units[ attr ] );\n            \n            if ( converted !== false )\n            {\n              anim.frame[ attr ] = converted;\n              anim.animating[ attr ] = true;\n            }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, \n\t\tset: function(e, anim) \n    {\n      // we don't check anim.updated[attr] here since the current value of a transform property is important\n      \n\t\t\tvar filters = [];\n      \n\t\t\tfor (var attr in methods) \n      {\n\t\t\t\tif ( attr in anim.frame ) \n        {\n          filters.push( methods[attr] + '(' + anim.value( attr ) + ')' );\n\t\t\t\t}\n\t\t\t}\n      \n\t\t\tif (filters.length) \n      {\n\t\t\t\tanim.styles[ css ] = filters.join(' ');\n\t\t\t}\n\t\t},\n    unset: function(e, anim)\n    {\n      e.style[ css ] = null;\n    }\n\t};\n\t\n})();\n\nanim8.property.center = \n{\n  get: function(e, anim)\n  {\n    var cx = (e.offsetLeft + e.offsetWidth * 0.5) + 'px';\n    var cy = (e.offsetTop + e.offsetHeight * 0.5) + 'px';\n    \n    if ( anim.animating.center === false )\n    {\n      var desiredUnit = anim.units.center;\n      var ccx = anim8.convert( e, cx, desiredUnit, 'parentWidth' );\n      var ccy = anim8.convert( e, cy, desiredUnit, 'parentHeight' );\n      \n      if ( ccx !== false && ccy !== false )\n      {\n        anim.frame.center = {\n          x: ccx,\n          y: ccy\n        };\n        anim.animating.center = true;\n      }\n    }\n    if ( anim.animating.centerX === false )\n    {\n      var desiredUnit = anim.units.centerX;\n      var ccx = anim8.convert( e, cx, desiredUnit, 'parentWidth' );\n      \n      if ( ccx !== false )\n      {\n        anim.frame.centerX = ccx;\n        anim.animating.centerX = true;\n      }\n    }\n    if ( anim.animating.centerY === false )\n    {\n      var desiredUnit = anim.units.centerY;\n      var ccy = anim8.convert( e, cy, desiredUnit, 'parentHeight' );\n      \n      if ( ccy !== false )\n      {\n        anim.frame.centerY = ccy;\n        anim.animating.centerY = true;\n      }\n    }\n  },\n  preset: function(e, anim)\n  {\n    anim.cached.width  = anim8.convert( e, e.offsetWidth + 'px', anim.units.centerX || anim.units.center, 'x' );\n    anim.cached.height = anim8.convert( e, e.offsetHeight + 'px', anim.units.centerY || anim.units.center, 'y' );\n  },\n  set: function(e, anim)\n  {\n    var rw = anim.cached.width * 0.5;\n    var rh = anim.cached.height * 0.5;\n        \n    if ( anim.updated.center )\n    {      \n      anim.styles.left = (anim.frame.center.x - rw) + anim.units.center;\n      anim.styles.top = (anim.frame.center.y - rh) + anim.units.center;\n    }\n    if ( anim.updated.centerX )\n    {\n      anim.styles.left = (anim.frame.centerX - rw) + anim.units.centerX;\n    }\n    if ( anim.updated.centerY )\n    {\n      anim.styles.top = (anim.frame.centerY - rh) + anim.units.centerY;\n    }\n  }\n};\n\nanim8.property.orbit = \n{\n  DEGREE_TO_RADIAN: Math.PI / 180.0,\n  \n  RADIAN_TO_DEGREE: 180.0 / Math.PI,\n  \n  get: function(e, anim)\n  {\n    var ox = (e.parentNode.scrollWidth * 0.5);\n    var oy = (e.parentNode.scrollHeight * 0.5); \n    var cx = (e.offsetLeft + e.offsetWidth * 0.5);\n    var cy = (e.offsetTop + e.offsetHeight * 0.5);\n    var dx = cx - ox;\n    var dy = cy - oy;\n  \n    if ( anim.animating.orbitOffset === false )\n    {\n      var cunit = anim.units.orbitOffset;\n      var cox = anim8.convert( e, ox + 'px', cunit, 'parentWidth' );\n      var coy = anim8.convert( e, oy + 'px', cunit, 'parentHeight' );\n      \n      if ( cox !== false && coy !== false )\n      {\n        anim.frame.orbitOffset = {\n          x: cox,\n          y: coy\n        };\n        anim.animating.orbitOffset = false;\n      }\n    }\n    \n    if ( anim.animating.distance === false )\n    {\n      anim.frame.distance = Math.sqrt( dx * dx + dy * dy );\n      anim.animating.distance = true;\n    }\n    \n    if ( anim.animating.angle === false )\n    {\n      anim.frame.angle = Math.atan2( dy, dx ) * this.RADIAN_TO_DEGREE;\n      anim.animating.angle = true;\n    }\n  },\n  \n  preset: function(e, anim)\n  {  \n    anim.cached.parentWidth = e.parentNode.scrollWidth;\n    anim.cached.parentHeight = e.parentNode.scrollHeight;\n    anim.cached.width = e.offsetWidth;\n    anim.cached.height = e.offsetHeight;\n  },\n  \n  set: function(e, anim)\n  {\n    // TODO calculator this correctly\n    var cunit = anim.units.orbitOffset || '%';\n    var orbitX = anim.frame.orbitOffset ? anim.frame.orbitOffset.x : 50;\n    var orbitY = anim.frame.orbitOffset ? anim.frame.orbitOffset.y : 50;\n    \n    var originUnit = anim.units.origin || '%';\n    var originX = anim.frame.origin ? anim.frame.origin.x : 50;\n    var originY = anim.frame.origin ? anim.frame.origin.y : 50;\n    \n    var cox = anim8.convert( e, orbitX + cunit, 'px', anim.cached.parentWidth / 100.0 );\n    var coy = anim8.convert( e, orbitY + cunit, 'px', anim.cached.parentHeight / 100.0 );\n    \n    var ox = anim8.convert( e, originX + originUnit, 'px', anim.cached.width / 100.0 );\n    var oy = anim8.convert( e, originY + originUnit, 'px', anim.cached.height / 100.0 );\n    \n    var angle = (anim.frame.angle || 0.0) * this.DEGREE_TO_RADIAN;\n    var distance = anim.frame.distance || 0.0;\n        \n    var cos = Math.cos( angle ) * distance;\n    var sin = Math.sin( angle ) * distance;\n    \n    anim.styles.left = (cox + cos - ox) + 'px';\n    anim.styles.top = (coy + sin - oy) + 'px';\n  }\n};","\n/**\n * All animatable attributes for DomAnimators & HTMLElements.\n */\n\nanim8.attribute.padding                 = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingTop              = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingRight            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingBottom           = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingLeft             = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.margin                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginTop               = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginRight             = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginBottom            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginLeft              = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.borderRadius            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopLeftRadius     = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopRightRadius    = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomLeftRadius  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomRightRadius = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.borderWidth             = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopWidth          = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderRightWidth        = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomWidth       = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderLeftWidth         = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.outlineWidth\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.outlineOffset\t\t\t\t\t\t= {defaultValue: 0};\nanim8.attribute.textIndent\t\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderSpacing\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.fontSize\t\t\t\t\t\t\t\t= {defaultValue: 1, defaultUnit: 'em'};\nanim8.attribute.lineHeight\t\t\t\t\t\t\t= {defaultValue: 1, defaultUnit: 'em'};\n\nanim8.attribute.origin                  = {defaultValue: {x:50, y:50}, defaultUnit: '%', property: 'transformOrigin', calculator: '2d'};\nanim8.attribute.originX                 = {defaultValue: 50, defaultUnit: '%', property: 'transformOrigin'};\nanim8.attribute.originY                 = {defaultValue: 50, defaultUnit: '%', property: 'transformOrigin'};\n\nanim8.attribute.opacity                 = {defaultValue: 1};\nanim8.attribute.zIndex                  = {defaultValue: 1};\n\nanim8.attribute.width                   = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.minWidth                = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.maxWidth                = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.height                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.minHeight               = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.maxHeight               = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.angle                   = {defaultValue: 0, property: 'orbit'};\nanim8.attribute.distance                = {defaultValue: 0, property: 'orbit'};\nanim8.attribute.orbitOffset             = {defaultValue: {x:50, y:50}, defaultUnit: '%', property: 'orbitOffset', calculator: '2d'};\n\nanim8.attribute.top                     = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.right                   = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.bottom                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.left                    = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.center                  = {defaultValue: {x:0, y:0}, defaultUnit: 'px', property: 'center', calculator: '2d'};\nanim8.attribute.centerX                 = {defaultValue: 0, defaultUnit: 'px', property: 'center'};\nanim8.attribute.centerY                 = {defaultValue: 0, defaultUnit: 'px', property: 'center'};\n\nanim8.attribute.blur                    = {defaultValue: 0, property: 'filter', defaultUnit: 'px'};\nanim8.attribute.sepia                   = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.brightness              = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.grayscale               = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.contrast                = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.invert                  = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.saturation              = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.hueRotate               = {defaultValue: 0, property: 'filter', defaultUnit: 'deg'};\n\nanim8.attribute.rotate                  = {defaultValue: 0, property: 'transform', defaultUnit: 'deg'};\nanim8.attribute.rotate3d                = {defaultValue: {x:0, y:0, z:1, angle:0}, property: 'transform', calculator: 'quaternion', defaultUnit: 'deg'};\n\nanim8.attribute.translate               = {defaultValue: {x:0, y:0}, property: 'transform', calculator: '2d', defaultUnit: 'px'};\nanim8.attribute.translateX              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translateY              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translateZ              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translate3d             = {defaultValue: {x:0, y:0, z:0}, property: 'transform', calculator: '3d', defaultUnit: 'px'};\n\nanim8.attribute.scale                   = {defaultValue: {x: 0, y:0}, property: 'transform', calculator: '2d'};\nanim8.attribute.scaleX\t                = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scaleY  \t              = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scaleZ  \t              = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scale3d                 = {defaultValue: {x:1, y:1, z:1}, property: 'transform', calculator: '3d'};\n\nanim8.attribute.skew                    = {defaultValue: {x:0, y:0}, defaultUnit: 'deg', property: 'transform', calculator: '2d'};\nanim8.attribute.skewX                   = {defaultValue: 0, defaultUnit: 'deg', property: 'transform'};\nanim8.attribute.skewY                   = {defaultValue: 0, defaultUnit: 'deg', property: 'transform'};\n\nanim8.attribute.backface                = {defaultValue: 0};\nanim8.attribute.visibility              = {defaultValue: 1};\n\nanim8.attribute.backgroundColor         = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.color                   = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderTopColor          = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderRightColor        = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderBottomColor       = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderLeftColor         = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.outlineColor            = {defaultValue: anim8.color(), calculator: 'rgba'};","\n/**\n * Instantiates a new DomAnimator given a subject.\n * \n * @param {HTMLElement} e\n */\nanim8.DomAnimator = function(e)\n{\n\tthis.reset( e );\n  this.properties = {};\n  this.trues = {};\n  this.truesUpdated = false;\n  this.attributeToProperty = {};\n  this.animating = {};\n  this.units = {};\n  this.cached = {};\n  this.styles = {};\n  this.styled = false;\n  this.stylesUpdated = false;\n  this.animation = null;\n};\n\n/**\n * Extends anim8.Animator\n */\nanim8.DomAnimator.prototype = new anim8.Animator();\n\n/**\n * A method thats invoked along with all other animators before updates are called.\n * This is used to make any necessary preparations before the animator is updated.\n *\n * If any events that were recently added have true values this is where we replace\n * this true values with the values currently on the subject.\n */\nanim8.DomAnimator.prototype.preupdate = function()\n{\n  if ( this.truesUpdated )\n  {    \n    var properties = {};\n  \n    for (var attr in this.trues)\n    {\n      properties[ this.attributeToProperty[attr] ] = true;\n      \n      this.animating[ attr ] = false;\n    }\n  \n    for (var prop in properties)\n    {\n      this.properties[ prop ].get( this.e, this );\n    }\n    \n    for (var attr in this.trues)\n    {\n      if ( this.animating[attr] === true )\n      {\n        var e = this.trues[ attr ];\n        var p = e.path.copy();\n        var ps = p.points;\n        \n        for (var i = 0; i < ps.length; i++)\n        {\n          if ( ps[i] === true )\n          {\n            ps[i] = this.frame[ attr ];\n          }\n        }\n    \n        e.path = p;\n      }\n    \n      delete this.trues[ attr ];\n    }\n    \n    this.truesUpdated = false;\n  }\n  \n  for (var prop in this.properties)\n  {\n    var property = this.properties[ prop ];\n    \n    if ( anim8.isFunction( property.preset ) )\n    {\n      property.preset( this.e, this );\n    }\n  }\n  \n  this.trigger('preupdate');\n};\n  \n/**\n * Updates the animator with the current time. All events and springs in this\n * animator are updated.\n *\n * @param {number} now\n */\nanim8.DomAnimator.prototype.update = function(now)\n{\n  anim8.Animator.prototype.update.apply( this, arguments );\n    \n  this.getStyles();\n  this.stylesUpdated = true;\n};\n\n/**\n * A method invoked when an animation is about to be played in the Animator.\n * \n * @param {anim8.Animation} animation\n * @param {object} options\n * @param {array:anim8.EventInstance} events\n */\nanim8.DomAnimator.prototype.onAnimation = function(animation, options, events)\n{  \n  if ( animation.input.units )\n  {\n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n    \n      if ( attr in animation.input.units )\n      {\n        e.unit = animation.input.units[ attr ];\n      }\n    }  \n  }\n};\n\n/**\n * Builds the styles map in preparation to be applied.\n */\nanim8.DomAnimator.prototype.getStyles = function()\n{\n  this.styles = {};\n  \n  var applyProperties = {};\n  \n  for (var attr in this.frame)\n  {\n    if ( this.updated[ attr ] )\n    {\n      var prop = this.attributeToProperty[ attr ];\n      \n      if ( prop in this.properties )\n      {\n        applyProperties[ prop ] = true; \n      }\n    }\n  }\n  \n  for (var prop in applyProperties)\n  {\n    this.properties[ prop ].set( this.e, this );  \n    \n    this.styled = true;\n  }\n};\n\n/**\n * Applies all updated attributes to the subject. This method is invoked with all of the other\n * animators at the end of the animation cycle.\n */\nanim8.DomAnimator.prototype.apply = function()\n{\n  if ( !this.styled && !this.stylesUpdated )\n  {\n    this.getStyles();\n  }\n  \n  if ( this.styled )\n  {    \n    for (var prop in this.styles)\n    {\n       this.e.style[ prop ] = this.styles[ prop ];\n    }\n    \n    for (var attr in this.frame)\n    {\n      this.updated[ attr ] = false;\n    }\n  \n    this.styled = false;\n  }\n  \n  this.stylesUpdated = false;\n  \n  this.trigger('apply');\n  \n  this.trimEvents();\n};\n  \n/**\n * Places the event in this animator replacing any event that exists for the same\n * attribute. The next time the animator is updated the event will be started.\n *\n * @param {anim8.EventInstance} e\n */\nanim8.DomAnimator.prototype.placeEvent = function( e )\n{\n  anim8.Animator.prototype.placeEvent.apply( this, arguments );\n  \n  var attr = e.attribute;\n  var attribute = anim8.attribute( attr );\n  var prop = anim8.coalesce( attribute.property, attr );\n  var property = anim8.property( prop );\n  \n  if ( e.hasTrue() )\n  {    \n    this.trues[ attr ] = e;\n    this.truesUpdated = true;\n  }\n  \n  this.attributes[ attr ] = attribute;\n  this.properties[ prop ] = property;\n  this.attributeToProperty[ attr ] = prop;\n  this.units[ attr ] = e.unit || attribute.defaultUnit || '';\n};\n  \n/**\n * Places the spring in this animator replacing any spring that exists for the same\n * attribute. The next time the animator is updated the spring will be started.\n *\n * @param {anim8.Spring} s\n */\nanim8.DomAnimator.prototype.placeSpring = function( s )\n{\n  anim8.Animator.prototype.placeSpring.apply( this, arguments );\n  \n  var attr = s.attribute;\n  var attribute = anim8.attribute( attr );\n  var prop = anim8.coalesce( attribute.property, attr );\n  var property = anim8.property( prop );\n  \n  this.attributes[ attr ] = attribute;\n  this.properties[ prop ] = property;\n  this.attributeToProperty[ attr ] = prop;\n  this.units[ attr ] = attribute.defaultUnit || '';\n};\n  \n/**\n * Restores any temporary state that may exist on this Animator that\n * is a result from animations.\n */\nanim8.DomAnimator.prototype.restore = function()\n{\n  for (var prop in this.properties)\n  {\n    this.properties[prop].unset( this.e, this );\n  }\n};\n  \n/**\n * A method that is invoked when an animator is finished and is being removed from the list\n * of currently animating Animators.\n */\nanim8.DomAnimator.prototype.cleanup = function()\n{\n  // this.factory.cleanup( this );\n  \n  this.trigger('cleanup');\n};\n  \n/**\n * Sets the given attributes to this Animator immediately.\n *\n * @param {object} attributes\n */\nanim8.DomAnimator.prototype.set = function(attributes)\n{\n  var props = {};\n  var updated = {};\n  var units = {};\n  var styles = {};\n  \n  for (var attr in attributes)\n  {\n    var attribute = anim8.attribute( attr );\n    var prop      = anim8.coalesce( attribute.property, attr );\n    var property  = anim8.property( prop );\n    var calc      = anim8.calculator( attribute.calculator );\n    var value     = attributes[ attr ];\n    \n    units[ attr ] = attribute.defaultUnit || '';\n    \n    if ( anim8.isString( value ) )\n    {\n      var parsed = anim8.parseValue( value, attribute.defaultUnit );\n      \n      if ( parsed !== false )\n      {\n        units[ attr ] = parsed.unit || attribute.defaultUnit || '';\n        value = parsed.value;\n      }  \n    }\n    \n    var parsed = calc.parse( value, attribute.defaultValue );\n    \n    if ( parsed !== false )\n    {\n      props[ prop ] = property;\n      attributes[ attr ] = parsed;\n      updated[ attr ] = true;\n    }\n  }\n    \n  var flash = \n  {\n    units: units,\n     \n    frame: attributes,\n    \n    updated: updated,\n    \n    styles: styles,\n    \n    cached: {},\n    \n    value: function(attr)\n    {\n      return attributes[ attr ] + units[ attr ];\n    },\n    \n    valueOr: function(attr, other, subproperty)\n    {\n      var value = attributes[ attr ];\n      \n      if ( !anim8.isDefined( value ) )\n      {\n        value = attributes[ attr = other ];\n      \n        if ( anim8.isDefined( subproperty ) )\n        {\n          value = value[ subproperty ];\n        }\n      }\n  \n      return value + units[ attr ];\n    }\n  };\n  \n  for (var prop in props)\n  {\n    var property = props[ prop ];\n    \n    if ( anim8.isFunction( property.preset ) )\n    {\n      props[ prop ].preset( this.e, flash );\n    }\n  }\n  \n  for (var prop in props)\n  {\n    props[ prop ].set( this.e, flash );\n  }\n  \n  for (var prop in styles)\n  {\n    this.e.style[ prop ] = styles[ prop ];\n  }\n};\n\n/**\n * Gets the current attribute values for all attributes specified. The argument must be an object\n * where the key is the name of an attribute and the value is the desired unit.\n *\n * @param {object} attributes\n */\nanim8.DomAnimator.prototype.get = function(attributes)\n{\n  var props = {};\n  var animating = {};\n  var units = {};\n  var out = {};\n  \n  for (var attr in attributes)\n  {    \n    var attribute = anim8.attribute( attr );\n    var prop      = anim8.coalesce( attribute.property, attr );\n    var property  = anim8.property( prop );\n    var calc      = anim8.calculator( attribute.calculator );\n    \n    animating[ attr ] = false;    \n    units[ attr ] = attributes[ attr ] || attribute.defaultUnit || '';\n    props[ prop ] = property;\n    out[ attr ] = calc.clone( attribute.defaultValue );\n  }\n  \n  var flash = \n  {    \n    units: units,\n    \n    frame: out,\n    \n    animating: animating,\n    \n    unit: function(attr)\n    {\n      return units[ attr ];\n    }\n  };\n  \n  for (var prop in props)\n  {\n    props[ prop ].get( this.e, flash );\n  }\n  \n  return out;\n};\n\n/**\n * Returns a function that returns the current value for the given attribute when invoked.\n * \n * @param {string} attribute\n */\nanim8.DomAnimator.prototype.ref = function(attribute, desiredUnit, relativeTo)\n{\n  var animator = this;\n  var request = {};\n  \n  return function()\n  {\n    if ( attribute in animator.frame && anim8.isNumber( animator.frame[ attribute ] ) )\n    {\n      return anim8.convert( animator.e, animator.value( attribute ), desiredUnit, relativeTo );\n    }\n    \n    request[ attribute ] = desiredUnit;\n    \n    var current = animator.get( request );\n    \n    if ( anim8.isDefined( current[ attribute ] ) )\n    {\n      return current[ attribute ];\n    }\n    \n    return anim8.attribute( attribute ).defaultValue;\n  };\n},\n\n/**\n * Returns the value for the given attribute as a string with the current units.\n *\n * @param {string} attr\n */\nanim8.DomAnimator.prototype.value = function(attr)\n{\n  return this.frame[ attr ] + this.units[ attr ];\n};\n\n/**\n * Returns the value for the given attribute as a string with the current units.\n * if the attribute doesn't exist a secondary one is looked up. If that value\n * is an object and contains the given subproperty the value is resolved once again.\n *\n * @param {string} attr\n * @param {string} other\n * @param [string] subproperty\n */\nanim8.DomAnimator.prototype.valueOr = function(attr, other, subproperty)\n{\n  var value = this.frame[ attr ];\n    \n  if ( !anim8.isDefined( value ) )\n  {\n    value = this.frame[ attr = other ];\n    \n    if ( anim8.isDefined( subproperty ) )\n    {\n      value = value[ subproperty ];\n    }\n  }\n  \n  return value + this.units[ attr ];\n};\n","/**\n * Animate.css animations in anim8js.\n *\n * http://daneden.github.io/animate.css/\n */\n\nanim8.save('bounce', {\n\tkeyframe: {\n    '0,20,53,80,100': {\n      translate3d: 0,\n      easing: [0.215, 0.610, 0.355, 1.000]\n    },\n    '40,43': {\n      translate3d: {y:-30},\n      easing: [0.755, 0.050, 0.855, 0.060]\n    },\n    '70': {\n      translate3d: {y:-15},\n      easing: [0.755, 0.050, 0.855, 0.060]\n    },\n    '90': {\n      translate3d: {y:-4}\n    }\n\t}\n});\n\nanim8.save('rubberBand', {\n\tkeyframe: {\n    '0,100': {\n      scale3d: 1\n    },\n    '30': {\n      scale3d: {x:1.25, y:0.75}\n    },\n    '40': {\n      scale3d: {x:0.75, y:1.25}\n    },\n    '50': {\n      scale3d: {x:1.15, y:0.85}\n    },\n    '65': {\n      scale3d: {x:0.95, y:1.05}\n    },\n    '75': {\n      scale3d: {x:1.05, y:0.95}\n    }\n\t}\n});\n\nanim8.save('flash', {\n  keyframe: {\n    '0,50,100': {\n      opacity: 1\n    },\n    '25,75': {\n      opacity: 0\n    }\n  }\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('pulse', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0\n    },\n    '50': {\n      scale3d: 1.05\n    },\n    '100': {\n      scale3d: 1.0\n    }\n  }\n});\n\nanim8.save('shake', {\n  keyframe: {\n    '0,100': {\n      translateX: 0.0\n    },\n    '10,30,50,70,90': {\n      translateX: -10.0\n    },\n    '20,40,60,80': {\n      translateX: 10.0\n    } \n  }\n});\n\nanim8.save('swing', {\n  keyframe: {\n    '0': {\n      rotate: 0\n    },\n    '20': {\n      rotate: 15\n    },\n    '40': {\n      rotate: -10\n    },\n    '60': {\n      rotate: 5\n    },\n    '80': {\n      rotate: -5\n    },\n    '100': {\n      rotate: 0\n    }\n  },\n  initial: {\n    origin: 'center top'\n  }\n});\n\nanim8.save('tada', {\n  keyframe: {\n    '0,100': {\n      scale3d: 1,\n      rotate: 0\n    },\n    '10,20': {\n      scale3d: 0.9,\n      rotate: -3\n    },\n    '30,50,70,90': {\n      scale3d: 1.1,\n      rotate: 3\n    },\n    '40,60,80': {\n      scale3d: 1.1,\n      rotate: -3\n    }\n  }\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('wobble', {\n  keyframe: {\n    '0,100': {\n      translateX: 0,\n      rotate: 0\n    },\n    '15': {\n      translateX: -25,\n      rotate: -5\n    },\n    '30': {\n      translateX: 20,\n      rotate: 3\n    },\n    '45': {\n      translateX: -15,\n      rotate: -3\n    },\n    '60': {\n      translateX: 10,\n      rotate: 2\n    },\n    '75': {\n      translateX: -5,\n      rotate: -1\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('bounceIn', {\n  keyframe: {\n    '0': {\n      opacity: 0.0,\n      scale3d: 0.3\n    },\n    '20': {\n      scale3d: 1.1\n    },\n    '40': {\n      scale3d: 0.9\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 1.03\n    },\n    '80': {\n      scale3d: 0.97\n    },\n    '100': {\n      opacity: 1.0,\n      scale3d: 1.0\n    }\n  }\n}, {\n  easing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceInDown', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: -3000\n    },\n    '60': {\n      opacity: 1,\n      translateY: 25\n    },\n    '75': {\n      translateY: -10\n    },\n    '90': {\n      translateY: 5\n    },\n    '100': {\n      translateY: 0\n    }\n  }\n}, {\n  duration: 2000,\n  easing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceInLeft', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -3000\n    },\n    '60': {\n      opacity: 1,\n      translateX: 25\n    },\n    '75': {\n      translateX: -10\n    },\n    '90': {\n      translateX: 5\n    },\n    '100': {\n      translateX: 0\n    }\n  }\n}, {\n  duration: 2000,\n  teasing: [0.215, 0.610, 0.355, 1.000]\n});\n\n\nanim8.save('bounceInRight', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: 3000\n    },\n    '60': {\n      opacity: 1,\n      translateX: -25\n    },\n    '75': {\n      translateX: 10\n    },\n    '90': {\n      translateX: -5\n    },\n    '100': {\n      translateX: 0\n    }\n  }\n}, {\n  duration: 2000,\n  teasing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceInUp', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: 3000\n    },\n    '60': {\n      opacity: 1,\n      translateY: -25\n    },\n    '75': {\n      translateY: 10\n    },\n    '90': {\n      translateY: -5\n    },\n    '100': {\n      translateY: 0\n    }\n  }\n}, {\n  duration: 1000,\n  teasing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceOut', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0\n    },\n    '20': {\n      scale3d: 0.9\n    },\n    '50,55': {\n      opacity: 1,\n      scale3d: 1.1\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.3\n    }\n  }\n}, {\n  duration: 750\n});\n\nanim8.save('bounceOutDown', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '20': {\n      translateY: 10\n    },\n    '40,45': {\n      opacity: 1,\n      translateY: -20\n    },\n    '100': {\n      opacity: 0,\n      translateY: 2000\n    }\n  }\n});\n\nanim8.save('bounceOutLeft', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '20': {\n      opacity: 1,\n      translateX: 20\n    },\n    '100': {\n      opacity: 0,\n      translateX: -2000\n    }\n  }\n});\n\nanim8.save('bounceOutRight', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '20': {\n      opacity: 1,\n      translateX: -20\n    },\n    '100': {\n      opacity: 0,\n      translateX: 2000\n    }\n  }\n});\n\nanim8.save('bounceOutUp', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '20': {\n      translateY: -10\n    },\n    '40,45': {\n      opacity: 1,\n      translateY: 20\n    },\n    '100': {\n      opacity: 0,\n      translateY: -2000\n    }\n  }\n});\n\nanim8.save('fadeIn', {\n  keyframe: {\n    '0': {\n      opacity: 0\n    },\n    '100': {\n      opacity: 1\n    }\n  }\n});\n\nanim8.save('fadeInDown', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: -100\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeInDownBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: -2000\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('fadeInLeft', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -100\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeInLeftBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -2000\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('fadeInRight', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: 100\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeInRightBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: 2000\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('fadeInUp', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: 100\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  }, \n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeInUpBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: 2000\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('fadeOut', {\n  keyframe: {\n    '0': {\n      opacity: 1\n    },\n    '100': {\n      opacity: 0\n    }\n  }\n});\n\nanim8.save('fadeOutDown', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: 100\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeOutDownBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: 2000\n    }\n  }\n});\n\nanim8.save('fadeOutLeft', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: -100\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeOutLeftBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: -2000\n    }\n  }\n});\n\nanim8.save('fadeOutRight', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: 100\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeOutRightBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: 2000\n    }\n  }\n});\n\nanim8.save('fadeOutUp', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: -100\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeOutUpBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: -2000\n    }\n  }\n});\n\nanim8.save('flip', {\n  keyframe: {\n    '0': {\n      translateZ: 0,\n      rotate3d: {x:0, y:1, z:0, angle:-360},\n      scale3d: 1.0,\n      easing: 'cssEaseOut'\n    },\n    '40': {\n      translateZ: 150,\n      rotate3d: {x:0, y:1, z:0, angle:-190},\n      easing: 'cssEaseOut'\n    },\n    '50': {\n      translateZ: 150,\n      rotate3d: {x:0, y:1, z:0, angle:-170},\n      easing: 'cssEaseIn'\n    },\n    '80': {\n      translateZ: 0,\n      rotate3d: {x:0, y:1, z:0, angle:0},\n      scale3d: 0.95,\n      easing: 'cssEaseIn'\n    },\n    '100': {\n      scale3d: 1.0\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n});\n\nanim8.save('flipInX', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      rotate3d: {x:1, y:0, z:0, angle:90},\n      easing: 'cssEaseIn'\n    },\n    '40': {\n      rotate3d: {x:1, y:0, z:0, angle:-20},\n      easing: 'cssEaseIn'\n    },\n    '60': {\n      opacity: 1,\n      rotate3d: {x:1, y:0, z:0, angle:10}\n    },\n    '80': {\n      rotate3d: {x:1, y:0, z:0, angle:-5}\n    },\n    '100': {\n      rotate3d: {x:1, y:0, z:0, angle:0}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n});\n\nanim8.save('flipInY', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      rotate3d: {x:0, y:1, z:0, angle:90},\n      easing: 'cssEaseIn'\n    },\n    '40': {\n      rotate3d: {x:0, y:1, z:0, angle:-20},\n      easing: 'cssEaseIn'\n    },\n    '60': {\n      opacity: 1,\n      rotate3d: {x:0, y:1, z:0, angle:10}\n    },\n    '80': {\n      rotate3d: {x:0, y:1, z:0, angle:-5}\n    },\n    '100': {\n      rotate3d: {x:0, y:1, z:0, angle:0}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n});\n\nanim8.save('flipOutX', {\n  keyframe: {\n    '0': {\n      rotate3d: {x:1, y:0, z:0, angle:0}\n    },\n    '30': {\n      opacity: 1,\n      rotate3d: {x:1, y:0, z:0, angle:-20}\n    },\n    '100': {\n      opacity: 0,\n      rotate3d: {x:1, y:0, z:0, angle:90}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n}, {\n  duration: 750\n});\n\nanim8.save('flipOutY', {\n  keyframe: {\n    '0': {\n      rotate3d: {x:0, y:1, z:0, angle:0}\n    },\n    '30': {\n      opacity: 1,\n      rotate3d: {x:0, y:1, z:0, angle:-20}\n    },\n    '100': {\n      opacity: 0,\n      rotate3d: {x:0, y:1, z:0, angle:90}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n}, {\n  duration: 750\n});\n\nanim8.save('lightSpeedIn', {\n  keyframe: {\n    '0': {\n      translateX: 100,\n      skewX: -30,\n      opacity: 0\n    },\n    '60': {\n      skewX: 20,\n      opacity: 1\n    },\n    '80': {\n      skewX: -5\n    },\n    '100': {\n      translateX: 0,\n      skewX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n}, {\n  easing: 'cssEaseOut'\n});\n\nanim8.save('lightSpeedOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0,\n      skewX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: 100,\n      skewX: 30\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n}, {\n  easing: 'cssEaseIn'\n});\n\nanim8.save('rotateIn', {\n  keyframe: {\n    '0': {\n      rotate: -200,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'center'\n  }\n});\n\nanim8.save('rotateInDownLeft', {\n  keyframe: {\n    '0': {\n      rotate: -45,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n});\n\nanim8.save('rotateInDownRight', {\n  keyframe: {\n    '0': {\n      rotate: 45,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('rotateInUpLeft', {\n  keyframe: {\n    '0': {\n      rotate: 45,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n});\n\nanim8.save('rotateInUpRight', {\n  keyframe: {\n    '0': {\n      rotate: -90,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('rotateOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: 200\n    }\n  },\n  initial: {\n    origin: 'center'\n  }\n});\n\nanim8.save('rotateOutDownLeft', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: 45\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n})\n\nanim8.save('rotateOutDownRight', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: -45\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('rotateOutUpLeft', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: -45\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n});\n\nanim8.save('rotateOutUpRight', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: 90\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('hinge', {\n  keyframe: {\n    '0': {\n      rotate: 0\n    },\n    '20,60': {\n      rotate: 80\n    },\n    '40': {\n      rotate: 60\n    },\n    '80': {\n      rotate: 60,\n      translateY: 0,\n      opacity: 1\n    },\n    '100': {\n      rotate: 0,\n      translateY: 700,\n      opacity: 0\n    }\n  },\n  initial: {\n    origin: 'top left'\n  }\n}, {\n  easing: 'cssEaseInOut',\n  duration: 2000\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('rollIn', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -100,\n      rotate: -120\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0,\n      rotate: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('rollOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0.0,\n      translateX: 100,\n      rotate: 120\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('zoomIn', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.3\n    },\n    '50': {\n      opacity: 1\n    },\n    '100': {\n      scale3d: 1\n    }\n  }\n});\n\nanim8.save('zoomInDown', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: -1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: 60,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('zoomInLeft', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: -1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: 10,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('zoomInRight', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: 1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: -10,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('zoomInUp', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: 1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: -10,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('zoomOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      scale3d: 1\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.3\n    }\n  }\n}, {\n  duration: 500\n});\n\nanim8.save('zoomOutDown', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateY: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: -60,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: 2000,\n      origin: 'center bottom'\n    }\n  }\n});\n\nanim8.save('zoomOutLeft', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateX: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: 42,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: -2000,\n      origin: 'left center'\n    }\n  }\n});\n\nanim8.save('zoomOutRight', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateX: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: -42,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: 2000,\n      origin: 'right center'\n    }\n  }\n});\n\nanim8.save('zoomOutUp', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateY: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: 60,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: -2000,\n      origin: 'center bottom'\n    }\n  }\n});\n\nanim8.save('slideInDown', {\n  keyframe: {\n    '0': {\n      translateY: -100\n    },\n    '100': {\n      translateY: 0\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('slideInLeft', {\n  keyframe: {\n    '0': {\n      translateX: -100\n    },\n    '100': {\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('slideInRight', {\n  keyframe: {\n    '0': {\n      translateX: 100\n    },\n    '100': {\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('slideInUp', {\n  keyframe: {\n    '0': {\n      translateY: 100\n    },\n    '100': {\n      translateY: 0\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('slideOutDown', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '100': {\n      translateY: 100\n    }\n  },\n  units: {\n    translateY: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\nanim8.save('slideOutLeft', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '100': {\n      translateX: -100\n    }\n  },\n  units: {\n    translateX: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\nanim8.save('slideOutRight', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '100': {\n      translateX: 100\n    }\n  },\n  units: {\n    translateX: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\nanim8.save('slideOutUp', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '100': {\n      translateY: -100\n    }\n  },\n  units: {\n    translateY: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\n/* anim8js animations */\n\nanim8.save('blurOut', {\n  keyframe: {\n    '0': {\n      blur: 0,\n      opacity: 1\n    },\n    '50': {\n      blur: 4,\n      opacity: 0.9\n    },\n    '100': {\n      blur: 5,\n      opacity: 0\n    }\n  }\n});\n\nanim8.save('blurIn', {\n  keyframe: {\n    '0': {\n      blur: 5,\n      opacity: 0\n    },\n    '50': {\n      blur: 4,\n      opacity: 0.9\n    },\n    '100': {\n      blur: 0,\n      opacity: 1\n    }\n  }\n});\n\n/**\n * Generate animations for all permutations of the following concepts:\n *\n * (slide|fade|zoom)(Out|In)(Down|Up)(Right|Left)(|x2|Big)\n */\n(function() \n{\n  var actions = {\n    'slide': {},\n    'fade': {opacity:{from:0,to:1}},\n    'zoom': {scale3d:{from:0,to:1}}\n  };\n  \n  var directions = {\n    'Out':  {from:0, to:1},\n    'In':   {from:1, to:0}\n  };\n  \n  var vertical = {\n    'Down': 1,\n    'Up': -1\n  };\n  \n  var horizontal = {\n    'Right': 1,\n    'Left': -1\n  };\n  \n  var sizes = {\n    '':     {value: 100, unit: '%'},\n    'x2':   {value: 200, unit: '%'},\n    'Big':  {value: 2000, unit: 'px'}\n  };\n  \n  for ( var a in actions )\n  {\n    var attrs = actions[ a ];\n    \n    for ( var d in directions )\n    {\n      var dir = directions[ d ];\n      \n      for ( var v in vertical )\n      {\n        var ver = vertical[ v ];\n        \n        for ( var h in horizontal )\n        {\n          var hor = horizontal[ h ];\n          \n          for ( var s in sizes )\n          {\n            var siz = sizes[ s ];\n            \n            var animName = a + d + v + h + s;\n            \n            if ( animName in anim8.animation )\n            {\n              continue;\n            }\n            \n            var anim = \n            {\n              keyframe: {\n                from: {\n                  translateX: hor * dir.from * siz.value,\n                  translateY: ver * dir.from * siz.value\n                },\n                to: {\n                  translateX: hor * dir.to * siz.value,\n                  translateY: ver * dir.to * siz.value\n                }\n              },\n              units: {\n                translateX: siz.unit,\n                translateY: siz.unit\n              }\n            };\n            \n            for (var attr in attrs)\n            {\n              var attribute = attrs[attr];\n              \n              anim.keyframe.from[ attr ] = dir.to * attribute.to + dir.to * attribute.from;\n              anim.keyframe.to[ attr ]   = dir.from * attribute.from + dir.from * attribute.to;\n            }\n            \n            anim8.save( animName, anim );\n          }\n        }\n      }\n    }\n  }\n  \n})();"],"sourceRoot":"/source/"}