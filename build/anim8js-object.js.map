{"version":3,"sources":["anim8js-core.js","anim8js-easing.js","anim8js-path.js","anim8js-event.js","anim8js-animation.js","anim8js-animator.js","anim8js-color.js","anim8js-calculator.js","anim8js-parser-deltavalues.js","anim8js-parser-final.js","anim8js-parser-initial.js","anim8js-parser-keyframe.js","anim8js-object.js"],"names":["m8","anim8","subjects","this","window","args","Array","prototype","slice","call","arguments","isArray","i","length","push","animators","arg","Animator","factory","factories","parseAnimators","noop","isDefined","x","isFunction","isNumber","isString","isObject","isElement","HTMLElement","nodeType","nodeName","now","Date","getTime","copy","p","clean","splice","prop","mapify","arr","value","map","coalesce","a","b","c","d","delegate","functionName","returnThis","apply","results","extend","target","eventize","object","onListeners","$this","property","events","callback","context","split","on","once","offListeners","listeners","event","eventListeners","k","off","$on","$once","triggerListeners","argument","clear","trigger","time","regex","conversions","s","sec","min","ms","hr","parsed","exec","parseFloat","unit","Math","floor","subject","factoryName","is","attribute","attr","defaultValue","easing","indexOf","pair","e","t","easingType","bezier","calculator","calc","parser","animation","options","Animation","parserName","defaults","duration","teasing","delay","sleep","repeat","each","iterator","filter","func","isAnimating","pause","transition","play","resume","stop","finish","queue","restore","running","animating","add","animator","active","requestAnimationFrame","run","preupdate","update","finished","cleanup","out","inout","pong","linear","quad","ease","i2","x2","eq1","eq2","cubic","quartic","quintic","back","x3","sine","sin","overshot","elastic","scale","wave","revisit","abs","lasso","cos","slowbounce","bounce","smallbounce","inv","tinybounce","hesitant","sqrt","sqrtf","log10","slingshot","circular","gentle","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","cssEase","cssEaseIn","cssEaseOut","cssEaseInOut","cssLinear","Path","reset","name","points","trues","hasTrue","compute","ps","reference","last","first","point","DeltaPath","deltas","delta","ds","end","d0","d1","pd","p0","p1","interpolate","PointPath","KeyframePath","easings","ea","CubicPath","p2","p3","d2","d3","i1","i3","adds","QuadraticPath","CompiledPath","path","pointCount","create","index","Tween","start","JumpPath","EventState","CREATED","DELAYED","ANIMATING","SLEEPING","PAUSED","FINISHED","Event","totalTime","newInstance","EventInstance","state","pauseTime","pauseState","elapsed","next","frame","updated","startup","catchup","progress","applyValue","newState","getPoint","getFuture","fdelta","getDelta","getStart","getEnd","baseValue","isDelayed","isSleeping","timeRemaining","isFinished","isPaused","hasStates","states","stateText","input","isSaved","mergeOptions","durations","delays","sleeps","repeats","newEvents","save","attributes","wasFinished","placeEvent","trimEvents","createEvents","onAnimation","maxRemaining","max","transitionTime","transitionDelta","transitionEasing","e1","e2","transitionPath","transitionEvent","eventsFor","eventCount","set","hasEvents","color","r","g","parsers","parse","parseComponent","parseFunction","v","vparsed","isNaN","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","named","matches","parseInt","invalidColor","format","ca","cr","cg","cb","toString","methods","clone","amount","sub","zero","distance","distanceSq","amountScale","mul","ab","isValid","isZero","epsilon","isEqual","y","aliases","left","right","middle","center","top","bottom","_x","_y","dx","dy","z","dz","angle","da","dr","dg","db","number","values","deltaObject","calculators","initial","keyframe","kframes","sort","from","half","to","times","lastTime","maxTime","order","key","pathEasings","$animator"],"mappings":"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","file":"anim8js-object.js","sourcesContent":["/*\n\nvar script = document.scripts[document.scripts.length - 1];\n\nvar m8prop = script.dataset['prop'] || '$';\nvar m8access = script.dataset['access'] || 'property';\nvar m8interval = script.dataset['interval'] || 10;\n\n */\n\nm8 = anim8 = function(subjects) \n{\n  if ( this === window ) \n  {\n\t\tvar args = Array.prototype.slice.call( arguments );\n\t\t\n\t\tif ( !anim8.isArray( subjects ) )\n\t\t{\n\t\t\tsubjects = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < args.length; i++)\n\t\t\t{\n\t\t\t\tsubjects.push( args[i] );\n\t\t\t}\n\t\t}\n\t\t\n    var animators = [];\n    \n    for (var i = 0; i < subjects.length; i++) \n    {\n      var arg = subjects[ i ];\n      \n      if ( arg instanceof anim8.Animator ) \n      {\n        animators.push( arg );\n      } \n      else\n      {\n\t\t\t\tvar factory = anim8.factories( arg );\n\t\t\t\t\n\t\t\t\tif (factory !== false)\n\t\t\t\t{\n          factory.parseAnimators( arg, animators );\n\t\t\t\t}\n      }\n    }\n\t\t\n\t\treturn new anim8( animators );\n  } \n  else \n  {\n    for (var i = 0; i < subjects.length; i++) \n    {\n      this.push( subjects[ i ] );\n    }\n  }\n};\n\n/*****************************************************************\n  UTILITY FUNCTIONS\n******************************************************************/\n\n\nanim8.noop = function() {};\n\nanim8.isDefined = function(x) \n{\n  return typeof x !== 'undefined';\n};\n\nanim8.isFunction = function(x) \n{\n  return typeof x === 'function';\n};\n\nanim8.isNumber = function(x) \n{\n  return typeof x === 'number';\n};\n\nanim8.isString = function(x) \n{\n  return typeof x === 'string';\n};\n\nanim8.isArray = function(x) \n{\n  return x instanceof Array;\n};\n\nanim8.isObject = function(x) \n{\n  return typeof x === 'object';\n};\n\nanim8.isElement = function(x)\n{\n  return typeof HTMLElement === \"object\" ? x instanceof HTMLElement :\n  x && typeof x === \"object\" && x !== null && x.nodeType === 1 && typeof x.nodeName === \"string\";\n};\n\nanim8.now = function() \n{\n  return new Date().getTime();\n};\n\nanim8.copy = function(x) \n{\n  if ( anim8.isArray(x) ) \n  {\n    var copy = [];\n    for (var i = 0; i < x.length; i++) \n    {\n      copy.push( anim8.copy( x[i] ) );\n    }\n    x = copy;\n  }\n  else if ( anim8.isObject(x) ) \n  {\n    var copy = {};\n    for (var p in x) \n    {\n      copy[p] = anim8.copy( x[p] );\n    }\n    x = copy;\n  }\n  \n  return x;\n};\n\nanim8.clean = function(x)\n{\n\tif ( anim8.isArray( x ) )\n\t{\n\t\tfor (var i = x.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif ( !x[i] )\n\t\t\t{\n\t\t\t\tx.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t}\n\telse if ( anim8.isObject( x ) )\n\t{\n\t\tfor (var prop in x)\n\t\t{\n\t\t\tif (!x[prop])\n\t\t\t{\n\t\t\t\tdelete x[prop];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn x;\n}\n\nanim8.mapify = function(arr, value)\n{\n\tvar map = {};\n\t\n\tfor (var i = 0; i < arr.length; i++)\n\t{\n\t\tmap[ arr[i] ] = value;\n\t}\n\t\n\treturn map;\n};\n\nanim8.coalesce = function(a, b, c, d) \n{\n  if (anim8.isDefined(a)) return a;\n  if (anim8.isDefined(b)) return b;\n  if (anim8.isDefined(c)) return c;\n  return d;\n};\n\nanim8.delegate = function(functionName, returnThis) \n{  \n  if (returnThis) \n  {\n    return function() \n    {\n      for (var i = 0; i < this.length; i++) \n      {\n        this[i][functionName].apply( this[i], arguments );\n      }\n      \n      return this;  \n    };\n  }\n  \n  return function() \n  {\n    var results = [];\n    \n    for (var i = 0; i < this.length; i++) \n    {\n      results.push( this[i][functionName].apply( this[i], arguments ) );\n    }\n    \n    return results;\n  };\n  \n};\n\nanim8.extend = function(target)\n{\n\tfor (var i = 1; i < arguments.length; i++)\n\t{\n\t\tvar a = arguments[i];\n\t\t\n\t\tif ( anim8.isObject( a ) )\n\t\t{\n\t\t\tfor (var prop in a)\n\t\t\t{\n\t\t\t\tif (!(prop in target))\n\t\t\t\t{\n\t\t\t\t\ttarget[prop] = a[prop];\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t}\n\t\n\treturn target;\n};\n\nanim8.eventize = function(object)\n{\n  var onListeners = function($this, property, events, callback, context)\n  {\n    events = events.split(' ');\n    \n    if ( !anim8.isDefined( $this[ property ] ) )\n    {\n      $this[property] = {};\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      if ( !anim8.isDefined( $this[ property ][ events[i] ] ) )\n      {\n        $this[ property ][ events[i] ] = [];\n      }\n      \n      $this[ property ][ events[i] ].push( [ callback, context || this ] );\n    }\n  };\n  \n  object.on = function(events, callback, context)\n  {\n    onListeners( this, '$on', events, callback, context );\n  };\n  \n  object.once = function(events, callback, context)\n  {\n    onListeners( this, '$once', events, callback, context );\n  };\n  \n  var offListeners = function(listeners, event, callback)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var k = eventListeners.length - 1; k >= 0; k--)\n      {\n        if (eventListeners[ k ][0] === callback)\n        {\n          eventListeners.splice( k, 1 );\n        }\n      }  \n    }\n  };\n  \n  object.off = function(events, callback)\n  {\n    events = events.split(' ');\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      offListeners( this.$on, events[i] );\n      offListeners( this.$once, events[i] );\n    }\n  };\n  \n  var triggerListeners = function(listeners, event, argument, clear)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var i = 0; i < eventListeners.length; i++)\n      {\n        var callback = eventListeners[ i ];\n        \n        callback[0].call( callback[1], argument );\n      }\n      \n      if ( clear )\n      {\n        eventListeners.length = 0;\n      }\n    }\n  }\n  \n  object.trigger = function(event, argument)\n  {\n    triggerListeners( this.$on, event, argument, false );\n    triggerListeners( this.$once, event, argument, true );\n  };\n};\n\nanim8.time = (function()\n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(s|sec|min|ms|hr)?/;\n  \n  var conversions = {\n    s:    1000,\n    sec:  1000,\n    min:  1000 * 60,\n    ms:   1,\n    hr:   1000 * 60 * 60\n  };\n  \n  return function(time) \n  {  \n    if ( anim8.isNumber( time ) )\n    {\n      return time;\n    }\n    if ( anim8.isString( time ) )\n    {\n      var parsed = regex.exec( time );\n      \n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n        \n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n        \n        return Math.floor(time);\n      }\n    }\n    \n    return false;\n  };\n  \n})();\n\n\n/*****************************************************************\n  REGISTRIES\n******************************************************************/\n\n// FACTORY      {is(o), parseAnimators(o, out)}\nanim8.factories = function(subject) \n{\n\tfor (var factoryName in anim8.factories) \n\t{\n\t\tvar factory = anim8.factories[ factoryName ];\n\t\t\t\n\t\tif ( factory.is( subject ) )\n\t\t{\t\t\t\n\t\t\treturn factory;\n\t\t}\n\t}\n\t\n\tthrow 'No factory exists for subject ' + subject;\n};\n\n/* Attributes are the animatable properties of a subject\n\n  anim8.attribute[name] = {\n    // the default value for an attribute if none exists on the subject\n    defaultValue: 0,\n    // the name of the property this attribute maps to. default value: name of the attribute\n    property: propertyName,\n    // the name of the calculator this attribute requires for mathematical operations. default value: anim8.calculator.default\n    calculator: calculatorName,\n    // the name of an applier that must be called each frame to calculate the value of a dynamic attribute\n    applier: applier,\n    // other values can be specified here that the respective factory might use\n    \"factory specific attributes\"\n  }\n*/\nanim8.attribute = function(attr) \n{\n  if ( anim8.isObject(attr) && anim8.isDefined(attr.defaultValue) ) \n\t{\n    return attr;\n  }\n  if ( anim8.isString(attr) && attr in anim8.attribute ) \n\t{\n    return anim8.attribute[ attr ];\n  }\n\t\n  return anim8.attribute.default;\n};\n\nanim8.attribute.default = {defaultValue: 0};\n \n/* Easings are functions that are magic\n\n  anim8.applier[name] = {\n    // array of properties required \n    properties: [],\n    // function to invoke each frame\n    apply: function(e, anim)\n  }\n*/\n\nanim8.easing = function(easing) \n{\n  if ( anim8.isFunction( easing ) ) \n\t{\n    return easing;\n  }\n\tif ( anim8.isString( easing ) )\n\t{\n\t\tif ( easing in anim8.easing )\n\t\t{\n\t\t\treturn anim8.easing[ easing ];\n\t\t}\n\t\tif ( easing.indexOf('-') !== -1 )\n\t\t{\n\t\t\tvar pair = easing.split('-');\n\t\t\tvar e = pair[0];\n\t\t\tvar t = pair[1];\n\t\t\t\n\t\t\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t\t\t{\t\t\t\t\n\t\t\t\treturn anim8.easingType[ t ]( anim8.easing[ e ] );\n\t\t\t}\n\t\t}\n\t}\n  if ( anim8.isArray( easing ) && easing.length === 4 ) \n\t{\n    return anim8.easing.bezier.apply( null, easing );\n  }\n  if ( !anim8.isDefined( easing ) ) \n\t{\n    return anim8.easing.default;\n  }\n\t\n  throw easing + ' is not a valid easing';\n};\n\n/*\n \n \n */\nanim8.easingType = function(easingType)\n{\n\tif ( anim8.isFunction( easingType ) )\n\t{\n\t\treturn easingType;\n\t}\n\tif ( anim8.isString( easingType ) && easingType in anim8.easingType )\n\t{\n\t\treturn anim8.easingType[ easingType ];\n\t}\n\t\n\tthrow easingType + ' is not a valid easing type';\n};\n\n\n/*\n \n \n */\nanim8.calculator = function(calc)\n{\n\tif ( anim8.isObject(calc) )\n\t{\n\t\treturn calc;\n\t}\n\tif ( anim8.isString( calc ) && calc in anim8.calculator )\n\t{\n\t\treturn anim8.calculator[ calc ];\n\t}\n\t\n\treturn anim8.calculator.default;\n\t// throw calc + ' is not a valid calculator';\n};\n\n\n/*\n \n \n */\nanim8.parser = function(parser)\n{\n\tif ( anim8.isFunction( parser ) )\n\t{\n\t\treturn parser;\n\t}\n\tif ( anim8.isString( parser ) && parser in anim8.parser )\n\t{\n\t\treturn anim8.parser[ parser ];\n\t}\n\t\n\treturn false;\n\t// throw parser + ' is not a valid parser';\n};\n\n\n/*\n \n \n */\nanim8.animation = function(animation, options)\n{\n  if ( animation instanceof anim8.Animation )\n  {\n    return animation;\n  }\n\tif ( anim8.isString( animation ) && animation in anim8.animation )\n\t{\n\t\treturn anim8.animation[ animation ];\n\t}\n\tif ( anim8.isObject( animation ) )\n\t{\n\t\tvar events = [];\n\t\t\n\t\toptions = options || {};\n\t\t\n\t\tfor (var parserName in animation)\n\t\t{\n\t\t\tvar parser = anim8.parser( parserName );\n\t\t\t\n\t\t\tif ( parser !== false )\n\t\t\t{\n\t\t\t\tparser( animation, options, events );\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (events.length)\n\t\t{\n\t\t\treturn new anim8.Animation( false, animation, options, events );\n\t\t}\n\t}\n\t\n\treturn false;\n\t// throw animation + ' is not a valid animation';\n};\n\n\n/*\n \n \n */\nanim8.defaults = \n{\n  duration: 1000,\n  easing: 'ease',\n  teasing: 'linear',\n  delay: 0,\n  sleep: 0,\n  repeat: 1\n};\n\n\n/*****************************************************************\n  ANIM8 DEFINITION\n******************************************************************/\n\nanim8.prototype = new Array();\n\nanim8.prototype.each = function(iterator) \n{\n  for (var i = 0; i < this.length; i++) \n  {\n    if ( iterator.call( this[i], this[i], i ) === false ) \n    {\n      break;\n    }\n  }\n\t\n\treturn this;\n};\n\nanim8.prototype.filter = function(func)\n{\n\tfor (var i = this.length - 1; i >= 0; i--)\n\t{\n\t\tif ( func(this[i]) )\n\t\t{\n\t\t\tthis.slice(i, 1);\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\nanim8.prototype.isAnimating = function() \n{\n  for (var i = 0; i < this.length; i++)\n  {\n    if ( this[i].isAnimating() )\n    {\n      return true;\n    }\n  }\n  \n  return false;\n};\n\nanim8.prototype.pause \t\t\t= anim8.delegate('pause', true);\nanim8.prototype.transition \t= anim8.delegate('transition', true);\nanim8.prototype.play \t\t\t\t= anim8.delegate('play', true);\nanim8.prototype.resume \t\t\t= anim8.delegate('resume', true);\nanim8.prototype.stop \t\t\t\t= anim8.delegate('stop', true);\nanim8.prototype.finish \t\t\t= anim8.delegate('finish', true);\nanim8.prototype.queue \t\t\t= anim8.delegate('queue', true);\nanim8.prototype.restore\t\t\t= anim8.delegate('restore', true);\n\nanim8.prototype.on\t\t\t    = anim8.delegate('on', true);\nanim8.prototype.once\t\t    = anim8.delegate('once', true);\nanim8.prototype.off\t\t\t    = anim8.delegate('off', true);\nanim8.prototype.trigger     = anim8.delegate('trigger', true);\n\n/*****************************************************************\n  ANIM8 ANIMATION LOOP\n******************************************************************/\n\nanim8.running = false;\nanim8.animating = anim8();\n\nanim8.add = function(animator)\n{\n  if ( !animator.active )\n  {\n    anim8.animating.push( animator );\n    \n    animator.active = true;\n  }\n  \n  if ( !anim8.running )\n  {\n    anim8.running = true;\n\t\t\n    requestAnimationFrame( anim8.run );\n  }\n}\n\nanim8.run = function() \n{\n  var now = anim8.now();\n  \n  // notify animators that we're about to update\n  anim8.animating.each(function(animator)\n  {\n    animator.preupdate();\n  });\n  \n  // update animating based on the current time\n  anim8.animating.each(function(animator)\n  {\n    animator.update( now );\n  });\n  \n  // apply the attributes calculated\n  anim8.animating.each(function(animator)\n  {\n    animator.apply();\n  });\n  \n  // if the animator is done remove it\n  anim8.animating.filter(function(animator)\n  {\n    if ( animator.finished )\n    {\n\t\t\tanimator.cleanup();\n      animator.active = false;\n    }\n    \n    return animator.finished;\n  });\n  \n  // if there are animators still remaining call me again!\n  if ( anim8.animating.length )\n  {\n    requestAnimationFrame( anim8.run );\n  } \n  else \n  {\n    anim8.running = false;\n  }\n};","anim8.easingType.in = function(easing) \n{\n\treturn function(x) {\n\t\treturn easing( x );\n\t};\n};\n\nanim8.easingType.out = function(easing) \n{\n\treturn function(x) {\n\t\treturn 1.0 - easing( 1.0 - x );\n\t};\n};\n\nanim8.easingType.inout = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x ) * 0.5;\n\t  } else {\n\t    return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n\t  }\n\t};\n};\n\nanim8.easingType.pong = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x );\n\t  } else {\n\t    return easing( 2.0 - 2.0 * x );\n\t  }\n\t};\n};\n\nanim8.easing.linear = function(x) \n{\n  return x;\n};\n\nanim8.easing.quad = function(x)\n{\n  return x * x;\n};\n\nanim8.easing.ease = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n  \n  return eq1 * i + eq2 * x;\n};\n\nanim8.easing.cubic = function(x) \n{\n  return x * x * x;\n};\n\nanim8.easing.quartic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\nanim8.easing.quintic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\nanim8.easing.back = function(x) \n{\n  var x2 = x * x;\n\tvar x3 = x2 * x;\n\treturn x3 + x2 - x;\n};\n\nanim8.easing.sine = function(x) \n{\n\treturn Math.sin( x * 1.57079632679 );\n};\n\nanim8.easing.overshot = function(x)\n{\n  return (1.0 - x * (7.0 / 10/0)) * x * (10.0 / 3.0);\n};\n\nanim8.easing.elastic = function(x) \n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n\tvar wave = -Math.sin(x * 10.9955742876);\n\treturn scale * wave;\n};\n\nanim8.easing.revisit = function(x) \n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\nanim8.easing.lasso = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x))\n};\n\nanim8.easing.slowbounce = function(x) \n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\nanim8.easing.bounce = function(x) \n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.smallbounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.tinybounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\nanim8.easing.hesitant = function(x) \n{\n\treturn (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\nanim8.easing.lasso = function(x)\n{\n  var x2 = x * x;\n\treturn (1.0 - Math.cos(x2 * x * 36.0) * (1.0 - x));\n};\n\nanim8.easing.sqrt = function(x)\n{\n  return Math.sqrt( x );\n};\n\nanim8.easing.sqrtf = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\nanim8.easing.log10 = function(x)\n{\n  return (Math.log10(x) + 2.0) * 0.5;\n};\n\nanim8.easing.slingshot = function(x)\n{\n  if (x < 0.7) {\n\t\treturn (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\nanim8.easing.circular = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\nanim8.easing.gentle = function(x)\n{\n  return  (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\n// https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\nanim8.easing.bezier = function(mX1, mY1, mX2, mY2) \n{\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope == 0.0) return aGuessT;\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n  \n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\nanim8.easing.cssEase      = anim8.easing.ease;\nanim8.easing.cssEaseIn    = anim8.easing.quad;\nanim8.easing.cssEaseOut   = anim8.easingType.out( anim8.easing.quad );\nanim8.easing.cssEaseInOut = anim8.easingType.inout( anim8.easing.quad );\nanim8.easing.cssLinear    = anim8.easing.linear;\n\nanim8.easing.default      = anim8.easing.ease;","anim8.Path = function()\n{\n};\n\nanim8.Path.prototype = \n{\n  reset: function(name, calculator, points)\n  {\n    this.name = name;\n    this.calculator = anim8.calculator( calculator );\n    this.points = points;\n    this.trues = this.hasTrue();\n  },\n  compute: function(out, delta) \n\t{\n    return out;\n  },\n  hasTrue: function() \n\t{\n    var ps = this.points;\n    \n    for (var i = 0; i < ps.length; i++) \n    {\n      if (ps[i] === true) \n      {\n        return true;\n      }\n    }\n    return false;\n  },\n  reference: function() \n\t{\n    return this.trues ? this.copy() : this;\n  },\n  last: function()\n  {\n    return this.points[ this.points.length - 1 ];\n  },\n  first: function()\n  {\n    return this.points[ 0 ];\n  },\n  point: function(i)\n  {\n    return this.points[ i ];\n  }\n};\n\n\n\n\n\nanim8.DeltaPath = function(name, calculator, points, deltas) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n};\n\nanim8.DeltaPath.prototype = new anim8.Path();\n\nanim8.DeltaPath.prototype.compute = function(out, delta) \n{\n  var ds = this.deltas;\n  var end = ds.length - 2;\n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.points[i];\n  var p1 = this.points[i + 1];\n  \n  return this.calculator.interpolate( out, p0, p1, pd );\n};\n  \nanim8.DeltaPath.prototype.copy = function() \n{\n    return new anim8.DeltaPath( this.name, anim8.copy(this.points), anim8.copy(this.deltas), this.calculator );\n};\n\n\n\n\n\nanim8.PointPath = function(name, calculator, point)\n{\n  this.reset( name, calculator, [point] );\n};\n\nanim8.PointPath.prototype = new anim8.Path();\n\nanim8.PointPath.prototype.compute = function(out, delta)\n{\n  return this.calculator.copy( out, this.points[0] );\n};\n  \nanim8.PointPath.prototype.copy = function() \n{\n    return new anim8.PointPath( this.name, this.calculator, this.points[0] );\n};\n\n\n\nanim8.KeyframePath = function(name, calculator, points, deltas, easings) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n  this.easings = easings;\n};\n\nanim8.KeyframePath.prototype = new anim8.Path();\n\nanim8.KeyframePath.prototype.compute = function(out, delta) \n{  \n  var ds = this.deltas;\n  var end = ds.length - 2;\n  \n  if ( delta < ds[0] ) {\n    return false;\n  }\n  \n  if ( delta > ds[ds.length - 1] ) {\n    return this.points[ds.length - 1];\n  }\n  \n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.points[i];\n  var p1 = this.points[i + 1];\n  var ea = this.easings[i];\n  \n  return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n};\n  \nanim8.KeyframePath.prototype.copy = function() \n{\n    return new anim8.KeyframePath( this.name, this.calculator, anim8.copy(this.points), anim8.copy(this.deltas), anim8.copy(this.easings) );\n};\n\n\n\n\n\nanim8.CubicPath = function(name, calculator, p0, p1, p2, p3)\n{\n  this.reset( name, calculator, [p0, p1, p2, p3] );\n};\n\nanim8.CubicPath.prototype = new anim8.Path();\n\nanim8.CubicPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var d3 = d1 * d2;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  var i3 = i1 * i2;\n  \n  out = calc.copy( out, this.points[0] );\n  out = calc.scale( out, i3 );\n  out = calc.adds( out, this.points[1], 3 * i2 * d1 );\n  out = calc.adds( out, this.points[2], 3 * i1 * d2 );\n  out = calc.adds( out, this.points[3], d3 );\n  \n  return out;\n};\n  \nanim8.CubicPath.prototype.copy = function() \n{\n    return new anim8.CubicPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n};\n\n\n\n\n\nanim8.QuadraticPath = function(name, calculator, p0, p1, p2)\n{\n  this.reset( name, calculator, [p0, p1, p2] );\n};\n\nanim8.QuadraticPath.prototype = new anim8.Path();\n\nanim8.QuadraticPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  \n  out = calc.copy( out, this.points[0] );\n  out = calc.scale( out, i2 );\n  out = calc.adds( out, this.points[1], 2 * i1 * d1 );\n  out = calc.adds( out, this.points[2], d2 );\n    \n  return out;\n};\n  \nanim8.QuadraticPath.prototype.copy = function() \n{\n    return new anim8.QuadraticPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n};\n\n\n\n\n\nanim8.CompiledPath = function(name, path, pointCount)\n{\n  var calc = path.calculator;\n  var points = [];\n  \n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n  \n  this.reset( name, calc, points );\n};\n\nanim8.CompiledPath.prototype = new anim8.Path();\n\nanim8.CompiledPath.prototype.compute = function(out, delta)\n{\n  var ps = this.points;\n  var a = Math.floor( delta * ps.length );\n  var index = Math.min( a, ps.length - 1 );\n  \n  return this.calculator.copy( out, ps[ index ] );\n};\n  \nanim8.CompiledPath.prototype.copy = function() \n{\n    return new anim8.CompiledPath( this.name, this, this.points.length );\n};\n\n\n\n\n\nanim8.Tween = function(name, calculator, start, end)\n{\n  this.reset( name, calculator, [start, end] );\n};\n\nanim8.Tween.prototype = new anim8.Path();\n\nanim8.Tween.prototype.compute = function(out, delta)\n{\n  return this.calculator.interpolate( out, this.points[0], this.points[1], delta );\n};\n  \nanim8.Tween.prototype.copy = function() \n{\n    return new anim8.Tween( this.name, this.calculator, this.points[0], this.points[1] );\n};\n\n\n\n\n\nanim8.JumpPath = function(name, calculator, points)\n{\n  this.reset( name, calculator, points );\n};\n\nanim8.JumpPath.prototype = new anim8.Path();\n\nanim8.JumpPath.prototype.compute = function(out, delta)\n{\n  var ps = this.points;\n  var a = Math.floor( delta * ps.length );\n  var index = Math.min( a, ps.length - 1 );\n  \n  return this.calculator.copy( out, ps[ index ] );\n};\n  \nanim8.JumpPath.prototype.copy = function() \n{\n    return new anim8.JumpPath( this.name, this.calculator, anim8.copy(this.points) );\n};","\nanim8.EventState = \n{\n  CREATED: 0,\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  PAUSED: 8,\n  FINISHED: 16\n};\n\nanim8.Event = function(attribute, path, duration, easing, delay, sleep, repeat) \n{\n  this.attribute \t= attribute;\n  this.path \t\t\t= path;\n  this.easing \t\t= anim8.easing( easing );\n  this.delay \t\t\t= anim8.coalesce( delay, anim8.defaults.delay );\n  this.duration \t= anim8.coalesce( duration, anim8.defaults.duration );\n  this.sleep \t\t\t= anim8.coalesce( sleep, anim8.defaults.sleep );\n  this.repeat \t\t= anim8.coalesce( repeat, anim8.defaults.repeat );\n};\n\nanim8.Event.prototype = \n{\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  newInstance: function()\n  {\n    return new anim8.EventInstance( this );\n  }\n};\n\nanim8.EventInstance = function(event)\n{\n\tthis.event \t\t\t= event;\n\tthis.attribute \t= event.attribute;\n\tthis.path \t\t\t= event.path;\n\tthis.duration \t= event.duration;\n\tthis.easing \t\t= event.easing;\n\tthis.delay \t\t\t= event.delay;\n\tthis.sleep \t\t\t= event.sleep;\n\tthis.repeat \t\t= event.repeat;\n  this.state \t\t\t= anim8.EventState.CREATED;\n  this.time \t\t\t= 0;\n  this.pauseTime \t= 0;\n  this.pauseState = 0;\n\tthis.elapsed\t\t= 0;\n\tthis.next\t\t\t\t= null;\n};\n\nanim8.EventInstance.prototype = \n{\n  update: function(now, frame) \n\t{\n    var updated = false;\n    \n    this.startup( now );\n    \n    var elapsed = this.catchup( now );\n    \n    if (this.isAnimating()) \n\t\t{\t\t\t\n      var delta = elapsed / this.duration;\n      \n      if (delta >= 1 || this.duration === 0)\n\t\t\t{\n        if (--this.repeat === 0) \n\t\t\t\t{\n          this.finish(frame);\n\t\t\t\t\t\n          return true;\n        } \n\t\t\t\telse \n\t\t\t\t{\n          if (this.sleep)\n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.SLEEPING ); \n            delta = 1;\n            \n            this.trigger('sleeping', this);\n          } \n\t\t\t\t\telse \n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.ANIMATING );\n            delta -= 1;\n          }\n        }\n      }\n      \n      this.applyValue( frame, frame[this.attribute], delta );\n      updated = true;\n    }\n    \n    return updated;\n  },\n  progress: function(elapsed, time, newState) \n\t{\n    this.time += time;\n\t\tthis.elapsed += time;\n    this.state = newState;\n\t\t\n    return elapsed - time;\n  },\n  finish: function(frame) \n\t{\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = anim8.EventState.FINISHED;\n    \n    this.trigger('finish', this);\n  },\n  getPoint: function(delta)\n  {\n    return this.path.compute( this.path.calculator.create(), this.easing( delta ) );\n  },\n  getFuture: function(fdelta)\n  {\n    return this.getPoint( Math.min( 1.0, this.getDelta() + fdelta ) );\n  },\n  getDelta: function()\n  {\n    return this.isAnimating() ? Math.min( 1.0, (anim8.now() - this.time) / this.duration ) : 0.0;\n  },\n  getStart: function()\n  {\n    return this.getPoint( 0 );\n  },\n  getEnd: function() \n\t{\n    return this.getPoint( 1 );\n  },\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n        \n    if ( value !== false )\n    {\n      frame[this.attribute] = value;\n    }\n  },\n\tstartup: function(now)\n\t{\n    if (this.state === anim8.EventState.CREATED) \n\t\t{\n      this.time = now;\n\t\t\t\n      if (this.delay) \n\t\t\t{\n        this.state = anim8.EventState.DELAYED;\n        \n        this.trigger('delaying', this);\n      } \n\t\t\telse \n\t\t\t{\n        this.state = anim8.EventState.ANIMATING;\n      }\n    }\n\t},\n  catchup: function(now) \n\t{\n\t\tvar elapsed = now - this.time;\n\t\t\n    if (this.isDelayed()) \n\t\t{\n      if (elapsed > this.delay) \n\t\t\t{\n        this.trigger('delayed', this);\n        \n        elapsed = this.progress( elapsed, this.delay, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n    if (this.isSleeping()) \n\t\t{\n      if (elapsed > this.sleep)\n\t\t\t{\n        this.trigger('slept', this);\n        \n        elapsed = this.progress( elapsed, this.sleep, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n\t\t/*\n    TODO\n\t\tif (this.isAnimating())\n\t\t{\n\t\t\tvar total = (this.sleep + this.duration);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (this.sleep)\n\t\t\t{\n\t\t\t\tvar iterations = (this.sleep + this.duration);\n\t\t\t}\n\t\t}\n\t\t*/\n\t\t\n\t\treturn elapsed;\n  },\n  timeRemaining: function() \n\t{\n\t\treturn this.event.totalTime() - this.elapsed;\n  },\n  pause: function() \n\t{\n    if (this.state !== anim8.EventState.PAUSED) \n\t\t{\n      this.pauseTime = anim8.now();\n      this.pauseState = this.state;\n      this.state = anim8.EventState.PAUSED; \n    }\n  },\n  resume: function() \n\t{\n    if (this.state === anim8.EventState.PAUSED) \n\t\t{\n      this.time += anim8.now() - this.pauseTime;\n      this.state = this.pauseState; \n    }\n  },\n  isAnimating: function() \n\t{\n    return (this.state === anim8.EventState.ANIMATING);\n  },\n  isFinished: function() \n\t{\n    return (this.state === anim8.EventState.FINISHED);\n  },\n  isDelayed: function() \n\t{\n    return (this.state === anim8.EventState.DELAYED);\n  },\n  isPaused: function() \n\t{\n    return (this.state === anim8.EventState.PAUSED);\n  },\n  isSleeping: function() \n\t{\n    return (this.state === anim8.EventState.SLEEPING);\n  },\n  hasStates: function(states) \n\t{\n    return (this.state & states) !== 0;\n  },\n  stateText: function() \n\t{\n    switch(this.state) \n    {\n      case anim8.EventState.CREATED:            return \"created\";\n      case anim8.EventState.DELAYED:            return \"delayed\";\n      case anim8.EventState.ANIMATING:          return \"animating\";\n      case anim8.EventState.SLEEPING:           return \"sleeping\";\n      case anim8.EventState.FINISHED:           return \"finished\";\n    }\n  },\n  hasTrue: function()\n  {\n    return this.path.trues;\n  }\n};\n\nanim8.eventize( anim8.EventInstance.prototype );","\nanim8.Animation = function(name, input, options, events)\n{\n\tthis.name = name;\n\tthis.input = input;\n\tthis.options = options;\n\tthis.events = events;\n};\n\nanim8.Animation.prototype = \n{\n  isSaved: function()\n  {\n    return (this.name !== false);\n  },\n  mergeOptions: function(options, events)\n  { \n    // TODO move to parsers\n    \n    var durations = this.input.durations || {};\n    var easings   = this.input.easings || {};\n    var delays    = this.input.delays || {};\n    var sleeps    = this.input.sleeps || {};\n    var repeats   = this.input.repeats || {};\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      e.duration = anim8.coalesce( durations[attr], options.duration, this.options.duration, e.duration );\n      e.easing   = anim8.easing( anim8.coalesce( easings[attr], options.easing, this.options.easing, e.easing ) );\n      e.delay    = anim8.coalesce( delays[attr], options.delay, this.options.delay, e.delay );\n      e.sleep    = anim8.coalesce( sleeps[attr], options.sleep, this.options.sleep, e.sleep );\n      e.repeat   = anim8.coalesce( repeats[attr], options.repeat, this.options.repeat, e.repeat );\n    }\n  },\n  newEvents: function()\n  {\n    var e = [];\n    \n    for (var i = 0; i < this.events.length; i++)\n    {\n      e.push( this.events[i].newInstance() );\n    }\n    \n    return e;\n  }\n};\n\nanim8.save = function(name, animation, options)\n{\n  var animation = anim8.animation( animation, options );\n  \n  animation.name = name;\n  \n\tanim8.animation[name] = animation;\n};","\n\nanim8.Animator = function(e) \n{\n\tthis.reset( e );\n};\n\nanim8.Animator.prototype = \n{\n\treset: function(e)\n\t{\n\t  this.e = e;\n\t  this.events = {};\n\t  this.options = {};\n\t  this.attributes = {};\n\t  this.frame = {};\n    this.updated = {};\n\t  this.finished = false;\n\t\tthis.factory = null;\n    this.active = false;\n\t},\n  restore: function()\n  {\n    \n  },\n  preupdate: function()\n  {\n    // \n  },\n  update: function(now) \n\t{  \n    this.wasFinished = this.finished;\n    \n    this.finished = true;\n\t\t\n    for (var attr in this.events)\n    {\n      var e = this.events[attr];\n      \n      this.updated[ attr ] = e.update( now, this.frame );\n      \n      this.finished = this.finished && e.isFinished();\n    }    \n  },\n  placeEvent: function(e)\n  {\n    var attr = e.attribute;\n    \n    this.events[ attr ] = e;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n  },\n  apply: function()\n\t{\n    for (var attr in this.frame)\n    {\n      if ( this.updated[attr] )\n      {\n        this.e[ attr ] = this.frame[ attr ]; \n      }\n    }\n    \n    this.trimEvents();\n  },\n  trimEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      var e = this.events[attr];\n      \n      if ( e.isFinished() )\n      {\n        if ( e.next )\n        {                    \n          this.placeEvent( e.next );\n          this.finished = false;\n        }\n        else\n        {\n          delete this.events[attr];\n        }\n      }\n    }\n    \n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n  },\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\tcleanup: function()\n\t{\n    // implemented by child classes\n    \n    this.trigger('cleanup', this);\n\t},\n  createEvents: function(animation, options)\n  {\n    options = options || {};\n    \n    var animation = anim8.animation( animation, options );\n  \n    if (animation === false)\n    {\n      return false;\n    }\n    \n    var events = animation.newEvents();\n    \n    if ( animation.isSaved() )\n    {\n      animation.mergeOptions( options, events );\n    }\n    \n    this.onAnimation( animation, options, events );\n    \n\t\tanim8.extend( this.options, options );\t  \n    \n    return events;\n  },\n  onAnimation: function(animation, options, events)\n  {\n    \n  },\n\tplay: function(animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    { \n      this.placeEvent( events[i] );\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\tqueue: function(animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n        \n    var maxRemaining = 0.0;\n    \n    for (var attr in this.events)\n    {\n      maxRemaining = Math.max( maxRemaining, this.events[attr].timeRemaining() );\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      if ( attr in this.events )\n      {\n        this.events[attr].next = e;\n      }\n      else\n      {\n        e.delay += maxRemaining;\n        \n        this.placeEvent( e );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\ttransition: function(transitionTime, transitionDelta, transitionEasing, animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e1 = events[i];\n      var attr = e1.attribute;\n      \n      if ( attr in this.events )\n      {\n        var path = e1.path;\n        var calc = path.calculator;\n        var e2 = this.events[attr];\n        \n        var p0 = calc.copy( calc.create(), this.frame[attr] );\n        var p1 = e2.getFuture( transitionDelta );\n        var p2 = e1.getPoint( 0 );\n        \n        var transitionPath = new anim8.QuadraticPath( attr, calc, p0, p1, p2 );\n        var transitionEvent = new anim8.Event( attr, transitionPath, transitionTime, transitionEasing, 0, 0, 1 ).newInstance();\n        \n        transitionEvent.next = e1;\n        \n        this.placeEvent( transitionEvent );\n      }\n      else\n      {\n        e1.delay += transitionTime;\n     \n        this.placeEvent( e1 );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\teventsFor: function(attributes, callback)\n\t{\n\t\tif ( anim8.isString( attributes ) )\n\t\t{\n\t\t\tattributes = attributes.split( ' ' );\n\t\t}\n    \n    var eventCount = 0;\n    \n\t\tif ( anim8.isArray( attributes ) )\n\t\t{\n      for (var i = 0; i < attributes.length; i++)\n      {\n        var attr = attributes[i];\n        \n        if ( attr in this.events )\n        {\n          callback.call( this, this.events[attr] );\n        \n          eventCount++;\n        }\n      }\n\t\t}\n    else\n    {\n      for (var attr in this.events)\n      {\n        callback.call( this, this.events[attr] );\n        \n        eventCount++;\n      }\n    }\n    \n\t\treturn eventCount;\n\t},\n\tstop: function(attributes)\n\t{\n\t\treturn this.eventsFor(attributes, function(event) \n\t\t{\n\t\t\twhile (event.next)\n\t\t\t{\n\t\t\t\tevent = event.next;\n\t\t\t}\n\t\t\t\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n\tfinish: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n\tpause: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.pause();\n\t\t});\n\t},\n\tresume: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.resume();\n\t\t});\n\t},\n  set: function(attributes)\n  {\n    \n  },\n  hasEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      return true;\n    }\n    \n    return false;\n  },\n  isAnimating: function()\n  {\n    for (var attr in this.events)\n    {\n      if ( this.events[attr].isAnimating() )\n      {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n};\n\nanim8.eventize( anim8.Animator.prototype );","\nanim8.color = function(r, g, b, a) \n{\n  return {\n    r: anim8.coalesce( r, 255 ),\n    g: anim8.coalesce( g, 255 ),\n    b: anim8.coalesce( b, 255 ),\n    a: anim8.coalesce( a, 1.0 )\n  };\n};\n\nanim8.color.parsers = \n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, 'parseInt', 255),\n          g: this.parseComponent(input.g, 'parseInt', 255),\n          b: this.parseComponent(input.b, 'parseInt', 255),\n          a: this.parseComponent(input.a, 'parseFloat', 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = window[parseFunction](t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  }, \n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n// parses a color from \nanim8.color.parse = function(input)\n{\n  var cp = m8.color.parsers;\n  \n  for (var i = 0; i < this.parsers.length; i++)\n  {\n    var parsed = this.parsers[i].parse(input);\n    \n    if (parsed !== false) \n    {\n      return parsed;\n    }\n  }\n  \n  return this.invalidColor;\n};\n\n// formats a parsed color\nanim8.color.format = function(color)\n{\n  var ca = anim8.coalesce( color.a, 1.0 );\n  var cr = anim8.coalesce( color.r, 255 );\n  var cg = anim8.coalesce( color.g, 255 );\n  var cb = anim8.coalesce( color.b, 255 );\n  \n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n    \n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    \n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n// the color to return when input is invalid\nanim8.color.invalidColor = anim8.color.defaultValue =\n{\n  r: 255,\n  g: 255,\n  b: 255,\n  a: 1.0\n};","\t// parse(x, default)\n  // copy(out, copy)\n  //-clone(out)\n  // create()\n  // zero(out)\n  //-scale(out, scale)\n  //-add(out, amount)\n  // adds(out, amount, amountScale)\n  //-sub(out, amount)\n  // mul(out, scale)\n  //-interpolate(out, start, end, delta)\n  // distanceSq(a, b)\n  // isValid(a)\n  // isNaN(a)\n  // isZero(a, epsilon)\n  // isEqual(a, b, epsilon)\n\nanim8.calculator.create = function(name, methods)\n{\n\tanim8.calculator[name] = anim8.extend( methods, \n\t{\n\t  clone: function(out) \n\t\t{\n\t    return this.copy( this.create(), out );\n\t  },\n\t  scale: function(out, scale) \n\t\t{\n\t    return this.adds( out, out, scale - 1 );\n\t  },\n\t  add: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, 1 );\n\t  },\n\t  sub: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, -1 );\n\t  },\n\t  interpolate: function(out, start, end, delta) \n\t\t{\n\t    out = this.zero( out );\n\t    out = this.adds( out, start, 1 - delta );\n\t    out = this.adds( out, end, delta );\n\t    return out;\n\t  },\n\t\tdistance: function(a, b)\n\t\t{\n\t\t\treturn Math.sqrt( this.distanceSq( a, b ) );\n\t\t}\n\t});\n};\n\n/*********************************************************************\n * A calculator for number primitives.\n *********************************************************************/\nanim8.calculator.create('number', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn x;\n\t\t}\n\t\tif ( anim8.isString( x ) )\n\t\t{\n\t\t\tx = parseFloat( x );\n\t\t\t\n\t\t\tif (!isNaN(x))\n\t\t\t{\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn defaultValue;\n\t},\n  copy: function(out, copy) \n\t{\t\n    return copy;\n  },\n  create: function() \n\t{\n    return 0.0;\n  },\n  zero: function(out) \n\t{\n    return 0.0;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale) \n\t{\n    return out *= scale;\n  },\n  distanceSq: function(a, b) \n\t{\n    var ab = a - b;\n    return ab * ab;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'number';\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a - b) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with an x and y component (number)\n *********************************************************************/\nanim8.calculator.create('2d', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y )\n\t\t\t};\n\t\t}\n    if ( anim8.isString( x ) )\n    {\n      var aliases = {\n        'left':   0,\n        'right':  100,\n        'middle': 50,\n        'center': 50,\n        'top':    0,\n        'bottom': 100\n      };\n      \n      if ( x.indexOf(' ') === -1 )\n      {\n        var _x = parseFloat( x );\n        \n        if ( !isNaN(_x) || x in aliases )\n        {\n          return {\n            x: x in aliases ? aliases[x] : _x,\n            y: x in aliases ? aliases[x] : _x\n          };\n        }\n      }\n      else\n      {\n        var pair = x.split(' ');\n        var _x = parseFloat( pair[0] );\n        var _y = parseFloat( pair[1] );\n        \n        if ((!isNaN(_x) || pair[0] in aliases) && (!isNaN(_y) || pair[1] in aliases))\n        {\n          return {\n            x: pair[0] in aliases ? aliases[pair[0]] : _x,\n            y: pair[1] in aliases ? aliases[pair[1]] : _y\n          };\n        }\n      }\n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;    \n    return dx * dx + dy * dy;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with an x, y, and z component (number)\n *********************************************************************/\nanim8.calculator.create('3d',\n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x,\n\t\t\t\tz: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\t\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z )\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out) \n\t{ \n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t  \t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t\t Math.abs(a.z - b.z) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with an x, y, and z component (number)\n *********************************************************************/\nanim8.calculator.create('quaternion', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: 1,\n\t\t\t\tangle: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z ),\n\t\t\t\tangle: anim8.coalesce( x.angle, defaultValue.angle )\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n\t\tout.angle = copy.angle;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n\t\tout.angle = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n\t\tout.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n\t\tout.angle *= scale.angle;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n\t\tvar da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t  \t\t Math.abs(a.y) < epsilon && \n\t\t       Math.abs(a.z) < epsilon && \n\t\t       Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t   Math.abs(a.z - b.z) < epsilon && \n\t\t       Math.abs(a.angle - b.angle) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n *********************************************************************/\nanim8.calculator.create('rgb', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: x,\n\t\t\t\tg: x,\n\t\t\t\tb: x\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( x );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with r, g, & b components \n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n *********************************************************************/\nanim8.calculator.create('rgba', \n{\n\tparse: function(a, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( a ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: a,\n\t\t\t\tg: a,\n\t\t\t\tb: a,\n\t\t\t\ta: 1.0\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( a );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    var da = a.a - b.a;    \n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon && \n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon && \n           Math.abs(a.a - b.a) < epsilon;\n  }\n});\n\nanim8.calculator.default = anim8.calculator.number;","anim8.parser.deltas = function( animation, options, events ) \n{\n\tvar deltas = animation.deltas;\n\tvar values = animation.values;\n\t\n\tif ( anim8.isArray( deltas ) )\n\t{\n\t\tvar deltaObject = {};\n\t\t\n\t\tfor (var attr in values)\n\t\t{\n\t\t\tdeltaObject[attr] = deltas;\t\n\t\t}\n\t\t\n\t\tdeltas = deltaObject;\n\t}\n\t\n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculators[attr] = anim8.calculator.default;\n\t\t\tdefaults[attr] = calculators[attr].create();\n    }\n\t\t\n\t\tfor (var k = 0; k < value.length; k++)\n\t\t{\n      if ( value[k] !== true )\n      {\n  \t\t\tvalue[k] = calculators[attr].parse( value[k], defaults[attr] ); \n      }\n\t\t}\n\t\t\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var easing   = anim8.coalesce( easings[attr], options.easing, anim8.defaults.easing );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.DeltaPath( attr, calculators[attr], values[attr], deltas[attr] );\n    var event    = new anim8.Event( attr, path, duration, anim8.easing( easing ), delay, sleep, repeat );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.final = function( animation, options, events ) \n{\n\tvar values = animation.final;\n\t\n  var delays = animation.delays || {};\n  var durations = animation.durations || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n\n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay + duration, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.initial = function( animation, options, events ) \n{\n\tvar values = animation.initial;\n\t\n  var delays = animation.delays || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n    \n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.keyframe = function( animation, options, events ) \n{\n  var kframes = animation.keyframe;\n  \n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  \n  var teasing = anim8.easing( anim8.coalesce( options.teasing, anim8.defaults.teasing ) );\n  \n  var sort = false;\n  \n  var aliases = {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  };\n  \n  // split up comma delimited times\n  for (var time in kframes)\n  {\n    if ( time in aliases )\n    {\n      kframes[ aliases[time] ] = kframes[ time ];\n      \n      delete kframes[ time ];\n    }\n    else if ( time.indexOf(',') !== -1 )\n    {\n      var times = time.split(',');\n      \n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i]] = kframes[time];\n      }\n      \n      delete kframes[time];\n      \n      sort = true;\n    }\n  }\n  \n  var times = [];\n  \n  // validate times\n  var lastTime = 0.0;\n  var maxTime = 0.0;\n  \n  for (var time in kframes)\n  {\n    var t = parseFloat(time);\n    \n    if (isNaN(t))\n    {\n      delete kframes[time];\n    }\n    else\n    {\n      if (t < lastTime)\n      {\n        sort = true;\n      }\n      \n      times.push({\n        order: t,\n        key: time,\n        value: kframes[time]\n      });\n      \n      lastTime = t;\n      \n      maxTime = Math.max( maxTime, t );\n    }\n  }\n  \n  // sort if necessary\n  if (sort)\n  {\n    times.sort(function(a, b) {\n      return a.order - b.order;\n    });\n    \n    kframes = {};\n    \n    for (var i = 0; i < times.length; i++)\n    {\n      kframes[times[i].key] = times[i].value;\n    }\n  }\n  \n  // split up into deltas and values\n  var deltas = {};\n  var values = {};\n  var calculators = {};\n\tvar defaults = {};\n  var pathEasings = {};\n  \n  for (var i = 0; i < times.length; i++)\n  {\n    var frame = times[i];\n    var easing = anim8.coalesce( frame.value.easing, options.easing );\n    \n    delete frame.value.easing;\n    \n    for (var attr in frame.value)\n    {\n      if ( !(attr in deltas) )\n      {\n        deltas[attr] = [];\n        values[attr] = [];\n        pathEasings[attr] = [];\n        \n        if (attr in anim8.attribute)\n        {\n          calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n        }\n        else\n        {\n          calculators[attr] = anim8.calculator.default;\n\t\t\t\t\tdefaults[attr] = calculators[attr].create();\n        }\n      }\n\t\t\t\n      deltas[attr].push( frame.order / maxTime );\n      values[attr].push( frame.value[attr] === true ? true : calculators[attr].parse( frame.value[attr], defaults[attr] ) );\n      pathEasings[attr].push( anim8.easing( anim8.coalesce( easings[attr], easing ) ) );\n    }\n  }\n\t\n  // create events & paths\n  for (var attr in deltas)\n  {\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.KeyframePath( attr, calculators[attr], values[attr], deltas[attr], pathEasings[attr] );\n    var event    = new anim8.Event( attr, path, duration, teasing, delay, sleep, repeat );\n    \n    events.push( event );\n  }\n};","\nanim8.factories.object = \n{\n  is: function(subject) \n\t{\n    return anim8.isObject( subject ) && !anim8.isElement( subject );\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n    var animator = from.$animator;\n    \n    if ( !animator )\n    {\n      animator = new anim8.Animator( from );\n      animator.factory = this;\n      \n      from.$animator = animator;\n    }\n    \n    animators.push( animator );\n  }\n};"],"sourceRoot":"/source/"}