{"version":3,"sources":["anim8js-core.js","anim8js-easing.js","anim8js-path.js","anim8js-spring.js","anim8js-event.js","anim8js-animation.js","anim8js-animator.js","anim8js-color.js","anim8js-calculator.js","anim8js-parser-deltavalues.js","anim8js-parser-final.js","anim8js-parser-initial.js","anim8js-parser-keyframe.js","anim8js-object.js","anim8js-dom-core.js","anim8js-dom-property.js","anim8js-dom-attribute.js","anim8js-dom-animator.js","anim8js-animate.css.js","jquery-anim8js.js"],"names":["m8","anim8","subjects","this","window","args","Array","prototype","slice","call","arguments","isArray","i","length","push","animators","arg","Animator","factory","factories","parseAnimators","noop","isDefined","x","isFunction","isNumber","isString","isObject","isElement","HTMLElement","nodeType","nodeName","now","Date","getTime","copy","p","coalesce","a","b","c","d","delegate","functionName","returning","RETURN_THIS","apply","RETURN_RESULTS","results","RETURN_FIRST","undefined","eventize","object","onListeners","$this","property","events","callback","context","split","on","once","offListeners","listeners","event","eventListeners","k","splice","off","$on","$once","triggerListeners","argument","clear","trigger","time","regex","conversions","s","sec","min","ms","hr","parsed","exec","parseFloat","unit","Math","floor","subject","factoryName","is","attribute","attr","defaultValue","easing","indexOf","pair","e","t","easingType","bezier","isEasingName","calculator","calc","parser","animation","options","Animation","parserName","defaults","duration","teasing","delay","sleep","repeat","each","iterator","filter","filterer","alive","remove","isAnimating","pause","transition","play","resume","stop","finish","end","queue","restore","eventsFor","set","get","spring","unspring","springsFor","applyInitialState","running","animating","requestRun","vendors","requestor","requestAnimationFrame","lastTime","timeToCall","max","currTime","id","setTimeout","add","animator","active","run","preupdate","update","finished","cleanup","out","inout","pong","linear","quad","ease","i2","x2","eq1","eq2","cubic","quartic","quintic","back","x3","sine","sin","overshot","elastic","scale","wave","revisit","abs","lasso","cos","slowbounce","bounce","smallbounce","inv","tinybounce","hesitant","sqrt","sqrtf","log10","slingshot","circular","gentle","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","cssEase","cssEaseIn","cssEaseOut","cssEaseInOut","cssLinear","Path","reset","name","points","trues","hasTrue","compute","ps","reference","last","first","point","DeltaPath","deltas","delta","ds","d0","d1","pd","p0","p1","interpolate","PointPath","KeyframePath","easings","ea","CubicPath","p2","p3","d2","d3","i1","i3","adds","QuadraticPath","CompiledPath","path","pointCount","create","index","Tween","start","JumpPath","Spring","type","rest","position","parse","velocity","frame","dt","MAX_DT","starting","onUpdate","updated","isEqual","EPSILON","BoxSpring","constant","acceleration","sub","mul","box","LinearSpring","damping","stiffness","temp0","temp1","DistanceSpring","distance","temp","EventState","CREATED","DELAYED","ANIMATING","SLEEPING","PAUSED","FINISHED","Event","totalTime","newInstance","EventInstance","state","pauseTime","pauseState","elapsed","next","startup","catchup","progress","applyValue","newState","getPoint","getFuture","fdelta","getDelta","getStart","getEnd","baseValue","value","isDelayed","isSleeping","timeRemaining","timeRemainingInChain","hasStarted","isFinished","isPaused","hasStates","states","stateText","input","isSaved","mergeOptions","durations","delays","sleeps","repeats","newEvents","save","springs","attributes","wasFinished","placeSpring","placeEvent","trimEvents","createEvents","onAnimation","all","attrs","maxRemaining","transitionTime","transitionDelta","transitionEasing","e1","e2","transitionPath","transitionEvent","eventCount","objectsFor","objects","objectCount","hasEvents","hasSprings","color","r","g","parsers","parseComponent","parseFunction","v","vparsed","isNaN","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","named","matches","parseInt","invalidColor","format","ca","cr","cg","cb","toString","methods","defaultMethods","clone","amount","zero","distanceSq","method","amountScale","ab","isValid","isZero","epsilon","y","aliases","left","right","middle","center","top","bottom","_x","_y","dx","dy","z","dz","angle","da","dr","dg","db","number","values","deltaObject","calculators","initial","keyframe","kframes","sort","from","half","to","times","maxTime","order","key","pathEasings","$animator","prop","style","hyphenize","str","replace","currentStyle","document","defaultView","getComputedStyle","getPropertyValue","prefix","createElement","prefixes","parseValue","defaultUnit","toPixels","baseUnit","defaultRate","body","div","appendChild","width","pixels","offsetWidth","removeChild","convert","getFontSize","notUnit","fontSize","getConverterScale","px","relativeTo","variables","parentWidth","parentNode","scrollWidth","parentHeight","scrollHeight","height","offsetHeight","parentFontSize","htmlFontSize","htmlElement","getElementsByTagName","pt","cm","mm","vw","deg","rad","PI","em","rem","given","converter","toUnit","fromUnit","converter1","converter2","dom","ids","cached","has","getAttribute","animatorId","DomAnimator","setAttribute","nm","anim","converted","unset","factoryDerivable","deriver","factoryColor","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","outlineWidth","textIndent","borderSpacing","lineHeight","zIndex","backgroundColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","outlineColor","minWidth","maxWidth","minHeight","maxHeight","offsetTop","offsetLeft","visibility","backface","css","transformOrigin","keywords","setOriginAttribute","setOrigin","origin","originZ","valueOr","transform","translate","translate3d","scale3d","d4","rotate3d","translateX","translateY","translateZ","scaleX","scaleY","scaleZ","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY","desiredUnit","transforms","join","opacity","grayscale","sepia","saturate","hueRotate","invert","brightness","contrast","blur","patterns","RegExp","filters","cx","cy","ccx","ccy","centerX","centerY","preset","units","rw","rh","orbit","DEGREE_TO_RADIAN","RADIAN_TO_DEGREE","ox","oy","orbitOffset","cunit","cox","coy","atan2","orbitX","orbitY","originUnit","originX","originY","outlineOffset","saturation","properties","attributeToProperty","applyProperties","props","flash","other","subproperty","0,20,53,80,100","40,43","70","90","0,100","30","40","50","65","75","0,50,100","25,75","0","100","10,30,50,70,90","20,40,60,80","20","60","80","10,20","30,50,70,90","40,60,80","15","45","50,55","40,45","final","20,60","actions","slide","fade","zoom","directions","Out","In","vertical","Down","Up","horizontal","Right","Left","sizes","Big","dir","ver","h","hor","siz","animName","$","SYMBOL","REPEAT","DELAY","SLEEP","fn","animationText","parseAnimation","dataPlay","animationAttribute","data","queueAnimation","dataQueue","transitionText","tran","parseTransition","dataTransition","transitionAttribute","stopIt","finishIt","endIt","setAttributes","getAttributes","text","parts","charAt","substring","num","jQuery"],"mappings":"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","file":"jquery-anim8js.min.js","sourcesContent":["\n/**\n * The core object of the framework. It extends Array and the method can be used \n * to construct an array of animators from subjects.\n * \n * @param {array} subjects\n */\nm8 = anim8 = function(subjects) \n{\n  if ( this === window ) \n  {\n\t\tvar args = Array.prototype.slice.call( arguments );\n\t\t\n\t\tif ( !anim8.isArray( subjects ) )\n\t\t{\n\t\t\tsubjects = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < args.length; i++)\n\t\t\t{\n\t\t\t\tsubjects.push( args[i] );\n\t\t\t}\n\t\t}\n\t\t\n    var animators = [];\n    \n    for (var i = 0; i < subjects.length; i++) \n    {\n      var arg = subjects[ i ];\n      \n      if ( arg instanceof anim8.Animator ) \n      {\n        animators.push( arg );\n      } \n      else\n      {\n\t\t\t\tvar factory = anim8.factories( arg );\n\t\t\t\t\n\t\t\t\tif (factory !== false)\n\t\t\t\t{\n          factory.parseAnimators( arg, animators );\n\t\t\t\t}\n      }\n    }\n\t\t\n\t\treturn new anim8( animators );\n  } \n  else \n  {\n    for (var i = 0; i < subjects.length; i++) \n    {\n      this.push( subjects[ i ] );\n    }\n  }\n};\n\n/*****************************************************************\n  UTILITY FUNCTIONS\n******************************************************************/\n\n/**\n * A function that does nothing.\n */\nanim8.noop = function() {};\n\n/**\n * Returns true if the given variable is defined.\n */\nanim8.isDefined = function(x) \n{\n  return typeof x !== 'undefined';\n};\n\n/**\n * Returns true if the given variable is a function.\n */\nanim8.isFunction = function(x) \n{\n  return typeof x === 'function';\n};\n\n/**\n * Returns true if the given variable is a number.\n */\nanim8.isNumber = function(x) \n{\n  return typeof x === 'number';\n};\n\n/**\n * Returns true if the given variable is a string.\n */\nanim8.isString = function(x) \n{\n  return typeof x === 'string';\n};\n\n/**\n * Returns true if the given variable is an array. This should be checked before\n * anim8.isObject since Arrays are objects.\n */\nanim8.isArray = function(x) \n{\n  return x instanceof Array;\n};\n\n/**\n * Returns true if the given variable is an object.\n */\nanim8.isObject = function(x) \n{\n  return typeof x === 'object';\n};\n\n/**\n * Returns true if the given variable is an HTML element.\n */\nanim8.isElement = function(x)\n{\n  return typeof HTMLElement === \"object\" ? x instanceof HTMLElement :\n  x && typeof x === \"object\" && x !== null && x.nodeType === 1 && typeof x.nodeName === \"string\";\n};\n\n/**\n * Returns the current time in milliseconds.\n */\nanim8.now = (function() {\n\n  return Date.now ? Date.now : function() \n  {\n    return new Date().getTime();\n  };\n  \n})();\n\n\n/**\n * Performs a deep copy of the given variable. If the variable is an array or object a new instance\n * of that type is created where the values are copied as well. All other types can't be copied\n * (most likely because they're scalar) so they are returned as-is.\n *\n * @param {any} x\n */\nanim8.copy = function(x) \n{\n  if ( anim8.isArray(x) ) \n  {\n    var copy = [];\n    for (var i = 0; i < x.length; i++) \n    {\n      copy.push( anim8.copy( x[i] ) );\n    }\n    x = copy;\n  }\n  else if ( anim8.isObject(x) ) \n  {\n    var copy = {};\n    for (var p in x) \n    {\n      copy[p] = anim8.copy( x[p] );\n    }\n    x = copy;\n  }\n  \n  return x;\n};\n\n/**\n * Returns the first defined variable of a possible 4 variables.\n */\nanim8.coalesce = function(a, b, c, d) \n{\n  if (anim8.isDefined(a)) return a;\n  if (anim8.isDefined(b)) return b;\n  if (anim8.isDefined(c)) return c;\n  return d;\n};\n\n/**\n * Creates a function which calls a method on all elements in the array or on the first element.\n *\n * @param {string} functionName\n * @param {string} returning\n */\nanim8.delegate = function(functionName, returning) \n{  \n  switch (returning)\n  {\n  case anim8.delegate.RETURN_THIS:\n    return function() \n    {\n      for (var i = 0; i < this.length; i++) \n      {\n        this[i][functionName].apply( this[i], arguments );\n      }\n      \n      return this;  \n    };\n    \n  case anim8.delegate.RETURN_RESULTS:\n    return function() \n    {\n      var results = [];\n    \n      for (var i = 0; i < this.length; i++) \n      {\n        results.push( this[i][functionName].apply( this[i], arguments ) );\n      }\n    \n      return results;\n    };\n    \n  case anim8.delegate.RETURN_FIRST:\n    return function()\n    {\n      return this.length === 0 ? undefined : this[0][functionName].apply( this[0], arguments );\n    };\n  }\n  \n  return anim8.noop;\n};\n\n/**\n * this is returned at the end.\n */\nanim8.delegate.RETURN_THIS = 'this';\n\n/**\n * An array of results for each method call is returned.\n */\nanim8.delegate.RETURN_RESULTS = 'results';\n\n/**\n * The result of the first element.\n */\nanim8.delegate.RETURN_FIRST = 'first';\n\n\n/**\n * Adds functions to the given object (or prototype) so you can listen for any number of events\n * on the given object, optionally once. Listeners can be removed later.\n */\nanim8.eventize = function(object)\n{\n  var onListeners = function($this, property, events, callback, context)\n  {\n    events = events.split(' ');\n    \n    if ( !anim8.isDefined( $this[ property ] ) )\n    {\n      $this[ property ] = {};\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      if ( !anim8.isDefined( $this[ property ][ events[i] ] ) )\n      {\n        $this[ property ][ events[i] ] = [];\n      }\n      \n      $this[ property ][ events[i] ].push( [ callback, context || $this ] );\n    }\n  };\n  \n  object.on = function(events, callback, context)\n  {\n    onListeners( this, '$on', events, callback, context );\n  };\n  \n  object.once = function(events, callback, context)\n  {\n    onListeners( this, '$once', events, callback, context );\n  };\n  \n  var offListeners = function(listeners, event, callback)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var k = eventListeners.length - 1; k >= 0; k--)\n      {\n        if (eventListeners[ k ][0] === callback)\n        {\n          eventListeners.splice( k, 1 );\n        }\n      }  \n    }\n  };\n  \n  object.off = function(events, callback)\n  {\n    events = events.split(' ');\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      offListeners( this.$on, events[i] );\n      offListeners( this.$once, events[i] );\n    }\n  };\n  \n  var triggerListeners = function(listeners, event, argument, clear)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var i = 0; i < eventListeners.length; i++)\n      {\n        var callback = eventListeners[ i ];\n        \n        callback[0].call( callback[1], argument );\n      }\n      \n      if ( clear )\n      {\n        eventListeners.length = 0;\n      }\n    }\n  }\n  \n  object.trigger = function(event, argument)\n  {\n    triggerListeners( this.$on, event, argument, false );\n    triggerListeners( this.$once, event, argument, true );\n  };\n};\n\n/**\n * Parses milliseconds from a string or number. If a number is given it's assumed to be milliseconds\n * and is returned immediately.\n *\n * @param {string|number} time\n */\nanim8.time = (function()\n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(s|sec|min|ms|hr)?/;\n  \n  var conversions = {\n    s:    1000,\n    sec:  1000,\n    min:  1000 * 60,\n    ms:   1,\n    hr:   1000 * 60 * 60\n  };\n  \n  return function(time) \n  {  \n    if ( anim8.isNumber( time ) )\n    {\n      return time;\n    }\n    if ( anim8.isString( time ) )\n    {\n      var parsed = regex.exec( time );\n      \n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n        \n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n        \n        return Math.floor(time);\n      }\n    }\n    \n    return false;\n  };\n  \n})();\n\n\n/*****************************************************************\n  REGISTRIES\n******************************************************************/\n\n/**\n * Returns a factory for the given subject or throws an error if no factory exists.\n *\n * @param {any} subject\n */\nanim8.factories = function(subject) \n{\n\tfor (var factoryName in anim8.factories) \n\t{\n\t\tvar factory = anim8.factories[ factoryName ];\n\t\t\t\n\t\tif ( factory.is( subject ) )\n\t\t{\t\t\t\n\t\t\treturn factory;\n\t\t}\n\t}\n\t\n\tthrow 'No factory exists for subject ' + subject;\n};\n\n/* Attributes are the animatable properties of a subject\n\n  anim8.attribute[name] = {\n    // the default value for an attribute if none exists on the subject\n    defaultValue: 0,\n    // the name of the calculator this attribute requires for mathematical operations. default value: anim8.calculator.default\n    calculator: calculatorName,\n    // other values can be specified here that the respective factory might use\n    \"factory specific attributes\"\n  }\n*/\n\n/**\n * Returns an attribute based on the given input. If the input is an object it's assumed to be an attribute and it's\n * returned immediately. If the input is a string the attribute with the given name is returned. Otherwise\n * the default attribute is returned.\n *\n * @param {object|string} attr\n */\nanim8.attribute = function(attr) \n{\n  if ( anim8.isObject(attr) && anim8.isDefined(attr.defaultValue) ) \n\t{\n    return attr;\n  }\n  if ( anim8.isString(attr) && attr in anim8.attribute ) \n\t{\n    return anim8.attribute[ attr ];\n  }\n\t\n  return anim8.attribute.default;\n};\n\n/**\n * The default attribute.\n */\nanim8.attribute.default = {defaultValue: 0};\n \n/* Easings are functions that are magic\n\n  anim8.applier[name] = {\n    // array of properties required \n    properties: [],\n    // function to invoke each frame\n    apply: function(e, anim)\n  }\n*/\n\n/**\n * Returns an easing based on the given input. If the input is a function it's assumed to be an easing function and is\n * returned immediately. If the input is a string the easing with that name is returned. If the input is a string in the\n * format 'easing-easingType' then an easing is returned that is a combination of the easing with the given name and the\n * easingType with the given name. If the given input is an array with 4 elements it's assumed to be a bezier path and\n * one is created and returned. If no input is given the default easing is returned. If an easing cannot be determined\n * then an error is thrown.\n * \n * @param {function|string|array} easing\n */\nanim8.easing = function(easing) \n{\n  if ( anim8.isFunction( easing ) ) \n\t{\n    return easing;\n  }\n\tif ( anim8.isString( easing ) )\n\t{\n\t\tif ( easing in anim8.easing )\n\t\t{\n\t\t\treturn anim8.easing[ easing ];\n\t\t}\n\t\tif ( easing.indexOf('-') !== -1 )\n\t\t{\n\t\t\tvar pair = easing.split('-');\n\t\t\tvar e = pair[0];\n\t\t\tvar t = pair[1];\n\t\t\t\n\t\t\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t\t\t{\t\t\t\t\n\t\t\t\treturn anim8.easingType[ t ]( anim8.easing[ e ] );\n\t\t\t}\n\t\t}\n\t}\n  if ( anim8.isArray( easing ) && easing.length === 4 ) \n\t{\n    return anim8.easing.bezier.apply( null, easing );\n  }\n  if ( !anim8.isDefined( easing ) ) \n\t{\n    return anim8.easing.default;\n  }\n\t\n  throw easing + ' is not a valid easing';\n};\n\n/**\n * Returns true if the given string would result in returning an easing.\n * \n * @see anim8.easing\n * @param {string} easing\n */\nanim8.isEasingName = function(easing)\n{\n  if ( easing in anim8.easing )\n  {\n    return true;\n  }\n  \n\tvar pair = easing.split('-');\n\tvar e = pair[0];\n\tvar t = pair[1];\n\t\n\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t{\t\t\t\t\n    return true;\n\t}\n  \n  return false;\n};\n\n/**\n * Returns an easing type based on the input. If the input is a function that function is immediately returned. \n * If the input is a string the easing type with that name is returned. If no easing type could be determined\n * an error is thrown.\n *\n * @param {function|string} easingType\n */\nanim8.easingType = function(easingType)\n{\n\tif ( anim8.isFunction( easingType ) )\n\t{\n\t\treturn easingType;\n\t}\n\tif ( anim8.isString( easingType ) && easingType in anim8.easingType )\n\t{\n\t\treturn anim8.easingType[ easingType ];\n\t}\n\t\n\tthrow easingType + ' is not a valid easing type';\n};\n\n/**\n * Returns a calculator based on the input. If the input is an object that object is immediately returned.\n * If the input is a string the calculator with that name is returned. If no calculator could be determined\n * the default calculator is returned.\n *\n * @param {object|string} calc\n */\nanim8.calculator = function(calc)\n{\n\tif ( anim8.isObject(calc) )\n\t{\n\t\treturn calc;\n\t}\n\tif ( anim8.isString( calc ) && calc in anim8.calculator )\n\t{\n\t\treturn anim8.calculator[ calc ];\n\t}\n\t\n\treturn anim8.calculator.default;\n};\n\n/**\n * Returns a parser based on the input. If the input is a function that function is immediately returned.\n * If the input is a string the parser with that name is returned. If no parser could be determined then\n * false is returned.\n * \n * @param {function|string} parser\n */\nanim8.parser = function(parser)\n{\n\tif ( anim8.isFunction( parser ) )\n\t{\n\t\treturn parser;\n\t}\n\tif ( anim8.isString( parser ) && parser in anim8.parser )\n\t{\n\t\treturn anim8.parser[ parser ];\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Returns an animation based on the input. If the input is an instance of anim8.Animation that instance\n * is immediately returned. If the input is a string the animation with that name is returned. If the\n * input is an object an anonymous animation is created using the second options argument. If no animation\n * could be determined then false is returned.\n * \n * @param {anim8.Animation|string|object} animation\n * @param [object] options\n */\nanim8.animation = function(animation, options)\n{\n  if ( animation instanceof anim8.Animation )\n  {\n    return animation;\n  }\n\tif ( anim8.isString( animation ) && animation in anim8.animation )\n\t{\n\t\treturn anim8.animation[ animation ];\n\t}\n\tif ( anim8.isObject( animation ) )\n\t{\n\t\tvar events = [];\n\t\t\n\t\toptions = options || {};\n\t\t\n\t\tfor (var parserName in animation)\n\t\t{\n\t\t\tvar parser = anim8.parser( parserName );\n\t\t\t\n\t\t\tif ( parser !== false )\n\t\t\t{\n\t\t\t\tparser( animation, options, events );\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (events.length)\n\t\t{\n\t\t\treturn new anim8.Animation( false, animation, options, events );\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * The default values for event properties.\n */\nanim8.defaults = \n{\n  duration: 1000,\n  easing: 'ease',\n  teasing: 'linear',\n  delay: 0,\n  sleep: 0,\n  repeat: 1\n};\n\n\n/*****************************************************************\n  ANIM8 DEFINITION\n******************************************************************/\n\n/**\n * anim8 is an instance of Array. All array methods are supported.\n */\nanim8.prototype = new Array();\n\n/**\n * Invokes a callback for each element in the array.\n * \n * @param {function} iterator\n */\nanim8.prototype.each = function(iterator) \n{\n  for (var i = 0; i < this.length; i++) \n  {\n    if ( iterator.call( this[i], this[i], i ) === false ) \n    {\n      break;\n    }\n  }\n\t\n\treturn this;\n};\n\n/**\n * Invokes a callback for each element in the array and if true is returned that element is removed from the array.\n *\n * @param {function} filterer\n */\nanim8.prototype.filter = function(filterer)\n{\t\n\tvar alive = 0;\n\t\n\tfor (var i = 0; i < this.length; i++)\n\t{\n\t\tvar remove = filterer( this[i] );\n\t\t\n\t\tif ( !remove )\n\t\t{\n\t\t\tthis[alive++] = this[i];\n\t\t}\n\t}\n\t\n\tthis.length = alive;\n\t\n\treturn this;\n};\n\n/**\n * Returns true if any of the animators in the array are animating.\n */\nanim8.prototype.isAnimating = function() \n{\n  for (var i = 0; i < this.length; i++)\n  {\n    if ( this[i].isAnimating() )\n    {\n      return true;\n    }\n  }\n  \n  return false;\n};\n\n/**\n * Adds the following methods to anim8 to make an array of Animators appear like a single Animator.\n */\nanim8.prototype.pause \t\t\t= anim8.delegate( 'pause', anim8.delegate.RETURN_THIS );\nanim8.prototype.transition \t= anim8.delegate( 'transition', anim8.delegate.RETURN_THIS );\nanim8.prototype.play \t\t\t\t= anim8.delegate( 'play', anim8.delegate.RETURN_THIS );\nanim8.prototype.resume \t\t\t= anim8.delegate( 'resume', anim8.delegate.RETURN_THIS );\nanim8.prototype.stop \t\t\t\t= anim8.delegate( 'stop', anim8.delegate.RETURN_THIS );\nanim8.prototype.finish \t\t\t= anim8.delegate( 'finish', anim8.delegate.RETURN_THIS );\nanim8.prototype.end   \t\t\t= anim8.delegate( 'end', anim8.delegate.RETURN_THIS );\nanim8.prototype.queue \t\t\t= anim8.delegate( 'queue', anim8.delegate.RETURN_THIS );\nanim8.prototype.restore\t\t\t= anim8.delegate( 'restore', anim8.delegate.RETURN_THIS );\nanim8.prototype.eventsFor   = anim8.delegate( 'eventsFor', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.set         = anim8.delegate( 'set', anim8.delegate.RETURN_THIS );\nanim8.prototype.get         = anim8.delegate( 'get', anim8.delegate.RETURN_FIRST );\nanim8.prototype.spring \t\t\t= anim8.delegate( 'spring', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.unspring \t\t= anim8.delegate( 'unspring', anim8.delegate.RETURN_THIS );\nanim8.prototype.springsFor \t= anim8.delegate( 'springsFor', anim8.delegate.RETURN_RESULTS );\nanim8.prototype.applyInitialState = anim8.delegate( 'applyInitialState', anim8.delegate.RETURN_THIS );\n\nanim8.prototype.on\t\t\t    = anim8.delegate( 'on', anim8.delegate.RETURN_THIS );\nanim8.prototype.once\t\t    = anim8.delegate( 'once', anim8.delegate.RETURN_THIS );\nanim8.prototype.off\t\t\t    = anim8.delegate( 'off', anim8.delegate.RETURN_THIS );\nanim8.prototype.trigger     = anim8.delegate( 'trigger', anim8.delegate.RETURN_THIS );\n\n/*****************************************************************\n  ANIM8 ANIMATION LOOP\n******************************************************************/\n\n/**\n * Whether the animation cycle is currently running. This is true\n * when where are active animators and anim8.run is being called\n * and false otherwise.\n */\nanim8.running = false;\n\n/**\n * The anim8 instance for all active animators.\n */\nanim8.animating = anim8();\n\n/**\n * The function to call if animations need to be done.\n *\n * @param {function} callback\n */\nanim8.requestRun = (function() \n{  \n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n  var requestor = window.requestAnimationFrame;\n  \n  for (var x = 0; x < vendors.length && !requestor; ++x) \n  {\n    requestor = window[ vendors[x] + 'RequestAnimationFrame' ];\n  }\n  \n  if (!requestor)\n  {\n    var lastTime = 0;\n    \n    return function(callback)\n    {\n      var now = anim8.now();\n      var timeToCall = Math.max( 0, 16 - (currTime - lastTime) );\n      var id = window.setTimeout( function() { callback( currTime + timeToCall ); }, timeToCall );\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n  \n  return function(callback)\n  {\n    requestor( callback );\n  };\n  \n})();\n\n/**\n * Adds an animator to the list if animating if it isn't there already. If the animation\n * loop isn't currently running it's started.\n * \n * @param {anim8.Animator} animator\n */\nanim8.add = function(animator)\n{\n  if ( !animator.active )\n  {\n    anim8.animating.push( animator );\n    \n    animator.active = true;\n  }\n  \n  if ( !anim8.running )\n  {\n    anim8.running = true;\n\t\tanim8.trigger('starting');\n\t\tanim8.requestRun( anim8.run );\n  }\n}\n\n/**\n * Executes an animation cycle which consists of four operations:\n *   1. Call preupdate on all Animators\n *   2. Call update on all Animators\n *   3. Call apply on all Animators\n *   4. Remove finished Animators\n * When there are no more animating the cycle is stopped.\n */\nanim8.run = function() \n{\n\tanim8.trigger('begin');\n\t\n  var now = anim8.now();\n  \n  // notify animators that we're about to update\n  anim8.animating.each(function(animator)\n  {\n    animator.preupdate();\n  });\n  \n  // update animating based on the current time\n  anim8.animating.each(function(animator)\n  {\n    animator.update( now );\n  });\n  \n  // apply the attributes calculated\n  anim8.animating.each(function(animator)\n  {\n    animator.apply();\n  });\n  \n  // if the animator is done remove it\n  anim8.animating.filter(function(animator)\n  {\n    if ( animator.finished )\n    {\n\t\t\tanimator.cleanup();\n      animator.active = false;\n    }\n    \n    return animator.finished;\n  });\n\t\n\tanim8.trigger('end');\n  \n  // if there are animators still remaining call me again!\n  if ( anim8.animating.length )\n  {\n\t\tanim8.requestRun( anim8.run );\n  } \n  else \n  {\n    anim8.running = false;\n\t\tanim8.trigger('finished');\n  }\n};\n\n/**\n * Add events to the animation cycle: begin, end, finished, starting\n */\nanim8.eventize( anim8 );","\n/**\n * Easing & Easing Type functions\n */\n\nanim8.easingType.in = function(easing) \n{\n\treturn function(x) {\n\t\treturn easing( x );\n\t};\n};\n\nanim8.easingType.out = function(easing) \n{\n\treturn function(x) {\n\t\treturn 1.0 - easing( 1.0 - x );\n\t};\n};\n\nanim8.easingType.inout = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x ) * 0.5;\n\t  } else {\n\t    return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n\t  }\n\t};\n};\n\nanim8.easingType.pong = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x );\n\t  } else {\n\t    return easing( 2.0 - 2.0 * x );\n\t  }\n\t};\n};\n\nanim8.easing.linear = function(x) \n{\n  return x;\n};\n\nanim8.easing.quad = function(x)\n{\n  return x * x;\n};\n\nanim8.easing.ease = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n  \n  return eq1 * i + eq2 * x;\n};\n\nanim8.easing.cubic = function(x) \n{\n  return x * x * x;\n};\n\nanim8.easing.quartic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\nanim8.easing.quintic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\nanim8.easing.back = function(x) \n{\n  var x2 = x * x;\n\tvar x3 = x2 * x;\n\treturn x3 + x2 - x;\n};\n\nanim8.easing.sine = function(x) \n{\n\treturn Math.sin( x * 1.57079632679 );\n};\n\nanim8.easing.overshot = function(x)\n{\n  return (1.0 - x * (7.0 / 10/0)) * x * (10.0 / 3.0);\n};\n\nanim8.easing.elastic = function(x) \n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n\tvar wave = -Math.sin(x * 10.9955742876);\n\treturn scale * wave;\n};\n\nanim8.easing.revisit = function(x) \n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\nanim8.easing.lasso = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x))\n};\n\nanim8.easing.slowbounce = function(x) \n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\nanim8.easing.bounce = function(x) \n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.smallbounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.tinybounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\nanim8.easing.hesitant = function(x) \n{\n\treturn (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\nanim8.easing.lasso = function(x)\n{\n  var x2 = x * x;\n\treturn (1.0 - Math.cos(x2 * x * 36.0) * (1.0 - x));\n};\n\nanim8.easing.sqrt = function(x)\n{\n  return Math.sqrt( x );\n};\n\nanim8.easing.sqrtf = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\nanim8.easing.log10 = function(x)\n{\n  return (Math.log10(x) + 2.0) * 0.5;\n};\n\nanim8.easing.slingshot = function(x)\n{\n  if (x < 0.7) {\n\t\treturn (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\nanim8.easing.circular = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\nanim8.easing.gentle = function(x)\n{\n  return  (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\nanim8.easing.bezier = function(mX1, mY1, mX2, mY2) \n{\n  // https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\n  \n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope == 0.0) return aGuessT;\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n  \n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\nanim8.easing.cssEase      = anim8.easing.ease;\nanim8.easing.cssEaseIn    = anim8.easing.quad;\nanim8.easing.cssEaseOut   = anim8.easingType.out( anim8.easing.quad );\nanim8.easing.cssEaseInOut = anim8.easingType.inout( anim8.easing.quad );\nanim8.easing.cssLinear    = anim8.easing.linear;\n\nanim8.easing.default      = anim8.easing.ease;","anim8.Path = function()\n{\n};\n\nanim8.Path.prototype = \n{\n  reset: function(name, calculator, points)\n  {\n    this.name = name;\n    this.calculator = anim8.calculator( calculator );\n    this.points = points;\n    this.trues = this.hasTrue();\n  },\n  compute: function(out, delta) \n\t{\n    return out;\n  },\n  hasTrue: function() \n\t{\n    var ps = this.points;\n    \n    for (var i = 0; i < ps.length; i++) \n    {\n      if (ps[i] === true) \n      {\n        return true;\n      }\n    }\n    return false;\n  },\n  reference: function() \n\t{\n    return this.trues ? this.copy() : this;\n  },\n  last: function()\n  {\n    return this.points[ this.points.length - 1 ];\n  },\n  first: function()\n  {\n    return this.points[ 0 ];\n  },\n  point: function(i)\n  {\n    return this.points[ i ];\n  }\n};\n\n\n\n\n\nanim8.DeltaPath = function(name, calculator, points, deltas) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n};\n\nanim8.DeltaPath.prototype = new anim8.Path();\n\nanim8.DeltaPath.prototype.compute = function(out, delta) \n{\n  var ds = this.deltas;\n  var end = ds.length - 2;\n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.points[i];\n  var p1 = this.points[i + 1];\n  \n  return this.calculator.interpolate( out, p0, p1, pd );\n};\n  \nanim8.DeltaPath.prototype.copy = function() \n{\n    return new anim8.DeltaPath( this.name, anim8.copy(this.points), anim8.copy(this.deltas), this.calculator );\n};\n\n\n\n\n\nanim8.PointPath = function(name, calculator, point)\n{\n  this.reset( name, calculator, [point] );\n};\n\nanim8.PointPath.prototype = new anim8.Path();\n\nanim8.PointPath.prototype.compute = function(out, delta)\n{\n  return this.calculator.copy( out, this.points[0] );\n};\n  \nanim8.PointPath.prototype.copy = function() \n{\n    return new anim8.PointPath( this.name, this.calculator, this.points[0] );\n};\n\n\n\nanim8.KeyframePath = function(name, calculator, points, deltas, easings) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n  this.easings = easings;\n};\n\nanim8.KeyframePath.prototype = new anim8.Path();\n\nanim8.KeyframePath.prototype.compute = function(out, delta) \n{  \n  var ds = this.deltas;\n  var end = ds.length - 2;\n  \n  if ( delta < ds[0] ) {\n    return false;\n  }\n  \n  if ( delta > ds[ds.length - 1] ) {\n    return this.points[ds.length - 1];\n  }\n  \n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.points[i];\n  var p1 = this.points[i + 1];\n  var ea = this.easings[i];\n  \n  return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n};\n  \nanim8.KeyframePath.prototype.copy = function() \n{\n    return new anim8.KeyframePath( this.name, this.calculator, anim8.copy(this.points), anim8.copy(this.deltas), anim8.copy(this.easings) );\n};\n\n\n\n\n\nanim8.CubicPath = function(name, calculator, p0, p1, p2, p3)\n{\n  this.reset( name, calculator, [p0, p1, p2, p3] );\n};\n\nanim8.CubicPath.prototype = new anim8.Path();\n\nanim8.CubicPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var d3 = d1 * d2;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  var i3 = i1 * i2;\n  \n  out = calc.copy( out, this.points[0] );\n  out = calc.scale( out, i3 );\n  out = calc.adds( out, this.points[1], 3 * i2 * d1 );\n  out = calc.adds( out, this.points[2], 3 * i1 * d2 );\n  out = calc.adds( out, this.points[3], d3 );\n  \n  return out;\n};\n  \nanim8.CubicPath.prototype.copy = function() \n{\n    return new anim8.CubicPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n};\n\n\n\n\n\nanim8.QuadraticPath = function(name, calculator, p0, p1, p2)\n{\n  this.reset( name, calculator, [p0, p1, p2] );\n};\n\nanim8.QuadraticPath.prototype = new anim8.Path();\n\nanim8.QuadraticPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  \n  out = calc.copy( out, this.points[0] );\n  out = calc.scale( out, i2 );\n  out = calc.adds( out, this.points[1], 2 * i1 * d1 );\n  out = calc.adds( out, this.points[2], d2 );\n    \n  return out;\n};\n  \nanim8.QuadraticPath.prototype.copy = function() \n{\n    return new anim8.QuadraticPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n};\n\n\n\n\n\nanim8.CompiledPath = function(name, path, pointCount)\n{\n  var calc = path.calculator;\n  var points = [];\n  \n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n  \n  this.reset( name, calc, points );\n};\n\nanim8.CompiledPath.prototype = new anim8.Path();\n\nanim8.CompiledPath.prototype.compute = function(out, delta)\n{\n  var ps = this.points;\n  var a = Math.floor( delta * ps.length );\n  var index = Math.min( a, ps.length - 1 );\n  \n  return this.calculator.copy( out, ps[ index ] );\n};\n  \nanim8.CompiledPath.prototype.copy = function() \n{\n    return new anim8.CompiledPath( this.name, this, this.points.length );\n};\n\n\n\n\n\nanim8.Tween = function(name, calculator, start, end)\n{\n  this.reset( name, calculator, [start, end] );\n};\n\nanim8.Tween.prototype = new anim8.Path();\n\nanim8.Tween.prototype.compute = function(out, delta)\n{\n  return this.calculator.interpolate( out, this.points[0], this.points[1], delta );\n};\n  \nanim8.Tween.prototype.copy = function() \n{\n    return new anim8.Tween( this.name, this.calculator, this.points[0], this.points[1] );\n};\n\n\n\n\n\nanim8.JumpPath = function(name, calculator, points)\n{\n  this.reset( name, calculator, points );\n};\n\nanim8.JumpPath.prototype = new anim8.Path();\n\nanim8.JumpPath.prototype.compute = function(out, delta)\n{\n  var ps = this.points;\n  var a = Math.floor( delta * ps.length );\n  var index = Math.min( a, ps.length - 1 );\n  \n  return this.calculator.copy( out, ps[ index ] );\n};\n  \nanim8.JumpPath.prototype.copy = function() \n{\n    return new anim8.JumpPath( this.name, this.calculator, anim8.copy(this.points) );\n};","/**\n * Returns a spring if the provided argument is a spring, the name of a spring, or\n * an object with a spring type to be created. If none of these conditions are true\n * then false is returned.\n *\n * @param {anim8.Spring|string|object} spring\n */\nanim8.spring = function(spring)\n{\n  if ( spring instanceof anim8.Spring )\n  {\n    return spring;\n  }\n  if ( anim8.isString( spring ) && spring in anim8.spring )\n  {\n    return anim8.spring[ spring ];\n  }\n  if ( anim8.isObject( spring ) && spring.type in anim8.spring )\n  {\n    return anim8.spring[ spring.type ]( spring );\n  }\n  \n  return false;\n};\n\n\n/**\n * A spring has a resting point, a current position, and the velocity currently enacting on the position\n * based on the implementing classes logic.\n */\nanim8.Spring = function()\n{\n};\n\nanim8.Spring.prototype = \n{\n  /**\n   * Resets the spring's properties.\n   * \n   * @param {string} attribute\n   * @param {string|object} calculator\n   * @param {any} rest\n   * @param {any} position\n   */\n  reset: function(attribute, calculator, rest, position)\n  {\n    var a = anim8.attribute( attribute );\n    \n    this.attribute    = attribute;\n    this.calculator   = anim8.calculator( calculator );\n    this.rest         = this.calculator.parse( rest, a.defaultValue );\n    this.position     = this.calculator.parse( position, a.defaultValue );\n    this.velocity     = this.calculator.create();\n    this.time         = 0;\n  },\n  \n  /**\n   * Updates the spring given the current time in milliseconds and the frame which\n   * contains (or will contain) the attribute to which this spring is animating.\n   *\n   * @param {number} now\n   * @param {object} frame\n   */\n  update: function(now, frame)\n  {\n    if (this.time === 0)\n    {\n      this.time = now;\n    }\n    \n    // the number of elapsed seconds (maxed to avoid crazy behavior with low FPS)\n    var dt = Math.min( (now - this.time) * 0.001, anim8.Spring.MAX_DT );\n    \n    // keep track of the starting position to determine whether the position has updated.\n    var starting = this.calculator.copy( {}, this.position );\n    \n    // call the update method which should update the position\n    this.onUpdate( dt );\n    \n    this.time = now;\n    \n    // track whether the attribute has updated so the animator knows if it needs to apply the attribute to the subject.\n    var updated = !this.calculator.isEqual( starting, this.position, anim8.Spring.EPSILON );\n    \n    if ( updated )\n    {\n      frame[ this.attribute ] = this.position;\n    }\n    \n    return updated;\n  },\n  \n  /**\n   * Method that's invoked on each update.\n   *\n   * @param {number} dt\n   */\n  onUpdate: function(dt)\n  {\n    \n  }\n};\n\n/**\n * The maximum elapsed time that should be used for the spring simulation. If you allow the elapsed time\n * to get to high the spring will overreact and produce undesirable results.\n */\nanim8.Spring.MAX_DT = 0.1;\n\n/**\n * The value used to determine whether two positions in a spring are different.\n */\nanim8.Spring.EPSILON = 0.0001;\n\n\n\n\n/**\n * A box spring is a simple string\n */\nanim8.BoxSpring = function(attribute, calculator, position, rest, constant)\n{\n  var a = anim8.attribute( attribute );\n    \n  this.reset( attribute, calculator, rest, position );\n  \n  this.acceleration   = this.calculator.create();\n  this.constant       = this.calculator.parse( constant, a.defaultValue );\n};\n\nanim8.BoxSpring.prototype = new anim8.Spring();\n\nanim8.BoxSpring.prototype.onUpdate = function(dt)\n{\n  var calc = this.calculator;\n  \n  this.acceleration = calc.copy( this.acceleration, this.rest );\n  this.acceleration = calc.sub( this.acceleration, this.position );\n  this.acceleration = calc.mul( this.acceleration, this.constant );\n  this.position     = calc.adds( this.position, this.acceleration, dt );\n//  this.velocity     = calc.adds( this.velocity, this.acceleration, dt );\n};\n\nanim8.spring.box = function(spring)\n{ \n  return new anim8.BoxSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.constant\n  );\n};\n\n\n\n\nanim8.LinearSpring = function(attribute, calculator, position, rest, damping, stiffness)\n{\n  var a = anim8.attribute( attribute );\n  \n  this.reset( attribute, calculator, rest, position );\n  \n  this.damping      = this.calculator.parse( damping, a.defaultValue );\n  this.stiffness    = this.calculator.parse( stiffness, a.defaultValue );\n  this.temp0        = this.calculator.create();\n  this.temp1        = this.calculator.create();\n};\n\nanim8.LinearSpring.prototype = new anim8.Spring();\n\nanim8.LinearSpring.prototype.onUpdate = function(dt)\n{\n  // velocity += ((stiffness * (position - rest)) - (damping * velocity)) * elapsed.seconds;\n\t// position += velocity * elapsed.seconds;\n    \n  var calc = this.calculator;\n\n  this.temp1 = calc.copy( this.temp1, this.damping );\n  this.temp1 = calc.mul( this.temp1, this.velocity );\n  \n  this.temp0 = calc.copy( this.temp0, this.position );\n  this.temp0 = calc.sub( this.temp0, this.rest );\n  this.temp0 = calc.mul( this.temp0, this.stiffness );\n  this.temp0 = calc.sub( this.temp0, this.temp1 );\n  \n  this.velocity = calc.adds( this.velocity, this.temp0, dt );\n  this.position = calc.adds( this.position, this.velocity, dt );\n};\n\nanim8.spring.linear = function(spring)\n{ \n  return new anim8.LinearSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.damping,\n    spring.stiffness\n  );\n};\n\n\n\n\n\n\n\nanim8.DistanceSpring = function(attribute, calculator, position, rest, distance, damping, stiffness)\n{\n  this.reset( attribute, calculator, rest, position );\n  \n  this.distance   = distance;\n  this.damping    = damping;\n  this.stiffness  = stiffness;\n  this.temp       = this.calculator.create();\n};\n\nanim8.DistanceSpring.prototype = new anim8.Spring();\n\nanim8.DistanceSpring.prototype.onUpdate = function(dt)\n{\n  // d = DISTANCE( position, rest )\n  // velocity += ((position - rest) / d * stiffness * |distance - d| - (damping * velocity)) * elapsed.seconds;\n  // position += velocity * elapsed.seconds;\n\n  var calc = this.calculator;\n  var d = calc.distance( this.position, this.rest );\n  \n  this.temp = calc.copy( this.temp, this.position )\n  this.temp = calc.sub( this.temp, this.rest );\n  \n  if ( d !== 0 )\n  {\n  \tthis.temp = calc.scale( this.temp, 1.0 / d );\n  \tthis.temp = calc.scale( this.temp, (d - this.distance) * this.stiffness );\n  }\n\n  this.temp = calc.adds( this.temp, this.velocity, -this.damping );\n\n  this.velocity = calc.adds( this.velocity, this.temp, dt );\n  this.position = calc.adds( this.position, this.velocity, dt );\n};\n\nanim8.spring.distance = function(spring)\n{ \n  return new anim8.DistanceSpring(\n    spring.attribute,\n    anim8.calculator( anim8.attribute( spring.attribute ).calculator ),\n    spring.position,\n    spring.rest,\n    spring.distance,\n    spring.damping,\n    spring.stiffness\n  );\n};","\nanim8.EventState = \n{\n  CREATED: 0,\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  PAUSED: 8,\n  FINISHED: 16\n};\n\nanim8.Event = function(attribute, path, duration, easing, delay, sleep, repeat) \n{\n  this.attribute \t= attribute;\n  this.path \t\t\t= path;\n  this.easing \t\t= anim8.easing( easing );\n  this.delay \t\t\t= anim8.coalesce( delay, anim8.defaults.delay );\n  this.duration \t= anim8.coalesce( duration, anim8.defaults.duration );\n  this.sleep \t\t\t= anim8.coalesce( sleep, anim8.defaults.sleep );\n  this.repeat \t\t= anim8.coalesce( repeat, anim8.defaults.repeat );\n};\n\nanim8.Event.prototype = \n{\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  newInstance: function()\n  {\n    return new anim8.EventInstance( this );\n  }\n};\n\nanim8.EventInstance = function(event)\n{\n\tthis.event \t\t\t= event;\n\tthis.attribute \t= event.attribute;\n\tthis.path \t\t\t= event.path;\n\tthis.duration \t= event.duration;\n\tthis.easing \t\t= event.easing;\n\tthis.delay \t\t\t= event.delay;\n\tthis.sleep \t\t\t= event.sleep;\n\tthis.repeat \t\t= event.repeat;\n  this.state \t\t\t= anim8.EventState.CREATED;\n  this.time \t\t\t= 0;\n  this.pauseTime \t= 0;\n  this.pauseState = 0;\n\tthis.elapsed\t\t= 0;\n\tthis.next\t\t\t\t= null;\n};\n\nanim8.EventInstance.prototype = \n{\n  update: function(now, frame) \n\t{\n    var updated = false;\n    \n    this.startup( now );\n    \n    var elapsed = this.catchup( now, frame );\n    \n    if (this.isAnimating()) \n\t\t{\t\t\t\n      var delta = elapsed / this.duration;\n      \n      if (delta >= 1 || this.duration === 0)\n\t\t\t{\n        if (--this.repeat === 0) \n\t\t\t\t{\n          this.finish(frame);\n\t\t\t\t\t\n          return true;\n        } \n\t\t\t\telse \n\t\t\t\t{\n          if (this.sleep)\n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.SLEEPING ); \n            delta = 1;\n            \n            this.trigger('sleeping', this);\n          } \n\t\t\t\t\telse \n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.ANIMATING );\n            delta -= 1;\n          }\n        }\n      }\n      \n      this.applyValue( frame, frame[this.attribute], delta );\n      updated = true;\n    }\n    \n    return updated;\n  },\n  progress: function(elapsed, time, newState) \n\t{\n    this.time += time;\n\t\tthis.elapsed += time;\n    this.state = newState;\n\t\t\n    return elapsed - time;\n  },\n  finish: function(frame) \n\t{\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = anim8.EventState.FINISHED;\n    \n    this.trigger('finish', this);\n  },\n  getPoint: function(delta)\n  {\n    return this.path.compute( this.path.calculator.create(), this.easing( delta ) );\n  },\n  getFuture: function(fdelta)\n  {\n    return this.getPoint( Math.min( 1.0, this.getDelta() + fdelta ) );\n  },\n  getDelta: function()\n  {\n    return this.isAnimating() ? Math.min( 1.0, (anim8.now() - this.time) / this.duration ) : 0.0;\n  },\n  getStart: function()\n  {\n    return this.getPoint( 0 );\n  },\n  getEnd: function() \n\t{\n    return this.getPoint( 1 );\n  },\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n        \n    if ( value !== false )\n    {\n      frame[this.attribute] = value;\n    }\n  },\n\tstartup: function(now)\n\t{\n    if (this.state === anim8.EventState.CREATED) \n\t\t{\n      this.time = now;\n\t\t\t\n      if (this.delay) \n\t\t\t{\n        this.state = anim8.EventState.DELAYED;\n        \n        this.trigger('delaying', this);\n      } \n\t\t\telse \n\t\t\t{\n        this.state = anim8.EventState.ANIMATING;\n      }\n    }\n\t},\n  catchup: function(now, frame) \n\t{\n\t\tvar elapsed = now - this.time;\n\t\t\n    if (this.isDelayed()) \n\t\t{\n      if (elapsed > this.delay) \n\t\t\t{\n        this.trigger('delayed', this);\n        \n        elapsed = this.progress( elapsed, this.delay, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n    if (this.isSleeping()) \n\t\t{\n      if (elapsed > this.sleep)\n\t\t\t{\n        this.trigger('slept', this);\n        \n        elapsed = this.progress( elapsed, this.sleep, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n    if (this.isAnimating())\n    {\n      if (this.sleep)\n      {\n        \n      }\n      else\n      {\n        \n      }\n    }\n\t\t/*\n    TODO\n\t\tif (this.isAnimating())\n\t\t{\n\t\t\tvar total = (this.sleep + this.duration);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (this.sleep)\n\t\t\t{\n\t\t\t\tvar iterations = (this.sleep + this.duration);\n\t\t\t}\n\t\t}\n\t\t*/\n\t\t\n\t\treturn elapsed;\n  },\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  timeRemaining: function() \n\t{    \n\t\treturn this.totalTime() - this.elapsed;\n  },\n  timeRemainingInChain: function()\n  {\n    return this.timeRemaining() + (this.next ? this.next.timeRemainingInChain() : 0);\n  },\n  queue: function(e)\n  {\n    if ( this.next )\n    {\n      this.next.queue( e );\n    }\n    else\n    {\n      this.next = e;\n    }\n  },\n  pause: function() \n\t{\n    if (this.state !== anim8.EventState.PAUSED) \n\t\t{\n      this.pauseTime = anim8.now();\n      this.pauseState = this.state;\n      this.state = anim8.EventState.PAUSED; \n    }\n  },\n  resume: function() \n\t{\n    if (this.state === anim8.EventState.PAUSED) \n\t\t{\n      this.time += anim8.now() - this.pauseTime;\n      this.state = this.pauseState; \n    }\n  },\n\thasStarted: function()\n\t{\n\t\treturn (this.state !== anim8.EventState.CREATED && this.state !== anim8.EventState.DELAYED);\n\t},\n  isAnimating: function() \n\t{\n    return (this.state === anim8.EventState.ANIMATING);\n  },\n  isFinished: function() \n\t{\n    return (this.state === anim8.EventState.FINISHED);\n  },\n  isDelayed: function() \n\t{\n    return (this.state === anim8.EventState.DELAYED);\n  },\n  isPaused: function() \n\t{\n    return (this.state === anim8.EventState.PAUSED);\n  },\n  isSleeping: function() \n\t{\n    return (this.state === anim8.EventState.SLEEPING);\n  },\n  hasStates: function(states) \n\t{\n    return (this.state & states) !== 0;\n  },\n  stateText: function() \n\t{\n    switch(this.state) \n    {\n      case anim8.EventState.CREATED:            return \"created\";\n      case anim8.EventState.DELAYED:            return \"delayed\";\n      case anim8.EventState.ANIMATING:          return \"animating\";\n      case anim8.EventState.SLEEPING:           return \"sleeping\";\n      case anim8.EventState.FINISHED:           return \"finished\";\n    }\n  },\n  hasTrue: function()\n  {\n    return this.path.trues;\n  }\n};\n\n/**\n * Adds the following event methods to EventInstances: on, once, off, trigger.\n */\nanim8.eventize( anim8.EventInstance.prototype );","\n/**\n * Instantiates a new Animation given it's name, the input & options passed, and the events that\n * were generated from the input & options. If the name is false this is an anonymous animation.\n * Input & Options are used by parsers to generate events, options allow for an animations\n * default event properties to be overriden.\n *\n * @param {string} name\n * @param {object} input\n * @param [object] options\n * @param {array:anim8.Event} events\n */\nanim8.Animation = function(name, input, options, events)\n{\n\tthis.name = name;\n\tthis.input = input;\n\tthis.options = options;\n\tthis.events = events;\n};\n\nanim8.Animation.prototype = \n{\n  /**\n   * Returns true if this animation was a saved animation, otherwise it's an anonymous one\n   * and false is returned.\n   */\n  isSaved: function()\n  {\n    return (this.name !== false);\n  },\n  /**\n   * Merges options provided during play to override the defaults in the events.\n   *\n   * @param {object} options\n   * @param {array:anim8.EventInstance} events\n   */\n  mergeOptions: function(options, events)\n  { \n    // TODO move to parsers\n    \n    var durations = this.input.durations || {};\n    var easings   = this.input.easings || {};\n    var delays    = this.input.delays || {};\n    var sleeps    = this.input.sleeps || {};\n    var repeats   = this.input.repeats || {};\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      e.easing   = anim8.easing( anim8.coalesce( easings[attr], options.easing, this.options.easing, e.easing ) );\n      e.duration = anim8.coalesce( durations[attr], options.duration, this.options.duration, e.duration );\n      e.delay    = anim8.coalesce( delays[attr], options.delay, this.options.delay, e.delay );\n      e.sleep    = anim8.coalesce( sleeps[attr], options.sleep, this.options.sleep, e.sleep );\n      e.repeat   = anim8.coalesce( repeats[attr], options.repeat, this.options.repeat, e.repeat );\n    }\n  },\n  /**\n   * Generates an array of event instances from the events in this animation.\n   */\n  newEvents: function()\n  {\n    var e = [];\n    \n    for (var i = 0; i < this.events.length; i++)\n    {\n      e.push( this.events[i].newInstance() );\n    }\n    \n    return e;\n  }\n};\n\n/**\n * Saves an animation under the given name. It can be played, queued, and transitioned into\n * at a later time providing the name and optionally options to override with.\n *\n * @param {string} name\n * @param {object} animation\n * @param [object] options\n */\nanim8.save = function(name, animation, options)\n{\n  var animation = anim8.animation( animation, options );\n  \n  animation.name = name;\n  \n\tanim8.animation[name] = animation;\n};","\n/**\n * Instantiates a new Animator given a subject to animate.\n *\n * @param {any} e\n */\nanim8.Animator = function(e) \n{\n\tthis.reset( e );\n};\n\nanim8.Animator.prototype = \n{\n  /**\n   * Resets the animator given a subject to animate.\n   *\n   * @param {any} e\n   */\n\treset: function(e)\n\t{\n\t  this.e = e;\n\t  this.events = {};\n    this.springs = {};\n\t  this.attributes = {};\n\t  this.frame = {};\n    this.updated = {};\n\t  this.finished = false;\n\t\tthis.factory = null;\n    this.active = false;\n\t},\n  \n  /**\n   * Restores any temporary state that may exist on this Animator that\n   * is a result from animations.\n   */\n  restore: function()\n  {\n    \n  },\n  \n  /**\n   * A method thats invoked along with all other animators before updates are called.\n   * This is used to make any necessary preparations before the animator is updated.\n   */\n  preupdate: function()\n  {\n\t\tthis.trigger('preupdate');\n  },\n  \n  /**\n   * Updates the animator with the current time. All events and springs in this\n   * animator are updated.\n   *\n   * @param {number} now\n   */\n  update: function(now) \n\t{  \n    this.wasFinished = this.finished;\n    \n    this.finished = true;\n\t\t\n    for (var attr in this.events)\n    {\n      var e = this.events[ attr ];\n      \n      this.updated[ attr ] = e.update( now, this.frame );\n      \n      this.finished = this.finished && e.isFinished();\n    }\n    \n    for (var attr in this.springs)\n    {\n      var s = this.springs[ attr ];\n      \n      this.updated[ attr ] = s.update( now, this.frame );\n      \n      this.finished = false;\n    }\n\t\n\t\tthis.trigger('update');\n  },\n  \n  /**\n   * Places the spring in this animator replacing any spring that exists for the same\n   * attribute. The next time the animator is updated the spring will be started.\n   *\n   * @param {anim8.Spring} s\n   */\n  placeSpring: function(s)\n  {\n    var attr = s.attribute;\n    \n    this.springs[ attr ] = s;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n  },\n  \n  /**\n   * Places the event in this animator replacing any event that exists for the same\n   * attribute. The next time the animator is updated the event will be started.\n   *\n   * @param {anim8.EventInstance} e\n   */\n  placeEvent: function(e)\n  {\n    var attr = e.attribute;\n    \n    this.events[ attr ] = e;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n  },\n  \n  /**\n   * Applies all updated attributes to the subject. This method is invoked with all of the other\n   * animators at the end of the animation cycle.\n   */\n  apply: function()\n\t{\n    for (var attr in this.frame)\n    {\n      if ( this.updated[ attr ] )\n      {\n        this.e[ attr ] = this.frame[ attr ]; \n\t\t\t\tthis.updated[ attr ] = false;\n      }\n    }\n\t\n\t\tthis.trigger('apply');\n\t\n    this.trimEvents();\n  },\n  \n  /**\n   * Removes any finished events and places queued events. If the animator previously wasn't finished\n   * but now it is the 'finished' event will be triggered.\n   */\n  trimEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      var e = this.events[attr];\n      \n      if ( e.isFinished() )\n      {\n        if ( e.next )\n        {                    \n          this.placeEvent( e.next );\n          this.finished = false;\n        }\n        else\n        {\n          delete this.events[attr];\n        }\n      }\n    }\n    \n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n  },\n  \n  /**\n   * Returns the current value for the given attribute (or undefined if the attribute is not or \n   * has not animated).\n   *\n   * @param {string} attr\n   */\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n  \n  /**\n   * A method that is invoked when an animator is finished and is being removed from the list\n   * of currently animating Animators.\n   */\n\tcleanup: function()\n\t{ \n    this.trigger('cleanup', this);\n\t},\n  \n  /**\n   * Creates event instances for the given animation and options. The animation can be an animation\n   * object or an animation name. If a name is provided the options are merged in.\n   *\n   * @param {anim8.Animation|string|object} animation\n   * @param [object] options\n   */\n  createEvents: function(animation, options)\n  {\n    options = options || {};\n    \n    var animation = anim8.animation( animation, options );\n  \n    if (animation === false)\n    {\n      return false;\n    }\n    \n    var events = animation.newEvents();\n    \n    if ( animation.isSaved() )\n    {\n      animation.mergeOptions( options, events );\n    }\n    \n    this.onAnimation( animation, options, events );\n    \n    return events;\n  },\n  \n  /**\n   * A method invoked when an animation is about to be played in the Animator.\n   * \n   * @param {anim8.Animation} animation\n   * @param {object} options\n   * @param {array:anim8.EventInstance} events\n   */\n  onAnimation: function(animation, options, events)\n  {\n    \n  },\n  \n  /**\n   * Adds a spring to this animator replacing any existing spring for the same attribute.\n   * A spring object can be given, an instance of anim8.Spring, or a name of a saved Spring.\n   * \n   * @param {anim8.Spring|string|object} spring\n   */\n  spring: function(spring)\n  {\n    var spring = anim8.spring( spring );\n    \n    if ( spring === false )\n    {\n      return false;\n    }\n\n    this.placeSpring( spring );\n    \n    anim8.add( this );\n    \n    return spring;\n  },\n  \n  /**\n   * Removes springs for the specified attributes. If no attributes are specified then all springs\n   * are removed. Attributes can be specified as an array of attribute names or a string with attribute\n   * names separated by a space.\n   *\n   * @param {string|Array} attributes\n   */\n  unspring: function(attributes)\n  {\n    return this.springsFor( attributes, function(s)\n    {\n      delete this.springs[ s.attribute ];\n    });\n  },\n  \n  /**\n   * Adds an animation to this Animator optionally finishing events for attributes not specified in the\n   * given attribute. Events will be replaced immediately.\n   *\n   * @param {string|object|anim8.Animation} animation\n   * @param [object] options\n   * @param [boolean] all \n   */\n\tplay: function(animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    var attrs = {};\n    \n    for (var i = 0; i < events.length; i++)\n    { \n      this.placeEvent( events[i] );\n      \n      attrs[ events[i].attribute ] = true;\n    }\n    \n    if ( all )\n    {\n      for (var attr in this.events)\n      {\n        if ( !(attr in attrs) )\n        {\n          this.events[ attr ].finish( this.frame );\n        }\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n  \n  /**\n   * Queues an animation on this Animator. The events generated for the given animation\n   * will all start at the same time - at the end of the events currently on the Animator.\n   *\n   * @param {string|object|anim8.Animation} animation\n   * @param [object] options\n   */\n\tqueue: function(animation, options)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n        \n    var maxRemaining = 0.0;\n    \n    for (var attr in this.events)\n    {\n      maxRemaining = Math.max( maxRemaining, this.events[attr].timeRemainingInChain() );\n    }\n        \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      if ( attr in this.events )\n      {    \n        e.delay += (maxRemaining - this.events[attr].timeRemainingInChain());\n        \n        this.events[attr].queue( e );\n      }\n      else\n      {\n        e.delay += maxRemaining;\n        \n        this.placeEvent( e );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n  \n  /**\n   * Transitions from the currently playing events into a new animation. The transition is made\n   * by constructing a quadratic curve from the current value to a point further on the current\n   * path to the starting point of the new animation.\n   *\n   * @param {number} transitionTime \n   * @param {number} transitionDelta\n   * @param {string|function|array} transitionEasing\n   * @param {string|object|anim8.Animation} animation\n   * @param [object] options\n   * @param [boolean] all\n   */\n\ttransition: function(transitionTime, transitionDelta, transitionEasing, animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e1 = events[i];\n      var attr = e1.attribute;\n      \n      if ( attr in this.events )\n      {\n        var path = e1.path;\n        var calc = path.calculator;\n        var e2 = this.events[attr];\n        \n        var p0 = calc.copy( calc.create(), this.frame[attr] );\n        var p1 = e2.getFuture( transitionDelta );\n        var p2 = e1.getPoint( 0 );\n        \n        var transitionPath = new anim8.QuadraticPath( attr, calc, p0, p1, p2 );\n        var transitionEvent = new anim8.Event( attr, transitionPath, transitionTime, transitionEasing, 0, 0, 1 ).newInstance();\n        \n        transitionEvent.next = e1;\n        \n        this.placeEvent( transitionEvent );\n      }\n      else\n      {\n        e1.delay += transitionTime;\n     \n        this.placeEvent( e1 );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\t\n\t/**\n\t * Applies the initial state of all unstarted current events for the specified attributes immediately. \n\t * Attribute names can be given as an array or a space separated string. If no attributes are given all \n\t * attributes are assumed.\n\t *\n   * @param {string|array} attributes\n\t */\n\tapplyInitialState: function(attributes)\n\t{\n\t\tvar eventCount = this.eventsFor( attributes, function(event, attr) \n\t\t{\n\t\t\tif ( !event.hasStarted() )\n\t\t\t{\n\t\t\t\tevent.applyValue( this.frame, this.frame[ attr ], 0.0 );\n\t\t\t\t\n\t\t\t\tthis.updated[ attr ] = true;\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tthis.apply();\n\t\t\n\t\treturn eventCount;\n\t},\n  \n  /**\n   * Helper method that calls a callback for each object in the given map that exists\n   * in the attribute string/array.\n   *\n   * @param {string|array} attributes\n   * @param {function} callback\n   * @param {object} objects\n   */\n  objectsFor: function(attributes, callback, objects)\n  {\n\t\tif ( anim8.isString( attributes ) )\n\t\t{\n\t\t\tattributes = attributes.split( ' ' );\n\t\t}\n    \n    var objectCount = 0;\n    \n\t\tif ( anim8.isArray( attributes ) )\n\t\t{\n      for (var i = 0; i < attributes.length; i++)\n      {\n        var attr = attributes[i];\n        \n        if ( attr in objects )\n        {\n          callback.call( this, objects[attr], attr );\n        \n          objectCount++;\n        }\n      }\n\t\t}\n    else\n    {\n      for (var attr in objects)\n      {\n        callback.call( this, objects[attr], attr );\n        \n        objectCount++;\n      }\n    }\n    \n\t\treturn objectCount;\n  },\n  \n  /**\n   * Invokes the callback for each event for the given attributes.\n   * \n   * @param {string|array} attributes\n   * @param {function} callback\n   */\n\teventsFor: function(attributes, callback)\n\t{\n\t\treturn this.objectsFor( attributes, callback, this.events );\n\t},\n  \n  /**\n   * Invokes the callback for each spring for the given attributes.\n   *\n   * @param {string|array} attributes\n   * @param {function} callback\n   */\n\tspringsFor: function(attributes, callback)\n\t{\n\t\treturn this.objectsFor( attributes, callback, this.springs );\n\t},\n\t\n  /**\n   * Stops all events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tstop: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event, attr) \n\t\t{\n\t\t\tdelete this.events[ attr ];\n\t\t});\n\t},\n  \n  /**\n   * Ends all events for the specified attributes. If events are queued the last value of the last event\n   * is applied to this Animator before being completely removed. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tend: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event) \n\t\t{\n\t\t\twhile (event.next)\n\t\t\t{\n\t\t\t\tevent = event.next;\n\t\t\t}\n\t\t\t\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n  \n  /**\n   * Finishes all current events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tfinish: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n  \n  /**\n   * Pauses all current events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tpause: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.pause();\n\t\t});\n\t},\n  \n  /**\n   * Resumes all current events for the specified attributes. Attribute names can be given as an array\n   * or a space separated string. If no attributes are given all attributes are assumed.\n   *\n   * @param {string|array} attributes\n   */\n\tresume: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.resume();\n\t\t});\n\t},\n  \n  /**\n   * Sets the given attributes to this Animator immediately.\n   *\n   * @param {object} attributes\n   */\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n\t\t\tthis.updated[ attr ] = true;\n    }\n    \n    this.apply();\n  },\n  \n  /**\n   * Gets the current attribute values for all attributes specified. The argument must be an object\n   * where the key is the name of an attribute.\n   *\n   * @param {object} attributes\n   */\n  get: function(attributes)\n  {\n    var out = {};\n    \n    for (var attr in attributes)\n    {\n      out[ attr ] = this.frame[ attr ];\n    }\n    \n    return out;\n  },\n  \n  /**\n   * Returns true if there are any events on this Animator.\n   */\n  hasEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      return true;\n    }\n    \n    return false;\n  },\n  \n  /**\n   * Returns true if there are any springs on this Animator.\n   */\n  hasSprings: function()\n  {\n    for (var attr in this.springs)\n    {\n      return true;\n    }\n    \n    return false;\n  },\n  \n  /**\n   * Returns true if there are any springs on this Animator or animating events.\n   */\n  isAnimating: function()\n  {\n    if ( this.hasSprings() )\n    {\n      return true;\n    }\n    \n    for (var attr in this.events)\n    {\n      if ( this.events[attr].isAnimating() )\n      {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n};\n\n/**\n * Adds the following event methods to Animators: on, once, off, trigger.\n */\nanim8.eventize( anim8.Animator.prototype );","\n/**\n * Instantiates a new color given red, green, blue, and white components.\n * If a component is missed it's default value is either 255 (white) or\n * 1.0 (opaque).\n */\nanim8.color = function(r, g, b, a) \n{\n  return {\n    r: anim8.coalesce( r, 255 ),\n    g: anim8.coalesce( g, 255 ),\n    b: anim8.coalesce( b, 255 ),\n    a: anim8.coalesce( a, 1.0 )\n  };\n};\n\n/**\n * The array of parsing methods to execute sequentally until a color is returned.\n */\nanim8.color.parsers = \n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, 'parseInt', 255),\n          g: this.parseComponent(input.g, 'parseInt', 255),\n          b: this.parseComponent(input.b, 'parseInt', 255),\n          a: this.parseComponent(input.a, 'parseFloat', 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = window[parseFunction](t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  }, \n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n/**\n * Parses a color from a string.\n *\n * @param {string} input\n */\nanim8.color.parse = function(input)\n{\n  var cp = m8.color.parsers;\n  \n  for (var i = 0; i < this.parsers.length; i++)\n  {\n    var parsed = this.parsers[i].parse(input);\n    \n    if (parsed !== false) \n    {\n      return parsed;\n    }\n  }\n  \n  return this.invalidColor;\n};\n\n/**\n * Formats a color to a string.\n * \n * @param {object} color\n */\nanim8.color.format = function(color)\n{\n  var ca = anim8.coalesce( color.a, 1.0 );\n  var cr = anim8.coalesce( color.r, 255 );\n  var cg = anim8.coalesce( color.g, 255 );\n  var cb = anim8.coalesce( color.b, 255 );\n  \n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n    \n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    \n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n/**\n * The color to return when input is invalid.\n */\nanim8.color.invalidColor = anim8.color.defaultValue =\n{\n  r: 255,\n  g: 255,\n  b: 255,\n  a: 1.0\n};","/**\n * Calculators perform math and basic operations for a specific data structure. Calculators have the following methods.\n *\n *  parse(x, default)\n *  copy(out, copy)\n * -clone(out)\n *  create()\n *  zero(out)\n * -scale(out, scale)\n * -add(out, amount)\n *  adds(out, amount, amountScale)\n * -sub(out, amount)\n *  mul(out, scale)\n * -interpolate(out, start, end, delta)\n *  distanceSq(a, b)\n *  isValid(a)\n *  isNaN(a)\n *  isZero(a, epsilon)\n *  isEqual(a, b, epsilon)\n */\n\n/**\n * Creates a calculator and fills in any missing methods where possible.\n * \n * @param {string} name\n * @param {object} methods\n */\nanim8.calculator.create = function(name, methods)\n{\n  var defaultMethods = \n\t{\n\t  clone: function(out) \n\t\t{\n\t    return this.copy( this.create(), out );\n\t  },\n\t  scale: function(out, scale) \n\t\t{\n\t    return this.adds( out, out, scale - 1 );\n\t  },\n\t  add: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, 1 );\n\t  },\n\t  sub: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, -1 );\n\t  },\n\t  interpolate: function(out, start, end, delta) \n\t\t{\n\t    out = this.zero( out );\n\t    out = this.adds( out, start, 1 - delta );\n\t    out = this.adds( out, end, delta );\n\t    return out;\n\t  },\n\t\tdistance: function(a, b)\n\t\t{\n\t\t\treturn Math.sqrt( this.distanceSq( a, b ) );\n\t\t}\n\t};\n  \n  for (var method in defaultMethods)\n  {\n    if ( !(method in methods) )\n    {\n      methods[ method ] = defaultMethods[ method ];\n    }\n  }\n  \n\tanim8.calculator[name] = methods; \n};\n\n/**\n * A calculator for number primitives.\n */\nanim8.calculator.create('number', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn x;\n\t\t}\n\t\tif ( anim8.isString( x ) )\n\t\t{\n\t\t\tx = parseFloat( x );\n\t\t\t\n\t\t\tif (!isNaN(x))\n\t\t\t{\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn defaultValue;\n\t},\n  copy: function(out, copy) \n\t{\t\n    return copy;\n  },\n  create: function() \n\t{\n    return 0.0;\n  },\n  zero: function(out) \n\t{\n    return 0.0;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale) \n\t{\n    return out *= scale;\n  },\n  distanceSq: function(a, b) \n\t{\n    var ab = a - b;\n    return ab * ab;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'number';\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a - b) < epsilon;\n  }\n});\n\n/*\n * A calculator for objects with an x and y component (number)\n */\nanim8.calculator.create('2d', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y )\n\t\t\t};\n\t\t}\n    if ( anim8.isString( x ) )\n    {\n      var aliases = {\n        'left':   0,\n        'right':  100,\n        'middle': 50,\n        'center': 50,\n        'top':    0,\n        'bottom': 100\n      };\n      \n      if ( x.indexOf(' ') === -1 )\n      {\n        var _x = parseFloat( x );\n        \n        if ( !isNaN(_x) || x in aliases )\n        {\n          return {\n            x: x in aliases ? aliases[x] : _x,\n            y: x in aliases ? aliases[x] : _x\n          };\n        }\n      }\n      else\n      {\n        var pair = x.split(' ');\n        var _x = parseFloat( pair[0] );\n        var _y = parseFloat( pair[1] );\n        \n        if ((!isNaN(_x) || pair[0] in aliases) && (!isNaN(_y) || pair[1] in aliases))\n        {\n          return {\n            x: pair[0] in aliases ? aliases[pair[0]] : _x,\n            y: pair[1] in aliases ? aliases[pair[1]] : _y\n          };\n        }\n      }\n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;    \n    return dx * dx + dy * dy;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with an x, y, and z component (number)\n */\nanim8.calculator.create('3d',\n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x,\n\t\t\t\tz: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\t\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z )\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out) \n\t{ \n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t  \t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t\t Math.abs(a.z - b.z) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with an x, y, z, and angle components.\n */\nanim8.calculator.create('quaternion', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: 1,\n\t\t\t\tangle: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z ),\n\t\t\t\tangle: anim8.coalesce( x.angle, defaultValue.angle )\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n\t\tout.angle = copy.angle;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n\t\tout.angle = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n\t\tout.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n\t\tout.angle *= scale.angle;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n\t\tvar da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t  \t\t Math.abs(a.y) < epsilon && \n\t\t       Math.abs(a.z) < epsilon && \n\t\t       Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t   Math.abs(a.z - b.z) < epsilon && \n\t\t       Math.abs(a.angle - b.angle) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n */\nanim8.calculator.create('rgb', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: x,\n\t\t\t\tg: x,\n\t\t\t\tb: x\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( x );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon;\n  }\n});\n\n/**\n * A calculator for objects with r, g, & b components \n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n */\nanim8.calculator.create('rgba', \n{\n\tparse: function(a, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( a ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: a,\n\t\t\t\tg: a,\n\t\t\t\tb: a,\n\t\t\t\ta: 1.0\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( a );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    var da = a.a - b.a;    \n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon && \n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon && \n           Math.abs(a.a - b.a) < epsilon;\n  }\n});\n\n/**\n * Sets the default calculator to the numeric calculator.\n */\nanim8.calculator.default = anim8.calculator.number;","anim8.parser.deltas = function( animation, options, events ) \n{\n\tvar deltas = animation.deltas;\n\tvar values = animation.values;\n\t\n\tif ( anim8.isArray( deltas ) )\n\t{\n\t\tvar deltaObject = {};\n\t\t\n\t\tfor (var attr in values)\n\t\t{\n\t\t\tdeltaObject[attr] = deltas;\t\n\t\t}\n\t\t\n\t\tdeltas = deltaObject;\n\t}\n\t\n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculators[attr] = anim8.calculator.default;\n\t\t\tdefaults[attr] = calculators[attr].create();\n    }\n\t\t\n\t\tfor (var k = 0; k < value.length; k++)\n\t\t{\n      if ( value[k] !== true )\n      {\n  \t\t\tvalue[k] = calculators[attr].parse( value[k], defaults[attr] ); \n      }\n\t\t}\n\t\t\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var easing   = anim8.coalesce( easings[attr], options.easing, anim8.defaults.easing );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.DeltaPath( attr, calculators[attr], values[attr], deltas[attr] );\n    var event    = new anim8.Event( attr, path, duration, anim8.easing( easing ), delay, sleep, repeat );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.final = function( animation, options, events ) \n{\n\tvar values = animation.final;\n\t\n  var delays = animation.delays || {};\n  var durations = animation.durations || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n\n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay + duration, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.initial = function( animation, options, events ) \n{\n\tvar values = animation.initial;\n\t\n  var delays = animation.delays || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n    \n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.keyframe = function( animation, options, events ) \n{\n  var kframes = animation.keyframe;\n  \n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  \n  var teasing = anim8.easing( anim8.coalesce( options.teasing, anim8.defaults.teasing ) );\n  \n  var sort = false;\n  \n  var aliases = {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  };\n  \n  // split up comma delimited times\n  for (var time in kframes)\n  {\n    if ( time in aliases )\n    {\n      kframes[ aliases[time] ] = kframes[ time ];\n      \n      delete kframes[ time ];\n    }\n    else if ( time.indexOf(',') !== -1 )\n    {\n      var times = time.split(',');\n      \n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i]] = kframes[time];\n      }\n      \n      delete kframes[time];\n      \n      sort = true;\n    }\n  }\n  \n  var times = [];\n  \n  // validate times\n  var lastTime = 0.0;\n  var maxTime = 0.0;\n  \n  for (var time in kframes)\n  {\n    var t = parseFloat(time);\n    \n    if (isNaN(t))\n    {\n      delete kframes[time];\n    }\n    else\n    {\n      if (t < lastTime)\n      {\n        sort = true;\n      }\n      \n      times.push({\n        order: t,\n        key: time,\n        value: kframes[time]\n      });\n      \n      lastTime = t;\n      \n      maxTime = Math.max( maxTime, t );\n    }\n  }\n  \n  // sort if necessary\n  if (sort)\n  {\n    times.sort(function(a, b) {\n      return a.order - b.order;\n    });\n    \n    kframes = {};\n    \n    for (var i = 0; i < times.length; i++)\n    {\n      kframes[times[i].key] = times[i].value;\n    }\n  }\n  \n  // split up into deltas and values\n  var deltas = {};\n  var values = {};\n  var calculators = {};\n\tvar defaults = {};\n  var pathEasings = {};\n  \n  for (var i = 0; i < times.length; i++)\n  {\n    var frame = times[i];\n    var easing = anim8.coalesce( frame.value.easing, options.easing );\n    \n    delete frame.value.easing;\n    \n    for (var attr in frame.value)\n    {\n      if ( !(attr in deltas) )\n      {\n        deltas[attr] = [];\n        values[attr] = [];\n        pathEasings[attr] = [];\n        \n        if (attr in anim8.attribute)\n        {\n          calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n        }\n        else\n        {\n          calculators[attr] = anim8.calculator.default;\n\t\t\t\t\tdefaults[attr] = calculators[attr].create();\n        }\n      }\n\t\t\t\n      deltas[attr].push( frame.order / maxTime );\n      values[attr].push( frame.value[attr] === true ? true : calculators[attr].parse( frame.value[attr], defaults[attr] ) );\n      pathEasings[attr].push( anim8.easing( anim8.coalesce( easings[attr], easing ) ) );\n    }\n  }\n\t\n  // create events & paths\n  for (var attr in deltas)\n  {\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.KeyframePath( attr, calculators[attr], values[attr], deltas[attr], pathEasings[attr] );\n    var event    = new anim8.Event( attr, path, duration, teasing, delay, sleep, repeat );\n    \n    events.push( event );\n  }\n};","\n/**\n * The factory for Plain-Old-Javascript-Objects.\n */\nanim8.factories.object = \n{\n  is: function(subject) \n\t{\n    return anim8.isObject( subject ) && !anim8.isElement( subject );\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n    var animator = from.$animator;\n    \n    if ( !animator )\n    {\n      animator = new anim8.Animator( from );\n      animator.factory = this;\n      \n      from.$animator = animator;\n    }\n    \n    animators.push( animator );\n  }\n};","\n/*\n  DOM create styles to apply, then apply them all at the same time\n  don't apply styles if they're impercivable (convert value to pixels of applicable)\n\n*/\n\n/* \n  anim8.property[name] = {\n    get: function(e, anim) {\n      // based on anim.animating, gets one or more value from the entity and places it on anim.frame. this function should only do this for an attribute if\n      // anim.animating[attribute] === false. When it successfully gets a value anim.animating[attribute] should be set to true. This is called before an animation\n      // begins on attributes that will be animated based on the current value. \n    },\n    set: function(e, anim) {\n      // applies the applicable attributes in anim.frame to the entity, \n    }\n }\n*/\nanim8.property = function(prop) \n{\n  if ( anim8.isObject( prop ) && anim8.isFunction( prop.get ) && anim8.isFunction( prop.set ) ) \n  {\n    return prop;\n  }\n  if ( anim8.isString( prop ) && prop in anim8.property )\n  {\n\t  return anim8.property[ prop ];\n  }\n\t\n  throw prop + ' is not a valid property';\n}\n\n/**\n * Computes the desired style of the given element and returns it as a string. The style\n * given must be in hyphenated format like so: anim8.style( element, 'font-size' ) = '12px'\n */\nanim8.style = (function()\n{\n  var hyphenize = function(str) \n\t{\n    str = str.replace(/[a-z][A-Z]/g, function(str, letter)\n    {\n     return str[0] + '-' + str[1].toLowerCase();\n    });\n    \n    str = str.replace(/^Webkit/, '-webkit');\n    str = str.replace(/^Moz/, '-moz');\n    str = str.replace(/^Ms/, '-ms');\n    str = str.replace(/^O/, '-o');\n    str = str.replace(/^Khtml/, '-khtml');\n    \n    return str;\n  };\n\t\n\treturn function(e, style) \n\t{\n\t  if (e.currentStyle)\n\t\t{\n\t    return e.currentStyle[ style ];\n\t  } \n\t\telse if (document.defaultView && document.defaultView.getComputedStyle) \n\t\t{\n\t    return document.defaultView.getComputedStyle( e, null ).getPropertyValue( hyphenize( style ) );\n\t  } \n\t\telse \n\t\t{\n\t    return e.style[ style ]; \n\t  }\n\t};\n\t\n})();\n\n/**\n * Given an array of styles this will return the first one that is present on elements in the current browser.\n */\nanim8.prefix = (function() \n{\n  var a = document.createElement('a');\n  \n  return function(prefixes) \n  {\n    for (var i = 0; i < prefixes.length; i++) \n    {\n      if ( anim8.isDefined( a.style[ prefixes[ i ] ] ) ) \n      {\n        return prefixes[i];\n      }\n    }\n    return false;\n  };\n  \n})();\n\n/**\n * Parses a value and returns an object with value & unit properties. If the value is completely invalid\n * then false is returned.\n */\nanim8.parseValue = (function() \n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(px|em|%|vw|ex|cm|mm|in|pt|pc|deg|rad)?/;\n  \n  return function(value, defaultUnit) \n  {\n    if ( !anim8.isDefined( defaultUnit ) )\n    {\n      defaultUnit = 'px';\n    }\n    \n    if ( anim8.isNumber( value ) ) \n    {\n      return {\n        value: value,\n        unit: defaultUnit\n      };\n    }\n    else if ( anim8.isString( value ) && value ) \n    {\n      var parsed = regex.exec( value );\n      \n      if (parsed) \n      {      \n        return {\n          value: parseFloat( parsed[1] ),\n          unit: parsed[3] || defaultUnit\n        }\n      }\n    }\n    \n    return false;\n  };\n  \n})();\n\n/**\n * Calculators how many pixels a given value & unit is.\n * \n * For Example: anim8.toPixels( 100, 'in' ) \n *    returns how many pixels are in 1 inch, with up to 2 decimal points of accuracy.\n */\nanim8.toPixels = function(baseValue, baseUnit, defaultRate)\n{\n  if ( document.body )\n  {\n    var div = document.createElement('div');\n    document.body.appendChild( div );\n    div.style.width = baseValue + baseUnit;\n    var pixels = (div.offsetWidth / baseValue);\n    document.body.removeChild( div );\n    return pixels || defaultRate;\n  }\n  \n  return defaultRate;\n};\n\n/**\n * Converts one unit to another for a given element.\n *\n * For Example: anim8.convert( element, '100px', '%', 'parentWidth' )\n *    returns how much percent 100px relativeTo parentWidth of the given element\n */\nanim8.convert = (function()\n{  \n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(px|em|%|vw|ex|cm|mm|in|pt|pc|deg|rad)?/;\n\n  var getFontSize = function(e, notUnit)\n  {\n    var fontSize = anim8.style( e, 'fontSize' );\n    var parsed = anim8.parseValue( fontSize );\n    \n    if ( !parsed || parsed.unit === notUnit )\n    {\n      return 12;\n    }\n    \n    if ( parsed.unit === 'px' ) \n    {\n      return parsed.value;\n    }\n    \n    return getConverterScale( e, conversions[ parsed.unit ].px, relativeTo );\n  };\n\n  var variables = {};\n  \n  variables.parentWidth = function(e)\n  {\n    return e.parentNode.scrollWidth;\n  };\n  variables.parentHeight = function(e)\n  {\n    return e.parentNode.scrollHeight;\n  };\n  variables.width = function(e)\n  {\n    return e.offsetWidth;\n  };\n  variables.height = function(e)\n  {\n    return e.offsetHeight;\n  };\n  variables.fontSize = function(e)\n  {\n    return getFontSize( e, '%' );\n  };\n  variables.parentFontSize = function(e)\n  {\n    return getFontSize( e.parentNode, '%' );\n  };\n  variables.htmlFontSize = function(e)\n  {\n    var htmlElement = document.getElementsByTagName(\"html\")[0];\n    \n    return getFontSize( htmlElement, '%' );\n  };\n  \n  var conversions = {};\n  \n  conversions.pt  = { px: anim8.toPixels(100, 'pt') };\n  conversions.in  = { px: anim8.toPixels(100, 'in') };\n  conversions.cm  = { px: anim8.toPixels(1000, 'cm') };\n  conversions.mm  = { px: anim8.toPixels(100000, 'mm') };\n  conversions.vw  = { px: anim8.toPixels(1000, 'vw') };\n  conversions.deg = { rad: Math.PI / 180.0};\n\n  conversions.em = \n  {\n    px: function(e, relativeTo) \n    {\n      return getFontSize( e, 'em' );\n    }\n  };\n  \n  conversions.rem = \n  {\n    px: function(e, relativeTo) \n    {\n      var htmlElement = document.getElementsByTagName(\"html\")[0];\n      \n      return getFontSize( htmlElement, 'rem' );\n    }\n  };\n  \n  conversions['%'] = \n  {\n    px: function(e, relativeTo) \n    {\n      if ( anim8.isNumber( relativeTo ) )\n      {\n        return relativeTo;\n      }\n      if ( relativeTo in variables )\n      {\n        return variables[ relativeTo ]( e ) / 100.0;\n      }\n      \n      return 1.0;\n    }\n  };\n  \n  // Populate conversions going other way.\n  for (var unit in conversions)\n  {\n    for (var to in conversions[ unit ])\n    {\n      if ( !(to in conversions) )\n      {\n        conversions[ to ] = {};\n      }\n      \n      if ( !(unit in conversions[ to ]) )\n      {\n        var given = conversions[ unit ][ to ];\n        \n        if ( anim8.isNumber( given ) )\n        {\n          conversions[ to ][ unit ] = 1.0 / given;  \n        }\n        if ( anim8.isFunction( given ) )\n        {\n          conversions[ to ][ unit ] = (function(converter) \n          {\n            return function(e, relativeTo) \n            {\n              return 1.0 / converter( e, relativeTo );\n            };\n          })( given );\n        }\n      }\n    }\n  }\n  \n  // Given an element, convert, and relativeTo - return the number we need to multiply by.\n  var getConverterScale = function(e, converter, relativeTo)\n  {\n    if ( anim8.isNumber( converter ) )\n    {\n      return converter;\n    }\n    else if ( anim8.isFunction( converter ) )\n    {\n      return converter( e, relativeTo );\n    }\n    \n    return 1.0;\n  };\n  \n  return function(e, from, toUnit, relativeTo)\n  {\n    if ( anim8.isNumber( from ) )\n    {\n      return from;\n    }\n    \n    var parsed = regex.exec( from );\n    \n    if ( !parsed )\n    {\n      return false;\n    }\n    \n    var value = parseFloat( parsed[1] );\n    var fromUnit = parsed[3];\n    \n    if ( !fromUnit || fromUnit === toUnit )\n    {\n      return value;\n    }\n    \n    // First see if we have a direct conversion available...\n    if ( fromUnit in conversions && toUnit in conversions[ fromUnit ] )\n    {\n      var converter = conversions[ fromUnit ][ toUnit ];\n      \n      value *= getConverterScale( e, converter, relativeTo );\n    }\n    // Otherwise convert it to px, then to the desired unit\n    else if ( fromUnit in conversions && conversions[ fromUnit ].px && toUnit in conversions.px )\n    {\n      var converter1 = conversions[ fromUnit ].px;\n      var converter2 = conversions.px[ toUnit ];\n      \n      value *= getConverterScale( e, converter1, relativeTo );\n      value *= getConverterScale( e, converter2, relativeTo );\n    }\n    \n    return value;\n  };\n  \n})();\n\n\nanim8.factories.dom = \n{\n\tids: 0,\n  \n\tcached: {},\n  \n  attribute: 'anim8',\n  \n  is: function(subject) \n\t{\n    return anim8.isElement( subject );\n  },\n  \n  has: function(from)\n  {\n    return from.getAttribute( this.attribute ) in this.cached;\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n\t\tvar animatorId = from.getAttribute( this.attribute );\n\t\t\n\t\tif (!(animatorId in this.cached)) \n\t\t{\n\t\t\tvar animator = new anim8.DomAnimator( from );\n\t\t\t\n\t\t\tfrom.setAttribute( this.attribute, animatorId = animator.id = ++this.ids );\n\t\t\t\n\t\t\tanimator.factory = this;\n\t\t\t\n\t\t\tthis.cached[animatorId] = animator;\n\t\t}\n\t\t\n\t\tanimators.push( this.cached[animatorId] );\n  },\n  \n\tcleanup: function(animator) \n\t{\n\t\tdelete this.cached[ animator.id ];\n\t}\n};","\nanim8.property.factory = function(nm, relativeTo) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var style = anim8.style( e, nm );\n        var converted = anim8.convert( e, style, anim.unit( nm ), relativeTo );\n        \n        if ( converted !== false ) \n        {\n          anim.frame[nm] = converted;\n          anim.animating[nm] = true;\n        }\n      }\n    },\n    set: function(e, anim) \n    { \n      e.style[nm] = anim.value( nm );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.factoryDerivable = function(nm, relativeTo, deriver) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var style = anim8.style( e, nm );\n        var converted = anim8.convert( e, style, anim.unit( nm ), relativeTo );\n        \n        if ( converted !== false ) \n        {\n          anim.frame[nm] = converted;\n          anim.animating[nm] = true;\n        }\n        else if ( anim8.isFunction( deriver ) )\n        {\n          converted = anim8.convert( e, deriver( e ), anim.unit( nm ), relativeTo );\n          \n          if ( converted !== false )\n          {\n            anim.frame[nm] = converted;\n            anim.animating[nm] = true;\n          }\n        }\n      }\n    },\n    set: function(e, anim) \n    { \n      e.style[nm] = anim.value( nm );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.factoryColor = function(nm) \n{\n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating[nm] === false) \n      {\n        var parsed = anim8.color.parse( e.style[nm] );\n        \n        if (parsed !== anim8.color.invalidColor) \n        {\n          anim.frame[nm] = parsed;\n          anim.animating[nm] = true;\n        }              \n      }\n    },\n    set: function(e, anim) \n    {\n      e.style[nm] = anim8.color.format( anim.frame[nm] );\n    },\n    unset: function(e, anim)\n    {\n      e.style[nm] = null;\n    }\n  };\n};\n\nanim8.property.padding                  = anim8.property.factory( 'padding', 'parentWidth' );\nanim8.property.paddingTop               = anim8.property.factory( 'paddingTop', 'parentWidth' );\nanim8.property.paddingRight             = anim8.property.factory( 'paddingRight', 'parentWidth' );\nanim8.property.paddingBottom            = anim8.property.factory( 'paddingBottom', 'parentWidth' );\nanim8.property.paddingLeft              = anim8.property.factory( 'paddingLeft', 'parentWidth' );\n\nanim8.property.margin                   = anim8.property.factory( 'margin', 'parentWidth' );\nanim8.property.marginTop                = anim8.property.factory( 'marginTop', 'parentWidth' );\nanim8.property.marginRight              = anim8.property.factory( 'marginRight', 'parentWidth' );\nanim8.property.marginBottom             = anim8.property.factory( 'marginBottom', 'parentWidth' );\nanim8.property.marginLeft               = anim8.property.factory( 'marginLeft', 'parentWidth' );\n\nanim8.property.borderRadius             = anim8.property.factory( 'borderRadius', 'width' );\nanim8.property.borderTopLeftRadius      = anim8.property.factory( 'borderTopLeftRadius', 'width' );\nanim8.property.borderTopRightRadius     = anim8.property.factory( 'borderTopRightRadius', 'width' );\nanim8.property.borderBottomLeftRadius   = anim8.property.factory( 'borderBottomLeftRadius', 'width' );\nanim8.property.borderBottomRightRadius  = anim8.property.factory( 'borderBottomRightRadius', 'width' );\n\nanim8.property.borderWidth              = anim8.property.factory( 'borderWidth' );\nanim8.property.borderTopWidth           = anim8.property.factory( 'borderTopWidth' );\nanim8.property.borderRightWidth         = anim8.property.factory( 'borderRightWidth' );\nanim8.property.borderBottomWidth        = anim8.property.factory( 'borderBottomWidth' );\nanim8.property.borderLeftWidth          = anim8.property.factory( 'borderLeftWidth' );\n\nanim8.property.outlineWidth             = anim8.property.factory( 'outlineWidth' );\nanim8.property.textIndent               = anim8.property.factory( 'textIndent', 'parentWidth' );\nanim8.property.borderSpacing            = anim8.property.factory( 'borderSpacing' );\nanim8.property.fontSize                 = anim8.property.factory( 'fontSize', 'parentFontSize' );\nanim8.property.lineHeight               = anim8.property.factory( 'lineHeight', 'fontSize' );\nanim8.property.zIndex                   = anim8.property.factory( 'zIndex' );\n\nanim8.property.color                    = anim8.property.factoryColor( 'color' );\nanim8.property.backgroundColor          = anim8.property.factoryColor( 'backgroundColor' );\nanim8.property.borderTopColor           = anim8.property.factoryColor( 'borderTopColor' );\nanim8.property.borderRightColor         = anim8.property.factoryColor( 'borderRightColor' );\nanim8.property.borderBottomColor        = anim8.property.factoryColor( 'borderBottomColor' );\nanim8.property.borderLeftColor          = anim8.property.factoryColor( 'borderLeftColor' );\nanim8.property.outlineColor             = anim8.property.factoryColor( 'outlineColor' );\n\nanim8.property.minWidth                 = anim8.property.factory( 'minWidth', 'parentWidth' );\nanim8.property.maxWidth                 = anim8.property.factory( 'maxWidth', 'parentWidth' );\nanim8.property.minHeight                = anim8.property.factory( 'minHeight', 'parentHeight' );\nanim8.property.maxHeight                = anim8.property.factory( 'maxHeight', 'parentHeight' );\n\nanim8.property.width                    = anim8.property.factoryDerivable('width', 'parentWidth', function(e) { return e.offsetWidth + 'px'; });\nanim8.property.height                   = anim8.property.factoryDerivable('height', 'parentHeight', function(e) { return e.offsetHeight + 'px'; });\n\nanim8.property.top                      = anim8.property.factoryDerivable('top', 'parentHeight', function(e) { return e.offsetTop + 'px'; });\nanim8.property.right                    = anim8.property.factoryDerivable('right', 'parentWidth', function(e) { return (e.parentNode.scrollWidth - (e.offsetLeft + e.offsetWidth)) + 'px'; });\nanim8.property.bottom                   = anim8.property.factoryDerivable('bottom', 'parentHeight', function(e) { return (e.parentNode.scrollHeight - (e.offsetTop + e.offsetHeight)) + 'px'; });\nanim8.property.left                     = anim8.property.factoryDerivable('left', 'parentWidth', function(e) { return e.offsetLeft + 'px'; });\n\nanim8.property.visibility = \n{\n  get: function(e, anim) \n  {\n    if (anim.animating.visibility === false) \n    {\n      var style = anim8.style( e, 'visibility' );\n      anim.frame.visibility = style === 'hidden' ? 0.0 : 1.0;\n      anim.animating = true;\n    }\n  },\n  set: function(e, anim) \n  {\n    e.style.visibility = anim.frame.visibility < 0.5 ? 'hidden' : 'visible'\n  },\n  unset: function(e, anim)\n  {\n    e.style.visibility = null;\n  }\n}\n\nanim8.property.backface = (function()\n{\n  var css = anim8.prefix(['WebkitBackfaceVisibility', 'MozBackfaceVisibility', 'msBackfaceVisibility', 'BackfaceVisibility']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  return {\n    \n    get: function(e, anim)\n    {\n      if ( anim.animating.backface === false )\n      {\n        var style = anim8.style( e, css ); \n        \n        anim.frame.backface = (style === 'visible') ? 1.0 : 0.0;\n        anim.animating.backface = true;\n      }\n    },\n    set: function(e, anim)\n    {\n      e.style[css] = anim.frame.backface < 0.5 ? 'none' : 'visible';\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n    \n  };\n  \n})();\n\nanim8.property.transformOrigin = (function() \n{\n  var css = anim8.prefix(['WebkitTransformOrigin', 'MozTransformOrigin', 'OTransformOrigin', 'msTransformOrigin', 'transformOrigin']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  var keywords = \n  {\n    'left':   '0%',\n    'center': '50%',\n    'right':  '100%',\n    'top':    '0%',\n    'bottom': '100%'\n  };\n  \n  var setOriginAttribute = function(e, value, anim, attr, relativeTo ) \n  {\n    if (anim.animating[attr] === false) \n    {\n      if ( value in keywords )\n      {        \n        value = keywords[ value ];\n      }\n\n      var converted = anim8.convert( e, value, anim.unit( attr ), relativeTo );\n      \n      if ( converted !== false )\n      {\n        anim.frame[ attr ] = converted;\n        anim.animating[ attr ] = true;\n      }\n    }\n  };\n  \n  var setOrigin = function(e, split, anim) \n  {\n    if (anim.animating.origin === false) \n    {\n      if ((split.length === 1) || \n          (split.length === 2 && split[0] === split[1]) || \n          (split.length === 3 && split[0] === split[1] && split[1] === split[2])) \n      {     \n        setOriginAttribute( e, split[0], anim, 'origin', 'width' );\n      }            \n    }\n  };\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      var style = anim8.style( e, css );\n      \n      if (style) \n      {\n        var origin = style.toLowerCase();\n        var split = origin.split(' ');\n        \n        switch (split.length) \n        {\n        case 3:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[1], anim, 'originY', 'height' );\n          setOriginAttribute( e, split[2], anim, 'originZ' );\n          setOrigin( e, split, anim );\n          break;\n        case 2:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[1], anim, 'originY', 'height' );\n          setOrigin( e, split, anim );\n          break;\n        case 1:\n          setOriginAttribute( e, split[0], anim, 'originX', 'width' );\n          setOriginAttribute( e, split[0], anim, 'originY', 'height' );\n          setOrigin( e, split, anim );\n          break;\n        }\n      }\n    },\n    set: function(e, anim) \n    {      \n      var style = null;\n      \n      if ( anim8.isDefined( anim.frame.originZ ) )\n      {\n        style = anim.valueOr( 'originX', 'origin', 'x' ) + ' ' + anim.valueOr( 'originY', 'origin', 'y' ) + ' ' + anim.valueOr( 'originZ', 'origin', 'z' );\n      } \n      else \n      {\n        style = anim.valueOr( 'originX', 'origin', 'x' ) + ' ' + anim.valueOr( 'originY', 'origin', 'y' );\n      }\n      \n      e.style[css] = style;      \n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n  };\n  \n})();\n\nanim8.property.transform = (function() \n{\n  var css = anim8.prefix(['WebkitTransform', 'MozTransform', 'OTransform', 'msTransform', 'transform']);\n   \n  if ( !css )\n  {\n    return false;\n  }\n\n  var d2 = { translate: true, scale: true };\n  var d3 = { translate3d: true, scale3d: true };\n  var d4 = { rotate3d: true };\n  var axis = ['X', 'Y', 'Z'];\n    \n  var regex = \n  {\n    translate: /translate\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    translate3d: /translate3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    translateX: /translateX\\(([^\\)]+)\\)/i,\n    translateY: /translateY\\(([^\\)]+)\\)/i,\n    translateZ: /translateZ\\(([^\\)]+)\\)/i,\n    scale: /scale\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    scale3d: /scale3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    scaleX: /scaleX\\(([^\\)]+)\\)/i,\n    scaleY: /scaleY\\(([^\\)]+)\\)/i,\n    scaleZ: /scaleZ\\(([^\\)]+)\\)/i,\n    rotate: /rotate\\(([^\\)]+)\\)/i,\n    rotate3d: /rotate3d\\(([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    rotateX: /rotateX\\(([^\\)]+)\\)/i,\n    rotateY: /rotateY\\(([^\\)]+)\\)/i,\n    rotateZ: /rotateZ\\(([^\\)]+)\\)/i,\n    skew: /skew\\(([^,]+)\\s*,\\s*([^\\)]+)\\)/i,\n    skewX: /skewX\\(([^\\)]+)\\)/i,\n    skewY: /skewY\\(([^\\)]+)\\)/i\n  };\n  \n  var parse = function( e, value, anim, attr, relativeTo )\n  {\n    var desiredUnit = anim.unit( attr );\n    var converted = anim8.convert( e, value, desiredUnit, relativeTo );\n    \n    if ( converted !== false )\n    {\n      return converted;\n    }\n    \n    // TODO show convert this to desiredUnit, however defaultValue may be non-scalar.\n    return anim8.attribute( attr ).defaultValue;    \n  };\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      var style = anim8.style( e, css );\n      \n      for (var attr in anim.animating) \n      {\n        if ( anim.animating[ attr ] === false && attr in regex ) \n        {\n          var parsed = regex[ attr ].exec( style );\n          \n          if ( parsed ) \n          {\n            if ( attr in d4 ) \n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' ),\n                z: parse( e, parsed[3], anim, attr ),\n                angle: parse( e, parsed[4], anim, attr )\n              };\n            }\n            else if ( attr in d3 )\n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' ),\n                z: parse( e, parsed[3], anim, attr )\n              };\n            }\n            else if ( attr in d2 ) \n            {\n              anim.frame[attr] = {\n                x: parse( e, parsed[1], anim, attr, 'width' ),\n                y: parse( e, parsed[2], anim, attr, 'height' )\n              };\n            }\n            else \n            {\n              anim.frame[attr] = parse( e, parsed[1], anim, attr, 'width' );\n            }\n            \n            anim.animating[attr] = true;\n          }\n        }\n      }\n    },\n    set: function(e, anim) \n    {  \n      var transforms = [];\n      \n      for (var attr in regex) \n      {\n        if (attr in anim.frame) \n        {\n          if ( !anim.updated[attr] )\n          {\n            continue;\n          }\n          \n          var value = anim.frame[ attr ];\n          var unit = anim.unit( attr );\n          \n          if (attr in d4) \n          {\n            transforms.push( attr + '(' + value.x + ',' + value.y + ',' + value.z + ',' + value.angle + unit + ')' );\n          }\n          else if (attr in d3) \n          {\n            transforms.push( attr + '(' + value.x + unit + ',' + value.y + unit + ',' + value.z + unit + ')' );\n          }\n          else if (attr in d2) \n          {\n            transforms.push( attr + '(' + value.x + unit + ',' + value.y + unit + ')' );\n          }\n          else\n          {\n            transforms.push( attr + '(' + value + unit + ')' );\n          }\n        }\n      }\n\t\t\t\n      if (transforms.length) \n      {\n        e.style[css] = transforms.join(' ');\n      }\n    },\n    unset: function(e, anim)\n    {\n      e.style[css] = null;\n    }\n  };\n  \n})();\n\nanim8.property.opacity = (function() \n{\n  var css = anim8.prefix(['WebkitOpacity', 'MozOpacity', 'KhtmlOpacity', 'opacity']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n  return {\n    \n    get: function(e, anim) \n    {\n      if (anim.animating.opacity === false) \n      {\n        var style = anim8.style( e, css );\n        var opacity = parseFloat( style );\n        \n        if ( !isNaN(opacity) ) \n        {\n          anim.frame.opacity = opacity\n          anim.animating.opacity = true;\n        }\n      }\n    },\n    set: function(e, anim) \n    {\n      e.style[ css ] = anim.frame.opacity;\n    },\n    unset: function(e, anim)\n    {\n      e.style[ css ] = null;\n    }\n  };\n  \n})();\n\nanim8.property.filter = (function() \n{\n  var css = anim8.prefix(['WebkitFilter', 'MozFilter', 'OFilter', 'msFilter', 'filter']);\n  \n  if ( !css )\n  {\n    return false;\n  }\n  \n\tvar methods = \n  {\n\t\tgrayscale: \t'grayscale',\n\t\tsepia: \t\t\t'sepia',\n\t\tsaturate: \t'saturate',\n\t\thueRotate: \t'hue-rotate',\n\t\tinvert: \t\t'invert',\n\t\tbrightness: 'brightness',\n\t\tcontrast: \t'contrast',\n    blur:       'blur'\n\t};\n\t\n\tvar patterns = {};\n\t\n\tfor (var attr in methods) \n  {\n\t\tpatterns[attr] = new RegExp( methods[attr] + '\\(([^\\)]+)\\)', 'i');\n\t}\n  \n\treturn {\n    \n\t\tget: function(e, anim) \n    {\n\t\t\tvar style = anim8.style( e, css );\n      \n\t\t\tfor (var attr in patterns) \n      {\n\t\t\t\tif ( anim.animating[attr] === false ) \n        {\n\t\t\t\t\tvar parsed = patterns[attr].exec( style );\n          \n\t\t\t\t\tif (parsed !== false) \n          {\n            var converted = anim8.convert( e, parsed[1], anim.unit( attr ) );\n            \n            if ( converted !== false )\n            {\n              anim.frame[ attr ] = converted;\n              anim.animating[ attr ] = true;\n            }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, \n\t\tset: function(e, anim) \n    {\n\t\t\tvar filters = [];\n      \n\t\t\tfor (var attr in methods) \n      {\n\t\t\t\tif ( attr in anim.frame ) \n        {\n          if ( anim.updated[attr] )\n          {\n            filters.push( methods[attr] + '(' + anim.value( attr ) + ')' );\n          }\n\t\t\t\t}\n\t\t\t}\n      \n\t\t\tif (filters.length) \n      {\n\t\t\t\te.style[ css ] = filters.join(' ');\n\t\t\t}\n\t\t},\n    unset: function(e, anim)\n    {\n      e.style[ css ] = null;\n    }\n\t};\n\t\n})();\n\nanim8.property.center = \n{\n  get: function(e, anim)\n  {\n    var cx = (e.offsetLeft + e.offsetWidth * 0.5) + 'px';\n    var cy = (e.offsetTop + e.offsetHeight * 0.5) + 'px';\n    \n    if ( anim.animating.center === false )\n    {\n      var desiredUnit = anim.unit( 'center' );\n      var ccx = anim8.convert( e, cx, desiredUnit, 'parentWidth' );\n      var ccy = anim8.convert( e, cy, desiredUnit, 'parentHeight' );\n      \n      if ( ccx !== false && ccy !== false )\n      {\n        anim.frame.center = {\n          x: ccx,\n          y: ccy\n        };\n        anim.animating.center = true;\n      }\n    }\n    if ( anim.animating.centerX === false )\n    {\n      var desiredUnit = anim.unit( 'centerX' );\n      var ccx = anim8.convert( e, cx, desiredUnit, 'parentWidth' );\n      \n      if ( ccx !== false )\n      {\n        anim.frame.centerX = ccx;\n        anim.animating.centerX = true;\n      }\n    }\n    if ( anim.animating.centerY === false )\n    {\n      var desiredUnit = anim.unit( 'centerY' );\n      var ccy = anim8.convert( e, cy, desiredUnit, 'parentHeight' );\n      \n      if ( ccy !== false )\n      {\n        anim.frame.centerY = ccy;\n        anim.animating.centerY = true;\n      }\n    }\n  },\n  preset: function(e, anim)\n  {\n    anim.cached.width  = anim8.convert( e, e.offsetWidth + 'px', anim.units.centerX || anim.units.center, 'x' );\n    anim.cached.height = anim8.convert( e, e.offsetHeight + 'px', anim.units.centerY || anim.units.center, 'y' );\n  },\n  set: function(e, anim)\n  {\n    var rw = anim.cached.width * 0.5;\n    var rh = anim.cached.height * 0.5;\n        \n    if ( anim.updated.center )\n    {      \n      e.style.left = (anim.frame.center.x - rw) + anim.unit( 'center' );\n      e.style.top = (anim.frame.center.y - rh) + anim.unit( 'center' );\n    }\n    if ( anim.updated.centerX )\n    {\n      e.style.left = (anim.frame.centerX - rw) + anim.unit( 'centerX' );\n    }\n    if ( anim.updated.centerY )\n    {\n      e.style.top = (anim.frame.centerY - rh) + anim.unit( 'centerY' );\n    }\n  }\n};\n\nanim8.property.orbit = \n{\n  DEGREE_TO_RADIAN: Math.PI / 180.0,\n  \n  RADIAN_TO_DEGREE: 180.0 / Math.PI,\n  \n  get: function(e, anim)\n  {\n    var ox = (e.parentNode.scrollWidth * 0.5);\n    var oy = (e.parentNode.scrollHeight * 0.5); \n    var cx = (e.offsetLeft + e.offsetWidth * 0.5);\n    var cy = (e.offsetTop + e.offsetHeight * 0.5);\n    var dx = cx - ox;\n    var dy = cy - oy;\n  \n    if ( anim.animating.orbitOffset === false )\n    {\n      var cunit = anim.unit( 'orbitOffset' );\n      var cox = anim8.convert( e, ox + 'px', cunit, 'parentWidth' );\n      var coy = anim8.convert( e, oy + 'px', cunit, 'parentHeight' );\n      \n      if ( cox !== false && coy !== false )\n      {\n        anim.frame.orbitOffset = {\n          x: cox,\n          y: coy\n        };\n        anim.animating.orbitOffset = false;\n      }\n    }\n    \n    if ( anim.animating.distance === false )\n    {\n      anim.frame.distance = Math.sqrt( dx * dx + dy * dy );\n      anim.animating.distance = true;\n    }\n    \n    if ( anim.animating.angle === false )\n    {\n      anim.frame.angle = Math.atan2( dy, dx ) * this.RADIAN_TO_DEGREE;\n      anim.animating.angle = true;\n    }\n  },\n  \n  preset: function(e, anim)\n  {  \n    anim.cached.parentWidth = e.parentNode.scrollWidth;\n    anim.cached.parentHeight = e.parentNode.scrollHeight;\n    anim.cached.width = e.offsetWidth;\n    anim.cached.height = e.offsetHeight;\n  },\n  \n  set: function(e, anim)\n  {\n    // TODO calculator this correctly\n    var cunit = anim.unit( 'orbitOffset' ) || '%';\n    var orbitX = anim.frame.orbitOffset ? anim.frame.orbitOffset.x : 50;\n    var orbitY = anim.frame.orbitOffset ? anim.frame.orbitOffset.y : 50;\n    \n    var originUnit = anim.unit( 'origin' ) || '%';\n    var originX = anim.frame.origin ? anim.frame.origin.x : 50;\n    var originY = anim.frame.origin ? anim.frame.origin.y : 50;\n    \n    var cox = anim8.convert( e, orbitX + cunit, 'px', anim.cached.parentWidth / 100.0 );\n    var coy = anim8.convert( e, orbitY + cunit, 'px', anim.cached.parentHeight / 100.0 );\n    \n    var ox = anim8.convert( e, originX + originUnit, 'px', anim.cached.width / 100.0 );\n    var oy = anim8.convert( e, originY + originUnit, 'px', anim.cached.height / 100.0 );\n    \n    var angle = (anim.frame.angle || 0.0) * this.DEGREE_TO_RADIAN;\n    var distance = anim.frame.distance || 0.0;\n        \n    var cos = Math.cos( angle ) * distance;\n    var sin = Math.sin( angle ) * distance;\n    \n    e.style.left = (cox + cos - ox) + 'px';\n    e.style.top = (coy + sin - oy) + 'px';\n  }\n};","\n/**\n * All animatable attributes for DomAnimators & HTMLElements.\n */\n\nanim8.attribute.padding                 = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingTop              = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingRight            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingBottom           = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.paddingLeft             = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.margin                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginTop               = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginRight             = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginBottom            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.marginLeft              = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.borderRadius            = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopLeftRadius     = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopRightRadius    = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomLeftRadius  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomRightRadius = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.borderWidth             = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderTopWidth          = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderRightWidth        = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderBottomWidth       = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderLeftWidth         = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.outlineWidth\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.outlineOffset\t\t\t\t\t\t= {defaultValue: 0};\nanim8.attribute.textIndent\t\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.borderSpacing\t\t\t\t\t\t= {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.fontSize\t\t\t\t\t\t\t\t= {defaultValue: 1, defaultUnit: 'em'};\nanim8.attribute.lineHeight\t\t\t\t\t\t\t= {defaultValue: 1, defaultUnit: 'em'};\n\nanim8.attribute.origin                  = {defaultValue: {x:50, y:50}, defaultUnit: '%', property: 'transformOrigin', calculator: '2d'};\nanim8.attribute.originX                 = {defaultValue: 50, defaultUnit: '%', property: 'transformOrigin'};\nanim8.attribute.originY                 = {defaultValue: 50, defaultUnit: '%', property: 'transformOrigin'};\n\nanim8.attribute.opacity                 = {defaultValue: 1};\nanim8.attribute.zIndex                  = {defaultValue: 1};\n\nanim8.attribute.width                   = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.minWidth                = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.maxWidth                = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.height                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.minHeight               = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.maxHeight               = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.angle                   = {defaultValue: 0, property: 'orbit'};\nanim8.attribute.distance                = {defaultValue: 0, property: 'orbit'};\nanim8.attribute.orbitOffset             = {defaultValue: {x:50, y:50}, defaultUnit: '%', property: 'orbitOffset', calculator: '2d'};\n\nanim8.attribute.top                     = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.right                   = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.bottom                  = {defaultValue: 0, defaultUnit: 'px'};\nanim8.attribute.left                    = {defaultValue: 0, defaultUnit: 'px'};\n\nanim8.attribute.center                  = {defaultValue: {x:0, y:0}, defaultUnit: 'px', property: 'center', calculator: '2d'};\nanim8.attribute.centerX                 = {defaultValue: 0, defaultUnit: 'px', property: 'center'};\nanim8.attribute.centerY                 = {defaultValue: 0, defaultUnit: 'px', property: 'center'};\n\nanim8.attribute.blur                    = {defaultValue: 0, property: 'filter', defaultUnit: 'px'};\nanim8.attribute.sepia                   = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.brightness              = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.grayscale               = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.contrast                = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.invert                  = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.saturation              = {defaultValue: 0, property: 'filter', defaultUnit: '%'};\nanim8.attribute.hueRotate               = {defaultValue: 0, property: 'filter', defaultUnit: 'deg'};\n\nanim8.attribute.rotate                  = {defaultValue: 0, property: 'transform', defaultUnit: 'deg'};\nanim8.attribute.rotate3d                = {defaultValue: {x:0, y:0, z:1, angle:0}, property: 'transform', calculator: 'quaternion', defaultUnit: 'deg'};\n\nanim8.attribute.translate               = {defaultValue: {x:0, y:0}, property: 'transform', calculator: '2d', defaultUnit: 'px'};\nanim8.attribute.translateX              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translateY              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translateZ              = {defaultValue: 0, property: 'transform', defaultUnit: 'px'};\nanim8.attribute.translate3d             = {defaultValue: {x:0, y:0, z:0}, property: 'transform', calculator: '3d', defaultUnit: 'px'};\n\nanim8.attribute.scale                   = {defaultValue: {x: 0, y:0}, property: 'transform', calculator: '2d'};\nanim8.attribute.scaleX\t                = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scaleY  \t              = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scaleZ  \t              = {defaultValue: 1, property: 'transform'};\nanim8.attribute.scale3d                 = {defaultValue: {x:1, y:1, z:1}, property: 'transform', calculator: '3d'};\n\nanim8.attribute.skew                    = {defaultValue: {x:0, y:0}, defaultUnit: 'deg', property: 'transform', calculator: '2d'};\nanim8.attribute.skewX                   = {defaultValue: 0, defaultUnit: 'deg', property: 'transform'};\nanim8.attribute.skewY                   = {defaultValue: 0, defaultUnit: 'deg', property: 'transform'};\n\nanim8.attribute.backface                = {defaultValue: 0};\nanim8.attribute.visibility              = {defaultValue: 1};\n\nanim8.attribute.backgroundColor         = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.color                   = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderTopColor          = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderRightColor        = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderBottomColor       = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.borderLeftColor         = {defaultValue: anim8.color(), calculator: 'rgba'};\nanim8.attribute.outlineColor            = {defaultValue: anim8.color(), calculator: 'rgba'};","\n/**\n * Instantiates a new DomAnimator given a subject.\n * \n * @param {HTMLElement} e\n */\nanim8.DomAnimator = function(e)\n{\n\tthis.reset( e );\n  this.properties = {};\n  this.trues = {};\n  this.attributeToProperty = {};\n  this.animating = {};\n  this.units = {};\n  this.cached = {};\n  this.animation = null;\n};\n\n/**\n * Extends anim8.Animator\n */\nanim8.DomAnimator.prototype = new anim8.Animator();\n\n/**\n * A method thats invoked along with all other animators before updates are called.\n * This is used to make any necessary preparations before the animator is updated.\n *\n * If any events that were recently added have true values this is where we replace\n * this true values with the values currently on the subject.\n */\nanim8.DomAnimator.prototype.preupdate = function()\n{\n  if ( this.trues.length === 0 )\n  {\n    return;\n  }\n  \n  var properties = {};\n  \n  for (var attr in this.trues)\n  {\n    properties[ this.attributeToProperty[attr] ] = true;\n      \n    this.animating[ attr ] = false;\n  }\n  \n  for (var prop in properties)\n  {\n    this.properties[ prop ].get( this.e, this );\n  }\n  \n  for (var attr in this.trues)\n  {\n    if ( this.animating[attr] === true )\n    {      \n      var e = this.trues[ attr ];\n      var p = e.path.copy();\n      var ps = p.points;\n            \n      for (var i = 0; i < ps.length; i++)\n      {\n        if ( ps[i] === true )\n        {\n          ps[i] = this.frame[attr];\n        }\n      }\n    \n      e.path = p;\n    }\n    \n    delete this.trues[ attr ];\n  }\n  \n  for (var prop in this.properties)\n  {\n    var property = this.properties[ prop ];\n    \n    if ( anim8.isFunction( property.preset ) )\n    {\n      property.preset( this.e, this );\n    }\n  }\n  \n  this.trigger('preupdate');\n};\n\n/**\n * A method invoked when an animation is about to be played in the Animator.\n * \n * @param {anim8.Animation} animation\n * @param {object} options\n * @param {array:anim8.EventInstance} events\n */\nanim8.DomAnimator.prototype.onAnimation = function(animation, options, events)\n{\n  this.animation = animation;\n};\n  \n/**\n * Applies all updated attributes to the subject. This method is invoked with all of the other\n * animators at the end of the animation cycle.\n */\nanim8.DomAnimator.prototype.apply = function()\n{\n  var applyProperties = {};\n  \n  for (var attr in this.frame)\n  {\n    if ( this.updated[ attr ] )\n    {\n      var prop = this.attributeToProperty[ attr ];\n      \n      if ( prop in this.properties )\n      {\n        applyProperties[ prop ] = true; \n      }\n    }\n  }\n  \n  for (var prop in applyProperties)\n  {\n    this.properties[ prop ].set( this.e, this );\n  }\n  \n  for (var attr in this.frame)\n  {\n    this.updated[ attr ] = false;\n  }\n  \n  this.trigger('apply');\n  \n  this.trimEvents();\n};\n  \n/**\n * Places the event in this animator replacing any event that exists for the same\n * attribute. The next time the animator is updated the event will be started.\n *\n * @param {anim8.EventInstance} e\n */\nanim8.DomAnimator.prototype.placeEvent = function( e )\n{\n  anim8.Animator.prototype.placeEvent.apply( this, arguments );\n  \n  var attr = e.attribute;\n  var attribute = anim8.attribute( attr );\n  var prop = anim8.coalesce( attribute.property, attr );\n  var property = anim8.property( prop );\n    \n  if ( e.hasTrue() )\n  {    \n    this.trues[ attr ] = e;\n  }\n  \n  this.attributes[ attr ] = attribute;\n  this.properties[ prop ] = property;\n  this.attributeToProperty[ attr ] = prop;\n  \n  if ( this.animation && this.animation.input && this.animation.input.units && attr in this.animation.input.units )\n  {\n    this.units[ attr ] = this.animation.input.units[ attr ];\n  }\n  else\n  {\n    this.units[ attr ] = attribute.defaultUnit;\n  }\n};\n  \n/**\n * Places the spring in this animator replacing any spring that exists for the same\n * attribute. The next time the animator is updated the spring will be started.\n *\n * @param {anim8.Spring} s\n */\nanim8.DomAnimator.prototype.placeSpring = function( s )\n{\n  anim8.Animator.prototype.placeSpring.apply( this, arguments );\n  \n  var attr = s.attribute;\n  var attribute = anim8.attribute( attr );\n  var prop = anim8.coalesce( attribute.property, attr );\n  var property = anim8.property( prop );\n  \n  this.attributes[ attr ] = attribute;\n  this.properties[ prop ] = property;\n  this.attributeToProperty[ attr ] = prop;\n  this.units[ attr ] = attribute.defaultUnit;\n};\n  \n/**\n * Restores any temporary state that may exist on this Animator that\n * is a result from animations.\n */\nanim8.DomAnimator.prototype.restore = function()\n{\n  for (var prop in this.properties)\n  {\n    this.properties[prop].unset( this.e, this );\n  }\n};\n  \n/**\n * A method that is invoked when an animator is finished and is being removed from the list\n * of currently animating Animators.\n */\nanim8.DomAnimator.prototype.cleanup = function()\n{\n  // this.factory.cleanup( this );\n  \n  this.trigger('cleanup');\n};\n  \n/**\n * Sets the given attributes to this Animator immediately.\n *\n * @param {object} attributes\n */\nanim8.DomAnimator.prototype.set = function(attributes)\n{\n  var props = {};\n  var updated = {};\n  var units = {};\n  \n  for (var attr in attributes)\n  {\n    var attribute = anim8.attribute( attr );\n    var prop      = anim8.coalesce( attribute.property, attr );\n    var property  = anim8.property( prop );\n    var calc      = anim8.calculator( attribute.calculator );\n    var value     = attributes[ attr ];\n    \n    units[ attr ] = attribute.defaultUnit;\n    \n    if ( anim8.isString( value ) )\n    {\n      var parsed = anim8.parseValue( value, attribute.defaultUnit );\n    \n      if ( parsed !== false )\n      {\n        units[ attr ] = parsed.unit;\n        value = parsed.value;\n      }  \n    }\n    \n    var parsed = calc.parse( value, attribute.defaultValue );\n    \n    if ( parsed !== false )\n    {\n      props[ prop ] = property;\n      attributes[ attr ] = parsed;\n      updated[ attr ] = true;\n    }\n  }\n    \n  var flash = \n  {\n    units: units,\n    \n    frame: attributes,\n    \n    updated: updated,\n    \n    cached: {},\n    \n    value: function(attr)\n    {\n      return attributes[ attr ] + this.unit( attr );\n    },\n    \n    valueOr: function(attr, other, subproperty)\n    {\n      var value = attributes[ attr ];\n      \n      if ( !anim8.isDefined( value ) )\n      {\n        value = attributes[ attr = other ];\n      \n        if ( anim8.isDefined( subproperty ) )\n        {\n          value = value[ subproperty ];\n        }\n      }\n  \n      return value + this.unit( attr );\n    },\n    \n    unit: function(attr)\n    {\n      return units[ attr ] || '';\n    }\n  };\n  \n  for (var prop in props)\n  {\n    var property = props[ prop ];\n    \n    if ( anim8.isFunction( property.preset ) )\n    {\n      props[ prop ].preset( this.e, flash );\n    }\n  }\n  \n  for (var prop in props)\n  {\n    props[ prop ].set( this.e, flash );\n  }\n};\n\n/**\n * Gets the current attribute values for all attributes specified. The argument must be an object\n * where the key is the name of an attribute and the value is the desired unit.\n *\n * @param {object} attributes\n */\nanim8.DomAnimator.prototype.get = function(attributes)\n{\n  var props = {};\n  var animating = {};\n  var units = {};\n  var out = {};\n  \n  for (var attr in attributes)\n  {    \n    var attribute = anim8.attribute( attr );\n    var prop      = anim8.coalesce( attribute.property, attr );\n    var property  = anim8.property( prop );\n    var calc      = anim8.calculator( attribute.calculator );\n    \n    animating[ attr ] = false;    \n    units[ attr ] = attributes[ attr ] || attribute.defaultUnit;\n    props[ prop ] = property;\n    out[ attr ] = calc.clone( attribute.defaultValue );\n  }\n  \n  var flash = \n  {\n    units: units,\n    \n    frame: out,\n    \n    animating: animating,\n    \n    unit: function(attr)\n    {\n      return units[ attr ] || '';\n    }\n  };\n  \n  for (var prop in props)\n  {\n    props[ prop ].get( this.e, flash );\n  }\n  \n  return out;\n};\n\n/**\n * Returns the value for the given attribute as a string with the current units.\n *\n * @param {string} attr\n */\nanim8.DomAnimator.prototype.value = function(attr)\n{\n  return this.frame[ attr ] + this.unit( attr );\n};\n\n/**\n * Returns the value for the given attribute as a string with the current units.\n * if the attribute doesn't exist a secondary one is looked up. If that value\n * is an object and contains the given subproperty the value is resolved once again.\n *\n * @param {string} attr\n * @param {string} other\n * @param [string] subproperty\n */\nanim8.DomAnimator.prototype.valueOr = function(attr, other, subproperty)\n{\n  var value = this.frame[ attr ];\n    \n  if ( !anim8.isDefined( value ) )\n  {\n    value = this.frame[ attr = other ];\n      \n    if ( anim8.isDefined( subproperty ) )\n    {\n      value = value[ subproperty ];\n    }\n  }\n  \n  return value + this.unit( attr );\n};\n\n/**\n * Returns the unit for the given attribute or an empty string if none exists.\n *\n * @param {string} attr\n */\nanim8.DomAnimator.prototype.unit = function(attr)\n{\n  return ( this.units[ attr ] || '' );\n};\n","/**\n * Animate.css animations in anim8js.\n *\n * http://daneden.github.io/animate.css/\n */\n\nanim8.save('bounce', {\n\tkeyframe: {\n    '0,20,53,80,100': {\n      translate3d: 0,\n      easing: [0.215, 0.610, 0.355, 1.000]\n    },\n    '40,43': {\n      translate3d: {y:-30},\n      easing: [0.755, 0.050, 0.855, 0.060]\n    },\n    '70': {\n      translate3d: {y:-15},\n      easing: [0.755, 0.050, 0.855, 0.060]\n    },\n    '90': {\n      translate3d: {y:-4}\n    }\n\t}\n});\n\nanim8.save('rubberBand', {\n\tkeyframe: {\n    '0,100': {\n      scale3d: 1\n    },\n    '30': {\n      scale3d: {x:1.25, y:0.75}\n    },\n    '40': {\n      scale3d: {x:0.75, y:1.25}\n    },\n    '50': {\n      scale3d: {x:1.15, y:0.85}\n    },\n    '65': {\n      scale3d: {x:0.95, y:1.05}\n    },\n    '75': {\n      scale3d: {x:1.05, y:0.95}\n    }\n\t}\n});\n\nanim8.save('flash', {\n  keyframe: {\n    '0,50,100': {\n      opacity: 1\n    },\n    '25,75': {\n      opacity: 0\n    }\n  }\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('pulse', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0\n    },\n    '50': {\n      scale3d: 1.05\n    },\n    '100': {\n      scale3d: 1.0\n    }\n  }\n});\n\nanim8.save('shake', {\n  keyframe: {\n    '0,100': {\n      translateX: 0.0\n    },\n    '10,30,50,70,90': {\n      translateX: -10.0\n    },\n    '20,40,60,80': {\n      translateX: 10.0\n    } \n  }\n});\n\nanim8.save('swing', {\n  keyframe: {\n    '0': {\n      rotate: 0\n    },\n    '20': {\n      rotate: 15\n    },\n    '40': {\n      rotate: -10\n    },\n    '60': {\n      rotate: 5\n    },\n    '80': {\n      rotate: -5\n    },\n    '100': {\n      rotate: 0\n    }\n  },\n  initial: {\n    origin: 'center top'\n  }\n});\n\nanim8.save('tada', {\n  keyframe: {\n    '0,100': {\n      scale3d: 1,\n      rotate: 0\n    },\n    '10,20': {\n      scale3d: 0.9,\n      rotate: -3\n    },\n    '30,50,70,90': {\n      scale3d: 1.1,\n      rotate: 3\n    },\n    '40,60,80': {\n      scale3d: 1.1,\n      rotate: -3\n    }\n  }\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('wobble', {\n  keyframe: {\n    '0,100': {\n      translateX: 0,\n      rotate: 0\n    },\n    '15': {\n      translateX: -25,\n      rotate: -5\n    },\n    '30': {\n      translateX: 20,\n      rotate: 3\n    },\n    '45': {\n      translateX: -15,\n      rotate: -3\n    },\n    '60': {\n      translateX: 10,\n      rotate: 2\n    },\n    '75': {\n      translateX: -5,\n      rotate: -1\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('bounceIn', {\n  keyframe: {\n    '0': {\n      opacity: 0.0,\n      scale3d: 0.3\n    },\n    '20': {\n      scale3d: 1.1\n    },\n    '40': {\n      scale3d: 0.9\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 1.03\n    },\n    '80': {\n      scale3d: 0.97\n    },\n    '100': {\n      opacity: 1.0,\n      scale3d: 1.0\n    }\n  }\n}, {\n  easing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceInDown', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: -3000\n    },\n    '60': {\n      opacity: 1,\n      translateY: 25\n    },\n    '75': {\n      translateY: -10\n    },\n    '90': {\n      translateY: 5\n    },\n    '100': {\n      translateY: 0\n    }\n  }\n}, {\n  duration: 2000,\n  easing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceInLeft', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -3000\n    },\n    '60': {\n      opacity: 1,\n      translateX: 25\n    },\n    '75': {\n      translateX: -10\n    },\n    '90': {\n      translateX: 5\n    },\n    '100': {\n      translateX: 0\n    }\n  }\n}, {\n  duration: 2000,\n  teasing: [0.215, 0.610, 0.355, 1.000]\n});\n\n\nanim8.save('bounceInRight', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: 3000\n    },\n    '60': {\n      opacity: 1,\n      translateX: -25\n    },\n    '75': {\n      translateX: 10\n    },\n    '90': {\n      translateX: -5\n    },\n    '100': {\n      translateX: 0\n    }\n  }\n}, {\n  duration: 2000,\n  teasing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceInUp', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: 3000\n    },\n    '60': {\n      opacity: 1,\n      translateY: -25\n    },\n    '75': {\n      translateY: 10\n    },\n    '90': {\n      translateY: -5\n    },\n    '100': {\n      translateY: 0\n    }\n  }\n}, {\n  duration: 1000,\n  teasing: [0.215, 0.610, 0.355, 1.000]\n});\n\nanim8.save('bounceOut', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0\n    },\n    '20': {\n      scale3d: 0.9\n    },\n    '50,55': {\n      opacity: 1,\n      scale3d: 1.1\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.3\n    }\n  }\n}, {\n  duration: 750\n});\n\nanim8.save('bounceOutDown', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '20': {\n      translateY: 10\n    },\n    '40,45': {\n      opacity: 1,\n      translateY: -20\n    },\n    '100': {\n      opacity: 0,\n      translateY: 2000\n    }\n  }\n});\n\nanim8.save('bounceOutLeft', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '20': {\n      opacity: 1,\n      translateX: 20\n    },\n    '100': {\n      opacity: 0,\n      translateX: -2000\n    }\n  }\n});\n\nanim8.save('bounceOutRight', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '20': {\n      opacity: 1,\n      translateX: -20\n    },\n    '100': {\n      opacity: 0,\n      translateX: 2000\n    }\n  }\n});\n\nanim8.save('bounceOutUp', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '20': {\n      translateY: -10\n    },\n    '40,45': {\n      opacity: 1,\n      translateY: 20\n    },\n    '100': {\n      opacity: 0,\n      translateY: -2000\n    }\n  }\n});\n\nanim8.save('fadeIn', {\n  keyframe: {\n    '0': {\n      opacity: 0\n    },\n    '100': {\n      opacity: 1\n    }\n  }\n});\n\nanim8.save('fadeInDown', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: -100\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeInDownBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: -2000\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('fadeInLeft', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -100\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeInLeftBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -2000\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('fadeInRight', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: 100\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeInRightBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: 2000\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('fadeInUp', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: 100\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  }, \n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeInUpBig', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateY: 2000\n    },\n    '100': {\n      opacity: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('fadeOut', {\n  keyframe: {\n    '0': {\n      opacity: 1\n    },\n    '100': {\n      opacity: 0\n    }\n  }\n});\n\nanim8.save('fadeOutDown', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: 100\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeOutDownBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: 2000\n    }\n  }\n});\n\nanim8.save('fadeOutLeft', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: -100\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeOutLeftBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: -2000\n    }\n  }\n});\n\nanim8.save('fadeOutRight', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: 100\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('fadeOutRightBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: 2000\n    }\n  }\n});\n\nanim8.save('fadeOutUp', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: -100\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('fadeOutUpBig', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateY: 0\n    },\n    '100': {\n      opacity: 0,\n      translateY: -2000\n    }\n  }\n});\n\nanim8.save('flip', {\n  keyframe: {\n    '0': {\n      translateZ: 0,\n      rotate3d: {x:0, y:1, z:0, angle:-360},\n      scale3d: 1.0,\n      easing: 'cssEaseOut'\n    },\n    '40': {\n      translateZ: 150,\n      rotate3d: {x:0, y:1, z:0, angle:-190},\n      easing: 'cssEaseOut'\n    },\n    '50': {\n      translateZ: 150,\n      rotate3d: {x:0, y:1, z:0, angle:-170},\n      easing: 'cssEaseIn'\n    },\n    '80': {\n      translateZ: 0,\n      rotate3d: {x:0, y:1, z:0, angle:0},\n      scale3d: 0.95,\n      easing: 'cssEaseIn'\n    },\n    '100': {\n      scale3d: 1.0\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n});\n\nanim8.save('flipInX', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      rotate3d: {x:1, y:0, z:0, angle:90},\n      easing: 'cssEaseIn'\n    },\n    '40': {\n      rotate3d: {x:1, y:0, z:0, angle:-20},\n      easing: 'cssEaseIn'\n    },\n    '60': {\n      opacity: 1,\n      rotate3d: {x:1, y:0, z:0, angle:10}\n    },\n    '80': {\n      rotate3d: {x:1, y:0, z:0, angle:-5}\n    },\n    '100': {\n      rotate3d: {x:1, y:0, z:0, angle:0}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n});\n\nanim8.save('flipInY', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      rotate3d: {x:0, y:1, z:0, angle:90},\n      easing: 'cssEaseIn'\n    },\n    '40': {\n      rotate3d: {x:0, y:1, z:0, angle:-20},\n      easing: 'cssEaseIn'\n    },\n    '60': {\n      opacity: 1,\n      rotate3d: {x:0, y:1, z:0, angle:10}\n    },\n    '80': {\n      rotate3d: {x:0, y:1, z:0, angle:-5}\n    },\n    '100': {\n      rotate3d: {x:0, y:1, z:0, angle:0}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n});\n\nanim8.save('flipOutX', {\n  keyframe: {\n    '0': {\n      rotate3d: {x:1, y:0, z:0, angle:0}\n    },\n    '30': {\n      opacity: 1,\n      rotate3d: {x:1, y:0, z:0, angle:-20}\n    },\n    '100': {\n      opacity: 0,\n      rotate3d: {x:1, y:0, z:0, angle:90}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n}, {\n  duration: 750\n});\n\nanim8.save('flipOutY', {\n  keyframe: {\n    '0': {\n      rotate3d: {x:0, y:1, z:0, angle:0}\n    },\n    '30': {\n      opacity: 1,\n      rotate3d: {x:0, y:1, z:0, angle:-20}\n    },\n    '100': {\n      opacity: 0,\n      rotate3d: {x:0, y:1, z:0, angle:90}\n    }\n  },\n  initial: {\n    backface: 1.0\n  },\n  final: {\n    backface: 0.0\n  }\n}, {\n  duration: 750\n});\n\nanim8.save('lightSpeedIn', {\n  keyframe: {\n    '0': {\n      translateX: 100,\n      skewX: -30,\n      opacity: 0\n    },\n    '60': {\n      skewX: 20,\n      opacity: 1\n    },\n    '80': {\n      skewX: -5\n    },\n    '100': {\n      translateX: 0,\n      skewX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n}, {\n  easing: 'cssEaseOut'\n});\n\nanim8.save('lightSpeedOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0,\n      skewX: 0\n    },\n    '100': {\n      opacity: 0,\n      translateX: 100,\n      skewX: 30\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n}, {\n  easing: 'cssEaseIn'\n});\n\nanim8.save('rotateIn', {\n  keyframe: {\n    '0': {\n      rotate: -200,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'center'\n  }\n});\n\nanim8.save('rotateInDownLeft', {\n  keyframe: {\n    '0': {\n      rotate: -45,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n});\n\nanim8.save('rotateInDownRight', {\n  keyframe: {\n    '0': {\n      rotate: 45,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('rotateInUpLeft', {\n  keyframe: {\n    '0': {\n      rotate: 45,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n});\n\nanim8.save('rotateInUpRight', {\n  keyframe: {\n    '0': {\n      rotate: -90,\n      opacity: 0\n    },\n    '100': {\n      rotate: 0,\n      opacity: 1\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('rotateOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: 200\n    }\n  },\n  initial: {\n    origin: 'center'\n  }\n});\n\nanim8.save('rotateOutDownLeft', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: 45\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n})\n\nanim8.save('rotateOutDownRight', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: -45\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('rotateOutUpLeft', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: -45\n    }\n  },\n  initial: {\n    origin: 'left bottom'\n  }\n});\n\nanim8.save('rotateOutUpRight', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0,\n      rotate: 90\n    }\n  },\n  initial: {\n    origin: 'right bottom'\n  }\n});\n\nanim8.save('hinge', {\n  keyframe: {\n    '0': {\n      rotate: 0\n    },\n    '20,60': {\n      rotate: 80\n    },\n    '40': {\n      rotate: 60\n    },\n    '80': {\n      rotate: 60,\n      translateY: 0,\n      opacity: 1\n    },\n    '100': {\n      rotate: 0,\n      translateY: 700,\n      opacity: 0\n    }\n  },\n  initial: {\n    origin: 'top left'\n  }\n}, {\n  easing: 'cssEaseInOut',\n  duration: 2000\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('rollIn', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      translateX: -100,\n      rotate: -120\n    },\n    '100': {\n      opacity: 1,\n      translateX: 0,\n      rotate: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\n\nanim8.save('rollOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      translateX: 0,\n      rotate: 0\n    },\n    '100': {\n      opacity: 0.0,\n      translateX: 100,\n      rotate: 120\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('zoomIn', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.3\n    },\n    '50': {\n      opacity: 1\n    },\n    '100': {\n      scale3d: 1\n    }\n  }\n});\n\nanim8.save('zoomInDown', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: -1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: 60,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('zoomInLeft', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: -1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: 10,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('zoomInRight', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: 1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: -10,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateX: 0\n    }\n  }\n});\n\nanim8.save('zoomInUp', {\n  keyframe: {\n    '0': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: 1000,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '60': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: -10,\n      easing: [0.175, 0.885, 0.320, 1.000]\n    },\n    '100': {\n      scale3d: 1,\n      translateY: 0\n    }\n  }\n});\n\nanim8.save('zoomOut', {\n  keyframe: {\n    '0': {\n      opacity: 1,\n      scale3d: 1\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.3\n    }\n  }\n}, {\n  duration: 500\n});\n\nanim8.save('zoomOutDown', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateY: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: -60,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: 2000,\n      origin: 'center bottom'\n    }\n  }\n});\n\nanim8.save('zoomOutLeft', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateX: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: 42,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: -2000,\n      origin: 'left center'\n    }\n  }\n});\n\nanim8.save('zoomOutRight', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateX: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateX: -42,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateX: 2000,\n      origin: 'right center'\n    }\n  }\n});\n\nanim8.save('zoomOutUp', {\n  keyframe: {\n    '0': {\n      scale3d: 1.0,\n      translateY: 0,\n      origin: 'center'\n    },\n    '40': {\n      opacity: 1,\n      scale3d: 0.475,\n      translateY: 60,\n      easing: [0.550, 0.055, 0.675, 0.190]\n    },\n    '100': {\n      opacity: 0,\n      scale3d: 0.1,\n      translateY: -2000,\n      origin: 'center bottom'\n    }\n  }\n});\n\nanim8.save('slideInDown', {\n  keyframe: {\n    '0': {\n      translateY: -100\n    },\n    '100': {\n      translateY: 0\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('slideInLeft', {\n  keyframe: {\n    '0': {\n      translateX: -100\n    },\n    '100': {\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('slideInRight', {\n  keyframe: {\n    '0': {\n      translateX: 100\n    },\n    '100': {\n      translateX: 0\n    }\n  },\n  units: {\n    translateX: '%'\n  }\n});\n\nanim8.save('slideInUp', {\n  keyframe: {\n    '0': {\n      translateY: 100\n    },\n    '100': {\n      translateY: 0\n    }\n  },\n  units: {\n    translateY: '%'\n  }\n});\n\nanim8.save('slideOutDown', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '100': {\n      translateY: 100\n    }\n  },\n  units: {\n    translateY: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\nanim8.save('slideOutLeft', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '100': {\n      translateX: -100\n    }\n  },\n  units: {\n    translateX: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\nanim8.save('slideOutRight', {\n  keyframe: {\n    '0': {\n      translateX: 0\n    },\n    '100': {\n      translateX: 100\n    }\n  },\n  units: {\n    translateX: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\nanim8.save('slideOutUp', {\n  keyframe: {\n    '0': {\n      translateY: 0\n    },\n    '100': {\n      translateY: -100\n    }\n  },\n  units: {\n    translateY: '%'\n  },\n  final: {\n    visibility: 0\n  }\n});\n\n/* anim8js animations */\n\nanim8.save('blurOut', {\n  keyframe: {\n    '0': {\n      blur: 0,\n      opacity: 1\n    },\n    '50': {\n      blur: 4,\n      opacity: 0.9\n    },\n    '100': {\n      blur: 5,\n      opacity: 0\n    }\n  }\n});\n\nanim8.save('blurIn', {\n  keyframe: {\n    '0': {\n      blur: 5,\n      opacity: 0\n    },\n    '50': {\n      blur: 4,\n      opacity: 0.9\n    },\n    '100': {\n      blur: 0,\n      opacity: 1\n    }\n  }\n});\n\n/**\n * Generate animations for all permutations of the following concepts:\n *\n * (slide|fade|zoom)(Out|In)(Down|Up)(Right|Left)(|x2|Big)\n */\n(function() \n{\n  var actions = {\n    'slide': {},\n    'fade': {opacity:{from:0,to:1}},\n    'zoom': {scale3d:{from:0,to:1}}\n  };\n  \n  var directions = {\n    'Out':  {from:0, to:1},\n    'In':   {from:1, to:0}\n  };\n  \n  var vertical = {\n    'Down': 1,\n    'Up': -1\n  };\n  \n  var horizontal = {\n    'Right': 1,\n    'Left': -1\n  };\n  \n  var sizes = {\n    '':     {value: 100, unit: '%'},\n    'x2':   {value: 200, unit: '%'},\n    'Big':  {value: 2000, unit: 'px'}\n  };\n  \n  for ( var a in actions )\n  {\n    var attrs = actions[ a ];\n    \n    for ( var d in directions )\n    {\n      var dir = directions[ d ];\n      \n      for ( var v in vertical )\n      {\n        var ver = vertical[ v ];\n        \n        for ( var h in horizontal )\n        {\n          var hor = horizontal[ h ];\n          \n          for ( var s in sizes )\n          {\n            var siz = sizes[ s ];\n            \n            var animName = a + d + v + h + s;\n            \n            if ( animName in anim8.animation )\n            {\n              continue;\n            }\n            \n            var anim = \n            {\n              keyframe: {\n                from: {\n                  translateX: hor * dir.from * siz.value,\n                  translateY: ver * dir.from * siz.value\n                },\n                to: {\n                  translateX: hor * dir.to * siz.value,\n                  translateY: ver * dir.to * siz.value\n                }\n              },\n              units: {\n                translateX: siz.unit,\n                translateY: siz.unit\n              }\n            };\n            \n            for (var attr in attrs)\n            {\n              var attribute = attrs[attr];\n              \n              anim.keyframe.from[ attr ] = dir.to * attribute.to + dir.to * attribute.from;\n              anim.keyframe.to[ attr ]   = dir.from * attribute.from + dir.from * attribute.to;\n            }\n            \n            anim8.save( animName, anim );\n          }\n        }\n      }\n    }\n  }\n  \n})();","(function($, m8)\n{\n  var SYMBOL = {\n    REPEAT: 'x',\n    DELAY: '~',\n    SLEEP: 'z'\n  };\n  \t\n  $.fn.animators = function()\n  {\n\t\treturn m8( this.get() );\t\t\n  };\n  \n  $.fn.play = function( animationText, all )\n  {\n    var anim = parseAnimation( animationText );\n    \n    if ( anim !== false )\n    {\n      this.animators().play( anim.animation, anim.options, all );\n    }\n    \n    return this; \n  };\n  \n  $.fn.dataPlay = function( animationAttribute, all )\n  {\n\t\treturn this.filter(function()\n\t  {\n\t\t\tvar animationText = $(this).data( animationAttribute );\n\t\t\n\t\t\tif ( animationText )\n\t\t\t{\n\t\t    var anim = parseAnimation( animationText );\n\t\t\n\t\t\t\tif ( anim !== false )\n\t\t\t\t{\t\t\t\t\n\t\t\t  \tm8( this ).play( anim.animation, anim.options, all );\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n  \t});\n  };\n  \n  $.fn.queueAnimation = function( animationText )\n  {\n    var anim = parseAnimation( animationText );\n    \n    if ( anim !== false )\n    {\n      this.animators().queue( anim.animation, anim.options );\n    }\n    \n    return this; \n  };\n  \n  $.fn.dataQueue = function( animationAttribute )\n  {\t\n  \treturn this.filter(function()\n    {\n  \t\tvar animationText = $(this).data( animationAttribute );\n\t\t\n  \t\tif ( animationText )\n  \t\t{\n  \t    var anim = parseAnimation( animationText );\n\t\t\n\t\t\t\tif ( anim !== false )\n\t\t\t\t{\n\t\t   \t\tm8( this ).queue( anim.animation, anim.options );\t\t\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n  \t\t}\n\t\t\t\n\t\t\treturn false;\n    });\n  };\n\n  $.fn.transition = function( animationText, transitionText )\n  {\n    var anim = parseAnimation( animationText );\n    var tran = parseTransition( transitionText );\n    \n    if ( anim !== false )\n    {\n      this.animators().transition( tran.time, tran.delta, tran.easing, anim.animation, anim.options );\n    }\n    \n    return this; \n  };\n  \n  $.fn.dataTransition = function( animationAttribute, transitionAttribute )\n  {\t\n\t\treturn this.filter(function()\n\t\t{\n\t\t\tvar animationText = $(this).data( animationAttribute );\n\t\t\tvar transitionText = $(this).data( transitionAttribute );\n\t\t\n\t\t\tif ( animationText && transitionText )\n\t\t\t{\n\t\t    var anim = parseAnimation( animationText );\n\t\t\t\tvar tran = parseTransition( transitionText );\n\n\t\t\t\tif ( anim !== false )\n\t\t\t\t{\n\t\t\t  \tm8( this ).transition( tran.time, tran.delta, tran.easing, anim.animation, anim.options );\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t});\n  };\n  \n  $.fn.pause = function()\n  {\n    this.animators().pause();\n    \n    return this;\n  };\n  \n  $.fn.resume = function()\n  {\n    this.animators().resume();\n    \n    return this;\n  };\n  \n  $.fn.restore = function()\n  {\n    this.animators().restore();\n    \n    return this;\n  };\n  \n  $.fn.stopIt = function()\n  {\n    this.animators().stop();\n    \n    return this;\n  };\n  \n  $.fn.finishIt = function()\n  {\n    this.animators().finish();\n    \n    return this;\n  };\n  \n  $.fn.endIt = function()\n  {\n    this.animators().end();\n    \n    return this;\n  };\n  \n  $.fn.eventsFor = function( attributes, callback, context )\n  {\n    this.animators().eventsFor( attributes, callback, context );\n    \n    return this;\n  };\n  \n  $.fn.springsFor = function( attributes, callback, context )\n  {\n    this.animators().springsFor( attributes, callback, context );\n    \n    return this;\n  };\n  \n  $.fn.setAttributes = function( attributes )\n  {\n    this.animators().set( attributes );\n    \n    return this;\n  };\n  \n  $.fn.getAttributes = function( attributes )\n  {\n    return this.animators().get( attributes );\n  };\n  \n  $.fn.spring = function( spring  )\n  {\n    return this.animators().spring( spring );\n  };\n  \n  $.fn.unspring = function( springs )\n  {\n    this.animators().unspring( springs );\n    \n    return this;\n  };\n  \n  $.fn.applyInitialState = function( attributes )\n  {\n    this.animators().applyInitialState( attributes );\n\t \t \n\t  return this;\n  };\n  \n  $.fn.isAnimating = function( attributes )\n  {\n    return this.animators().isAnimating();\n  };\n  \n  $.fn.hasEvents = function( attributes )\n  {\n    return this.animators().hasEvents();\n  };\n  \n  var parseAnimation = function( text )\n  {\n\t\tif ( !anim8.isString( text ) )\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n    var parts = text.split(' ');\n    var options = {};\n    var animation = null;\n    \n    for (var i = 0; i < parts.length; i++)\n    {\n      var p = parts[i];\n            \n      if ( p in m8.animation )\n      {\n        animation = p;\n      }\n      else if ( m8.isEasingName( p ) )\n      {\n        options.easing = p;\n      }\n      else if ( p.charAt(0) === SYMBOL.REPEAT )\n      {\n        var repeats = parseInt( p.substring(1) );\n        \n        if (!isNaN(repeats)) \n        {\n          options.repeat = repeats;\n        }\n      }\n      else if ( p.charAt(0) === SYMBOL.SLEEP )\n      {\n        var sleeps = m8.time( p.substring(1) );\n        \n        if ( sleeps !== false )\n        {\n          options.sleep = sleeps;\n        }\n      }\n      else if ( p.charAt(0) === SYMBOL.DELAY )\n      {\n        var delays = m8.time( p.substring(1) );\n        \n        if ( delays !== false )\n        {\n          options.delay = delays;\n        }\n      }\n      else\n      {\n        var duration = m8.time( p );\n        \n        if ( duration !== false )\n        {\n          options.duration = duration;\n        }\n      }\n    }\n    \n    if ( animation === null )\n    {\n      return false;\n    }\n    \n    return {\n      animation: animation,\n      options: options\n    };\n  };\n\n  var parseTransition = function( text )\n  {\n\t\tif ( !anim8.isString( text ) )\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n    var transition = \n    {\n      time: 500,\n      delta: 0.2,\n      easing: 'ease'\n    };\n    \n    var parts = text.split(' ');\n    \n    for (var i = 0; i < parts.length; i++)\n    {\n      var p = parts[i];\n      var num = parseFloat(p);\n      \n      if ( m8.isEasingName( p ) )\n      {\n        transition.easing = p;\n      }\n      else if ( !isNaN(num) && num >= 0.0 && num <= 1.0 )\n      {\n        transition.delta = num;\n      }\n      else\n      {\n        var times = m8.time( p );\n        \n        if ( times !== false )\n        {\n          transition.time = times;\n        }\n      }\n    }\n    \n    return transition;\n  };\n  \n})(jQuery, anim8);\n"],"sourceRoot":"/source/"}