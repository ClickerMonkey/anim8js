{"version":3,"sources":["anim8js-core.js","anim8js-easing.js","anim8js-path.js","anim8js-event.js","anim8js-animation.js","anim8js-animator.js","anim8js-color.js","anim8js-calculator.js","anim8js-parser-deltavalues.js","anim8js-parser-final.js","anim8js-parser-initial.js","anim8js-parser-keyframe.js","anim8js-object.js"],"names":["m8","anim8","subjects","this","window","args","Array","prototype","slice","call","arguments","isArray","i","length","push","animators","arg","Animator","factory","factories","parseAnimators","noop","isDefined","x","isFunction","isNumber","isString","isObject","isElement","HTMLElement","nodeType","nodeName","now","Date","getTime","copy","p","clean","splice","prop","mapify","arr","value","map","coalesce","a","b","c","d","delegate","functionName","returnThis","apply","results","extend","target","eventize","object","onListeners","$this","property","events","callback","context","split","on","once","offListeners","listeners","event","eventListeners","k","off","$on","$once","triggerListeners","argument","clear","trigger","time","regex","conversions","s","sec","min","ms","hr","parsed","exec","parseFloat","unit","Math","floor","subject","factoryName","is","attribute","attr","defaultValue","easing","indexOf","pair","e","t","easingType","bezier","isEasingName","calculator","calc","parser","animation","options","Animation","parserName","defaults","duration","teasing","delay","sleep","repeat","each","iterator","filter","func","isAnimating","pause","transition","play","resume","stop","finish","queue","restore","eventsFor","set","running","animating","add","animator","active","requestAnimationFrame","run","preupdate","update","finished","cleanup","out","inout","pong","linear","quad","ease","i2","x2","eq1","eq2","cubic","quartic","quintic","back","x3","sine","sin","overshot","elastic","scale","wave","revisit","abs","lasso","cos","slowbounce","bounce","smallbounce","inv","tinybounce","hesitant","sqrt","sqrtf","log10","slingshot","circular","gentle","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","CalcBezier","aT","GetSlope","GetTForX","aX","aGuessT","currentSlope","currentX","cssEase","cssEaseIn","cssEaseOut","cssEaseInOut","cssLinear","Path","reset","name","points","trues","hasTrue","compute","ps","reference","last","first","point","DeltaPath","deltas","delta","ds","end","d0","d1","pd","p0","p1","interpolate","PointPath","KeyframePath","easings","ea","CubicPath","p2","p3","d2","d3","i1","i3","adds","QuadraticPath","CompiledPath","path","pointCount","create","index","Tween","start","JumpPath","EventState","CREATED","DELAYED","ANIMATING","SLEEPING","PAUSED","FINISHED","Event","totalTime","newInstance","EventInstance","state","pauseTime","pauseState","elapsed","next","frame","updated","startup","catchup","progress","applyValue","newState","getPoint","getFuture","fdelta","getDelta","getStart","getEnd","baseValue","isDelayed","isSleeping","timeRemaining","isFinished","isPaused","hasStates","states","stateText","input","isSaved","mergeOptions","durations","delays","sleeps","repeats","newEvents","save","attributes","wasFinished","placeEvent","trimEvents","createEvents","onAnimation","maxRemaining","max","transitionTime","transitionDelta","transitionEasing","e1","e2","transitionPath","transitionEvent","eventCount","hasEvents","color","r","g","parsers","parse","parseComponent","parseFunction","v","vparsed","isNaN","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","named","matches","parseInt","invalidColor","format","ca","cr","cg","cb","toString","methods","clone","amount","sub","zero","distance","distanceSq","amountScale","mul","ab","isValid","isZero","epsilon","isEqual","y","aliases","left","right","middle","center","top","bottom","_x","_y","dx","dy","z","dz","angle","da","dr","dg","db","number","values","deltaObject","calculators","initial","keyframe","kframes","sort","from","half","to","times","lastTime","maxTime","order","key","pathEasings","$animator"],"mappings":"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","file":"anim8js-object.min.js","sourcesContent":["/*\n\nvar script = document.scripts[document.scripts.length - 1];\n\nvar m8prop = script.dataset['prop'] || '$';\nvar m8access = script.dataset['access'] || 'property';\nvar m8interval = script.dataset['interval'] || 10;\n\n */\n\nm8 = anim8 = function(subjects) \n{\n  if ( this === window ) \n  {\n\t\tvar args = Array.prototype.slice.call( arguments );\n\t\t\n\t\tif ( !anim8.isArray( subjects ) )\n\t\t{\n\t\t\tsubjects = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < args.length; i++)\n\t\t\t{\n\t\t\t\tsubjects.push( args[i] );\n\t\t\t}\n\t\t}\n\t\t\n    var animators = [];\n    \n    for (var i = 0; i < subjects.length; i++) \n    {\n      var arg = subjects[ i ];\n      \n      if ( arg instanceof anim8.Animator ) \n      {\n        animators.push( arg );\n      } \n      else\n      {\n\t\t\t\tvar factory = anim8.factories( arg );\n\t\t\t\t\n\t\t\t\tif (factory !== false)\n\t\t\t\t{\n          factory.parseAnimators( arg, animators );\n\t\t\t\t}\n      }\n    }\n\t\t\n\t\treturn new anim8( animators );\n  } \n  else \n  {\n    for (var i = 0; i < subjects.length; i++) \n    {\n      this.push( subjects[ i ] );\n    }\n  }\n};\n\n/*****************************************************************\n  UTILITY FUNCTIONS\n******************************************************************/\n\n\nanim8.noop = function() {};\n\nanim8.isDefined = function(x) \n{\n  return typeof x !== 'undefined';\n};\n\nanim8.isFunction = function(x) \n{\n  return typeof x === 'function';\n};\n\nanim8.isNumber = function(x) \n{\n  return typeof x === 'number';\n};\n\nanim8.isString = function(x) \n{\n  return typeof x === 'string';\n};\n\nanim8.isArray = function(x) \n{\n  return x instanceof Array;\n};\n\nanim8.isObject = function(x) \n{\n  return typeof x === 'object';\n};\n\nanim8.isElement = function(x)\n{\n  return typeof HTMLElement === \"object\" ? x instanceof HTMLElement :\n  x && typeof x === \"object\" && x !== null && x.nodeType === 1 && typeof x.nodeName === \"string\";\n};\n\nanim8.now = function() \n{\n  return new Date().getTime();\n};\n\nanim8.copy = function(x) \n{\n  if ( anim8.isArray(x) ) \n  {\n    var copy = [];\n    for (var i = 0; i < x.length; i++) \n    {\n      copy.push( anim8.copy( x[i] ) );\n    }\n    x = copy;\n  }\n  else if ( anim8.isObject(x) ) \n  {\n    var copy = {};\n    for (var p in x) \n    {\n      copy[p] = anim8.copy( x[p] );\n    }\n    x = copy;\n  }\n  \n  return x;\n};\n\nanim8.clean = function(x)\n{\n\tif ( anim8.isArray( x ) )\n\t{\n\t\tfor (var i = x.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif ( !x[i] )\n\t\t\t{\n\t\t\t\tx.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t}\n\telse if ( anim8.isObject( x ) )\n\t{\n\t\tfor (var prop in x)\n\t\t{\n\t\t\tif (!x[prop])\n\t\t\t{\n\t\t\t\tdelete x[prop];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn x;\n}\n\nanim8.mapify = function(arr, value)\n{\n\tvar map = {};\n\t\n\tfor (var i = 0; i < arr.length; i++)\n\t{\n\t\tmap[ arr[i] ] = value;\n\t}\n\t\n\treturn map;\n};\n\nanim8.coalesce = function(a, b, c, d) \n{\n  if (anim8.isDefined(a)) return a;\n  if (anim8.isDefined(b)) return b;\n  if (anim8.isDefined(c)) return c;\n  return d;\n};\n\nanim8.delegate = function(functionName, returnThis) \n{  \n  if (returnThis) \n  {\n    return function() \n    {\n      for (var i = 0; i < this.length; i++) \n      {\n        this[i][functionName].apply( this[i], arguments );\n      }\n      \n      return this;  \n    };\n  }\n  \n  return function() \n  {\n    var results = [];\n    \n    for (var i = 0; i < this.length; i++) \n    {\n      results.push( this[i][functionName].apply( this[i], arguments ) );\n    }\n    \n    return results;\n  };\n  \n};\n\nanim8.extend = function(target)\n{\n\tfor (var i = 1; i < arguments.length; i++)\n\t{\n\t\tvar a = arguments[i];\n\t\t\n\t\tif ( anim8.isObject( a ) )\n\t\t{\n\t\t\tfor (var prop in a)\n\t\t\t{\n\t\t\t\tif (!(prop in target))\n\t\t\t\t{\n\t\t\t\t\ttarget[prop] = a[prop];\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t}\n\t\n\treturn target;\n};\n\nanim8.eventize = function(object)\n{\n  var onListeners = function($this, property, events, callback, context)\n  {\n    events = events.split(' ');\n    \n    if ( !anim8.isDefined( $this[ property ] ) )\n    {\n      $this[property] = {};\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      if ( !anim8.isDefined( $this[ property ][ events[i] ] ) )\n      {\n        $this[ property ][ events[i] ] = [];\n      }\n      \n      $this[ property ][ events[i] ].push( [ callback, context || this ] );\n    }\n  };\n  \n  object.on = function(events, callback, context)\n  {\n    onListeners( this, '$on', events, callback, context );\n  };\n  \n  object.once = function(events, callback, context)\n  {\n    onListeners( this, '$once', events, callback, context );\n  };\n  \n  var offListeners = function(listeners, event, callback)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var k = eventListeners.length - 1; k >= 0; k--)\n      {\n        if (eventListeners[ k ][0] === callback)\n        {\n          eventListeners.splice( k, 1 );\n        }\n      }  \n    }\n  };\n  \n  object.off = function(events, callback)\n  {\n    events = events.split(' ');\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      offListeners( this.$on, events[i] );\n      offListeners( this.$once, events[i] );\n    }\n  };\n  \n  var triggerListeners = function(listeners, event, argument, clear)\n  {\n    if (listeners && event in listeners)\n    {\n      var eventListeners = listeners[ event ];\n      \n      for (var i = 0; i < eventListeners.length; i++)\n      {\n        var callback = eventListeners[ i ];\n        \n        callback[0].call( callback[1], argument );\n      }\n      \n      if ( clear )\n      {\n        eventListeners.length = 0;\n      }\n    }\n  }\n  \n  object.trigger = function(event, argument)\n  {\n    triggerListeners( this.$on, event, argument, false );\n    triggerListeners( this.$once, event, argument, true );\n  };\n};\n\nanim8.time = (function()\n{\n  var regex = /(-?\\d*(\\.\\d+)|-?\\d+)(s|sec|min|ms|hr)?/;\n  \n  var conversions = {\n    s:    1000,\n    sec:  1000,\n    min:  1000 * 60,\n    ms:   1,\n    hr:   1000 * 60 * 60\n  };\n  \n  return function(time) \n  {  \n    if ( anim8.isNumber( time ) )\n    {\n      return time;\n    }\n    if ( anim8.isString( time ) )\n    {\n      var parsed = regex.exec( time );\n      \n      if ( parsed )\n      {\n        var time = parseFloat( parsed[1] );\n        var unit = parsed[3];\n        \n        if ( unit in conversions )\n        {\n          time *= conversions[ unit ];\n        }\n        \n        return Math.floor(time);\n      }\n    }\n    \n    return false;\n  };\n  \n})();\n\n\n/*****************************************************************\n  REGISTRIES\n******************************************************************/\n\n// FACTORY      {is(o), parseAnimators(o, out)}\nanim8.factories = function(subject) \n{\n\tfor (var factoryName in anim8.factories) \n\t{\n\t\tvar factory = anim8.factories[ factoryName ];\n\t\t\t\n\t\tif ( factory.is( subject ) )\n\t\t{\t\t\t\n\t\t\treturn factory;\n\t\t}\n\t}\n\t\n\tthrow 'No factory exists for subject ' + subject;\n};\n\n/* Attributes are the animatable properties of a subject\n\n  anim8.attribute[name] = {\n    // the default value for an attribute if none exists on the subject\n    defaultValue: 0,\n    // the name of the property this attribute maps to. default value: name of the attribute\n    property: propertyName,\n    // the name of the calculator this attribute requires for mathematical operations. default value: anim8.calculator.default\n    calculator: calculatorName,\n    // the name of an applier that must be called each frame to calculate the value of a dynamic attribute\n    applier: applier,\n    // other values can be specified here that the respective factory might use\n    \"factory specific attributes\"\n  }\n*/\nanim8.attribute = function(attr) \n{\n  if ( anim8.isObject(attr) && anim8.isDefined(attr.defaultValue) ) \n\t{\n    return attr;\n  }\n  if ( anim8.isString(attr) && attr in anim8.attribute ) \n\t{\n    return anim8.attribute[ attr ];\n  }\n\t\n  return anim8.attribute.default;\n};\n\nanim8.attribute.default = {defaultValue: 0};\n \n/* Easings are functions that are magic\n\n  anim8.applier[name] = {\n    // array of properties required \n    properties: [],\n    // function to invoke each frame\n    apply: function(e, anim)\n  }\n*/\n\nanim8.easing = function(easing) \n{\n  if ( anim8.isFunction( easing ) ) \n\t{\n    return easing;\n  }\n\tif ( anim8.isString( easing ) )\n\t{\n\t\tif ( easing in anim8.easing )\n\t\t{\n\t\t\treturn anim8.easing[ easing ];\n\t\t}\n\t\tif ( easing.indexOf('-') !== -1 )\n\t\t{\n\t\t\tvar pair = easing.split('-');\n\t\t\tvar e = pair[0];\n\t\t\tvar t = pair[1];\n\t\t\t\n\t\t\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t\t\t{\t\t\t\t\n\t\t\t\treturn anim8.easingType[ t ]( anim8.easing[ e ] );\n\t\t\t}\n\t\t}\n\t}\n  if ( anim8.isArray( easing ) && easing.length === 4 ) \n\t{\n    return anim8.easing.bezier.apply( null, easing );\n  }\n  if ( !anim8.isDefined( easing ) ) \n\t{\n    return anim8.easing.default;\n  }\n\t\n  throw easing + ' is not a valid easing';\n};\n\nanim8.isEasingName = function(easing)\n{\n  if ( easing in anim8.easing )\n  {\n    return true;\n  }\n  \n\tvar pair = easing.split('-');\n\tvar e = pair[0];\n\tvar t = pair[1];\n\t\n\tif ( pair.length >= 2 && e in anim8.easing && t in anim8.easingType )\n\t{\t\t\t\t\n    return true;\n\t}\n  \n  return false;\n};\n\n/*\n \n \n */\nanim8.easingType = function(easingType)\n{\n\tif ( anim8.isFunction( easingType ) )\n\t{\n\t\treturn easingType;\n\t}\n\tif ( anim8.isString( easingType ) && easingType in anim8.easingType )\n\t{\n\t\treturn anim8.easingType[ easingType ];\n\t}\n\t\n\tthrow easingType + ' is not a valid easing type';\n};\n\n\n/*\n \n \n */\nanim8.calculator = function(calc)\n{\n\tif ( anim8.isObject(calc) )\n\t{\n\t\treturn calc;\n\t}\n\tif ( anim8.isString( calc ) && calc in anim8.calculator )\n\t{\n\t\treturn anim8.calculator[ calc ];\n\t}\n\t\n\treturn anim8.calculator.default;\n\t// throw calc + ' is not a valid calculator';\n};\n\n\n/*\n \n \n */\nanim8.parser = function(parser)\n{\n\tif ( anim8.isFunction( parser ) )\n\t{\n\t\treturn parser;\n\t}\n\tif ( anim8.isString( parser ) && parser in anim8.parser )\n\t{\n\t\treturn anim8.parser[ parser ];\n\t}\n\t\n\treturn false;\n\t// throw parser + ' is not a valid parser';\n};\n\n\n/*\n \n \n */\nanim8.animation = function(animation, options)\n{\n  if ( animation instanceof anim8.Animation )\n  {\n    return animation;\n  }\n\tif ( anim8.isString( animation ) && animation in anim8.animation )\n\t{\n\t\treturn anim8.animation[ animation ];\n\t}\n\tif ( anim8.isObject( animation ) )\n\t{\n\t\tvar events = [];\n\t\t\n\t\toptions = options || {};\n\t\t\n\t\tfor (var parserName in animation)\n\t\t{\n\t\t\tvar parser = anim8.parser( parserName );\n\t\t\t\n\t\t\tif ( parser !== false )\n\t\t\t{\n\t\t\t\tparser( animation, options, events );\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (events.length)\n\t\t{\n\t\t\treturn new anim8.Animation( false, animation, options, events );\n\t\t}\n\t}\n\t\n\treturn false;\n\t// throw animation + ' is not a valid animation';\n};\n\n\n/*\n \n \n */\nanim8.defaults = \n{\n  duration: 1000,\n  easing: 'ease',\n  teasing: 'linear',\n  delay: 0,\n  sleep: 0,\n  repeat: 1\n};\n\n\n/*****************************************************************\n  ANIM8 DEFINITION\n******************************************************************/\n\nanim8.prototype = new Array();\n\nanim8.prototype.each = function(iterator) \n{\n  for (var i = 0; i < this.length; i++) \n  {\n    if ( iterator.call( this[i], this[i], i ) === false ) \n    {\n      break;\n    }\n  }\n\t\n\treturn this;\n};\n\nanim8.prototype.filter = function(func)\n{\n\tfor (var i = this.length - 1; i >= 0; i--)\n\t{\n\t\tif ( func(this[i]) )\n\t\t{\n\t\t\tthis.slice(i, 1);\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\nanim8.prototype.isAnimating = function() \n{\n  for (var i = 0; i < this.length; i++)\n  {\n    if ( this[i].isAnimating() )\n    {\n      return true;\n    }\n  }\n  \n  return false;\n};\n\nanim8.prototype.pause \t\t\t= anim8.delegate('pause', true);\nanim8.prototype.transition \t= anim8.delegate('transition', true);\nanim8.prototype.play \t\t\t\t= anim8.delegate('play', true);\nanim8.prototype.resume \t\t\t= anim8.delegate('resume', true);\nanim8.prototype.stop \t\t\t\t= anim8.delegate('stop', true);\nanim8.prototype.finish \t\t\t= anim8.delegate('finish', true);\nanim8.prototype.queue \t\t\t= anim8.delegate('queue', true);\nanim8.prototype.restore\t\t\t= anim8.delegate('restore', true);\nanim8.prototype.eventsFor   = anim8.delegate('eventsFor', true);\nanim8.prototype.set         = anim8.delegate('set', true);\n\nanim8.prototype.on\t\t\t    = anim8.delegate('on', true);\nanim8.prototype.once\t\t    = anim8.delegate('once', true);\nanim8.prototype.off\t\t\t    = anim8.delegate('off', true);\nanim8.prototype.trigger     = anim8.delegate('trigger', true);\n\n/*****************************************************************\n  ANIM8 ANIMATION LOOP\n******************************************************************/\n\nanim8.running = false;\nanim8.animating = anim8();\n\nanim8.add = function(animator)\n{\n  if ( !animator.active )\n  {\n    anim8.animating.push( animator );\n    \n    animator.active = true;\n  }\n  \n  if ( !anim8.running )\n  {\n    anim8.running = true;\n\t\t\n    requestAnimationFrame( anim8.run );\n  }\n}\n\nanim8.run = function() \n{\n  var now = anim8.now();\n  \n  // notify animators that we're about to update\n  anim8.animating.each(function(animator)\n  {\n    animator.preupdate();\n  });\n  \n  // update animating based on the current time\n  anim8.animating.each(function(animator)\n  {\n    animator.update( now );\n  });\n  \n  // apply the attributes calculated\n  anim8.animating.each(function(animator)\n  {\n    animator.apply();\n  });\n  \n  // if the animator is done remove it\n  anim8.animating.filter(function(animator)\n  {\n    if ( animator.finished )\n    {\n\t\t\tanimator.cleanup();\n      animator.active = false;\n    }\n    \n    return animator.finished;\n  });\n  \n  // if there are animators still remaining call me again!\n  if ( anim8.animating.length )\n  {\n    requestAnimationFrame( anim8.run );\n  } \n  else \n  {\n    anim8.running = false;\n  }\n};","anim8.easingType.in = function(easing) \n{\n\treturn function(x) {\n\t\treturn easing( x );\n\t};\n};\n\nanim8.easingType.out = function(easing) \n{\n\treturn function(x) {\n\t\treturn 1.0 - easing( 1.0 - x );\n\t};\n};\n\nanim8.easingType.inout = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x ) * 0.5;\n\t  } else {\n\t    return 1.0 - (easing( 2.0 - 2.0 * x ) * 0.5);\n\t  }\n\t};\n};\n\nanim8.easingType.pong = function(easing) \n{\n\treturn function(x) {\n\t  if ( x < 0.5 ) {\n\t    return easing( 2.0 * x );\n\t  } else {\n\t    return easing( 2.0 - 2.0 * x );\n\t  }\n\t};\n};\n\nanim8.easing.linear = function(x) \n{\n  return x;\n};\n\nanim8.easing.quad = function(x)\n{\n  return x * x;\n};\n\nanim8.easing.ease = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  var x2 = x * x;\n  var eq1 = (0.3 * i2 * x) + (3.0 * i * x2) + (x2 * x);\n  var eq2 = 1.0 - i2 * i2;\n  \n  return eq1 * i + eq2 * x;\n};\n\nanim8.easing.cubic = function(x) \n{\n  return x * x * x;\n};\n\nanim8.easing.quartic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2;\n};\n\nanim8.easing.quintic = function(x) \n{\n  var x2 = x * x;\n  return x2 * x2 * x;\n};\n\nanim8.easing.back = function(x) \n{\n  var x2 = x * x;\n\tvar x3 = x2 * x;\n\treturn x3 + x2 - x;\n};\n\nanim8.easing.sine = function(x) \n{\n\treturn Math.sin( x * 1.57079632679 );\n};\n\nanim8.easing.overshot = function(x)\n{\n  return (1.0 - x * (7.0 / 10/0)) * x * (10.0 / 3.0);\n};\n\nanim8.easing.elastic = function(x) \n{\n  var x2 = x * x;\n  var x3 = x2 * x;\n  var scale = x2 * ((2.0 * x3) + x2 - (4.0 * x) + 2.0);\n\tvar wave = -Math.sin(x * 10.9955742876);\n\treturn scale * wave;\n};\n\nanim8.easing.revisit = function(x) \n{\n  return Math.abs( x - Math.sin(x * 3.14159265359) );\n};\n\nanim8.easing.lasso = function(x)\n{\n  return (1.0 - Math.cos(x * x * x * 36.0) * (1.0 - x))\n};\n\nanim8.easing.slowbounce = function(x) \n{\n  var x2 = x * x;\n  return (1.0 - Math.abs((1.0 - x2) * Math.cos(x2 * x * 14.8044066016)));\n};\n\nanim8.easing.bounce = function(x) \n{\n  return (1.0 - Math.abs((1.0 - x) * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.smallbounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 14.8044066016)));\n};\n\nanim8.easing.tinybounce = function(x) \n{\n  var inv = 1.0 - x;\n\treturn (1.0 - Math.abs(inv * inv * Math.cos(x * x * 7.0)));\n};\n\nanim8.easing.hesitant = function(x) \n{\n\treturn (Math.cos(x * x * 12.0) * x * (1.0 - x) + x);\n};\n\nanim8.easing.lasso = function(x)\n{\n  var x2 = x * x;\n\treturn (1.0 - Math.cos(x2 * x * 36.0) * (1.0 - x));\n};\n\nanim8.easing.sqrt = function(x)\n{\n  return Math.sqrt( x );\n};\n\nanim8.easing.sqrtf = function(x)\n{\n  var i = (1.0 - x);\n  var i2 = i * i;\n  return ((1.0 - i2 * i2) + x) * 0.5;\n};\n\nanim8.easing.log10 = function(x)\n{\n  return (Math.log10(x) + 2.0) * 0.5;\n};\n\nanim8.easing.slingshot = function(x)\n{\n  if (x < 0.7) {\n\t\treturn (x * -0.357);\n  } else {\n    var d = x - 0.7;\n    return ((d * d * 27.5 - 0.5) * 0.5);\n  }\n};\n\nanim8.easing.circular = function(x)\n{\n  return 1.0 - Math.sqrt( 1 - x * x );\n};\n\nanim8.easing.gentle = function(x)\n{\n  return  (3.0 * (1.0 - x) * x * x) + (x * x * x);\n};\n\n// https://gist.githubusercontent.com/gre/1926947/raw/KeySpline.js\nanim8.easing.bezier = function(mX1, mY1, mX2, mY2) \n{\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n  function C(aA1)      { return 3.0 * aA1; }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function CalcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function GetSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function GetTForX(aX) {\n    // Newton raphson iteration\n    var aGuessT = aX;\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = GetSlope(aGuessT, mX1, mX2);\n      if (currentSlope == 0.0) return aGuessT;\n      var currentX = CalcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n  \n  return function(x) {\n    return CalcBezier( GetTForX( x ), mY1, mY2 );\n  };\n};\n\nanim8.easing.cssEase      = anim8.easing.ease;\nanim8.easing.cssEaseIn    = anim8.easing.quad;\nanim8.easing.cssEaseOut   = anim8.easingType.out( anim8.easing.quad );\nanim8.easing.cssEaseInOut = anim8.easingType.inout( anim8.easing.quad );\nanim8.easing.cssLinear    = anim8.easing.linear;\n\nanim8.easing.default      = anim8.easing.ease;","anim8.Path = function()\n{\n};\n\nanim8.Path.prototype = \n{\n  reset: function(name, calculator, points)\n  {\n    this.name = name;\n    this.calculator = anim8.calculator( calculator );\n    this.points = points;\n    this.trues = this.hasTrue();\n  },\n  compute: function(out, delta) \n\t{\n    return out;\n  },\n  hasTrue: function() \n\t{\n    var ps = this.points;\n    \n    for (var i = 0; i < ps.length; i++) \n    {\n      if (ps[i] === true) \n      {\n        return true;\n      }\n    }\n    return false;\n  },\n  reference: function() \n\t{\n    return this.trues ? this.copy() : this;\n  },\n  last: function()\n  {\n    return this.points[ this.points.length - 1 ];\n  },\n  first: function()\n  {\n    return this.points[ 0 ];\n  },\n  point: function(i)\n  {\n    return this.points[ i ];\n  }\n};\n\n\n\n\n\nanim8.DeltaPath = function(name, calculator, points, deltas) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n};\n\nanim8.DeltaPath.prototype = new anim8.Path();\n\nanim8.DeltaPath.prototype.compute = function(out, delta) \n{\n  var ds = this.deltas;\n  var end = ds.length - 2;\n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.points[i];\n  var p1 = this.points[i + 1];\n  \n  return this.calculator.interpolate( out, p0, p1, pd );\n};\n  \nanim8.DeltaPath.prototype.copy = function() \n{\n    return new anim8.DeltaPath( this.name, anim8.copy(this.points), anim8.copy(this.deltas), this.calculator );\n};\n\n\n\n\n\nanim8.PointPath = function(name, calculator, point)\n{\n  this.reset( name, calculator, [point] );\n};\n\nanim8.PointPath.prototype = new anim8.Path();\n\nanim8.PointPath.prototype.compute = function(out, delta)\n{\n  return this.calculator.copy( out, this.points[0] );\n};\n  \nanim8.PointPath.prototype.copy = function() \n{\n    return new anim8.PointPath( this.name, this.calculator, this.points[0] );\n};\n\n\n\nanim8.KeyframePath = function(name, calculator, points, deltas, easings) \n{\n  this.reset( name, calculator, points );\n  this.deltas = deltas;\n  this.easings = easings;\n};\n\nanim8.KeyframePath.prototype = new anim8.Path();\n\nanim8.KeyframePath.prototype.compute = function(out, delta) \n{  \n  var ds = this.deltas;\n  var end = ds.length - 2;\n  \n  if ( delta < ds[0] ) {\n    return false;\n  }\n  \n  if ( delta > ds[ds.length - 1] ) {\n    return this.points[ds.length - 1];\n  }\n  \n  var i = 0;\n  while (ds[i + 1] < delta && i < end) i++;\n  var d0 = ds[i];\n  var d1 = ds[i + 1];\n  var pd = (delta - d0) / (d1 - d0);\n  var p0 = this.points[i];\n  var p1 = this.points[i + 1];\n  var ea = this.easings[i];\n  \n  return this.calculator.interpolate( out, p0, p1, ea( pd ) );\n};\n  \nanim8.KeyframePath.prototype.copy = function() \n{\n    return new anim8.KeyframePath( this.name, this.calculator, anim8.copy(this.points), anim8.copy(this.deltas), anim8.copy(this.easings) );\n};\n\n\n\n\n\nanim8.CubicPath = function(name, calculator, p0, p1, p2, p3)\n{\n  this.reset( name, calculator, [p0, p1, p2, p3] );\n};\n\nanim8.CubicPath.prototype = new anim8.Path();\n\nanim8.CubicPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var d3 = d1 * d2;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  var i3 = i1 * i2;\n  \n  out = calc.copy( out, this.points[0] );\n  out = calc.scale( out, i3 );\n  out = calc.adds( out, this.points[1], 3 * i2 * d1 );\n  out = calc.adds( out, this.points[2], 3 * i1 * d2 );\n  out = calc.adds( out, this.points[3], d3 );\n  \n  return out;\n};\n  \nanim8.CubicPath.prototype.copy = function() \n{\n    return new anim8.CubicPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2], this.points[3] );\n};\n\n\n\n\n\nanim8.QuadraticPath = function(name, calculator, p0, p1, p2)\n{\n  this.reset( name, calculator, [p0, p1, p2] );\n};\n\nanim8.QuadraticPath.prototype = new anim8.Path();\n\nanim8.QuadraticPath.prototype.compute = function(out, d1)\n{\n  var calc = this.calculator;\n  var d2 = d1 * d1;\n  var i1 = 1 - d1;\n  var i2 = i1 * i1;\n  \n  out = calc.copy( out, this.points[0] );\n  out = calc.scale( out, i2 );\n  out = calc.adds( out, this.points[1], 2 * i1 * d1 );\n  out = calc.adds( out, this.points[2], d2 );\n    \n  return out;\n};\n  \nanim8.QuadraticPath.prototype.copy = function() \n{\n    return new anim8.QuadraticPath( this.name, this.calculator, this.points[0], this.points[1], this.points[2] );\n};\n\n\n\n\n\nanim8.CompiledPath = function(name, path, pointCount)\n{\n  var calc = path.calculator;\n  var points = [];\n  \n  for (var i = 0; i < pointCount; i++)\n  {\n    points.push( path.compute( calc.create(), i / (pointCount - 1) ) );\n  }\n  \n  this.reset( name, calc, points );\n};\n\nanim8.CompiledPath.prototype = new anim8.Path();\n\nanim8.CompiledPath.prototype.compute = function(out, delta)\n{\n  var ps = this.points;\n  var a = Math.floor( delta * ps.length );\n  var index = Math.min( a, ps.length - 1 );\n  \n  return this.calculator.copy( out, ps[ index ] );\n};\n  \nanim8.CompiledPath.prototype.copy = function() \n{\n    return new anim8.CompiledPath( this.name, this, this.points.length );\n};\n\n\n\n\n\nanim8.Tween = function(name, calculator, start, end)\n{\n  this.reset( name, calculator, [start, end] );\n};\n\nanim8.Tween.prototype = new anim8.Path();\n\nanim8.Tween.prototype.compute = function(out, delta)\n{\n  return this.calculator.interpolate( out, this.points[0], this.points[1], delta );\n};\n  \nanim8.Tween.prototype.copy = function() \n{\n    return new anim8.Tween( this.name, this.calculator, this.points[0], this.points[1] );\n};\n\n\n\n\n\nanim8.JumpPath = function(name, calculator, points)\n{\n  this.reset( name, calculator, points );\n};\n\nanim8.JumpPath.prototype = new anim8.Path();\n\nanim8.JumpPath.prototype.compute = function(out, delta)\n{\n  var ps = this.points;\n  var a = Math.floor( delta * ps.length );\n  var index = Math.min( a, ps.length - 1 );\n  \n  return this.calculator.copy( out, ps[ index ] );\n};\n  \nanim8.JumpPath.prototype.copy = function() \n{\n    return new anim8.JumpPath( this.name, this.calculator, anim8.copy(this.points) );\n};","\nanim8.EventState = \n{\n  CREATED: 0,\n  DELAYED: 1,\n  ANIMATING: 2,\n  SLEEPING: 4,\n  PAUSED: 8,\n  FINISHED: 16\n};\n\nanim8.Event = function(attribute, path, duration, easing, delay, sleep, repeat) \n{\n  this.attribute \t= attribute;\n  this.path \t\t\t= path;\n  this.easing \t\t= anim8.easing( easing );\n  this.delay \t\t\t= anim8.coalesce( delay, anim8.defaults.delay );\n  this.duration \t= anim8.coalesce( duration, anim8.defaults.duration );\n  this.sleep \t\t\t= anim8.coalesce( sleep, anim8.defaults.sleep );\n  this.repeat \t\t= anim8.coalesce( repeat, anim8.defaults.repeat );\n};\n\nanim8.Event.prototype = \n{\n\ttotalTime: function()\n\t{\n\t\treturn this.delay + (this.repeat * this.duration) + ((this.repeat - 1) * this.sleep);\n\t},\n  newInstance: function()\n  {\n    return new anim8.EventInstance( this );\n  }\n};\n\nanim8.EventInstance = function(event)\n{\n\tthis.event \t\t\t= event;\n\tthis.attribute \t= event.attribute;\n\tthis.path \t\t\t= event.path;\n\tthis.duration \t= event.duration;\n\tthis.easing \t\t= event.easing;\n\tthis.delay \t\t\t= event.delay;\n\tthis.sleep \t\t\t= event.sleep;\n\tthis.repeat \t\t= event.repeat;\n  this.state \t\t\t= anim8.EventState.CREATED;\n  this.time \t\t\t= 0;\n  this.pauseTime \t= 0;\n  this.pauseState = 0;\n\tthis.elapsed\t\t= 0;\n\tthis.next\t\t\t\t= null;\n};\n\nanim8.EventInstance.prototype = \n{\n  update: function(now, frame) \n\t{\n    var updated = false;\n    \n    this.startup( now );\n    \n    var elapsed = this.catchup( now );\n    \n    if (this.isAnimating()) \n\t\t{\t\t\t\n      var delta = elapsed / this.duration;\n      \n      if (delta >= 1 || this.duration === 0)\n\t\t\t{\n        if (--this.repeat === 0) \n\t\t\t\t{\n          this.finish(frame);\n\t\t\t\t\t\n          return true;\n        } \n\t\t\t\telse \n\t\t\t\t{\n          if (this.sleep)\n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.SLEEPING ); \n            delta = 1;\n            \n            this.trigger('sleeping', this);\n          } \n\t\t\t\t\telse \n\t\t\t\t\t{\n            elapsed = this.progress( elapsed, this.duration, anim8.EventState.ANIMATING );\n            delta -= 1;\n          }\n        }\n      }\n      \n      this.applyValue( frame, frame[this.attribute], delta );\n      updated = true;\n    }\n    \n    return updated;\n  },\n  progress: function(elapsed, time, newState) \n\t{\n    this.time += time;\n\t\tthis.elapsed += time;\n    this.state = newState;\n\t\t\n    return elapsed - time;\n  },\n  finish: function(frame) \n\t{\n    this.applyValue( frame, this.path.calculator.create(), 1.0 );\n    this.state = anim8.EventState.FINISHED;\n    \n    this.trigger('finish', this);\n  },\n  getPoint: function(delta)\n  {\n    return this.path.compute( this.path.calculator.create(), this.easing( delta ) );\n  },\n  getFuture: function(fdelta)\n  {\n    return this.getPoint( Math.min( 1.0, this.getDelta() + fdelta ) );\n  },\n  getDelta: function()\n  {\n    return this.isAnimating() ? Math.min( 1.0, (anim8.now() - this.time) / this.duration ) : 0.0;\n  },\n  getStart: function()\n  {\n    return this.getPoint( 0 );\n  },\n  getEnd: function() \n\t{\n    return this.getPoint( 1 );\n  },\n  applyValue: function(frame, baseValue, delta)\n  {\n    var value = this.path.compute( baseValue, this.easing( delta ) );\n        \n    if ( value !== false )\n    {\n      frame[this.attribute] = value;\n    }\n  },\n\tstartup: function(now)\n\t{\n    if (this.state === anim8.EventState.CREATED) \n\t\t{\n      this.time = now;\n\t\t\t\n      if (this.delay) \n\t\t\t{\n        this.state = anim8.EventState.DELAYED;\n        \n        this.trigger('delaying', this);\n      } \n\t\t\telse \n\t\t\t{\n        this.state = anim8.EventState.ANIMATING;\n      }\n    }\n\t},\n  catchup: function(now) \n\t{\n\t\tvar elapsed = now - this.time;\n\t\t\n    if (this.isDelayed()) \n\t\t{\n      if (elapsed > this.delay) \n\t\t\t{\n        this.trigger('delayed', this);\n        \n        elapsed = this.progress( elapsed, this.delay, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n    if (this.isSleeping()) \n\t\t{\n      if (elapsed > this.sleep)\n\t\t\t{\n        this.trigger('slept', this);\n        \n        elapsed = this.progress( elapsed, this.sleep, anim8.EventState.ANIMATING );\n      }\n    }\n\t\t\n\t\t/*\n    TODO\n\t\tif (this.isAnimating())\n\t\t{\n\t\t\tvar total = (this.sleep + this.duration);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (this.sleep)\n\t\t\t{\n\t\t\t\tvar iterations = (this.sleep + this.duration);\n\t\t\t}\n\t\t}\n\t\t*/\n\t\t\n\t\treturn elapsed;\n  },\n  timeRemaining: function() \n\t{\n\t\treturn this.event.totalTime() - this.elapsed;\n  },\n  pause: function() \n\t{\n    if (this.state !== anim8.EventState.PAUSED) \n\t\t{\n      this.pauseTime = anim8.now();\n      this.pauseState = this.state;\n      this.state = anim8.EventState.PAUSED; \n    }\n  },\n  resume: function() \n\t{\n    if (this.state === anim8.EventState.PAUSED) \n\t\t{\n      this.time += anim8.now() - this.pauseTime;\n      this.state = this.pauseState; \n    }\n  },\n  isAnimating: function() \n\t{\n    return (this.state === anim8.EventState.ANIMATING);\n  },\n  isFinished: function() \n\t{\n    return (this.state === anim8.EventState.FINISHED);\n  },\n  isDelayed: function() \n\t{\n    return (this.state === anim8.EventState.DELAYED);\n  },\n  isPaused: function() \n\t{\n    return (this.state === anim8.EventState.PAUSED);\n  },\n  isSleeping: function() \n\t{\n    return (this.state === anim8.EventState.SLEEPING);\n  },\n  hasStates: function(states) \n\t{\n    return (this.state & states) !== 0;\n  },\n  stateText: function() \n\t{\n    switch(this.state) \n    {\n      case anim8.EventState.CREATED:            return \"created\";\n      case anim8.EventState.DELAYED:            return \"delayed\";\n      case anim8.EventState.ANIMATING:          return \"animating\";\n      case anim8.EventState.SLEEPING:           return \"sleeping\";\n      case anim8.EventState.FINISHED:           return \"finished\";\n    }\n  },\n  hasTrue: function()\n  {\n    return this.path.trues;\n  }\n};\n\nanim8.eventize( anim8.EventInstance.prototype );","\nanim8.Animation = function(name, input, options, events)\n{\n\tthis.name = name;\n\tthis.input = input;\n\tthis.options = options;\n\tthis.events = events;\n};\n\nanim8.Animation.prototype = \n{\n  isSaved: function()\n  {\n    return (this.name !== false);\n  },\n  mergeOptions: function(options, events)\n  { \n    // TODO move to parsers\n    \n    var durations = this.input.durations || {};\n    var easings   = this.input.easings || {};\n    var delays    = this.input.delays || {};\n    var sleeps    = this.input.sleeps || {};\n    var repeats   = this.input.repeats || {};\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      e.easing   = anim8.easing( anim8.coalesce( easings[attr], options.easing, this.options.easing, e.easing ) );\n      e.duration = anim8.coalesce( durations[attr], options.duration, this.options.duration, e.duration );\n      e.delay    = anim8.coalesce( delays[attr], options.delay, this.options.delay, e.delay );\n      e.sleep    = anim8.coalesce( sleeps[attr], options.sleep, this.options.sleep, e.sleep );\n      e.repeat   = anim8.coalesce( repeats[attr], options.repeat, this.options.repeat, e.repeat );\n    }\n  },\n  newEvents: function()\n  {\n    var e = [];\n    \n    for (var i = 0; i < this.events.length; i++)\n    {\n      e.push( this.events[i].newInstance() );\n    }\n    \n    return e;\n  }\n};\n\nanim8.save = function(name, animation, options)\n{\n  var animation = anim8.animation( animation, options );\n  \n  animation.name = name;\n  \n\tanim8.animation[name] = animation;\n};","\n\nanim8.Animator = function(e) \n{\n\tthis.reset( e );\n};\n\nanim8.Animator.prototype = \n{\n\treset: function(e)\n\t{\n\t  this.e = e;\n\t  this.events = {};\n\t  this.options = {};\n\t  this.attributes = {};\n\t  this.frame = {};\n    this.updated = {};\n\t  this.finished = false;\n\t\tthis.factory = null;\n    this.active = false;\n\t},\n  restore: function()\n  {\n    \n  },\n  preupdate: function()\n  {\n    // \n  },\n  update: function(now) \n\t{  \n    this.wasFinished = this.finished;\n    \n    this.finished = true;\n\t\t\n    for (var attr in this.events)\n    {\n      var e = this.events[attr];\n      \n      this.updated[ attr ] = e.update( now, this.frame );\n      \n      this.finished = this.finished && e.isFinished();\n    }    \n  },\n  placeEvent: function(e)\n  {\n    var attr = e.attribute;\n    \n    this.events[ attr ] = e;\n    \n    if ( !(attr in this.frame) )\n    {\n      this.frame[ attr ] = anim8.attribute( attr ).defaultValue;\n    }\n  },\n  apply: function()\n\t{\n    for (var attr in this.frame)\n    {\n      if ( this.updated[attr] )\n      {\n        this.e[ attr ] = this.frame[ attr ]; \n      }\n    }\n    \n    this.trimEvents();\n  },\n  trimEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      var e = this.events[attr];\n      \n      if ( e.isFinished() )\n      {\n        if ( e.next )\n        {                    \n          this.placeEvent( e.next );\n          this.finished = false;\n        }\n        else\n        {\n          delete this.events[attr];\n        }\n      }\n    }\n    \n    if ( !this.wasFinished && this.finished )\n    {\n      this.trigger( 'finished', this );\n    }\n  },\n  value: function(attr)\n  {\n    return this.frame[ attr ];\n  },\n\tcleanup: function()\n\t{\n    // implemented by child classes\n    \n    this.trigger('cleanup', this);\n\t},\n  createEvents: function(animation, options)\n  {\n    options = options || {};\n    \n    var animation = anim8.animation( animation, options );\n  \n    if (animation === false)\n    {\n      return false;\n    }\n    \n    var events = animation.newEvents();\n    \n    if ( animation.isSaved() )\n    {\n      animation.mergeOptions( options, events );\n    }\n    \n    this.onAnimation( animation, options, events );\n    \n\t\tanim8.extend( this.options, options );\t  \n    \n    return events;\n  },\n  onAnimation: function(animation, options, events)\n  {\n    \n  },\n\tplay: function(animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    { \n      this.placeEvent( events[i] );\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\tqueue: function(animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n        \n    var maxRemaining = 0.0;\n    \n    for (var attr in this.events)\n    {\n      maxRemaining = Math.max( maxRemaining, this.events[attr].timeRemaining() );\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e = events[i];\n      var attr = e.attribute;\n      \n      if ( attr in this.events )\n      {\n        this.events[attr].next = e;\n      }\n      else\n      {\n        e.delay += maxRemaining;\n        \n        this.placeEvent( e );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\ttransition: function(transitionTime, transitionDelta, transitionEasing, animation, options, all)\n\t{\n    var events = this.createEvents( animation, options );\n    \n    if ( events === false )\n    {\n      return false;\n    }\n    \n    for (var i = 0; i < events.length; i++)\n    {\n      var e1 = events[i];\n      var attr = e1.attribute;\n      \n      if ( attr in this.events )\n      {\n        var path = e1.path;\n        var calc = path.calculator;\n        var e2 = this.events[attr];\n        \n        var p0 = calc.copy( calc.create(), this.frame[attr] );\n        var p1 = e2.getFuture( transitionDelta );\n        var p2 = e1.getPoint( 0 );\n        \n        var transitionPath = new anim8.QuadraticPath( attr, calc, p0, p1, p2 );\n        var transitionEvent = new anim8.Event( attr, transitionPath, transitionTime, transitionEasing, 0, 0, 1 ).newInstance();\n        \n        transitionEvent.next = e1;\n        \n        this.placeEvent( transitionEvent );\n      }\n      else\n      {\n        e1.delay += transitionTime;\n     \n        this.placeEvent( e1 );\n      }\n    }\n    \n    anim8.add( this );\n    \n    return events;\n\t},\n\teventsFor: function(attributes, callback)\n\t{\n\t\tif ( anim8.isString( attributes ) )\n\t\t{\n\t\t\tattributes = attributes.split( ' ' );\n\t\t}\n    \n    var eventCount = 0;\n    \n\t\tif ( anim8.isArray( attributes ) )\n\t\t{\n      for (var i = 0; i < attributes.length; i++)\n      {\n        var attr = attributes[i];\n        \n        if ( attr in this.events )\n        {\n          callback.call( this, this.events[attr] );\n        \n          eventCount++;\n        }\n      }\n\t\t}\n    else\n    {\n      for (var attr in this.events)\n      {\n        callback.call( this, this.events[attr] );\n        \n        eventCount++;\n      }\n    }\n    \n\t\treturn eventCount;\n\t},\n\tstop: function(attributes)\n\t{\n\t\treturn this.eventsFor(attributes, function(event) \n\t\t{\n\t\t\twhile (event.next)\n\t\t\t{\n\t\t\t\tevent = event.next;\n\t\t\t}\n\t\t\t\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n\tfinish: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.finish( this.frame );\n\t\t});\n\t},\n\tpause: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.pause();\n\t\t});\n\t},\n\tresume: function(attributes)\n\t{\n\t\treturn this.eventsFor( attributes, function(event)\n\t\t{\n\t\t\tevent.resume();\n\t\t});\n\t},\n  set: function(attributes)\n  {\n    for (var attr in attributes)\n    {\n      this.frame[ attr ] = attributes[ attr ];\n    }\n    \n    this.apply();\n  },\n  hasEvents: function()\n  {\n    for (var attr in this.events)\n    {\n      return true;\n    }\n    \n    return false;\n  },\n  isAnimating: function()\n  {\n    for (var attr in this.events)\n    {\n      if ( this.events[attr].isAnimating() )\n      {\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n};\n\nanim8.eventize( anim8.Animator.prototype );","\nanim8.color = function(r, g, b, a) \n{\n  return {\n    r: anim8.coalesce( r, 255 ),\n    g: anim8.coalesce( g, 255 ),\n    b: anim8.coalesce( b, 255 ),\n    a: anim8.coalesce( a, 1.0 )\n  };\n};\n\nanim8.color.parsers = \n[\n  { /* already parsed color */\n    parse: function(input) {\n      if (typeof input === 'object') {\n        var color = {\n          r: this.parseComponent(input.r, 'parseInt', 255),\n          g: this.parseComponent(input.g, 'parseInt', 255),\n          b: this.parseComponent(input.b, 'parseInt', 255),\n          a: this.parseComponent(input.a, 'parseFloat', 1.0)\n        };\n        return color;\n      }\n      return false;\n    },\n    parseComponent: function(c, parseFunction, max) {\n      var t = typeof c;\n      var v = max;\n      if (t === 'string') {\n        var vparsed = window[parseFunction](t, 10);\n        if (!isNaN(vparsed)) {\n          v = vparsed;\n        }\n      }\n      else if (t === 'number') {\n        v = c;\n      }\n      if (v > max) {\n        v = max;\n      }\n      if (v < 0) {\n        v = 0;\n      }\n      return v;\n    }\n  }, \n  { /* colorname */\n    names: {\n      transparent:{r:255,g:256,b:255,a:0.0},\n      aliceblue:{r:240,g:248,b:255,a:1.0},\n      antiquewhite:{r:250,g:235,b:215,a:1.0},\n      aqua:{r:0,g:255,b:255,a:1.0},\n      aquamarine:{r:127,g:255,b:212,a:1.0},\n      azure:{r:240,g:255,b:255,a:1.0},\n      beige:{r:245,g:245,b:220,a:1.0},\n      bisque:{r:255,g:228,b:196,a:1.0},\n      black:{r:0,g:0,b:0,a:1.0},\n      blanchedalmond:{r:255,g:235,b:205,a:1.0},\n      blue:{r:0,g:0,b:255,a:1.0},\n      blueviolet:{r:138,g:43,b:226,a:1.0},\n      brown:{r:165,g:42,b:42,a:1.0},\n      burlywood:{r:222,g:184,b:135,a:1.0},\n      cadetblue:{r:95,g:158,b:160,a:1.0},\n      chartreuse:{r:127,g:255,b:0,a:1.0},\n      chocolate:{r:210,g:105,b:30,a:1.0},\n      coral:{r:255,g:127,b:80,a:1.0},\n      cornflowerblue:{r:100,g:149,b:237,a:1.0},\n      cornsilk:{r:255,g:248,b:220,a:1.0},\n      crimson:{r:220,g:20,b:60,a:1.0},\n      cyan:{r:0,g:255,b:255,a:1.0},\n      darkblue:{r:0,g:0,b:139,a:1.0},\n      darkcyan:{r:0,g:139,b:139,a:1.0},\n      darkgoldenrod:{r:184,g:134,b:11,a:1.0},\n      darkgray:{r:169,g:169,b:169,a:1.0},\n      darkgreen:{r:0,g:100,b:0,a:1.0},\n      darkkhaki:{r:189,g:183,b:107,a:1.0},\n      darkmagenta:{r:139,g:0,b:139,a:1.0},\n      darkolivegreen:{r:85,g:107,b:47,a:1.0},\n      darkorange:{r:255,g:140,b:0,a:1.0},\n      darkorchid:{r:153,g:50,b:204,a:1.0},\n      darkred:{r:139,g:0,b:0,a:1.0},\n      darksalmon:{r:233,g:150,b:122,a:1.0},\n      darkseagreen:{r:143,g:188,b:143,a:1.0},\n      darkslateblue:{r:72,g:61,b:139,a:1.0},\n      darkslategray:{r:47,g:79,b:79,a:1.0},\n      darkturquoise:{r:0,g:206,b:209,a:1.0},\n      darkviolet:{r:148,g:0,b:211,a:1.0},\n      deeppink:{r:255,g:20,b:147,a:1.0},\n      deepskyblue:{r:0,g:191,b:255,a:1.0},\n      dimgray:{r:105,g:105,b:105,a:1.0},\n      dodgerblue:{r:30,g:144,b:255,a:1.0},\n      feldspar:{r:209,g:146,b:117,a:1.0},\n      firebrick:{r:178,g:34,b:34,a:1.0},\n      floralwhite:{r:255,g:250,b:240,a:1.0},\n      forestgreen:{r:34,g:139,b:34,a:1.0},\n      fuchsia:{r:255,g:0,b:255,a:1.0},\n      gainsboro:{r:220,g:220,b:220,a:1.0},\n      ghostwhite:{r:248,g:248,b:255,a:1.0},\n      gold:{r:255,g:215,b:0,a:1.0},\n      goldenrod:{r:218,g:165,b:32,a:1.0},\n      gray:{r:128,g:128,b:128,a:1.0},\n      green:{r:0,g:128,b:0,a:1.0},\n      greenyellow:{r:173,g:255,b:47,a:1.0},\n      honeydew:{r:240,g:255,b:240,a:1.0},\n      hotpink:{r:255,g:105,b:180,a:1.0},\n      indianred:{r:205,g:92,b:92,a:1.0},\n      indigo:{r:75,g:0,b:130,a:1.0},\n      ivory:{r:255,g:255,b:240,a:1.0},\n      khaki:{r:240,g:230,b:140,a:1.0},\n      lavender:{r:230,g:230,b:250,a:1.0},\n      lavenderblush:{r:255,g:240,b:245,a:1.0},\n      lawngreen:{r:124,g:252,b:0,a:1.0},\n      lemonchiffon:{r:255,g:250,b:205,a:1.0},\n      lightblue:{r:173,g:216,b:230,a:1.0},\n      lightcoral:{r:240,g:128,b:128,a:1.0},\n      lightcyan:{r:224,g:255,b:255,a:1.0},\n      lightgoldenrodyellow:{r:250,g:250,b:210,a:1.0},\n      lightgrey:{r:211,g:211,b:211,a:1.0},\n      lightgreen:{r:144,g:238,b:144,a:1.0},\n      lightpink:{r:255,g:182,b:193,a:1.0},\n      lightsalmon:{r:255,g:160,b:122,a:1.0},\n      lightseagreen:{r:32,g:178,b:170,a:1.0},\n      lightskyblue:{r:135,g:206,b:250,a:1.0},\n      lightslateblue:{r:132,g:112,b:255,a:1.0},\n      lightslategray:{r:119,g:136,b:153,a:1.0},\n      lightsteelblue:{r:176,g:196,b:222,a:1.0},\n      lightyellow:{r:255,g:255,b:224,a:1.0},\n      lime:{r:0,g:255,b:0,a:1.0},\n      limegreen:{r:50,g:205,b:50,a:1.0},\n      linen:{r:250,g:240,b:230,a:1.0},\n      magenta:{r:255,g:0,b:255,a:1.0},\n      maroon:{r:128,g:0,b:0,a:1.0},\n      mediumaquamarine:{r:102,g:205,b:170,a:1.0},\n      mediumblue:{r:0,g:0,b:205,a:1.0},\n      mediumorchid:{r:186,g:85,b:211,a:1.0},\n      mediumpurple:{r:147,g:112,b:216,a:1.0},\n      mediumseagreen:{r:60,g:179,b:113,a:1.0},\n      mediumslateblue:{r:123,g:104,b:238,a:1.0},\n      mediumspringgreen:{r:0,g:250,b:154,a:1.0},\n      mediumturquoise:{r:72,g:209,b:204,a:1.0},\n      mediumvioletred:{r:199,g:21,b:133,a:1.0},\n      midnightblue:{r:25,g:25,b:112,a:1.0},\n      mintcream:{r:245,g:255,b:250,a:1.0},\n      mistyrose:{r:255,g:228,b:225,a:1.0},\n      moccasin:{r:255,g:228,b:181,a:1.0},\n      navajowhite:{r:255,g:222,b:173,a:1.0},\n      navy:{r:0,g:0,b:128,a:1.0},\n      oldlace:{r:253,g:245,b:230,a:1.0},\n      olive:{r:128,g:128,b:0,a:1.0},\n      olivedrab:{r:107,g:142,b:35,a:1.0},\n      orange:{r:255,g:165,b:0,a:1.0},\n      orangered:{r:255,g:69,b:0,a:1.0},\n      orchid:{r:218,g:112,b:214,a:1.0},\n      palegoldenrod:{r:238,g:232,b:170,a:1.0},\n      palegreen:{r:152,g:251,b:152,a:1.0},\n      paleturquoise:{r:175,g:238,b:238,a:1.0},\n      palevioletred:{r:216,g:112,b:147,a:1.0},\n      papayawhip:{r:255,g:239,b:213,a:1.0},\n      peachpuff:{r:255,g:218,b:185,a:1.0},\n      peru:{r:205,g:133,b:63,a:1.0},\n      pink:{r:255,g:192,b:203,a:1.0},\n      plum:{r:221,g:160,b:221,a:1.0},\n      powderblue:{r:176,g:224,b:230,a:1.0},\n      purple:{r:128,g:0,b:128,a:1.0},\n      red:{r:255,g:0,b:0,a:1.0},\n      rosybrown:{r:188,g:143,b:143,a:1.0},\n      royalblue:{r:65,g:105,b:225,a:1.0},\n      saddlebrown:{r:139,g:69,b:19,a:1.0},\n      salmon:{r:250,g:128,b:114,a:1.0},\n      sandybrown:{r:244,g:164,b:96,a:1.0},\n      seagreen:{r:46,g:139,b:87,a:1.0},\n      seashell:{r:255,g:245,b:238,a:1.0},\n      sienna:{r:160,g:82,b:45,a:1.0},\n      silver:{r:192,g:192,b:192,a:1.0},\n      skyblue:{r:135,g:206,b:235,a:1.0},\n      slateblue:{r:106,g:90,b:205,a:1.0},\n      slategray:{r:112,g:128,b:144,a:1.0},\n      snow:{r:255,g:250,b:250,a:1.0},\n      springgreen:{r:0,g:255,b:127,a:1.0},\n      steelblue:{r:70,g:130,b:180,a:1.0},\n      tan:{r:210,g:180,b:140,a:1.0},\n      teal:{r:0,g:128,b:128,a:1.0},\n      thistle:{r:216,g:191,b:216,a:1.0},\n      tomato:{r:255,g:99,b:71,a:1.0},\n      turquoise:{r:64,g:224,b:208,a:1.0},\n      violet:{r:238,g:130,b:238,a:1.0},\n      violetred:{r:208,g:32,b:144,a:1.0},\n      wheat:{r:245,g:222,b:179,a:1.0},\n      white:{r:255,g:255,b:255,a:1.0},\n      whitesmoke:{r:245,g:245,b:245,a:1.0},\n      yellow:{r:255,g:255,b:0,a:1.0},\n      yellowgreen:{r:154,g:205,b:50,a:1.0}\n    },\n    parse: function(input) {\n      if (typeof input === 'string') {\n        input = input.toLowerCase();\n        if (input in this.names) {\n          var named = this.names[input];\n          return {\n            r: named.r,\n            g: named.g,\n            b: named.b,\n            a: named.a\n          };\n        }\n      }\n      return false;\n    }\n  },\n  { /* #rgb */\n    regex: /^#?([0-9A-F])([0-9A-F])([0-9A-F])$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1] + matches[1], 16),\n          g: parseInt(matches[2] + matches[2], 16),\n          b: parseInt(matches[3] + matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* #rrggbb */\n    regex: /^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: parseInt(matches[1], 16),\n          g: parseInt(matches[2], 16),\n          b: parseInt(matches[3], 16),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGB(r,g,b) */\n    regex: /^rgb\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: 1.0\n        };\n      }\n      return false;\n    }\n  },\n  { /* RGBA(r,g,b,a) */\n    regex: /^rgba\\(\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*(\\d{3})\\s*,\\s*([01]?\\.\\d+|[01])\\)$/i,\n    parse: function(input) {\n      var matches = this.regex.exec(input);\n      if (matches !== null) {\n        return {\n          r: Math.min(255, parseInt(matches[1], 10)),\n          g: Math.min(255, parseInt(matches[2], 10)),\n          b: Math.min(255, parseInt(matches[3], 10)),\n          a: Math.min(1.0, parseFloat(matches[4]))\n        };\n      }\n      return false;\n    }\n  }\n];\n\n// parses a color from \nanim8.color.parse = function(input)\n{\n  var cp = m8.color.parsers;\n  \n  for (var i = 0; i < this.parsers.length; i++)\n  {\n    var parsed = this.parsers[i].parse(input);\n    \n    if (parsed !== false) \n    {\n      return parsed;\n    }\n  }\n  \n  return this.invalidColor;\n};\n\n// formats a parsed color\nanim8.color.format = function(color)\n{\n  var ca = anim8.coalesce( color.a, 1.0 );\n  var cr = anim8.coalesce( color.r, 255 );\n  var cg = anim8.coalesce( color.g, 255 );\n  var cb = anim8.coalesce( color.b, 255 );\n  \n  if (ca === 1.0)\n  {\n    var r = cr.toString( 16 );\n    var g = cg.toString( 16 );\n    var b = cb.toString( 16 );\n    \n    if (r.length == 1) r = '0' + r;\n    if (g.length == 1) g = '0' + g;\n    if (b.length == 1) b = '0' + b;\n    \n    return '#' + r + g + b;\n  }\n  else\n  {\n    return 'rgba(' + cr + ',' + cg + ',' + cb + ',' + ca + ')';\n  }\n};\n\n// the color to return when input is invalid\nanim8.color.invalidColor = anim8.color.defaultValue =\n{\n  r: 255,\n  g: 255,\n  b: 255,\n  a: 1.0\n};","\t// parse(x, default)\n  // copy(out, copy)\n  //-clone(out)\n  // create()\n  // zero(out)\n  //-scale(out, scale)\n  //-add(out, amount)\n  // adds(out, amount, amountScale)\n  //-sub(out, amount)\n  // mul(out, scale)\n  //-interpolate(out, start, end, delta)\n  // distanceSq(a, b)\n  // isValid(a)\n  // isNaN(a)\n  // isZero(a, epsilon)\n  // isEqual(a, b, epsilon)\n\nanim8.calculator.create = function(name, methods)\n{\n\tanim8.calculator[name] = anim8.extend( methods, \n\t{\n\t  clone: function(out) \n\t\t{\n\t    return this.copy( this.create(), out );\n\t  },\n\t  scale: function(out, scale) \n\t\t{\n\t    return this.adds( out, out, scale - 1 );\n\t  },\n\t  add: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, 1 );\n\t  },\n\t  sub: function(out, amount) \n\t\t{\n\t    return this.adds( out, amount, -1 );\n\t  },\n\t  interpolate: function(out, start, end, delta) \n\t\t{\n\t    out = this.zero( out );\n\t    out = this.adds( out, start, 1 - delta );\n\t    out = this.adds( out, end, delta );\n\t    return out;\n\t  },\n\t\tdistance: function(a, b)\n\t\t{\n\t\t\treturn Math.sqrt( this.distanceSq( a, b ) );\n\t\t}\n\t});\n};\n\n/*********************************************************************\n * A calculator for number primitives.\n *********************************************************************/\nanim8.calculator.create('number', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn x;\n\t\t}\n\t\tif ( anim8.isString( x ) )\n\t\t{\n\t\t\tx = parseFloat( x );\n\t\t\t\n\t\t\tif (!isNaN(x))\n\t\t\t{\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn defaultValue;\n\t},\n  copy: function(out, copy) \n\t{\t\n    return copy;\n  },\n  create: function() \n\t{\n    return 0.0;\n  },\n  zero: function(out) \n\t{\n    return 0.0;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    return out += amount * amountScale;\n  },\n  mul: function(out, scale) \n\t{\n    return out *= scale;\n  },\n  distanceSq: function(a, b) \n\t{\n    var ab = a - b;\n    return ab * ab;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'number';\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a - b) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with an x and y component (number)\n *********************************************************************/\nanim8.calculator.create('2d', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y )\n\t\t\t};\n\t\t}\n    if ( anim8.isString( x ) )\n    {\n      var aliases = {\n        'left':   0,\n        'right':  100,\n        'middle': 50,\n        'center': 50,\n        'top':    0,\n        'bottom': 100\n      };\n      \n      if ( x.indexOf(' ') === -1 )\n      {\n        var _x = parseFloat( x );\n        \n        if ( !isNaN(_x) || x in aliases )\n        {\n          return {\n            x: x in aliases ? aliases[x] : _x,\n            y: x in aliases ? aliases[x] : _x\n          };\n        }\n      }\n      else\n      {\n        var pair = x.split(' ');\n        var _x = parseFloat( pair[0] );\n        var _y = parseFloat( pair[1] );\n        \n        if ((!isNaN(_x) || pair[0] in aliases) && (!isNaN(_y) || pair[1] in aliases))\n        {\n          return {\n            x: pair[0] in aliases ? aliases[pair[0]] : _x,\n            y: pair[1] in aliases ? aliases[pair[1]] : _y\n          };\n        }\n      }\n    }\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;    \n    return dx * dx + dy * dy;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with an x, y, and z component (number)\n *********************************************************************/\nanim8.calculator.create('3d',\n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: x,\n\t\t\t\tz: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\t\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z )\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0};\n  },\n  zero: function(out) \n\t{ \n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n    return dx * dx + dy * dy + dz * dz;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y) < epsilon && Math.abs(a.z) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t  \t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t\t Math.abs(a.z - b.z) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with an x, y, and z component (number)\n *********************************************************************/\nanim8.calculator.create('quaternion', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: 1,\n\t\t\t\tangle: x\n\t\t\t};\n\t\t}\n\t\tif ( anim8.isObject( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tx: anim8.coalesce( x.x, defaultValue.x ),\n\t\t\t\ty: anim8.coalesce( x.y, defaultValue.y ),\n\t\t\t\tz: anim8.coalesce( x.z, defaultValue.z ),\n\t\t\t\tangle: anim8.coalesce( x.angle, defaultValue.angle )\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n  copy: function(out, copy) \n\t{\n    out.x = copy.x;\n    out.y = copy.y;\n\t\tout.z = copy.z;\n\t\tout.angle = copy.angle;\n    return out;\n  },\n  create: function() \n\t{\n    return {x: 0.0, y:0.0, z:0.0, angle:0.0};\n  },\n  zero: function(out) \n\t{\n    out.x = 0.0;\n    out.y = 0.0;\n\t\tout.z = 0.0;\n\t\tout.angle = 0.0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.x += amount.x * amountScale;\n    out.y += amount.y * amountScale;\n\t\tout.z += amount.z * amountScale;\n\t\tout.angle += amount.angle * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.x *= scale.x;\n    out.y *= scale.y;\n\t\tout.z *= scale.z;\n\t\tout.angle *= scale.angle;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;   \n\t\tvar dz = a.z - b.z; \n\t\tvar da = a.angle - b.angle;\n    return dx * dx + dy * dy + dz * dz + da * da;\n  },\n  isValid: function(a) \n\t{\n    return typeof a === 'object' && 'x' in a && 'y' in a && 'z' in a && 'angle' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.angle);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.x) < epsilon && \n\t\t  \t\t Math.abs(a.y) < epsilon && \n\t\t       Math.abs(a.z) < epsilon && \n\t\t       Math.abs(a.angle) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.x - b.x) < epsilon && \n\t\t\t\t\t Math.abs(a.y - b.y) < epsilon && \n\t\t\t\t   Math.abs(a.z - b.z) < epsilon && \n\t\t       Math.abs(a.angle - b.angle) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with r, g, & b components (numbers 0 -> 255)\n *********************************************************************/\nanim8.calculator.create('rgb', \n{\n\tparse: function(x, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( x ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: x,\n\t\t\t\tg: x,\n\t\t\t\tb: x\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( x );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    return dr * dr + dg * dg + db * db;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon;\n  }\n});\n\n/*********************************************************************\n * A calculator for objects with r, g, & b components \n * (numbers 0 -> 255) and an a (alpha) component (0.0 -> 1.0).\n *********************************************************************/\nanim8.calculator.create('rgba', \n{\n\tparse: function(a, defaultValue)\n\t{\n\t\tif ( anim8.isNumber( a ) )\n\t\t{\n\t\t\treturn {\n\t\t\t\tr: a,\n\t\t\t\tg: a,\n\t\t\t\tb: a,\n\t\t\t\ta: 1.0\n\t\t\t};\n\t\t}\n\t\t\n\t\treturn anim8.color.parse( a );\n\t},\n  copy: function(out, copy) \n\t{\n    out.r = copy.r;\n    out.g = copy.g;\n    out.b = copy.b;\n    out.a = copy.a;\n    return out;\n  },\n  create: function() \n\t{\n    return {r: 0, g:0, b:0, a:0};\n  },\n  zero: function(out) \n\t{\n    out.r = 0;\n    out.g = 0;\n    out.b = 0;\n    out.a = 0;\n    return out;\n  },\n  adds: function(out, amount, amountScale) \n\t{\n    out.r += amount.r * amountScale;\n    out.g += amount.g * amountScale;\n    out.b += amount.b * amountScale;\n    out.a += amount.a * amountScale;\n    return out;\n  },\n  mul: function(out, scale) \n\t{\n    out.r *= scale.r;\n    out.g *= scale.g;\n    out.b *= scale.b;\n    out.a *= scale.a;\n    return out;\n  },\n  distanceSq: function(a, b) \n\t{\n    var dr = a.r - b.r;\n    var dg = a.g - b.g;    \n    var db = a.b - b.b;    \n    var da = a.a - b.a;    \n    return dr * dr + dg * dg + db * db + da * da;\n  },\n  isValid: function(a) \n\t{\n    return anim8.isObject( a ) && 'r' in a && 'g' in a && 'b' in a && 'a' in a;\n  },\n  isNaN: function(a) \n\t{\n    return isNaN(a.r) || isNaN(a.g) || isNaN(a.b) || isNaN(a.a);\n  },\n  isZero: function(a, epsilon) \n\t{\n    return Math.abs(a.r) < epsilon && \n           Math.abs(a.g) < epsilon && \n           Math.abs(a.b) < epsilon && \n           Math.abs(a.a) < epsilon;\n  },\n  isEqual: function(a, b, epsilon) \n\t{\n    return Math.abs(a.r - b.r) < epsilon && \n           Math.abs(a.g - b.g) < epsilon && \n           Math.abs(a.b - b.b) < epsilon && \n           Math.abs(a.a - b.a) < epsilon;\n  }\n});\n\nanim8.calculator.default = anim8.calculator.number;","anim8.parser.deltas = function( animation, options, events ) \n{\n\tvar deltas = animation.deltas;\n\tvar values = animation.values;\n\t\n\tif ( anim8.isArray( deltas ) )\n\t{\n\t\tvar deltaObject = {};\n\t\t\n\t\tfor (var attr in values)\n\t\t{\n\t\t\tdeltaObject[attr] = deltas;\t\n\t\t}\n\t\t\n\t\tdeltas = deltaObject;\n\t}\n\t\n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculators[attr] = anim8.calculator.default;\n\t\t\tdefaults[attr] = calculators[attr].create();\n    }\n\t\t\n\t\tfor (var k = 0; k < value.length; k++)\n\t\t{\n      if ( value[k] !== true )\n      {\n  \t\t\tvalue[k] = calculators[attr].parse( value[k], defaults[attr] ); \n      }\n\t\t}\n\t\t\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var easing   = anim8.coalesce( easings[attr], options.easing, anim8.defaults.easing );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.DeltaPath( attr, calculators[attr], values[attr], deltas[attr] );\n    var event    = new anim8.Event( attr, path, duration, anim8.easing( easing ), delay, sleep, repeat );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.final = function( animation, options, events ) \n{\n\tvar values = animation.final;\n\t\n  var delays = animation.delays || {};\n  var durations = animation.durations || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n\n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay + duration, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.initial = function( animation, options, events ) \n{\n\tvar values = animation.initial;\n\t\n  var delays = animation.delays || {};\n  var calculators = {};\n\tvar defaults = {};\n  \n\tfor (var attr in values)\n\t{\n\t\tvar value = values[attr];\n    var calculator = false;\n\t\tvar defaultValue = false;\n\t\t\n    if ( attr in anim8.attribute )\n    {\n      calculator = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\tdefaultValue = anim8.attribute[attr].defaultValue;\n    }\n    else\n    {\n      calculator = anim8.calculator.default;\n\t\t\tdefaultValue = calculator.create();\n    }\n    \n    if ( value !== true )\n    {\n      value = calculator.parse( value, defaultValue ); \n    }\n\t\t\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    \n    var path     = new anim8.PointPath( attr, calculator, value );\n    var event    = new anim8.Event( attr, path, 0, anim8.easing.default, delay, 0, 1 );\n    \n    events.push( event );\n\t}\n\t\n\treturn true;\n};","anim8.parser.keyframe = function( animation, options, events ) \n{\n  var kframes = animation.keyframe;\n  \n  var durations = animation.durations || {};\n  var easings = animation.easings || {};\n  var delays = animation.delays || {};\n  var sleeps = animation.sleeps || {};\n  var repeats = animation.repeats || {};\n  \n  var teasing = anim8.easing( anim8.coalesce( options.teasing, anim8.defaults.teasing ) );\n  \n  var sort = false;\n  \n  var aliases = {\n    from:     '0',\n    start:    '0',\n    initial:  '0',\n    first:    '0',\n    half:     '50',\n    middle:   '50',\n    to:       '100',\n    end:      '100',\n    last:     '100'\n  };\n  \n  // split up comma delimited times\n  for (var time in kframes)\n  {\n    if ( time in aliases )\n    {\n      kframes[ aliases[time] ] = kframes[ time ];\n      \n      delete kframes[ time ];\n    }\n    else if ( time.indexOf(',') !== -1 )\n    {\n      var times = time.split(',');\n      \n      for (var i = 0; i < times.length; i++)\n      {\n        kframes[times[i]] = kframes[time];\n      }\n      \n      delete kframes[time];\n      \n      sort = true;\n    }\n  }\n  \n  var times = [];\n  \n  // validate times\n  var lastTime = 0.0;\n  var maxTime = 0.0;\n  \n  for (var time in kframes)\n  {\n    var t = parseFloat(time);\n    \n    if (isNaN(t))\n    {\n      delete kframes[time];\n    }\n    else\n    {\n      if (t < lastTime)\n      {\n        sort = true;\n      }\n      \n      times.push({\n        order: t,\n        key: time,\n        value: kframes[time]\n      });\n      \n      lastTime = t;\n      \n      maxTime = Math.max( maxTime, t );\n    }\n  }\n  \n  // sort if necessary\n  if (sort)\n  {\n    times.sort(function(a, b) {\n      return a.order - b.order;\n    });\n    \n    kframes = {};\n    \n    for (var i = 0; i < times.length; i++)\n    {\n      kframes[times[i].key] = times[i].value;\n    }\n  }\n  \n  // split up into deltas and values\n  var deltas = {};\n  var values = {};\n  var calculators = {};\n\tvar defaults = {};\n  var pathEasings = {};\n  \n  for (var i = 0; i < times.length; i++)\n  {\n    var frame = times[i];\n    var easing = anim8.coalesce( frame.value.easing, options.easing );\n    \n    delete frame.value.easing;\n    \n    for (var attr in frame.value)\n    {\n      if ( !(attr in deltas) )\n      {\n        deltas[attr] = [];\n        values[attr] = [];\n        pathEasings[attr] = [];\n        \n        if (attr in anim8.attribute)\n        {\n          calculators[attr] = anim8.calculator( anim8.attribute[attr].calculator );\n\t\t\t\t\tdefaults[attr] = anim8.attribute[attr].defaultValue;\n        }\n        else\n        {\n          calculators[attr] = anim8.calculator.default;\n\t\t\t\t\tdefaults[attr] = calculators[attr].create();\n        }\n      }\n\t\t\t\n      deltas[attr].push( frame.order / maxTime );\n      values[attr].push( frame.value[attr] === true ? true : calculators[attr].parse( frame.value[attr], defaults[attr] ) );\n      pathEasings[attr].push( anim8.easing( anim8.coalesce( easings[attr], easing ) ) );\n    }\n  }\n\t\n  // create events & paths\n  for (var attr in deltas)\n  {\n    var duration = anim8.coalesce( durations[attr], options.duration, anim8.defaults.duration );\n    var delay    = anim8.coalesce( delays[attr], options.delay, anim8.defaults.delay );\n    var sleep    = anim8.coalesce( sleeps[attr], options.sleep, anim8.defaults.sleep );\n    var repeat   = anim8.coalesce( repeats[attr], options.repeat, anim8.defaults.repeat );\n\n    var path     = new anim8.KeyframePath( attr, calculators[attr], values[attr], deltas[attr], pathEasings[attr] );\n    var event    = new anim8.Event( attr, path, duration, teasing, delay, sleep, repeat );\n    \n    events.push( event );\n  }\n};","\nanim8.factories.object = \n{\n  is: function(subject) \n\t{\n    return anim8.isObject( subject ) && !anim8.isElement( subject );\n  },\n  \n  parseAnimators: function(from, animators) \n\t{\n    var animator = from.$animator;\n    \n    if ( !animator )\n    {\n      animator = new anim8.Animator( from );\n      animator.factory = this;\n      \n      from.$animator = animator;\n    }\n    \n    animators.push( animator );\n  }\n};"],"sourceRoot":"/source/"}